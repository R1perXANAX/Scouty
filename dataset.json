[
    {
        "link": "https://raw.githubusercontent.com/vinta/awesome-python/master/sort.py",
        "vector": "['open', \"'README.md',\", \"'r')\", 'read_me_file:', 'read_me', '=', 'read_me_file.read', 'table_of_contents', '=', 'read_me.split', \"'-\", '-', \"-'\", '0', 'blocks', '=', 'read_me.split', \"'-\", '-', \"-'\", '1', '.split', \"'\\\\n\", 'i', 'range', 'len', 'blocks', 'i', '==', '0:', 'blocks', 'i]', '=', 'blocks', 'i]', '+', \"'\\\\n'\", 'blocks', 'i]', '=', \"'\", '=', 'blocks', '0', '.split', \"'\", 'i', 'range', '1,', 'len', 'i', '0]', '!=', \"'\", 'i]', '=', \"'\", '=', 'blocks', '0]', '=', '=', 'table_of_contents', '+', \"'-\", '-', \"-'\", '+', 'blocks)', 'open', \"'README.md',\", \"'w\", '+', \"')\", 'open', \"'README.md',\", \"'r')\", 'read_me_file:', 'read_me', '=', 'blocks', '=', '[]', '=', 'read_me:', '=', '=', 'len', '-', 'len', 'any', 's)', 's', \"['*\", \"[',\", \"'-\", \"['\", '==', 'blocks', '-', '1', '.append', 'blocks.append', '=', 'blocks.append', '=', 'open', \"'README.md',\", \"'w\", '+', \"')\", 'blocks', '=', 'block,', 'key', '=', 'str.lower', 'block', 'blocks', 'blocks', '__name__', '==']"
    },
    {
        "link": "https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/call_center/__init__.py",
        "vector": "[]"
    },
    {
        "link": "https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/call_center/call_center.py",
        "vector": "['abc', 'ABCMeta,', 'abstractmethod', 'collections', 'deque', 'enum', 'Enum', 'Rank', 'Enum', 'OPERATOR', '=', '0', 'SUPERVISOR', '=', '1', 'DIRECTOR', '=', '2', 'Employee', '=', 'ABCMeta', 'self,', 'employee_id,', 'name,', 'rank,', 'call_center', 'self.employee_id', '=', 'employee_id', 'self.name', '=', 'name', 'self.rank', '=', 'rank', 'self.call', '=', 'self.call_center', '=', 'call_center', 'take_call', 'self,', 'call', 'self.call', '=', 'call', 'self.call.employee', '=', 'self', 'self.call.state', '=', 'CallState.IN_PROGRESS', 'complete_call', 'self', 'self.call.state', '=', 'CallState.COMPLETE', 'self.call)', '@abstractmethod', 'escalate_call', 'self', '_escalate_call', 'self', 'self.call.state', '=', 'CallState.READY', 'call', '=', 'self.call', 'self.call', '=', 'call)', 'Employee', 'self,', 'employee_id,', 'name', 'super', 'self', 'employee_id,', 'name,', 'Rank.OPERATOR)', 'escalate_call', 'self', 'self.call.level', '=', 'Rank.SUPERVISOR', 'self._escalate_call', 'Employee', 'self,', 'employee_id,', 'name', 'super', 'self', 'employee_id,', 'name,', 'Rank.SUPERVISOR)', 'escalate_call', 'self', 'self.call.level', '=', 'Rank.DIRECTOR', 'self._escalate_call', 'Employee', 'self,', 'employee_id,', 'name', 'super', 'self', 'employee_id,', 'name,', 'Rank.DIRECTOR)', 'escalate_call', 'self', 'must', 'be', 'able', 'to', 'any', \"call')\", 'CallState', 'Enum', 'READY', '=', '0', 'IN_PROGRESS', '=', '1', 'COMPLETE', '=', '2', 'Call', 'object', 'self,', 'rank', 'self.state', '=', 'CallState.READY', 'self.rank', '=', 'rank', 'self.employee', '=', 'CallCenter', 'object', 'self,', '=', '=', '=', 'self.queued_calls', '=', 'deque', 'self,', 'call', 'call.rank', '(Rank.OPERATOR,', 'Rank.SUPERVISOR,', 'Rank.DIRECTOR', \"'Invalid\", 'call', 'rank:', 'call.rank', 'employee', '=', 'call.rank', '==', 'Rank.OPERATOR:', 'employee', '=', 'call,', 'call.rank', '==', 'Rank.SUPERVISOR', 'employee', 'employee', '=', 'call,', 'call.rank', '==', 'Rank.DIRECTOR', 'employee', 'employee', '=', 'call,', 'employee', 'self.queued_calls.append', 'call)', 'self,', 'call,', 'employees', 'employee', 'employees:', 'employee.call', 'employee.take_call', 'call)', 'employee', 'self,', 'call', 'self,', 'call', 'self,', 'call,', 'employee']"
    },
    {
        "link": "https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/deck_of_cards/__init__.py",
        "vector": "[]"
    },
    {
        "link": "https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/deck_of_cards/deck_of_cards.py",
        "vector": "['abc', 'ABCMeta,', 'abstractmethod', 'enum', 'Enum', 'sys', 'Suit', 'Enum', 'HEART', '=', '0', 'DIAMOND', '=', '1', 'CLUBS', '=', '2', 'SPADE', '=', '3', 'Card', '=', 'ABCMeta', 'self,', 'value,', 'suit', 'self.value', '=', 'value', 'self.suit', '=', 'suit', '=', '@property', '@abstractmethod', 'value', 'self', '@value.setter', '@abstractmethod', 'value', 'self,', 'other', 'BlackJackCard', 'Card', 'self,', 'value,', 'suit', 'super', 'BlackJackCard,', 'self', 'value,', 'suit)', 'self', 'self._value', '==', '1', 'self', '10', '<', 'self._value', '<=', '13', '@property', 'value', 'self', '==', '1:', '1', '10', 'self._value', '@value.setter', 'value', 'self,', 'new_value', '1', '<=', 'new_value', '<=', '13:', 'self._value', '=', 'new_value', \"'Invalid\", 'card', 'value:', 'new_value', 'object', 'self,', 'cards', 'self.cards', '=', 'cards', 'add_card', 'self,', 'card', 'self.cards.append', 'card)', 'self', 'total_value', '=', '0', 'card', 'self.cards:', 'total_value', '+=', 'card.value', 'total_value', 'BLACKJACK', '=', '21', 'self,', 'cards', 'super', 'self', 'cards)', 'self', '=', 'sys.MAXSIZE', 'max_under', '=', '-sys.MAXSIZE', 'self.BLACKJACK', '<', '<', '=', 'max_under', '<', '<=', 'self.BLACKJACK:', 'max_under', '=', 'max_under', 'max_under', '!=', '-sys.MAXSIZE', 'self', 'Deck', 'object', 'self,', 'cards', 'self.cards', '=', 'cards', '=', '0', 'self', 'len', 'self.cards)', '-', 'deal_card', 'self', 'card', '=', 'self.cards', '=', '+=', '1', 'card', 'shuffle', 'self']"
    },
    {
        "link": "https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/hash_table/__init__.py",
        "vector": "[]"
    },
    {
        "link": "https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/hash_table/hash_map.py",
        "vector": "['Item', 'object', 'self,', 'key,', 'value', 'self.key', '=', 'key', 'self.value', '=', 'value', 'object', 'self,', 'size', 'self.size', '=', 'size', 'self.table', '=', '_', 'range', 'self.size', 'self,', 'key', 'key', '%', 'self.size', 'set', 'self,', 'key,', 'value', '=', 'key)', 'item', 'self.table', 'item.key', '==', 'key:', 'item.value', '=', 'value', 'self.table', '.append', 'Item', 'key,', 'value', 'get', 'self,', 'key', '=', 'key)', 'item', 'self.table', 'item.key', '==', 'key:', 'item.value', \"'Key\", \"found')\", 'remove', 'self,', 'key', '=', 'key)', 'item', 'enumerate', 'self.table', 'item.key', '==', 'key:', 'self.table', \"'Key\", \"found')\"]"
    },
    {
        "link": "https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/lru_cache/__init__.py",
        "vector": "[]"
    },
    {
        "link": "https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/lru_cache/lru_cache.py",
        "vector": "['Node', 'object', 'self,', 'results', 'self.results', '=', 'results', 'self.next', '=', 'next', 'object', 'self', 'self.head', '=', 'self.tail', '=', 'move_to_front', 'self,', 'node', 'append_to_front', 'self,', 'node', 'self', 'Cache', 'object', 'self,', 'MAX_SIZE', 'self.MAX_SIZE', '=', 'MAX_SIZE', 'self.size', '=', '0', 'self.lookup', '=', '{}', '=', 'get', 'self,', 'query', 'node', '=', 'self.lookup.get', 'query)', 'node', 'node)', 'node.results', 'set', 'self,', 'results,', 'query', 'node', '=', 'self.lookup.get', 'query)', 'node', 'node.results', '=', 'results', 'node)', 'self.size', '==', 'self.MAX_SIZE:', 'self.lookup.pop', 'self.size', '+=', '1', 'new_node', '=', 'Node', 'results)', 'new_node)', 'self.lookup', 'query]', '=', 'new_node']"
    },
    {
        "link": "https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/online_chat/__init__.py",
        "vector": "[]"
    },
    {
        "link": "https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/online_chat/online_chat.py",
        "vector": "['abc', 'ABCMeta', 'enum', 'Enum', 'UserService', 'object', 'self', 'self.users_by_id', '=', '{}', 'add_user', 'self,', 'user_id,', 'name,', 'remove_user', 'self,', 'user_id', 'add_friend_request', 'self,', 'to_user_id', 'approve_friend_request', 'self,', 'to_user_id', 'reject_friend_request', 'self,', 'to_user_id', 'User', 'object', 'self,', 'user_id,', 'name,', 'self.user_id', '=', 'user_id', 'self.name', '=', 'name', '=', 'self.friends_by_id', '=', '{}', 'self.friend_ids_to_private_chats', '=', '{}', 'self.group_chats_by_id', '=', '{}', 'self.received_friend_requests_by_friend_id', '=', '{}', 'self.sent_friend_requests_by_friend_id', '=', '{}', 'message_user', 'self,', 'friend_id,', 'message', 'message_group', 'self,', 'group_id,', 'message', 'send_friend_request', 'self,', 'friend_id', 'receive_friend_request', 'self,', 'friend_id', 'approve_friend_request', 'self,', 'friend_id', 'reject_friend_request', 'self,', 'friend_id', 'Chat', '=', 'ABCMeta', 'self,', 'chat_id', 'self.chat_id', '=', 'chat_id', 'self.users', '=', '[]', 'self.messages', '=', '[]', 'PrivateChat', 'Chat', 'self,', 'first_user,', 'second_user', 'super', 'PrivateChat,', 'self', 'self.users.append', 'first_user)', 'self.users.append', 'second_user)', 'GroupChat', 'Chat', 'add_user', 'self,', 'user', 'remove_user', 'self,', 'user', 'Message', 'object', 'self,', 'message_id,', 'message,', 'timestamp', 'self.message_id', '=', 'message_id', 'self.message', '=', 'message', 'self.timestamp', '=', 'timestamp', 'AddRequest', 'object', 'self,', 'to_user_id,', 'request_status,', 'timestamp', '=', 'self.to_user_id', '=', 'to_user_id', 'self.request_status', '=', 'request_status', 'self.timestamp', '=', 'timestamp', 'RequestStatus', 'Enum', 'UNREAD', '=', '0', 'READ', '=', '1', 'ACCEPTED', '=', '2', 'REJECTED', '=', '3']"
    },
    {
        "link": "https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/parking_lot/__init__.py",
        "vector": "[]"
    },
    {
        "link": "https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/object_oriented_design/parking_lot/parking_lot.py",
        "vector": "['abc', 'ABCMeta,', 'abstractmethod', 'enum', 'Enum', 'VehicleSize', 'Enum', 'MOTORCYCLE', '=', '0', 'COMPACT', '=', '1', 'LARGE', '=', '2', 'Vehicle', '=', 'ABCMeta', 'self,', 'vehicle_size,', 'license_plate,', 'spot_size', 'self.vehicle_size', '=', 'vehicle_size', 'self.license_plate', '=', 'license_plate', 'self.spot_size', 'self.spots_taken', '=', '[]', 'clear_spots', 'self', 'spot', 'self.spots_taken:', 'spot.remove_vehicle', 'self)', 'self.spots_taken', '=', '[]', 'take_spot', 'self,', 'spot', 'self.spots_taken.append', 'spot)', '@abstractmethod', 'self,', 'spot', 'Vehicle', 'self,', 'license_plate', 'super', 'self', 'VehicleSize.MOTORCYCLE,', 'license_plate,', 'spot_size', '=', '1)', 'self,', 'spot', 'Car', 'Vehicle', 'self,', 'license_plate', 'super', 'Car,', 'self', 'VehicleSize.COMPACT,', 'license_plate,', 'spot_size', '=', '1)', 'self,', 'spot', 'spot.size', '(VehicleSize.LARGE,', 'VehicleSize.COMPACT)', 'Bus', 'Vehicle', 'self,', 'license_plate', 'super', 'Bus,', 'self', 'VehicleSize.LARGE,', 'license_plate,', 'spot_size', '=', '5)', 'self,', 'spot', 'spot.size', '==', 'VehicleSize.LARGE', 'object', 'self,', 'num_levels', 'self.num_levels', '=', 'num_levels', 'self.levels', '=', '[]', 'park_vehicle', 'self,', 'vehicle', 'level', 'self.levels:', 'level.park_vehicle', 'vehicle', 'Level', 'object', 'SPOTS_PER_ROW', '=', '10', 'self,', 'total_spots', '=', 'self.num_spots', '=', 'total_spots', 'self.available_spots', '=', '0', 'self.spots', '=', '[]', 'spot_freed', 'self', 'self.available_spots', '+=', '1', 'park_vehicle', 'self,', 'vehicle', 'spot', '=', 'vehicle)', 'spot', 'spot.park_vehicle', 'vehicle)', 'spot', 'self,', 'vehicle', 'self,', 'spot,', 'vehicle', 'object', 'self,', 'level,', 'row,', 'spot_number,', 'spot_size,', 'vehicle_size', 'self.level', '=', 'level', 'self.row', '=', 'row', 'self.spot_number', '=', 'spot_number', 'self.spot_size', '=', 'spot_size', 'self.vehicle_size', '=', 'vehicle_size', 'self.vehicle', '=', 'self', 'self.vehicle', 'can_fit_vehicle', 'self,', 'vehicle', 'self.vehicle', 'self)', 'park_vehicle', 'self,', 'vehicle', 'remove_vehicle', 'self']"
    },
    {
        "link": "https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/mint/__init__.py",
        "vector": "[]"
    },
    {
        "link": "https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/mint/mint_mapreduce.py",
        "vector": "['mrjob.job', 'MRJob', 'MRJob', 'self,', '=', '...', 'current_year_month', 'self', '...', 'extract_year_month', 'self,', 'timestamp', '...', 'self,', 'key,', 'total', '...', 'mapper', 'self,', '_,', 'timestamp,', 'amount', '=', \"'\\\\t')\", 'period', '=', 'self.', 'extract_year_month', 'timestamp)', 'period', '==', 'self.current_year_month', '(period,', 'amount', 'reducer', 'self,', 'key,', 'values', 'total', '=', 'sum', 'values)', 'key,', 'total)', 'key,', 'sum', 'values)', 'steps', 'self', 'self.mr', 'mapper', '=', 'self.mapper,', 'reducer', '=', 'self.reducer)', '__name__', '==']"
    },
    {
        "link": "https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/mint/mint_snippets.py",
        "vector": "['enum', 'Enum', 'Enum', 'HOUSING', '=', '0', 'FOOD', '=', '1', 'GAS', '=', '2', 'SHOPPING', '=', '3', '=', '{}', \"'Exxon']\", '=', \"'Target']\", '=', 'object', 'self,', '=', '=', 'self,', 'transaction', 'transaction.seller', 'transaction.seller]', 'transaction.seller', 'transaction.seller]', '=', '\\\\', 'self.manual_overrides', 'transaction.seller', 'transaction.seller]', 'Transaction', 'object', 'self,', 'timestamp,', 'seller,', 'amount', 'self.timestamp', '=', 'timestamp', 'self.seller', '=', 'seller', 'self.amount', '=', 'amount', 'Budget', 'object', 'self,', '=', 'self,', 'amount', '=', 'amount']"
    },
    {
        "link": "https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/pastebin/__init__.py",
        "vector": "[]"
    },
    {
        "link": "https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/pastebin/pastebin.py",
        "vector": "['mrjob.job', 'MRJob', 'HitCounts', 'MRJob', 'extract_url', 'self,', 'extract_year_month', 'self,', 'mapper', 'self,', '_,', 'url', '=', 'self.extract_url', 'period', '=', 'self.extract_year_month', '(period,', 'url', '1', 'reducer', 'self,', 'key,', 'values', 'key,', 'sum', 'values)', 'steps', 'self', 'self.mr', 'mapper', '=', 'self.mapper,', 'reducer', '=', 'self.reducer)', '__name__', '==', 'HitCounts.run']"
    },
    {
        "link": "https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/query_cache/__init__.py",
        "vector": "[]"
    },
    {
        "link": "https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/query_cache/query_cache_snippets.py",
        "vector": "['QueryApi', 'object', 'self,', '=', '=', 'parse_query', 'self,', 'query', '...', 'process_query', 'self,', 'query', 'query', '=', 'self.parse_query', 'query)', 'results', '=', 'query)', 'results', 'results', '=', 'query)', 'query,', 'results)', 'results', 'Node', 'object', 'self,', 'query,', 'results', 'self.query', '=', 'query', 'self.results', '=', 'results', 'object', 'self', 'self.head', '=', 'self.tail', '=', 'move_to_front', 'self,', 'node', '...', 'append_to_front', 'self,', 'node', '...', 'self', '...', 'Cache', 'object', 'self,', 'MAX_SIZE', 'self.MAX_SIZE', '=', 'MAX_SIZE', 'self.size', '=', '0', 'self.lookup', '=', '{}', '=', 'get', 'self,', 'query', 'node', '=', 'self.lookup', 'query]', 'node', 'node)', 'node.results', 'set', 'self,', 'results,', 'query', 'node', '=', 'self.map', 'query]', 'node', 'node.results', '=', 'results', 'node)', 'self.size', '==', 'self.MAX_SIZE:', 'self.lookup.pop', 'self.size', '+=', '1', 'new_node', '=', 'Node', 'query,', 'results)', 'new_node)', 'self.lookup', 'query]', '=', 'new_node']"
    },
    {
        "link": "https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/sales_rank/__init__.py",
        "vector": "[]"
    },
    {
        "link": "https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/sales_rank/sales_rank_mapreduce.py",
        "vector": "['mrjob.job', 'MRJob', 'SalesRanker', 'MRJob', 'self,', 'timestamp', '...', 'mapper', 'self,', '_,', 'timestamp,', 'product_id,', 'quantity', '=', \"'\\\\t')\", 'timestamp', 'product_id', 'quantity', 'reducer', 'self,', 'key,', 'values', 'key,', 'sum', 'values)', 'self,', 'key,', 'value', 'product_id', '=', 'key', 'quantity', '=', 'value', 'quantity', 'product_id', 'reducer_identity', 'self,', 'key,', 'value', 'key,', 'value', 'steps', 'self', 'self.mr', 'mapper', '=', 'self.mapper,', 'reducer', '=', 'self.reducer', 'self.mr', 'mapper', '=', 'reducer', '=', 'self.reducer_identity', '__name__', '==', 'SalesRanker.run']"
    },
    {
        "link": "https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/social_graph/__init__.py",
        "vector": "[]"
    },
    {
        "link": "https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/social_graph/social_graph_snippets.py",
        "vector": "['collections', 'deque', 'enum', 'Enum', 'State', 'Enum', '=', '0', '=', '1', 'Graph', 'object', 'bfs', 'self,', 'source,', 'dest', 'source', 'queue', '=', 'deque', 'queue.append', 'source)', '=', 'queue:', 'node', '=', 'queue.popleft', 'node)', 'dest', 'node:', 'adjacent_node', 'node.adj_nodes.values', '==', 'queue.append', 'adjacent_node)', '=', 'Person', 'object', 'self,', 'id,', 'name', 'self.id', '=', 'id', 'self.name', '=', 'name', 'self.friend_ids', '=', '[]', 'LookupService', 'object', 'self', 'self.lookup', '=', '{}', 'get_person', 'self,', 'person_id', 'person_server', '=', 'self.lookup', 'person_id]', 'person_server.people', 'person_id]', 'PersonServer', 'object', 'self', 'self.people', '=', '{}', 'get_people', 'self,', 'ids', 'results', '=', '[]', 'id', 'ids:', 'id', 'self.people:', 'results.append', 'self.people', 'id', 'results', 'UserGraphService', 'object', 'self,', 'person_ids,', 'lookup', 'self.lookup', '=', 'lookup', 'self.person_ids', '=', 'person_ids', '=', 'set', 'bfs', 'self,', 'source,', 'dest']"
    },
    {
        "link": "https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/web_crawler/__init__.py",
        "vector": "[]"
    },
    {
        "link": "https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/web_crawler/web_crawler_mapreduce.py",
        "vector": "['mrjob.job', 'MRJob', 'RemoveDuplicateUrls', 'MRJob', 'mapper', 'self,', '_,', '1', 'reducer', 'self,', 'key,', 'values', 'total', '=', 'sum', 'values)', 'total', '==', '1:', 'key,', 'total', 'steps', 'self', 'self.mr', 'mapper', '=', 'self.mapper,', 'reducer', '=', 'self.reducer)', '__name__', '==', 'RemoveDuplicateUrls.run']"
    },
    {
        "link": "https://raw.githubusercontent.com/donnemartin/system-design-primer/master/solutions/system_design/web_crawler/web_crawler_snippets.py",
        "vector": "['object', 'self,', 'db', 'self.db', '=', 'db', 'self,', 'url', 'self,', 'url', 'self,', 'url', 'self', 'self,', 'url,', 'signature', 'crawled_similar', 'self,', 'signature', 'Page', 'object', 'self,', 'url,', 'contents,', 'child_urls', 'self.url', '=', 'url', 'self.contents', '=', 'contents', 'self.child_urls', '=', 'child_urls', 'self.signature', '=', 'self.create_signature', 'create_signature', 'self', 'Crawler', 'object', 'self,', 'pages,', 'self.pages', '=', 'pages', '=', '=', '=', 'crawl_page', 'self,', 'page', 'url', 'page.child_urls:', 'url)', 'page)', 'page)', 'page.url)', 'page.url,', 'page.signature)', 'crawl', 'self', 'page', '=', 'page', 'page.signature', 'page.url)', 'self.crawl_page', 'page)', 'page', '=']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/demos/blog/blog.py",
        "vector": "['aiopg', 'bcrypt', 'markdown', 'os.path', 'psycopg2', 're', 'unicodedata', 'options', '=', '8888,', 'help', '=', '\"run', 'on', 'the', 'given', 'type', '=', '\"db_host\",', '=', '\"127.0.0.1\",', 'help', '=', '\"blog', 'host\")', '=', '5432,', 'help', '=', '\"blog', '=', '\"blog\",', 'help', '=', '\"blog', 'name\")', '\"db_user\",', '=', '\"blog\",', 'help', '=', '\"blog', 'user\")', '=', '\"blog\",', 'help', '=', '\"blog', 'Exception', 'maybe_create_tables', 'db', 'cur:', 'cur.execute', '\"SELECT', 'COUNT', '*', 'FROM', 'entries', 'LIMIT', '1\")', 'cur.fetchone', 'open', '\"schema.sql\")', 'f:', 'schema', '=', 'f.read', 'cur:', 'cur.execute', 'schema)', 'Application', 'self,', 'db', 'self.db', '=', 'db', '=', '(r\"', '/', '\",', '(r\"', '/', 'archive\",', '(r\"', '/', 'feed\",', '(r\"', '/', '/', '^', '/', '+', '\",', '(r\"', '/', 'compose\",', '(r\"', '/', 'auth', '/', 'create\",', '(r\"', '/', 'auth', '/', '(r\"', '/', 'auth', '/', 'logout\",', '=', 'dict(', 'blog_title', '=', 'Blog\",', 'template_path', '=', 'os.path.dirname', '__file__', '\"templates\"', 'static_path', '=', 'os.path.dirname', '__file__', '\"static\"', 'ui_modules', '=', 'xsrf_cookies', '=', 'cookie_secret', '=', '\"__TODO', '_GENERATE_YOUR_OWN_RANDOM_VALUE_HERE__\",', '=', '\"', '/', 'auth', '/', 'debug', '=', 'super', '*', '*', 'row_to_obj', 'self,', 'row,', 'cur', 'obj', '=', 'val,', 'desc', 'zip', 'row,', 'cur.description', 'obj', 'desc.name]', '=', 'val', 'obj', 'execute', 'self,', 'stmt,', '*args', 'cur:', 'cur.execute', 'stmt,', 'args)', 'query', 'self,', 'stmt,', '*args', 'cur:', 'cur.execute', 'stmt,', 'args)', '[self.row_to_obj', 'row,', 'cur)', 'row', 'cur.fetchall', 'queryone', 'self,', 'stmt,', '*args', 'results', '=', 'self.query', 'stmt,', '*args)', 'len', 'results)', '==', '0:', 'len', 'results)', '>', '1:', '\"Expected', '1', 'result,', 'got', '%d\"', '%', 'len', 'results', 'results', '0]', 'prepare', 'self', 'user_id', '=', 'self.get_signed_cookie', '\"blogdemo_user\")', 'user_id:', 'self.current_user', '=', 'self.queryone(', '\"SELECT', '*', 'FROM', 'WHERE', 'id', '=', '%s\",', 'user_id)', 'self', 'bool', 'self.query', '\"SELECT', '*', 'FROM', 'LIMIT', '1\"', 'get', 'self', 'entries', '=', 'self.query(', '\"SELECT', '*', 'FROM', 'entries', 'ORDER', 'BY', 'DESC', 'LIMIT', '5\"', 'entries:', 'self.redirect', '\"', '/', 'compose\")', 'self.render', '\"home.html\",', 'entries', '=', 'entries)', 'get', 'self,', 'slug', '=', 'self.queryone', '\"SELECT', '*', 'FROM', 'entries', 'WHERE', 'slug', '=', '%s\",', 'slug)', '404)', 'self.render', '=', 'get', 'self', 'entries', '=', 'self.query', '\"SELECT', '*', 'FROM', 'entries', 'ORDER', 'BY', 'DESC\")', 'self.render', '\"archive.html\",', 'entries', '=', 'entries)', 'get', 'self', 'entries', '=', 'self.query(', '\"SELECT', '*', 'FROM', 'entries', 'ORDER', 'BY', 'DESC', 'LIMIT', '10\"', 'self.set_header', '\"Content', '-', 'Type\",', '\"application', '/', 'atom', '+', 'xml\")', 'self.render', '\"feed.xml\",', 'entries', '=', 'entries)', 'get', 'self', 'id', '=', 'self.get_argument', '\"id\",', '=', 'id:', '=', 'self.queryone', '\"SELECT', '*', 'FROM', 'entries', 'WHERE', 'id', '=', '%s\",', 'id', 'self.render', '\"compose.html\",', '=', 'post', 'self', 'id', '=', 'self.get_argument', '\"id\",', 'title', '=', 'self.get_argument', '\"title\")', 'text', '=', 'self.get_argument', '\"markdown\")', 'html', '=', 'markdown.markdown', 'text)', 'id:', '=', 'self.queryone(', '\"SELECT', '*', 'FROM', 'entries', 'WHERE', 'id', '=', '%s\",', 'id)', '404)', 'slug', '=', 'self.execute(', '\"UPDATE', 'entries', 'SET', 'title', '=', '%s,', 'markdown', '=', '%s,', 'html', '=', '%s', '\"', '\"WHERE', 'id', '=', '%s\",', 'title,', 'text,', 'html,', 'id', 'slug', '=', '\"NFKD\",', 'title)', 'slug', '=', 're.sub', 'r\"', '^', '\\\\w', '+', '\",', '\"', '\",', 'slug)', 'slug', '=', '\"', '-', 'slug.lower', '.strip', '.split', 'slug', '=', 'slug.encode', '.decode', 'slug:', 'slug', '=', 'e', '=', 'self.query', '\"SELECT', '*', 'FROM', 'entries', 'WHERE', 'slug', '=', '%s\",', 'slug)', 'e:', 'slug', '+=', '\"', '-', '2\"', 'self.execute(', '\"INSERT', 'INTO', 'entries', 'title', 'slug', 'markdown', 'html', 'updated', '\"', '\"VALUES', '%', 's', '%', 's', '%', 's', '%', 's', '%', 's', 'CURRENT_TIMESTAMP', 'CURRENT_TIMESTAMP', '\",', 'self.current_user.id,', 'title,', 'slug,', 'text,', 'html,', 'self.redirect', '\"', '/', '/', '\"', '+', 'slug)', 'get', 'self', 'self.render', 'post', 'self', '400,', 'already', 'created\")', '=', 'self.get_argument', 'bcrypt.gensalt', '=', 'self.queryone(', '\"INSERT', 'INTO', '(email,', 'name,', '\"', '\"VALUES', '%', 's,', '%s,', '%s)', 'RETURNING', 'id\",', 'self.get_argument', '\"email\"', 'self.get_argument', '\"name\"', 'self.set_signed_cookie', '\"blogdemo_user\",', 'str', 'self.redirect', 'self.get_argument', '\"next\",', '\"', '/', '\"', 'get', 'self', 'self.redirect', '\"', '/', 'auth', '/', 'create\")', 'self.render', '=', 'post', 'self', '=', 'self.queryone(', '\"SELECT', '*', 'FROM', 'WHERE', 'email', '=', '%s\",', 'self.get_argument', '\"email\")', 'self.render', '=', '\"email', 'found\")', '=', 'bcrypt.checkpw,', 'self.get_argument', 'self.set_signed_cookie', '\"blogdemo_user\",', 'str', 'self.redirect', 'self.get_argument', '\"next\",', '\"', '/', '\"', 'self.render', '=', 'get', 'self', 'self.clear_cookie', '\"blogdemo_user\")', 'self.redirect', 'self.get_argument', '\"next\",', '\"', '/', '\"', 'render', 'self,', '\"modules', '/', '=', 'aiopg.create_pool(', 'host', '=', 'options.db_host,', '=', 'user', '=', 'options.db_user,', '=', 'dbname', '=', 'db:', 'maybe_create_tables', 'db)', 'app', '=', 'Application', 'db)', 'shutdown_event', '=', 'shutdown_event.wait', '__name__', '==']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/demos/chat/chatdemo.py",
        "vector": "['os.path', 'uuid', 'options,', '=', '8888,', 'help', '=', '\"run', 'on', 'the', 'given', 'type', '=', '\"debug\",', '=', 'help', '=', '\"run', 'debug', 'mode\")', 'MessageBuffer', 'object', 'self', 'self.cond', '=', 'self.cache', '=', '[]', 'self.cache_size', '=', '200', 'self,', 'results', '=', '[]', 'msg', 'reversed', 'self.cache', 'msg', '\"id\"]', '==', 'results.append', 'msg)', 'results.reverse', 'results', 'add_message', 'self,', 'message', 'self.cache.append', 'message)', 'len', 'self.cache)', '>', 'self.cache_size:', 'self.cache', '=', 'self.cache', '-', 'self.cache_size', ':]', '=', 'MessageBuffer', 'get', 'self', 'self.render', 'messages', '=', 'post', 'self', 'message', '=', '{\"id\":', 'str', 'uuid.uuid4', '\"body\":', 'self.get_argument', '\"body\"', 'message', '\"html\"]', '=', '\"message.html\",', 'message', '=', 'message)', 'self.get_argument', '\"next\",', 'self.redirect', 'self.get_argument', '\"next\"', 'self.write', 'message)', 'message)', 'post', 'self', '=', 'self.get_argument', 'messages', '=', 'messages:', 'self.wait_future', '=', 'self.wait_future', 'messages', '=', 'self.request.connection.stream.closed', 'self.write', 'dict', 'messages', '=', 'messages', 'on_connection_close', 'self', 'self.wait_future.cancel', 'app', '=', '(r\"', '/', '\",', '(r\"', '/', 'a', '/', 'message', '/', 'new\",', '(r\"', '/', 'a', '/', 'message', '/', 'updates\",', '],', 'cookie_secret', '=', '\"__TODO', '_GENERATE_YOUR_OWN_RANDOM_VALUE_HERE__\",', 'template_path', '=', 'os.path.dirname', '__file__', '\"templates\"', 'static_path', '=', 'os.path.dirname', '__file__', '\"static\"', 'xsrf_cookies', '=', 'debug', '=', 'options.debug,', '.wait', '__name__', '==']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/demos/facebook/facebook.py",
        "vector": "['os.path', 'options', '=', '8888,', 'help', '=', '\"run', 'on', 'the', 'given', 'type', '=', '\"facebook_api_key\",', 'help', '=', '\"your', 'Facebook', 'application', 'API', 'key\",', 'type', '=', 'str)', '\"facebook_secret\",', 'help', '=', '\"your', 'Facebook', 'application', 'secret\",', 'type', '=', 'str)', 'Application', 'self', '=', '(r\"', '/', '\",', '(r\"', '/', 'auth', '/', '(r\"', '/', 'auth', '/', 'logout\",', '=', 'dict(', 'cookie_secret', '=', '\"__TODO', '_GENERATE_YOUR_OWN_RANDOM_VALUE_HERE__\",', '=', '\"', '/', 'auth', '/', 'template_path', '=', 'os.path.dirname', '__file__', '\"templates\"', 'static_path', '=', 'os.path.dirname', '__file__', '\"static\"', 'xsrf_cookies', '=', 'facebook_api_key', '=', 'options.facebook_api_key,', 'facebook_secret', '=', 'options.facebook_secret,', 'ui_modules', '=', '\"Post\":', 'PostModule', 'debug', '=', 'autoescape', '=', 'self,', '*', '*', 'get_current_user', 'self', 'user_json', '=', 'self.get_signed_cookie', '\"fbdemo_user\")', 'user_json:', 'user_json)', 'get', 'self', 'stream', '=', 'self.facebook_request(', '\"', '/', 'me', '/', 'home\",', 'self._on_stream,', 'access_token', '=', 'self.current_user', '\"access_token\"]', 'stream', 'self.redirect', '\"', '/', 'auth', '/', 'self.render', '\"stream.html\",', 'stream', '=', 'stream)', 'get', 'self', 'my_url', '=', 'self.request.protocol', '+', '\"', '/', '/', '\"', '+', 'self.request.host', '+', '\"', '/', 'auth', '/', '=', '\"', '+', 'self.get_argument', '\"next\",', '\"', '/', '\"', 'self.get_argument', '\"code\",', 'user', '=', 'self.get_authenticated_user(', 'redirect_uri', '=', 'my_url,', 'client_id', '=', '\"facebook_api_key\"', 'client_secret', '=', '\"facebook_secret\"', 'code', '=', 'self.get_argument', '\"code\"', 'self.set_signed_cookie', '\"fbdemo_user\",', 'user', 'self.redirect', 'self.get_argument', '\"next\",', '\"', '/', '\"', 'redirect_uri', '=', 'my_url,', 'client_id', '=', '\"facebook_api_key\"', 'extra_params', '=', '\"scope\":', '\"user_posts\"', 'get', 'self', 'self.clear_cookie', '\"fbdemo_user\")', 'self.redirect', 'self.get_argument', '\"next\",', '\"', '/', '\"', 'PostModule', 'render', 'self,', 'post', '\"modules', '/', 'post.html\",', 'post', '=', 'post)', '(options.facebook_api_key', 'options.facebook_secret', '\"', '--', 'facebook_api_key', '-', '-', 'facebook_secret', 'must', 'be', 'set\")', 'http_server', '=', 'Application', '.wait', '__name__', '==']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/demos/file_upload/file_receiver.py",
        "vector": "['urllib.parse', 'unquote', 'options', 'post', 'self', 'field_name,', 'files', 'self.request.files.items', 'files:', 'filename,', 'content_type', '=', '\"filename\"', '\"content_type\"]', 'body', '=', '\"body\"]', \"'POST\", '\"', '%', 's\"', '\"', '%', 's\"', '%d', \"bytes',\", 'filename,', 'content_type,', 'len', 'body)', 'self.write', '\"OK\")', 'self', 'self.bytes_read', '=', '0', 'data_received', 'self,', 'chunk', 'self.bytes_read', '+=', 'len', 'chunk)', 'put', 'self,', 'filename', 'filename', '=', 'unquote', 'filename)', 'mtype', '=', 'self.request.headers.get', '\"Content', '-', 'Type\")', \"'PUT\", '\"', '%', 's\"', '\"', '%', 's\"', '%d', \"bytes',\", 'filename,', 'mtype,', 'self.bytes_read)', 'self.write', '\"OK\")', 'make_app', 'r\"', '/', 'post\",', '(r\"', '/', '.', '*', '\",', 'app', '=', 'make_app', '8888)', '.wait', '__name__', '==']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/demos/file_upload/file_uploader.py",
        "vector": "['mimetypes', 'os', 'sys', 'functools', 'partial', 'urllib.parse', 'quote', 'uuid', 'uuid4', 'gen,', 'httpclient', 'options', 'multipart_producer', 'boundary,', 'filenames,', 'write', 'boundary_bytes', '=', 'boundary.encode', 'filename', 'filenames:', 'filename_bytes', '=', 'filename.encode', 'mtype', '=', 'mimetypes.guess_type', 'filename', '0]', '\"application', '/', 'octet', '-', 'stream\"', 'buf', '=', '(b\"', '--', '%', 's\\\\r\\\\n\"', '%', 'boundary_bytes)', '+', \"b'Content\", '-', '-', 'data;', 'name', '=', '\"', '%', 's\";', 'filename', '=', '\"', '%', 's\"\\\\r\\\\n\\'', '%', '(filename_bytes,', 'filename_bytes)', '+', '(b\"Content', '-', 'Type:', '%s\\\\r\\\\n\"', '%', 'mtype.encode', '+', 'b\"\\\\r\\\\n\"', 'write', 'buf)', 'open', 'filename,', '\"rb\")', 'f:', 'chunk', '=', 'f.read', '16', '*', '1024)', 'chunk:', 'write', 'chunk)', 'write', 'b\"\\\\r\\\\n\")', 'write', 'b\"', '--', '%', 's', '--', '\\\\r\\\\n\"', '%', '(boundary_bytes', 'post', 'filenames', 'client', '=', 'httpclient.AsyncHTTPClient', 'boundary', '=', 'uuid4', '.hex', 'headers', '=', '{\"Content', '-', 'Type\":', '\"multipart', '/', '-', 'data;', 'boundary', '=', '%', 's\"', '%', 'boundary}', 'producer', '=', 'partial', 'multipart_producer,', 'boundary,', 'filenames)', 'response', '=', 'client.fetch(', '\"http', '/', '/', 'localhost', '8888', '/', 'post\",', 'method', '=', '\"POST\",', 'headers', '=', 'headers,', 'body_producer', '=', 'producer,', 'response)', 'raw_producer', 'filename,', 'write', 'open', 'filename,', '\"rb\")', 'f:', 'chunk', '=', 'f.read', '16', '*', '1024)', 'chunk:', 'write', 'chunk)', 'put', 'filenames', 'client', '=', 'httpclient.AsyncHTTPClient', 'filename', 'filenames:', 'mtype', '=', 'mimetypes.guess_type', 'filename', '0]', '\"application', '/', 'octet', '-', 'stream\"', 'headers', '=', '{\"Content', '-', 'Type\":', 'mtype}', 'producer', '=', 'partial', 'raw_producer,', 'filename)', 'url_path', '=', 'quote', 'filename', 'response', '=', 'client.fetch(', '\"http', '/', '/', 'localhost', '8888', '/', '%', 's\"', '%', 'url_path,', 'method', '=', '\"PUT\",', 'headers', '=', 'headers,', 'body_producer', '=', 'producer,', 'response)', '__name__', '==', '\"put\",', 'type', '=', 'bool,', 'help', '=', '\"Use', 'PUT', 'of', 'POST\",', 'group', '=', '\"file', 'uploader\")', 'filenames', '=', 'filenames:', '\"Provide', 'a', 'of', 'filenames', 'to', 'upload.\",', 'file', '=', 'sys.stderr)', 'sys.exit', '1)', 'method', '=', 'put', 'options.put', 'post', 'method', 'filenames']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/demos/google_auth/main.py",
        "vector": "['json', 'urllib.parse', 'options', 'url', '=', '8888,', 'help', '=', '\"run', 'on', 'the', 'given', 'type', '=', '\"google_oauth_key\",', 'help', '=', '\"Google', 'OAuth', 'Key\")', '\"google_oauth_secret\",', 'help', '=', '\"Google', 'OAuth', 'Secret\")', '\"config_file\",', 'help', '=', 'config', 'file\",', 'callback', '=', 'path:', 'path,', '=', 'get_current_user', 'self', 'user_cookie', '=', 'self.get_signed_cookie', '\"googledemo_user\")', 'user_cookie:', 'json.loads', 'user_cookie)', 'get', 'self', '=', 'self.oauth2_request(', '\"https', '/', '/', '/', 'oauth2', '/', 'v1', '/', 'access_token', '=', 'self.current_user', '\"access_token\"', 'e:', 'e.response.body)', 'self.write', 'f\"Hello', \"'name'\", '\")', 'get', 'self', 'redirect_uri', '=', 'self.reverse_url', '\"google_oauth\"', 'self.get_argument', '\"code\",', 'access', '=', 'self.get_authenticated_user(', 'redirect_uri', '=', 'redirect_uri,', 'code', '=', 'self.get_argument', '\"code\")', 'user', '=', 'self.oauth2_request(', '\"https', '/', '/', '/', 'oauth2', '/', 'v1', '/', 'access_token', '=', 'access', '\"access_token\"', 'user_cookie', '=', 'dict', 'id', '=', 'user', '\"id\"', 'access_token', '=', 'access', '\"access_token\"', 'self.set_signed_cookie', '\"googledemo_user\",', 'json.dumps', 'user_cookie', 'self.redirect', '\"', '/', '\")', 'redirect_uri', '=', 'redirect_uri,', 'client_id', '=', '\"key\"', 'scope', '=', '\"profile\",', '\"email\"', 'response_type', '=', '\"code\",', 'extra_params', '=', '\"approval_prompt\":', '\"auto\"', 'get', 'self', 'self.clear_cookie', '\"user\")', 'self.redirect', '\"', '/', '\")', 'app', '=', 'url', 'r\"', '/', '\",', 'url', 'r\"', '/', 'auth', '/', 'google\",', 'name', '=', '\"google_oauth\"', 'url', 'r\"', '/', 'logout\",', '],', '=', 'f\"http', '/', '/', 'localhost', '\",', 'google_oauth', '=', 'dict(', 'key', '=', 'options.google_oauth_key,', 'secret', '=', 'options.google_oauth_secret', '),', 'debug', '=', 'cookie_secret', '=', '\"__TODO', '_GENERATE_YOUR_OWN_RANDOM_VALUE_HERE__\",', '=', '\"', '/', 'auth', '/', 'google\",', 'shutdown_event', '=', 'shutdown_event.wait', '__name__', '==']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/demos/helloworld/helloworld.py",
        "vector": "['options', '=', '8888,', 'help', '=', '\"run', 'on', 'the', 'given', 'type', '=', 'get', 'self', 'self.write', '\"Hello,', 'application', '=', 'r\"', '/', '\",', 'http_server', '=', 'application)', '.wait', '__name__', '==']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/demos/s3server/s3server.py",
        "vector": "['datetime', 'os', 'os.path', 'urllib', 'escape', 'httpserver', 'web', 'unicode_type', 'options,', 'long', 'long', '=', '=', '9888,', 'help', '=', '\"TCP', 'to', 'on\")', '=', '\"', '/', 'tmp', '/', 's3\",', 'help', '=', '\"Root', '\"bucket_depth\",', '=', '0,', 'help', '=', '\"Bucket', 'file', 'system', 'depth', 'limit\")', 'start', 'bucket_depth', 'application', '=', 'S3Application', 'bucket_depth)', 'http_server', '=', 'httpserver.HTTPServer', 'application)', '.wait', 'S3Application', 'web.Application', 'self,', 'bucket_depth', '=', '0', 'self,', '(r\"', '/', '\",', '(r\"', '/', '^', '/', '+', '/', '.', '+', '\",', '(r\"', '/', '^', '/', '+', '/', '\",', '],', '=', 'os.path.abspath', 'os.makedirs', 'self.bucket_depth', '=', 'bucket_depth', 'SUPPORTED_METHODS', '=', '(\"PUT\",', '\"GET\",', '\"DELETE\")', 'render_xml', 'self,', 'value', 'value,', 'dict)', 'len', 'value)', '==', '1', 'self.set_header', '\"Content', '-', 'Type\",', '\"application', '/', 'xml;', 'charset', '=', 'UTF', '-', '8\")', 'name', '=', 'value.keys', '0]', 'parts', '=', '[]', 'parts.append', '\"', '<', '\"', '+', 'name', '+', \"'\", 'xmlns', '=', '\"http', '/', '/', 'doc.s3.amazonaws.com', '/', '2006', '-', '03', '-', '01\"', '>', \"')\", 'self._render_parts', 'value', 'name', 'parts)', 'parts.append', '\"', '<', '/', '\"', '+', 'name', '+', '\"', '>', '\")', \"'\", '<', '?xml', 'version', '=', '\"1.0\"', '=', '\"UTF', '-', '8\"?', '>', \"\\\\n'\", '+', 'parts', '_render_parts', 'self,', 'value,', 'parts', '=', 'value,', '(unicode_type,', 'bytes', 'parts.append', 'escape.xhtml_escape', 'value', 'value,', 'long', 'parts.append', 'str', 'value', 'value,', 'datetime.datetime', 'parts.append', 'value.strftime', '\"', '%', 'Y', '-', '%', 'm', '-', '%', 'dT', '%', 'H', '%', 'M', '%', 'S.000Z\"', 'value,', 'dict', 'name,', 'subvalue', 'value.items', 'subvalue,', 'subvalue', '=', '[subvalue]', 'subsubvalue', 'subvalue:', 'parts.append', '\"', '<', '\"', '+', 'name', '+', '\"', '>', '\")', 'self._render_parts', 'subsubvalue,', 'parts)', 'parts.append', '\"', '<', '/', '\"', '+', 'name', '+', '\"', '>', '\")', 'Exception', '\"Unknown', 'S3', 'value', 'type', '%r\",', 'value)', '_object_path', 'self,', 'bucket,', 'object_name', 'self.application.bucket_depth', '<', '1:', 'os.path.abspath(', 'bucket,', 'object_name)', '=', 'object_name', '.hexdigest', 'path', '=', 'os.path.abspath', 'bucket', 'i', 'range', 'self.application.bucket_depth', 'path', '=', 'path,', '2', '*', '(i', '+', '1', 'path,', 'object_name)', 'get', 'self', 'names', '=', 'buckets', '=', '[]', 'name', 'names:', 'path', '=', 'name)', '=', 'os.stat', 'path)', 'buckets.append(', '\"Name\":', 'name,', '\"CreationDate\":', 'datetime.timezone.utc', '),', 'self.render_xml', '{\"Buckets\":', '{\"Bucket\":', 'buckets', 'get', 'self,', 'bucket_name', 'prefix', '=', 'self.get_argument', '\"prefix\",', '\"\")', 'marker', '=', 'self.get_argument', '\"marker\",', '\"\")', 'max_keys', '=', 'self.get_argument', '\"max', '-', 'keys\",', '50000', 'path', '=', 'os.path.abspath', 'bucket_name', 'terse', '=', 'self.get_argument', '\"terse\",', '0', 'path', '404)', 'object_names', '=', '[]', 'root,', 'dirs,', 'files', 'os.walk', 'path', 'file_name', 'files:', 'object_names.append', 'root,', 'file_name', 'skip', '=', 'len', 'path)', '+', '1', 'i', 'range', 'self.application.bucket_depth', 'skip', '+=', '2', '*', '(i', '+', '1)', '+', '1', 'object_names', '=', '[n', 'skip', 'n', 'object_names]', 'contents', '=', '[]', 'start_pos', '=', '0', 'marker:', 'start_pos', '=', 'object_names,', 'marker,', 'start_pos)', 'prefix:', 'start_pos', '=', 'object_names,', 'prefix,', 'start_pos)', 'truncated', '=', 'object_name', 'object_names', 'start_pos', 'prefix', 'len', 'contents)', '>=', 'max_keys:', 'truncated', '=', 'object_path', '=', 'self._object_path', 'bucket_name,', 'object_name)', 'c', '=', '{\"Key\":', 'object_name}', 'terse:', '=', 'os.stat', 'object_path)', 'c.update(', '),', '\"Size\":', 'contents.append', 'c)', 'marker', '=', 'object_name', 'self.render_xml(', '\"Name\":', 'bucket_name,', '\"Prefix\":', 'prefix,', '\"Marker\":', 'marker,', '\"MaxKeys\":', 'max_keys,', '\"IsTruncated\":', 'truncated,', '\"Contents\":', 'contents,', 'put', 'self,', 'bucket_name', 'path', '=', 'os.path.abspath', 'bucket_name', 'path', '403)', 'os.makedirs', 'path)', 'self,', 'bucket_name', 'path', '=', 'os.path.abspath', 'bucket_name', 'path', '404)', 'len', 'path', '>', '0:', '403)', 'os.rmdir', 'path)', 'self.set_status', '204)', 'get', 'self,', 'bucket,', 'object_name', 'object_name', '=', 'urllib.unquote', 'object_name)', 'path', '=', 'self._object_path', 'bucket,', 'object_name)', 'path', '404)', '=', 'os.stat', 'path)', 'self.set_header', '\"Content', '-', 'Type\",', '\"application', '/', 'unknown\")', 'self.set_header(', '-', 'open', 'path,', '\"rb\")', 'object_file:', 'object_file.read', 'put', 'self,', 'bucket,', 'object_name', 'object_name', '=', 'urllib.unquote', 'object_name)', 'bucket_dir', '=', 'os.path.abspath', 'bucket', 'bucket_dir', '):', '404)', 'path', '=', 'self._object_path', 'bucket,', 'object_name)', 'bucket_dir)', 'path', '403)', '=', 'os.path.dirname', 'path)', 'os.makedirs', 'open', 'path,', '\"w\")', 'object_file:', 'object_file.write', 'self.request.body)', 'self,', 'bucket,', 'object_name', 'object_name', '=', 'urllib.unquote', 'object_name)', 'path', '=', 'self._object_path', 'bucket,', 'object_name)', 'path', '404)', 'path)', 'self.set_status', '204)', '__name__', '==', 'start', 'options.bucket_depth']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/demos/tcpecho/client.py",
        "vector": "['TCPClient', 'options,', '\"host\",', '=', '\"localhost\",', 'help', '=', '\"TCP', 'server', 'host\")', '=', '9888,', 'help', '=', '\"TCP', 'to', 'connect', 'to\")', '\"message\",', '=', 'help', '=', '\"Message', 'to', 'send\")', 'send_message', 'stream', '=', 'TCPClient', '.connect', 'options.host,', 'stream.write', 'options.message', '+', '\"\\\\n\"', '.encode', '\"Sent', 'to', 'server', '\",', 'options.message)', 'reply', '=', 'stream.read_until', 'b\"\\\\n\")', '\"Response', 'server', '\",', 'reply.decode', '.strip', '__name__', '==', 'send_message']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/demos/tcpecho/server.py",
        "vector": "['gen', 'TCPServer', 'options,', '=', '9888,', 'help', '=', '\"TCP', 'to', 'on\")', 'logger', '=', '__name__)', 'EchoServer', 'TCPServer', 'self,', 'stream,', 'address', 'data', '=', 'stream.read_until', 'b\"\\\\n\")', '\"Received', 'bytes:', '%s\",', 'data)', 'b\"\\\\n\"', 'data', '=', 'data', '+', 'b\"\\\\n\"', 'stream.write', 'data)', '\"Lost', 'client', 'at', 'host', '%s\",', 'address', '0', 'Exception', 'e:', 'e)', 'on', 'TCP', '%d\",', 'server', '=', 'EchoServer', '.wait', '__name__', '==']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/demos/websocket/chatdemo.py",
        "vector": "['os.path', 'uuid', 'options', '=', '8888,', 'help', '=', '\"run', 'on', 'the', 'given', 'type', '=', 'Application', 'self', '=', 'r\"', '/', '\",', '(r\"', '/', 'chatsocket\",', '=', 'dict(', 'cookie_secret', '=', '\"__TODO', '_GENERATE_YOUR_OWN_RANDOM_VALUE_HERE__\",', 'template_path', '=', 'os.path.dirname', '__file__', '\"templates\"', 'static_path', '=', 'os.path.dirname', '__file__', '\"static\"', 'xsrf_cookies', '=', 'super', '*', '*', 'get', 'self', 'self.render', 'messages', '=', 'waiters', '=', 'set', 'cache', '=', '[]', 'cache_size', '=', '200', 'get_compression_options', 'self', '{}', 'open', 'self', 'self)', 'on_close', 'self', 'self)', 'update_cache', 'cls,', 'chat', 'cls.cache.append', 'chat)', 'len', 'cls.cache)', '>', 'cls.cache_size:', 'cls.cache', '=', 'cls.cache', '-', 'cls.cache_size', ':]', 'send_updates', 'cls,', 'chat', 'message', 'to', '%d', 'waiters\",', 'len', 'cls.waiters', 'waiter', 'cls.waiters:', 'waiter.write_message', 'chat)', 'message\",', '=', 'on_message', 'self,', 'message', '\"got', 'message', '%r\",', 'message)', 'parsed', '=', 'message)', 'chat', '=', '{\"id\":', 'str', 'uuid.uuid4', '\"body\":', 'parsed', '\"body\"', 'chat', '\"html\"]', '=', '\"message.html\",', 'message', '=', 'chat)', 'chat)', 'chat)', 'app', '=', 'Application', '.wait', '__name__', '==']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/demos/webspider/webspider.py",
        "vector": "['time', 'datetime', 'html.parser', 'HTMLParser', 'urllib.parse', 'gen,', 'httpclient,', 'queues', '=', '\"http', '/', '/', '/', 'en', '/', 'stable', '/', '\"', 'concurrency', '=', '10', 'url', 'response', '=', 'httpclient.AsyncHTTPClient', '.fetch', 'url)', '\"fetched', '%s\"', '%', 'url)', 'html', '=', 'response.body.decode', '=', 'url,', 'remove_fragment', 'new_url', 'new_url', 'html', 'remove_fragment', 'url', 'pure_url,', 'frag', '=', 'url)', 'pure_url', 'html', 'URLSeeker', 'HTMLParser', 'self', 'self)', 'self.urls', '=', '[]', 'self,', 'tag,', 'attrs', 'href', '=', 'dict', 'attrs', '.get', '\"href\")', 'href', 'tag', '==', '\"a\":', 'self.urls.append', 'href)', 'url_seeker', '=', 'URLSeeker', 'url_seeker.feed', 'html)', 'url_seeker.urls', 'q', '=', 'queues.Queue', 'start', '=', 'time.time', 'fetched,', 'dead', '=', 'set', 'set', 'set', 'fetch_url', 'current_url', 'current_url', '%s\"', '%', 'current_url)', 'current_url)', 'urls', '=', 'current_url)', 'fetched.add', 'current_url)', 'new_url', 'urls:', 'q.put', 'new_url)', 'url', 'q:', 'url', 'fetch_url', 'url)', 'Exception', 'e:', '\"Exception:', '%s', '%s\"', '%', '(e,', 'url', 'dead.add', 'url)', 'q.put', '=', 'gen.multi', '_', 'range', 'concurrency', 'timeout', '=', 'seconds', '=', '300', '==', '(fetched', '|', 'dead)', '\"Done', '%d', 'seconds,', 'fetched', '%s', 'URLs.\"', '%', '(time.time', '-', 'start,', 'len', 'fetched', '\"Unable', 'to', 'fetch', '%s', 'URLs.\"', '%', 'len', 'dead', '_', 'range', 'concurrency', 'q.put', '__name__', '==']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/docs/conf.py",
        "vector": "['os', 'sys', '0,', 'os.path.abspath', '\"..\"', '=', 'project', '=', 'copyright', '=', '\"The', 'version', '=', '=', 'extensions', '=', '=', '\"py\"', '=', '\"py', 'obj\"', '=', '\"bysource\"', '=', '\"both\"', '=', '=', '=', '=', '=', '\"Runner\",', '\"TemplateModule\",', '\"url\",', '\"WebSocketProtocol\",', '\"WebSocketProtocol13\",', '\"WebSocketProtocol76\",', '=', '\"doctests\",', '\"parse_qs_bytes\",', '\"Multi\",', 'html_favicon', '=', '\"favicon.ico\"', 'latex_documents', '=', 'Documentation\",', '\"The', '\"manual\",', '=', '{\"python\":', '(\"https', '/', '/', '/', '3', '/', '\",', 'html_theme', '=', 'html_theme_path', '=', '=', '\"_IOStreamType\",', '\"_S\",', '\"_T\",', '\"_io.BytesIO\",', '\"futures.Future\",', '\"socket.socket\",', '\"TextIO\",', '\"Future\",', '\"httputil.HTTPServerConnectionDelegate\",', '\"httputil.HTTPServerRequest\",', '\"Pattern\",', '\"RAISE\",', '\"Rule\",', '\"socket.AddressFamily\",', '\"traceback\",', '\"WSGIAppType\",', '\"Yieldable\",', 'app,', 'env,', 'node,', 'contnode', 'node', '\"reftarget\"]', 'setup', 'app', 'app.connect', '-', 'reference\",']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/maint/benchmark/benchmark.py",
        "vector": "['options,', 'Application', 'type', '=', '=', '8000)', 'type', '=', '=', '9000)', '\"n\",', 'type', '=', '=', '15000)', '\"c\",', 'type', '=', '=', '25)', '\"keepalive\",', 'type', '=', 'bool,', '=', '\"quiet\",', 'type', '=', 'bool,', '=', '\"num_runs\",', 'type', '=', '=', '1)', 'get', 'self', 'self.write', '\"Hello,', '_log', 'self', 'i', 'range', 'options.num_runs', 'run', 'run', 'app', '=', 'Application', '\"', '/', '\",', '=', 'address', '=', '\"127.0.0.1\")', 'args', '=', '[\"ab\"]', 'args.extend', '\"', '-', 'n\",', 'str', 'options.n', 'args.extend', '\"', '-', 'c\",', 'str', 'options.c', 'options.keepalive:', 'args.append', '\"', '-', 'k\")', 'options.quiet:', 'args.append', '\"', '-', 'q\")', 'args.append', '\"http', '/', '/', '127.0.0.1', '%', 'd', '/', '\"', '%', 'proc', '=', '*', 'args)', 'proc.wait', '__name__', '==']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/maint/benchmark/chunk_benchmark.py",
        "vector": "['CurlAsyncHTTPClient', 'SimpleAsyncHTTPClient', 'IOLoop', 'options,', 'Application', 'xrange', 'xrange', '=', 'range', '=', '8888)', \"'num_chunks',\", '=', '1000)', \"'chunk_size',\", '=', '2048)', 'get', 'self', 'i', 'xrange', 'options.num_chunks', 'self.write', \"'A'\", '*', 'options.chunk_size)', 'self.flush', 'app', '=', 'Application', \"'\", '/', \"',\", 'address', '=', \"'127.0.0.1')\", 'callback', 'response', 'response.rethrow', 'len', 'response.body)', '==', '(options.num_chunks', '*', 'options.chunk_size)', '\"fetch', 'completed', '%s', 'seconds\",', 'response.request_time)', 'IOLoop.current', '.stop', 'fetch', 'curl', 'client\")', 'curl_client', '=', 'CurlAsyncHTTPClient', 'curl_client.fetch', \"'http\", '/', '/', 'localhost', '%', 'd', '/', \"'\", '%', 'callback', '=', 'callback)', 'IOLoop.current', '.start', 'fetch', 'simple', 'client\")', 'simple_client', '=', 'SimpleAsyncHTTPClient', 'simple_client.fetch', \"'http\", '/', '/', 'localhost', '%', 'd', '/', \"'\", '%', 'callback', '=', 'callback)', 'IOLoop.current', '.start', '__name__', '==']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/maint/benchmark/gen_benchmark.py",
        "vector": "['timeit', 'Timer', 'gen', 'options,', \"'num',\", '=', '10000,', 'help', '=', \"'number\", 'of', \"iterations')\", 'e2', 'callback', 'callback', 'e1', 'i', 'range', '10', 'e2)', 'c2', 'c1', 'i', 'range', '10', 'c2', 't', '=', 'Timer', 'e1)', 'results', '=', 't.timeit', 'options.num)', '/', 'options.num', '%0.3f', 'ms', 'per', \"iteration'\", '%', '(results', '*', '1000', 't', '=', 'Timer', 'c1)', 'results', '=', 't.timeit', 'options.num)', '/', 'options.num', '%0.3f', 'ms', 'per', \"iteration'\", '%', '(results', '*', '1000', '__name__', '==']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/maint/benchmark/parsing_benchmark.py",
        "vector": "['re', 'timeit', 'enum', 'Enum', 'Callable', 'HTTPHeaders', 'options,', '\"benchmark\",', 'type', '=', 'str)', '\"num_runs\",', 'type', '=', '=', '1)', '_CRLF_RE', '=', 're.compile', 'r\"\\\\r?\\\\n\")', '_TEST_HEADERS', '=', '\"Accept:', 'text', '/', 'html', 'application', '/', 'xhtml', '+', 'xml', 'application', '/', 'xml', 'q', '=', '0.9', 'image', '/', 'webp', '\"', '\"image', '/', 'apng', '*', '/', '*', 'q', '=', '0.8', 'application', '/', 'signed', '-', 'exchange', 'v', '=', 'b3\\\\r\\\\n\"', '\"Accept', '-', 'gzip,', 'br\\\\r\\\\n\"', '\"Accept', '-', 'Language:', 'ru', '-', 'RU', 'ru', 'q', '=', '0.9', 'en', '-', 'US', 'q', '=', '0.8', 'en', 'q', '=', '0.7\\\\r\\\\n\"', '\"Cache', '-', 'Control:', 'max', '-', 'age', '=', '0\\\\r\\\\n\"', '\"Connection:', 'keep', '-', 'alive\\\\r\\\\n\"', '\"Host:', 'example.com\\\\r\\\\n\"', '\"Upgrade', '-', 'Insecure', '-', 'Requests:', '1\\\\r\\\\n\"', '\"User', '-', 'Agent:', 'Mozilla', '/', '5.0', 'NT', '10.0;', 'x64)', 'AppleWebKit', '/', '537.36', '\"', '\"', 'KHTML,', 'like', 'Gecko)', 'Chrome', '/', '73.0.3683.103', 'Safari', '/', '537.36\\\\r\\\\n\"', 'headers_split_re', 'headers:', 'str)', '->', '_CRLF_RE.split', 'headers', 'headers_split_simple', 'headers:', 'str)', '->', 'headers.split', '\"\\\\n\"', '\"\\\\r\"', '=', '-', '1]', 'headers_parse_re', 'headers:', 'str)', '->', 'HTTPHeaders:', 'h', '=', 'HTTPHeaders', '_CRLF_RE.split', 'headers', 'h', 'headers_parse_simple', 'headers:', 'str)', '->', 'HTTPHeaders:', 'h', '=', 'HTTPHeaders', 'headers.split', '\"\\\\n\"', '\"\\\\r\"', '=', '-', '1]', 'h', 'run_headers_split', 'regex_time', '=', 'timeit.timeit', 'headers_split_re', '_TEST_HEADERS', 'number', '=', '100000)', '\"regex\",', 'regex_time)', 'simple_time', '=', 'timeit.timeit(', 'headers_split_simple', '_TEST_HEADERS', 'number', '=', '100000', '\"str.split\",', 'simple_time)', '\"speedup\",', 'regex_time', '/', 'simple_time)', 'run_headers_full', 'regex_time', '=', 'timeit.timeit', 'headers_parse_re', '_TEST_HEADERS', 'number', '=', '10000)', '\"regex\",', 'regex_time)', 'simple_time', '=', 'timeit.timeit(', 'headers_parse_simple', '_TEST_HEADERS', 'number', '=', '10000', '\"str.split\",', 'simple_time)', '\"speedup\",', 'regex_time', '/', 'simple_time)', 'Benchmark', 'Enum', '__new__', 'cls,', 'arg_value:', 'str,', 'func:', 'Callable', 'member', '=', 'object.__new__', 'cls)', 'member._value_', '=', 'arg_value', 'member.func', '=', 'func', 'member', 'HEADERS_SPLIT', '=', '(\"headers', '-', 'split\",', 'run_headers_split)', 'HEADERS_FULL', '=', '(\"headers', '-', 'full\",', 'run_headers_full)', 'func', '=', 'Benchmark', 'options.benchmark', '.func', 'known_benchmarks', '=', '[benchmark.value', 'benchmark', 'Benchmark]', '\"Unknown', 'benchmark:', \"'\", \"',\", 'values', 'are:', '\"', 'options.benchmark,', '\",', 'known_benchmarks', '_', 'range', 'options.num_runs', 'func', '__name__', '==']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/maint/benchmark/template_benchmark.py",
        "vector": "['sys', 'timeit', 'Timer', 'options,', 'Template', \"'num',\", '=', '100,', 'help', '=', \"'number\", 'of', \"iterations')\", \"'dump',\", '=', 'help', '=', 'template', 'generated', 'code', \"exit')\", 'context', '=', \"'page_title':\", \"'mitsuhiko\\\\'s\", \"benchmark',\", \"'table':\", '[dict', 'a', '=', '1,', 'b', '=', '2,', 'c', '=', '3,', 'd', '=', '4,', 'e', '=', '5,', 'f', '=', '6,', 'g', '=', '7,', 'h', '=', '8,', 'i', '=', '9,', 'j', '=', '10)', 'x', 'range', '1000', 'tmpl', '=', 'Template', 'render', 'tmpl.generate', '**', 'context)', 'options.dump:', 'tmpl.code)', 'sys.exit', '0)', 't', '=', 'Timer', 'render)', 'results', '=', 't.timeit', 'options.num)', '/', 'options.num', \"'\", '%', '0.3f', 'ms', 'per', \"iteration'\", '%', '(results', '*', '1000', '__name__', '==']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/maint/scripts/custom_fixers/__init__.py",
        "vector": "[]"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/maint/scripts/custom_fixers/fix_future_imports.py",
        "vector": "['lib2to3', 'lib2to3', 'pytree', 'lib2to3.pgen2', 'token', 'lib2to3.fixer_util', 'Name,', 'Comma,', 'stmt', 'stmt,', 'pytree.Node)', 'stmt.children', '0', '.type', '==', 'token.STRING', 'BM_compatible', '=', 'PATTERN', '=', 'start_tree', 'self,', 'tree,', 'filename', '=', 'self,', 'old', 'new', '=', '\"__future__\",', '[Name', 'prefix', '=', '\"', '\"', 'Comma', 'Name', 'prefix', '=', '\"', '\"', 'Comma', 'Name', 'prefix', '=', '\"', '\"', 'old', 'new.prefix', '=', 'old.prefix', 'new', 'self,', 'node,', 'results', '=', 'node)', 'self,', 'tree,', 'filename', 'tree,', 'pytree.Node', 'first_stmt', '=', 'tree.children', '0]', 'first_stmt', '1,', 'pos', '=', '2', 'first_stmt.prefix:', '=', '=', 'first_stmt.prefix', 'first_stmt.prefix', '=', '\"\"', '0,', 'pos', '=', '1', 'pos', '=', '0', 'pos,', 'pos', '+', '1,']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/maint/scripts/custom_fixers/fix_unicode_literal.py",
        "vector": "['lib2to3', 'lib2to3.fixer_util', 'FixUnicodeLiteral', 'BM_compatible', '=', 'PATTERN', '=', 'self,', 'node,', 'results', 'arg', '=', 'results', '\"arg\"]', 'node.replace', \"'u'\", '+', 'arg.value,', 'prefix', '=', 'node.prefix']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/maint/scripts/run_fixers.py",
        "vector": "['sys', 'sys.exit', '\"custom_fixers\"']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/maint/scripts/test_resolvers.py",
        "vector": "['socket', 'gen', 'IOLoop', 'Resolver,', 'ThreadedResolver,', 'options', '=', 'pycares', 'pycares', '=', \"'family',\", '=', \"'unspec',\", 'help', '=', \"'Address\", 'family', 'to', 'query:', 'unspec,', 'args', '=', 'args:', 'args', '=', \"['localhost',\", \"'www.google.com',\", \"'www.facebook.com',\", \"'www.dropbox.com']\", 'resolvers', '=', '[Resolver', 'ThreadedResolver', 'resolvers.append', 'pycares', 'CaresResolver', 'resolvers.append', 'CaresResolver', 'family', '=', \"'unspec':\", 'socket.AF_UNSPEC,', 'socket.AF_INET,', 'socket.AF_INET6,', 'options.family]', 'host', 'args:', \"%s'\", '%', 'host)', 'resolver', 'resolvers:', '=', 'resolver.resolve', 'host,', '80,', 'family)', \"'\", '%', 's:', \"%s'\", '%', '__name__', '==', '.run_sync']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/maint/test/cython/cythonapp_test.py",
        "vector": "['gen_test', 'ArgReplacer', 'unittest', 'cythonapp', '@gen_test', 'self', 'x', '=', 'x,', '\"goodbye\")', '@gen_test', 'self', 'x', '=', 'x,', '\"goodbye\")', 'CythonArgReplacerTest', 'test_arg_replacer_function', 'self', 'replacer', '=', 'ArgReplacer', \"'two')\", 'args', '=', '(1,', \"'old',\", '3)', 'kwargs', '=', '{}', 'replacer.get_old_value', 'args,', 'kwargs', \"'old')\", 'replacer.replace', \"'new',\", 'args,', 'kwargs', \"('old',\", '[1,', \"'new',\", '3', 'test_arg_replacer_method', 'self', 'replacer', '=', 'ArgReplacer', \"'two')\", 'args', '=', '(1,', \"'old',\", '3)', 'kwargs', '=', '{}', 'replacer.get_old_value', 'args,', 'kwargs', \"'old')\", 'replacer.replace', \"'new',\", 'args,', 'kwargs', \"('old',\", '[1,', \"'new',\", '3']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/maint/test/cython/pythonmodule.py",
        "vector": "['gen', 'hello', 'gen.sleep', '0.001)', 'gen.Return', '\"hello\")']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/maint/test/cython/setup.py",
        "vector": "['setuptools', 'setup', 'Cython.Build', 'Cython', '=', 'Cython', 'ext_modules', '=', 'ext_modules', '=', 'Cython.Build.cythonize', \"'cythonapp.pyx')\", 'setup(', 'name', '=', \"'cythonapp',\", 'py_modules', '=', \"'cythonapp_test',\", \"'pythonmodule'\", 'ext_modules', '=', 'ext_modules,', 'setup_requires', '=', \"'Cython\", '>=', \"0.23.1',\"]"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/maint/test/mypy/bad.py",
        "vector": "['get', 'self)', '->', 'str:', '\"foo\"']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/maint/test/mypy/good.py",
        "vector": "['gen', 'get', 'self)', '->', 'self.write', '\"foo\")', 'post', 'self)', '->', 'gen.sleep', '1)', 'self.write', '\"foo\")']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/maint/test/mypy/setup.py",
        "vector": "['setuptools', 'setup', 'setup']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/maint/test/redbot/red_test.py",
        "vector": "['redbot.resource', 'HttpResource', 'redbot.speak', 'rs', 'gen', 'Application,', 'unittest', 'get', 'self', 'self.write', '\"Hello', 'get', 'self,', 'path', 'self.redirect', 'path,', 'status', '=', 'self.get_argument', \"'status',\", \"'302'\", 'post', 'self', 'self.get_argument', \"'foo')\", '==', \"'bar'\", 'self.redirect', \"'\", '/', \"hello',\", 'status', '=', '303)', 'get', 'self', 'self.write', \"'hello\", \"')\", 'self.flush)', 'self.write', 'self.flush)', 'get', 'self,', 'computed_etag', 'self.write', 'computed_etag)', 'compute_etag', 'self', 'self._write_buffer', '0]', 'object', 'self', \"('\", '/', \"hello',\", \"('\", '/', 'redirect', '/', '.', '*', \"',\", \"('\", '/', \"post',\", \"('\", '/', \"chunked',\", \"('\", '/', 'cache', '/', '.', '*', \"',\", 'get_app_kwargs', 'self', 'dict', 'static_path', '=', \"'.')\", 'self', 'rs.FRESHNESS_HEURISTIC,', 'rs.CONNEG_GZIP_BAD,', 'self', '[]', 'check_url', 'self,', 'path,', 'method', '=', \"'GET',\", 'body', '=', 'headers', '=', 'expected_status', '=', '200,', '=', '=', 'url', '=', 'self.get_url', 'path)', 'red', '=', 'self.run_redbot', 'url,', 'method,', 'body,', 'headers)', 'red.response.complete:', 'Exception', 'vars', 'url', 'Exception', '\"unknown', 'response\")', 'red.response.status_code', 'expected_status)', '=', '+', '=', '+', '=', '[]', '=', '[]', 'msg', 'msg.level', '==', \"'bad':\", 'logger', '=', 'msg,', 'tuple', 'msg)', 'msg.level', '==', 'logger', '=', 'msg,', 'tuple', 'msg)', 'msg.level', \"('good',\", \"'uri'\", 'logger', '=', 'Exception', \"'unknown\", \"level'\", '+', 'msg.level)', 'logger', \"'\", '%', 's:', '%s', '%', 's', \"',\", 'msg.show_summary', \"'en'\", 'logger', 'msg.show_text', \"'en'\", 'len', '+', 'len', '0,', \"'Had\", '%d', 'unexpected', '%d', '%', '(len', 'len', 'run_redbot', 'self,', 'url,', 'method,', 'body,', 'headers', 'red', '=', 'HttpResource', 'url,', 'method', '=', 'method,', 'req_body', '=', 'body,', 'req_hdrs', '=', 'headers)', 'red.run', 'self.io_loop.add_callback', 'self.stop)', 'thread', '=', 'target', '=', 'thread.start', 'self.wait', 'red', 'test_hello', 'self', 'self.check_url', \"'\", '/', \"hello')\", 'test_static', 'self', 'self.check_url', \"'\", '/', 'static', '/', \"red_test.py',\", '=', 'rs.MISSING_HDRS_304', 'test_static_versioned_url', 'self', 'self.check_url', \"'\", '/', 'static', '/', 'red_test.py?v', '=', \"1234',\", '=', 'rs.MISSING_HDRS_304', 'test_redirect', 'self', 'self.check_url', \"'\", '/', 'redirect', '/', \"hello',\", 'expected_status', '=', '302)', 'test_permanent_redirect', 'self', 'self.check_url', \"'\", '/', 'redirect', '/', 'hello?status', '=', \"301',\", 'expected_status', '=', '301)', 'test_404', 'self', 'self.check_url', \"'\", '/', \"404',\", 'expected_status', '=', '404)', 'test_post', 'self', 'body', '=', \"'foo\", '=', \"bar'\", 'self.check_url(', \"'\", '/', \"post',\", 'method', '=', \"'POST',\", 'body', '=', 'body,', 'headers', '=', \"'Content\", '-', \"Length',\", 'str', 'len', 'body', \"('Content\", '-', \"Type',\", \"'application\", '/', 'x', '-', 'www', '-', '-', \"urlencoded'\", 'expected_status', '=', '303)', 'test_chunked', 'self', 'self.check_url', \"'\", '/', \"chunked')\", 'test_strong_etag_match', 'self', 'computed_etag', '=', '\\'\"xyzzy\"\\'', 'etags', '=', '\\'\"xyzzy\"\\'', 'self.check_url(', \"'\", '/', 'cache', '/', \"'\", '+', 'computed_etag,', 'method', '=', \"'GET',\", 'headers', '=', \"'If\", '-', '-', \"Match',\", 'etags', 'expected_status', '=', '304)', 'test_multiple_strong_etag_match', 'self', 'computed_etag', '=', '\\'\"xyzzy1\"\\'', 'etags', '=', '\\'\"xyzzy1\",', '\"xyzzy2\"\\'', 'self.check_url(', \"'\", '/', 'cache', '/', \"'\", '+', 'computed_etag,', 'method', '=', \"'GET',\", 'headers', '=', \"'If\", '-', '-', \"Match',\", 'etags', 'expected_status', '=', '304)', 'self', 'computed_etag', '=', '\\'\"xyzzy\"\\'', 'etags', '=', '\\'\"xyzzy1\"\\'', 'self.check_url(', \"'\", '/', 'cache', '/', \"'\", '+', 'computed_etag,', 'method', '=', \"'GET',\", 'headers', '=', \"'If\", '-', '-', \"Match',\", 'etags', 'expected_status', '=', '200)', 'self', 'computed_etag', '=', '\\'\"xyzzy\"\\'', 'etags', '=', '\\'\"xyzzy1\",', '\"xyzzy2\"\\'', 'self.check_url(', \"'\", '/', 'cache', '/', \"'\", '+', 'computed_etag,', 'method', '=', \"'GET',\", 'headers', '=', \"'If\", '-', '-', \"Match',\", 'etags', 'expected_status', '=', '200)', 'test_wildcard_etag', 'self', 'computed_etag', '=', '\\'\"xyzzy\"\\'', 'etags', '=', \"'\", '*', \"'\", 'self.check_url(', \"'\", '/', 'cache', '/', \"'\", '+', 'computed_etag,', 'method', '=', \"'GET',\", 'headers', '=', \"'If\", '-', '-', \"Match',\", 'etags', 'expected_status', '=', '304,', '=', 'rs.MISSING_HDRS_304', 'test_weak_etag_match', 'self', 'computed_etag', '=', '\\'\"xyzzy1\"\\'', 'etags', '=', \"'W\", '/', '\"xyzzy1\"\\'', 'self.check_url(', \"'\", '/', 'cache', '/', \"'\", '+', 'computed_etag,', 'method', '=', \"'GET',\", 'headers', '=', \"'If\", '-', '-', \"Match',\", 'etags', 'expected_status', '=', '304)', 'test_multiple_weak_etag_match', 'self', 'computed_etag', '=', '\\'\"xyzzy2\"\\'', 'etags', '=', \"'W\", '/', '\"xyzzy1\",', 'W', '/', '\"xyzzy2\"\\'', 'self.check_url(', \"'\", '/', 'cache', '/', \"'\", '+', 'computed_etag,', 'method', '=', \"'GET',\", 'headers', '=', \"'If\", '-', '-', \"Match',\", 'etags', 'expected_status', '=', '304)', 'self', 'computed_etag', '=', '\\'\"xyzzy2\"\\'', 'etags', '=', \"'W\", '/', '\"xyzzy1\"\\'', 'self.check_url(', \"'\", '/', 'cache', '/', \"'\", '+', 'computed_etag,', 'method', '=', \"'GET',\", 'headers', '=', \"'If\", '-', '-', \"Match',\", 'etags', 'expected_status', '=', '200)', 'self', 'computed_etag', '=', '\\'\"xyzzy3\"\\'', 'etags', '=', \"'W\", '/', '\"xyzzy1\",', 'W', '/', '\"xyzzy2\"\\'', 'self.check_url(', \"'\", '/', 'cache', '/', \"'\", '+', 'computed_etag,', 'method', '=', \"'GET',\", 'headers', '=', \"'If\", '-', '-', \"Match',\", 'etags', 'expected_status', '=', '200)', 'DefaultHTTPTest', 'get_app', 'self', 'Application', '*', '*', 'self.get_app_kwargs', 'GzipHTTPTest', 'get_app', 'self', 'Application', 'gzip', '=', '*', '*', 'self.get_app_kwargs', 'self', 'super', '+', 'rs.VARY_ETAG_DOESNT_CHANGE,', '__name__', '==']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/maint/test/websocket/client.py",
        "vector": "['gen', 'IOLoop', 'options,', 'websocket_connect', \"'url',\", '=', \"'ws\", '/', '/', 'localhost', \"9001')\", \"'name',\", '=', 'run_tests', 'url', '=', 'options.url', '+', \"'\", '/', 'control_ws', '=', 'websocket_connect', 'url,', 'num_tests', '=', 'control_ws.read_message', '%d', 'num_tests)', 'msg', '=', 'control_ws.read_message', 'msg', 'i', 'range', '1,', 'num_tests', '+', '1', 'test', \"%d',\", 'i)', 'url', '=', 'options.url', '+', \"'\", '/', '=', '%', 'd', '&', 'agent', '=', '%', \"s'\", '%', '(i,', 'options.name)', 'test_ws', '=', 'websocket_connect', 'url,', 'compression_options', '=', 'message', '=', 'test_ws.read_message', 'message', 'test_ws.write_message', 'message,', '=', 'message,', 'bytes', 'url', '=', 'options.url', '+', \"'\", '/', '=', '%', \"s'\", '%', 'options.name', 'update_ws', '=', 'websocket_connect', 'url,', 'msg', '=', 'update_ws.read_message', 'msg', '.stop', '.add_callback', 'run_tests)', '.start', '__name__', '==']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/maint/test/websocket/server.py",
        "vector": "['IOLoop', 'options,', 'Application', '=', '9000)', 'on_message', 'self,', 'message', 'self.write_message', 'message,', '=', 'message,', 'bytes', 'get_compression_options', 'self', '{}', '__name__', '==', 'app', '=', 'Application', \"('\", '/', \"',\", '])', 'address', '=', \"'127.0.0.1')\", '.start']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/maint/vm/windows/bootstrap.py",
        "vector": "['r', 'os', 'subprocess', 'sys', 'urllib', 'TMPDIR', '=', \"r'c\", 'PYTHON_VERSIONS', '=', \"(r'c\", \"\\\\python27\\\\python.exe',\", \"'http\", '/', '/', '/', 'ftp', '/', 'python', '/', '2.7.3', '/', 'python', '-', \"2.7.3.msi'\", \"(r'c\", \"\\\\python36\\\\python.exe',\", \"'http\", '/', '/', '/', 'ftp', '/', 'python', '/', '3.6.0', '/', 'python', '-', \"3.6.0.msi'\", 'SCRIPTS_DIR', '=', \"r'c\", \"\\\\python27\\\\scripts'\", 'EASY_INSTALL', '=', 'SCRIPTS_DIR,', 'PY_PACKAGES', '=', \"['tox',\", \"'virtualenv',\", \"'pip']\", 'download_to_cache', 'url,', 'local_name', '=', 'local_name', 'local_name', '=', 'url.split', \"'\", '/', \"'\", '-', '1]', 'filename', '=', 'TMPDIR,', 'local_name)', 'filename', 'data', '=', 'urllib.urlopen', 'url', '.read', 'open', 'filename,', \"'wb')\", 'f:', 'f.write', 'data)', 'filename', 'TMPDIR', 'os.mkdir', 'TMPDIR)', 'os.chdir', 'TMPDIR)', 'exe,', 'url', 'PYTHON_VERSIONS:', 'exe', '\"', '%', 's', 'already', '%', 'exe)', '%s\"', '%', 'url)', 'filename', '=', 'download_to_cache', 'url)', 'subprocess.check_call', \"'msiexec',\", \"'\", '/', \"i',\", 'filename,', \"'ALLUSERS\", '=', \"1',\", \"'\", '/', 'EASY_INSTALL', 'filename', '=', 'download_to_cache', \"'http\", '/', '/', 'python', '-', '/', 'subprocess.check_call', 'sys.executable,', 'filename', 'subprocess.check_call', 'EASY_INSTALL]', '+', 'PY_PACKAGES)', '__name__', '==']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/setup.py",
        "vector": "['os', 'setuptools', 'wheel', '=', 'kwargs', '=', '{}', 'open', '/', 'f:', 'ns', '=', '{}', 'exec', 'f.read', 'ns)', 'version', '=', 'ns', '\"version\"]', 'open', '\"README.rst\")', 'f:', 'kwargs', '\"long_description\"]', '=', 'f.read', 'kwargs', '\"long_description_content_type\"]', '=', '\"text', '/', 'x', '-', 'rst\"', '==', '\"CPython\"', 'os.environ.get', '\"TORNADO_EXTENSION\")', '!=', '\"0\"', '):', 'kwargs', '\"ext_modules\"]', '=', 'setuptools.Extension(', 'sources', '=', '/', 'speedups.c\"', 'optional', '=', 'os.environ.get', '\"TORNADO_EXTENSION\")', '!=', '\"1\",', 'py_limited_api', '=', '=', '\"Py_LIMITED_API\",', '\"0x03080000\"', 'wheel', 'get_tag', 'self', 'python,', 'abi,', 'plat', '=', 'super', '.get_tag', '\"cp\"', '\"cp38\",', '\"abi3\",', 'plat', 'python,', 'abi,', 'plat', 'kwargs', '=', 'setuptools.setup(', 'name', '=', 'version', '=', 'version,', 'python_requires', '=', '\"', '>', '=', '3.8\",', 'packages', '=', 'package_data', '=', '[\"py.typed\"', '\"README\",', '\"csv_translations', '/', 'fr_FR.csv\",', '\"gettext_translations', '/', 'fr_FR', '/', 'LC_MESSAGES', '/', '\"gettext_translations', '/', 'fr_FR', '/', 'LC_MESSAGES', '/', '\"options_test.cfg\",', '\"options_test_types.cfg\",', '\"options_test_types_str.cfg\",', '\"static', '/', 'robots.txt\",', '\"static', '/', 'sample.xml\",', '\"static', '/', 'sample.xml.gz\",', '\"static', '/', 'sample.xml.bz2\",', '\"static', '/', 'dir', '/', '\"static_foo.txt\",', '\"templates', '/', 'utf8.html\",', '\"test.crt\",', '\"test.key\",', '],', '},', '=', '\"Facebook\",', '=', '\"python', '-', '@', 'googlegroups.com\",', 'url', '=', '\"http', '/', '/', '/', '\",', 'project_urls', '=', '\"Source\":', '\"https', '/', '/', 'github.com', '/', '/', '},', 'license', '=', '\"Apache', '-', '2.0\",', 'description', '=', 'a', 'Python', 'web', 'library', '\"', '\"', 'developed', 'at', 'FriendFeed.\"', '),', '=', '\"License', '::', 'OSI', 'Approved', '::', 'Apache', 'Software', 'License\",', 'Language', '::', 'Python', '::', '3\",', 'Language', '::', 'Python', '::', '3.8\",', 'Language', '::', 'Python', '::', '3.9\",', 'Language', '::', 'Python', '::', '3.10\",', 'Language', '::', 'Python', '::', '3.11\",', 'Language', '::', 'Python', '::', 'Implementation', '::', 'CPython\",', 'Language', '::', 'Python', '::', 'Implementation', '::', 'PyPy\",', '],', '*', '*', 'kwargs']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/tornado/__init__.py",
        "vector": "['version', '=', '\"6.4\"', '=', '(6,', '4,', '0,', '0)', '__all__', '=', '\"auth\",', '\"concurrent\",', '\"curl_httpclient\",', '\"escape\",', '\"gen\",', '\"http1connection\",', '\"httpclient\",', '\"httpserver\",', '\"httputil\",', '\"ioloop\",', '\"iostream\",', '\"locale\",', '\"locks\",', '\"log\",', '\"netutil\",', '\"options\",', '\"process\",', '\"queues\",', '\"simple_httpclient\",', '\"tcpclient\",', '\"tcpserver\",', '\"template\",', '\"util\",', '\"web\",', '__getattr__', 'name:', 'str)', '->', 'name', '__all__:', '\".\"', '+', 'name,', '__name__)', 'f\"module', '{__name__!r}', 'no', 'attribute', '{name!r', '\")']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/tornado/_locale_data.py",
        "vector": "['LOCALE_NAMES', '=', '\"af_ZA\":', '{\"name_en\":', '\"Afrikaans\",', '\"name\":', '\"Afrikaans\"', '\"am_ET\":', '{\"name_en\":', '\"Amharic\",', '\"name\":', '\"\u12a0\u121b\u122d\u129b\"', '\"ar_AR\":', '{\"name_en\":', '\"Arabic\",', '\"name\":', '\"\u0627\u0644\u0639\u0631\u0628\u064a\u0629\"', '\"bg_BG\":', '{\"name_en\":', '\"Bulgarian\",', '\"name\":', '\"\u0411\u044a\u043b\u0433\u0430\u0440\u0441\u043a\u0438\"', '\"bn_IN\":', '{\"name_en\":', '\"Bengali\",', '\"name\":', '\"\u09ac\u09be\u0982\u09b2\u09be\"', '\"bs_BA\":', '{\"name_en\":', '\"Bosnian\",', '\"name\":', '\"Bosanski\"', '\"ca_ES\":', '{\"name_en\":', '\"Catalan\",', '\"name\":', '\"Catal\u00e0\"', '\"cs_CZ\":', '{\"name_en\":', '\"Czech\",', '\"name\":', '\"cy_GB\":', '{\"name_en\":', '\"Welsh\",', '\"name\":', '\"Cymraeg\"', '\"da_DK\":', '{\"name_en\":', '\"name\":', '\"Dansk\"', '\"de_DE\":', '{\"name_en\":', '\"German\",', '\"name\":', '\"Deutsch\"', '\"el_GR\":', '{\"name_en\":', '\"Greek\",', '\"name\":', '\"\u0395\u03bb\u03bb\u03b7\u03bd\u03b9\u03ba\u03ac\"', '\"en_GB\":', '{\"name_en\":', '(UK', '\",', '\"name\":', '(UK', '\"', '\"en_US\":', '{\"name_en\":', '(US', '\",', '\"name\":', '(US', '\"', '\"es_ES\":', '{\"name_en\":', '\",', '\"name\":', '\"Espa\u00f1ol', '(Espa\u00f1a', '\"', '\"es_LA\":', '{\"name_en\":', '\"name\":', '\"Espa\u00f1ol\"', '\"et_EE\":', '{\"name_en\":', '\"Estonian\",', '\"name\":', '\"Eesti\"', '\"eu_ES\":', '{\"name_en\":', '\"name\":', '\"Euskara\"', '\"fa_IR\":', '{\"name_en\":', '\"Persian\",', '\"name\":', '\"\u0641\u0627\u0631\u0633\u06cc\"', '\"fi_FI\":', '{\"name_en\":', '\"name\":', '\"Suomi\"', '\"fr_CA\":', '{\"name_en\":', '\"French', '(Canada', '\",', '\"name\":', '(Canada', '\"', '\"fr_FR\":', '{\"name_en\":', '\"French\",', '\"name\":', '\"ga_IE\":', '{\"name_en\":', '\"name\":', '\"Gaeilge\"', '\"gl_ES\":', '{\"name_en\":', '\"Galician\",', '\"name\":', '\"Galego\"', '\"he_IL\":', '{\"name_en\":', '\"Hebrew\",', '\"name\":', '\"\u05e2\u05d1\u05e8\u05d9\u05ea\"', '\"hi_IN\":', '{\"name_en\":', '\"name\":', '\"\u0939\u093f\u0928\u094d\u0926\u0940\"', '\"hr_HR\":', '{\"name_en\":', '\"Croatian\",', '\"name\":', '\"Hrvatski\"', '\"hu_HU\":', '{\"name_en\":', '\"Hungarian\",', '\"name\":', '\"Magyar\"', '\"id_ID\":', '{\"name_en\":', '\"Indonesian\",', '\"name\":', 'Indonesia\"', '{\"name_en\":', '\"name\":', '\"\u00cdslenska\"', '\"it_IT\":', '{\"name_en\":', '\"Italian\",', '\"name\":', '\"Italiano\"', '\"ja_JP\":', '{\"name_en\":', '\"Japanese\",', '\"name\":', '\"\u65e5\u672c\u8a9e\"', '\"ko_KR\":', '{\"name_en\":', '\"name\":', '\"\ud55c\uad6d\uc5b4\"', '\"lt_LT\":', '{\"name_en\":', '\"Lithuanian\",', '\"name\":', '\"Lietuvi\u0173\"', '\"lv_LV\":', '{\"name_en\":', '\"Latvian\",', '\"name\":', '\"Latvie\u0161u\"', '\"mk_MK\":', '{\"name_en\":', '\"Macedonian\",', '\"name\":', '\"\u041c\u0430\u043a\u0435\u0434\u043e\u043d\u0441\u043a\u0438\"', '\"ml_IN\":', '{\"name_en\":', '\"Malayalam\",', '\"name\":', '\"\u0d2e\u0d32\u0d2f\u0d3e\u0d33\u0d02\"', '\"ms_MY\":', '{\"name_en\":', '\"Malay\",', '\"name\":', 'Melayu\"', '\"nb_NO\":', '{\"name_en\":', '(bokmal', '\",', '\"name\":', '(bokm\u00e5l', '\"', '\"nl_NL\":', '{\"name_en\":', '\"Dutch\",', '\"name\":', '\"nn_NO\":', '{\"name_en\":', '\",', '\"name\":', '\"', '\"pa_IN\":', '{\"name_en\":', '\"Punjabi\",', '\"name\":', '\"\u0a2a\u0a70\u0a1c\u0a3e\u0a2c\u0a40\"', '\"pl_PL\":', '{\"name_en\":', '\"name\":', '\"Polski\"', '\"pt_BR\":', '{\"name_en\":', '(Brazil', '\",', '\"name\":', '\"', '\"pt_PT\":', '{\"name_en\":', '\",', '\"name\":', '\"', '\"ro_RO\":', '{\"name_en\":', '\"Romanian\",', '\"name\":', '\"Rom\u00e2n\u0103\"', '\"ru_RU\":', '{\"name_en\":', '\"Russian\",', '\"name\":', '\"\u0420\u0443\u0441\u0441\u043a\u0438\u0439\"', '\"sk_SK\":', '{\"name_en\":', '\"Slovak\",', '\"name\":', '\"sl_SI\":', '{\"name_en\":', '\"Slovenian\",', '\"name\":', '\"sq_AL\":', '{\"name_en\":', '\"Albanian\",', '\"name\":', '\"Shqip\"', '\"sr_RS\":', '{\"name_en\":', '\"Serbian\",', '\"name\":', '\"\u0421\u0440\u043f\u0441\u043a\u0438\"', '\"sv_SE\":', '{\"name_en\":', '\"name\":', '\"Svenska\"', '\"sw_KE\":', '{\"name_en\":', '\"Swahili\",', '\"name\":', '\"ta_IN\":', '{\"name_en\":', '\"Tamil\",', '\"name\":', '\"\u0ba4\u0bae\u0bbf\u0bb4\u0bcd\"', '\"te_IN\":', '{\"name_en\":', '\"Telugu\",', '\"name\":', '\"\u0c24\u0c46\u0c32\u0c41\u0c17\u0c41\"', '\"th_TH\":', '{\"name_en\":', '\"Thai\",', '\"name\":', '\"\u0e20\u0e32\u0e29\u0e32\u0e44\u0e17\u0e22\"', '\"tl_PH\":', '{\"name_en\":', '\"name\":', '\"tr_TR\":', '{\"name_en\":', '\"name\":', '\"T\u00fcrk\u00e7e\"', '\"uk_UA\":', '{\"name_en\":', '\",', '\"name\":', '\"\u0423\u043a\u0440\u0430\u0457\u043d\u0441\u044c\u043a\u0430\"', '\"vi_VN\":', '{\"name_en\":', '\"Vietnamese\",', '\"name\":', '\"Ti\u1ebfng', 'Vi\u1ec7t\"', '\"zh_CN\":', '{\"name_en\":', '\",', '\"name\":', '\"\u4e2d\u6587', '\u7b80\u4f53', '\"', '\"zh_TW\":', '{\"name_en\":', '(Traditional', '\",', '\"name\":', '\"\u4e2d\u6587', '\u7e41\u9ad4', '\"']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/tornado/auth.py",
        "vector": "['hmac', 'time', 'urllib.parse', 'uuid', 'httpclient', 'escape', 'url_concat', 'unicode_type', 'Any,', 'Dict,', 'Iterable,', 'Union,', 'Optional', 'Exception', 'object', 'authenticate_redirect(', 'self,', 'callback_uri:', 'Optional', 'str]', '=', 'ax_attrs:', 'str]', '=', '[\"name\",', '\"email\",', '\"language\",', '\"username\"', '->', '=', 'self)', 'callback_uri', '=', 'callback_uri', 'callback_uri', 'args', '=', 'self._openid_args', 'callback_uri,', 'ax_attrs', '=', 'ax_attrs)', '=', 'self._OPENID_ENDPOINT', '+', '\"?\"', '+', 'urllib.parse.urlencode', 'args', 'get_authenticated_user(', 'self,', 'http_client:', 'Optional', 'httpclient.AsyncHTTPClient]', '=', '->', 'Dict', 'str,', 'Any', '=', 'self)', 'args', '=', 'dict(', '(k,', 'v', '-', '1', 'k,', 'v', 'args', '\"openid.mode\"]', '=', '\"check_authentication\"', 'url', '=', 'self._OPENID_ENDPOINT', 'http_client', 'http_client', '=', 'self.get_auth_http_client', 'resp', '=', 'http_client.fetch(', 'url,', 'method', '=', '\"POST\",', 'body', '=', 'urllib.parse.urlencode', 'args)', 'resp)', '_openid_args(', 'self,', 'callback_uri:', 'str,', 'ax_attrs:', 'Iterable', 'str]', '=', 'oauth_scope:', 'Optional', 'str]', '=', '->', 'Dict', 'str,', 'str', '=', 'self)', 'url', '=', 'callback_uri)', 'args', '=', '\"openid.ns\":', '\"http', '/', '/', 'specs.openid.net', '/', 'auth', '/', '2.0\",', '\"openid.claimed_id\":', '\"http', '/', '/', 'specs.openid.net', '/', 'auth', '/', '2.0', '/', '\"openid.identity\":', '\"http', '/', '/', 'specs.openid.net', '/', 'auth', '/', '2.0', '/', 'url,', '\"openid.realm\":', 'url,', '\"', '/', '\"', '\"openid.mode\":', '\"checkid_setup\",', 'ax_attrs:', 'args.update(', '\"openid.ns.ax\":', '\"http', '/', '/', 'openid.net', '/', 'srv', '/', 'ax', '/', '1.0\",', '\"openid.ax.mode\":', '\"fetch_request\",', 'ax_attrs', '=', 'set', 'ax_attrs)', 'required', '=', '[]', '\"name\"', 'ax_attrs:', 'ax_attrs', '-=', 'set', '\"name\",', '\"firstname\",', '\"fullname\",', 'required', '+=', '[\"firstname\",', '\"fullname\",', 'args.update(', '\"openid.ax.type.firstname\":', '\"http', '/', '/', '/', 'namePerson', '/', 'first\",', '\"openid.ax.type.fullname\":', '\"http', '/', '/', '/', 'namePerson\",', '\"http', '/', '/', '/', 'namePerson', '/', 'known_attrs', '=', '\"email\":', '\"http', '/', '/', '/', 'contact', '/', 'email\",', '\"language\":', '\"http', '/', '/', '/', 'pref', '/', 'language\",', '\"username\":', '\"http', '/', '/', '/', 'namePerson', '/', 'friendly\",', 'name', 'ax_attrs:', 'args', '\"openid.ax.type.\"', '+', 'name]', '=', 'known_attrs', 'name]', 'required.append', 'name)', 'args', '\"openid.ax.required\"]', '=', '\"', 'required)', 'oauth_scope:', 'args.update(', '\"openid.ns.oauth\":', '\"http', '/', '/', 'specs.openid.net', '/', 'extensions', '/', 'oauth', '/', '1.0\",', '\"openid.oauth.consumer\":', '\"', '\"', '0', '\"openid.oauth.scope\":', 'oauth_scope,', 'args', 'self,', 'response:', 'httpclient.HTTPResponse', '->', 'Dict', 'str,', 'Any', '=', 'self)', 'true\"', 'response.body:', '\"Invalid', 'OpenID', 'response:', '%r\"', '%', 'response.body)', 'ax_ns', '=', 'key', '\"openid.ns.\")', 'key)', '==', '\"http', '/', '/', 'openid.net', '/', 'srv', '/', 'ax', '/', '1.0\"', '):', 'ax_ns', '=', 'key', '10', 'get_ax_arg', 'uri:', 'str)', '->', 'str:', 'ax_ns:', '\"\"', 'prefix', '=', '\"openid.\"', '+', 'ax_ns', '+', '\".type.\"', 'ax_name', '=', 'name', 'name)', '==', 'uri', 'prefix', 'part', '=', 'name', 'len', 'prefix)', ':]', 'ax_name', '=', '\"openid.\"', '+', 'ax_ns', '+', '\".value.\"', '+', 'part', 'ax_name:', '\"\"', 'ax_name,', '\"\")', 'email', '=', 'get_ax_arg', '\"http', '/', '/', '/', 'contact', '/', 'email\")', 'name', '=', 'get_ax_arg', '\"http', '/', '/', '/', 'namePerson\")', 'first_name', '=', 'get_ax_arg', '\"http', '/', '/', '/', 'namePerson', '/', 'first\")', '=', 'get_ax_arg', '\"http', '/', '/', '/', 'namePerson', '/', 'username', '=', 'get_ax_arg', '\"http', '/', '/', '/', 'namePerson', '/', 'friendly\")', 'locale', '=', 'get_ax_arg', '\"http', '/', '/', '/', 'pref', '/', 'language\"', '.lower', 'user', '=', 'dict', 'name_parts', '=', '[]', 'first_name:', 'user', '\"first_name\"]', '=', 'first_name', 'name_parts.append', 'first_name)', 'user', '=', 'name_parts.append', 'name:', 'user', '\"name\"]', '=', 'name', 'name_parts:', 'user', '\"name\"]', '=', '\"', 'name_parts)', 'email:', 'user', '\"name\"]', '=', 'email.split', '\"', '@', '\"', '0]', 'email:', 'user', '\"email\"]', '=', 'email', 'locale:', 'user', '\"locale\"]', '=', 'locale', 'username:', 'user', '\"username\"]', '=', 'username', 'claimed_id', '=', '\"openid.claimed_id\",', 'claimed_id:', 'user', '\"claimed_id\"]', '=', 'claimed_id', 'user', 'get_auth_http_client', 'self)', '->', 'httpclient.AsyncHTTPClient:', 'httpclient.AsyncHTTPClient', 'object', 'self,', 'callback_uri:', 'Optional', 'str]', '=', 'extra_params:', 'Optional', 'Dict', 'str,', 'Any', '=', 'http_client:', 'Optional', 'httpclient.AsyncHTTPClient]', '=', '->', 'callback_uri', 'getattr', 'self,', '\"_OAUTH_NO_CALLBACKS\",', 'Exception', 'service', 'does', 'oauth_callback\")', 'http_client', 'http_client', '=', 'self.get_auth_http_client', 'http_client', 'getattr', 'self,', '\"_OAUTH_VERSION\",', '\"1.0a\")', '==', '\"1.0a\":', 'response', '=', 'http_client.fetch(', 'self._oauth_request_token_url(', 'callback_uri', '=', 'callback_uri,', 'extra_params', '=', 'extra_params', 'response', '=', 'http_client.fetch', 'self._oauth_request_token_url', 'url', '=', 'self._OAUTH_AUTHORIZE_URL', 'self._on_request_token', 'url,', 'callback_uri,', 'response)', 'get_authenticated_user(', 'self,', 'http_client:', 'Optional', 'httpclient.AsyncHTTPClient]', '=', '->', 'Dict', 'str,', 'Any', '=', 'self)', 'request_key', '=', 'escape.utf8', '\"oauth_token\"', '=', 'request_cookie', '=', '\"_oauth_request_token\")', 'request_cookie:', 'OAuth', 'request', 'token', 'cookie\")', '\"_oauth_request_token\")', 'cookie_key,', 'cookie_secret', '=', 'escape.utf8', 'i', 'i', 'request_cookie.split', '\"', '|', '\")', 'cookie_key', '!=', 'request_key:', '\"Request', 'token', 'does', 'match', 'cookie\")', 'token', '=', 'dict(', 'key', '=', 'cookie_key,', 'secret', '=', 'cookie_secret', 'token', '=', 'http_client', 'http_client', '=', 'self.get_auth_http_client', 'http_client', 'response', '=', 'http_client.fetch', 'self._oauth_access_token_url', 'token', 'access_token', '=', '_oauth_parse_response', 'response.body)', 'user', '=', 'self._oauth_get_user_future', 'access_token)', 'user:', 'user\")', 'user', '\"access_token\"]', '=', 'access_token', 'user', '_oauth_request_token_url(', 'self,', 'callback_uri:', 'Optional', 'str]', '=', 'extra_params:', 'Optional', 'Dict', 'str,', 'Any', '=', '->', 'str:', '=', 'self)', 'consumer_token', '=', 'self._oauth_consumer_token', 'url', '=', 'self._OAUTH_REQUEST_TOKEN_URL', 'args', '=', 'dict(', 'oauth_consumer_key', '=', 'consumer_token', '\"key\"', 'oauth_signature_method', '=', '\"HMAC', '-', 'SHA1\",', 'oauth_timestamp', '=', 'str', 'time.time', 'oauth_nonce', '=', 'uuid.uuid4', '.bytes', 'oauth_version', '=', '\"1.0\",', 'getattr', 'self,', '\"_OAUTH_VERSION\",', '\"1.0a\")', '==', '\"1.0a\":', 'callback_uri', '==', '\"oob\":', 'args', '\"oauth_callback\"]', '=', '\"oob\"', 'callback_uri:', 'args', '\"oauth_callback\"]', '=', 'callback_uri', 'extra_params:', 'args.update', 'extra_params)', 'signature', '=', '_oauth10a_signature', 'consumer_token,', '\"GET\",', 'url,', 'args)', 'signature', '=', '_oauth_signature', 'consumer_token,', '\"GET\",', 'url,', 'args)', 'args', '\"oauth_signature\"]', '=', 'signature', 'url', '+', '\"?\"', '+', 'urllib.parse.urlencode', 'args)', '_on_request_token(', 'self,', 'str,', 'callback_uri:', 'Optional', 'str', 'response:', 'httpclient.HTTPResponse,', '->', '=', 'self)', 'request_token', '=', '_oauth_parse_response', 'response.body)', 'data', '=', 'escape.utf8', 'request_token', '\"key\"', '+', 'b\"', '|', '\"', '+', 'escape.utf8', 'request_token', '\"secret\"', '\"_oauth_request_token\",', 'data)', 'args', '=', 'dict', 'oauth_token', '=', 'request_token', '\"key\"', 'callback_uri', '==', '\"oob\":', '+', '\"?\"', '+', 'urllib.parse.urlencode', 'args', 'callback_uri:', 'args', '\"oauth_callback\"]', '=', 'callback_uri', '+', '\"?\"', '+', 'urllib.parse.urlencode', 'args', '_oauth_access_token_url', 'self,', 'request_token:', 'Dict', 'str,', 'Any', '->', 'str:', 'consumer_token', '=', 'self._oauth_consumer_token', 'url', '=', 'self._OAUTH_ACCESS_TOKEN_URL', 'args', '=', 'dict(', 'oauth_consumer_key', '=', 'consumer_token', '\"key\"', 'oauth_token', '=', 'request_token', '\"key\"', 'oauth_signature_method', '=', '\"HMAC', '-', 'SHA1\",', 'oauth_timestamp', '=', 'str', 'time.time', 'oauth_nonce', '=', 'uuid.uuid4', '.bytes', 'oauth_version', '=', '\"1.0\",', 'request_token:', 'args', '=', 'request_token', 'getattr', 'self,', '\"_OAUTH_VERSION\",', '\"1.0a\")', '==', '\"1.0a\":', 'signature', '=', '_oauth10a_signature(', 'consumer_token,', '\"GET\",', 'url,', 'args,', 'request_token', 'signature', '=', '_oauth_signature(', 'consumer_token,', '\"GET\",', 'url,', 'args,', 'request_token', 'args', '\"oauth_signature\"]', '=', 'signature', 'url', '+', '\"?\"', '+', 'urllib.parse.urlencode', 'args)', '_oauth_consumer_token', 'self)', '->', 'Dict', 'str,', 'Any', '_oauth_get_user_future(', 'self,', 'access_token:', 'Dict', 'str,', 'Any]', '->', 'Dict', 'str,', 'Any', '_oauth_request_parameters(', 'self,', 'url:', 'str,', 'access_token:', 'Dict', 'str,', 'Any', 'parameters:', 'Dict', 'str,', 'Any]', '=', 'method:', 'str', '=', '\"GET\",', '->', 'Dict', 'str,', 'Any', 'consumer_token', '=', 'self._oauth_consumer_token', '=', 'dict(', 'oauth_consumer_key', '=', 'consumer_token', '\"key\"', 'oauth_token', '=', 'access_token', '\"key\"', 'oauth_signature_method', '=', '\"HMAC', '-', 'SHA1\",', 'oauth_timestamp', '=', 'str', 'time.time', 'oauth_nonce', '=', 'uuid.uuid4', '.bytes', 'oauth_version', '=', '\"1.0\",', 'args', '=', '{}', 'args.update', 'args.update', 'parameters)', 'getattr', 'self,', '\"_OAUTH_VERSION\",', '\"1.0a\")', '==', '\"1.0a\":', 'signature', '=', '_oauth10a_signature(', 'consumer_token,', 'method,', 'url,', 'args,', 'access_token', 'signature', '=', '_oauth_signature(', 'consumer_token,', 'method,', 'url,', 'args,', 'access_token', '\"oauth_signature\"]', '=', 'signature)', 'get_auth_http_client', 'self)', '->', 'httpclient.AsyncHTTPClient:', 'httpclient.AsyncHTTPClient', 'object', 'self,', 'redirect_uri:', 'Optional', 'str]', '=', 'client_id:', 'Optional', 'str]', '=', 'client_secret:', 'Optional', 'str]', '=', 'extra_params:', 'Optional', 'Dict', 'str,', 'Any', '=', 'scope:', 'Optional', 'str', '=', 'response_type:', 'str', '=', '\"code\",', '->', 'client_secret', '\"client_secret', 'argument', 'deprecated\",', '=', 'self)', 'args', '=', '{\"response_type\":', 'response_type}', 'redirect_uri', 'args', '\"redirect_uri\"]', '=', 'redirect_uri', 'client_id', 'args', '\"client_id\"]', '=', 'client_id', 'extra_params:', 'args.update', 'extra_params)', 'scope:', 'args', '\"scope\"]', '=', '\"', 'scope)', 'url', '=', 'self._OAUTH_AUTHORIZE_URL', 'url_concat', 'url,', 'args', '_oauth_request_token_url(', 'self,', 'redirect_uri:', 'Optional', 'str]', '=', 'client_id:', 'Optional', 'str]', '=', 'client_secret:', 'Optional', 'str]', '=', 'code:', 'Optional', 'str]', '=', 'extra_params:', 'Optional', 'Dict', 'str,', 'Any', '=', '->', 'str:', 'url', '=', 'self._OAUTH_ACCESS_TOKEN_URL', 'args', '=', '{}', 'redirect_uri', 'args', '\"redirect_uri\"]', '=', 'redirect_uri', 'code', 'args', '\"code\"]', '=', 'code', 'client_id', 'args', '\"client_id\"]', '=', 'client_id', 'client_secret', 'args', '\"client_secret\"]', '=', 'client_secret', 'extra_params:', 'args.update', 'extra_params)', 'url_concat', 'url,', 'args)', 'oauth2_request(', 'self,', 'url:', 'str,', 'access_token:', 'Optional', 'str]', '=', 'post_args:', 'Optional', 'Dict', 'str,', 'Any', '=', '*', '*', 'args:', 'Any', '->', 'Any:', 'all_args', '=', '{}', 'access_token:', 'all_args', '\"access_token\"]', '=', 'access_token', 'all_args.update', 'args)', 'all_args:', 'url', '+=', '\"?\"', '+', 'urllib.parse.urlencode', 'all_args)', 'http', '=', 'self.get_auth_http_client', 'post_args', 'response', '=', 'http.fetch(', 'url,', 'method', '=', '\"POST\",', 'body', '=', 'urllib.parse.urlencode', 'post_args)', 'response', '=', 'http.fetch', 'url)', 'escape.json_decode', 'response.body)', 'get_auth_http_client', 'self)', '->', 'httpclient.AsyncHTTPClient:', 'httpclient.AsyncHTTPClient', '_OAUTH_REQUEST_TOKEN_URL', '=', '\"https', '/', '/', 'api.twitter.com', '/', 'oauth', '/', 'request_token\"', '_OAUTH_ACCESS_TOKEN_URL', '=', '\"https', '/', '/', 'api.twitter.com', '/', 'oauth', '/', 'access_token\"', '_OAUTH_AUTHORIZE_URL', '=', '\"https', '/', '/', 'api.twitter.com', '/', 'oauth', '/', '_OAUTH_AUTHENTICATE_URL', '=', '\"https', '/', '/', 'api.twitter.com', '/', 'oauth', '/', 'authenticate\"', '_OAUTH_NO_CALLBACKS', '=', '_TWITTER_BASE_URL', '=', '\"https', '/', '/', 'api.twitter.com', '/', '1.1\"', 'authenticate_redirect', 'self,', 'callback_uri:', 'Optional', 'str]', '=', '->', 'http', '=', 'self.get_auth_http_client', 'response', '=', 'http.fetch(', 'self._oauth_request_token_url', 'callback_uri', '=', 'callback_uri)', 'self._on_request_token', 'self._OAUTH_AUTHENTICATE_URL,', 'response)', 'twitter_request(', 'self,', 'path:', 'str,', 'access_token:', 'Dict', 'str,', 'Any', 'post_args:', 'Optional', 'Dict', 'str,', 'Any', '=', '*', '*', 'args:', 'Any', '->', 'Any:', '\"http', '\")', '\"https', '\"', 'url', '=', 'path', 'url', '=', 'self._TWITTER_BASE_URL', '+', 'path', '+', '\".json\"', 'access_token:', 'all_args', '=', '{}', 'all_args.update', 'args)', 'all_args.update', 'post_args', 'method', '=', '\"POST\"', 'post_args', '\"GET\"', 'oauth', '=', 'self._oauth_request_parameters(', 'url,', 'access_token,', 'all_args,', 'method', '=', 'method', 'args.update', 'oauth)', 'args:', 'url', '+=', '\"?\"', '+', 'urllib.parse.urlencode', 'args)', 'http', '=', 'self.get_auth_http_client', 'post_args', 'response', '=', 'http.fetch(', 'url,', 'method', '=', '\"POST\",', 'body', '=', 'urllib.parse.urlencode', 'post_args)', 'response', '=', 'http.fetch', 'url)', 'escape.json_decode', 'response.body)', '_oauth_consumer_token', 'self)', '->', 'Dict', 'str,', 'Any', '=', 'self)', '\"twitter_consumer_key\",', '\"Twitter', 'OAuth\")', '\"twitter_consumer_secret\",', '\"Twitter', 'OAuth\")', 'dict(', 'key', '=', '\"twitter_consumer_key\"', 'secret', '=', '\"twitter_consumer_secret\"', '_oauth_get_user_future(', 'self,', 'access_token:', 'Dict', 'str,', 'Any]', '->', 'Dict', 'str,', 'Any', 'user', '=', 'self.twitter_request(', '\"', '/', 'account', '/', 'access_token', '=', 'access_token', 'user:', 'user', '\"username\"]', '=', 'user', '\"screen_name\"]', 'user', '_OAUTH_AUTHORIZE_URL', '=', '\"https', '/', '/', 'accounts.google.com', '/', 'o', '/', 'oauth2', '/', 'v2', '/', 'auth\"', '_OAUTH_ACCESS_TOKEN_URL', '=', '\"https', '/', '/', '/', 'oauth2', '/', 'v4', '/', 'token\"', '_OAUTH_USERINFO_URL', '=', '\"https', '/', '/', '/', 'oauth2', '/', 'v1', '/', '_OAUTH_NO_CALLBACKS', '=', '_OAUTH_SETTINGS_KEY', '=', '\"google_oauth\"', 'self)', '->', 'Dict', 'str,', 'str', '=', 'self)', 'self._OAUTH_SETTINGS_KEY]', 'get_authenticated_user(', 'self,', 'redirect_uri:', 'str,', 'code:', 'str,', 'client_id:', 'Optional', 'str]', '=', 'client_secret:', 'Optional', 'str]', '=', '->', 'Dict', 'str,', 'Any', 'client_id', 'client_secret', '=', 'client_id', 'client_id', '=', '\"key\"]', 'client_secret', 'client_secret', '=', '\"secret\"]', 'http', '=', 'self.get_auth_http_client', 'body', '=', 'urllib.parse.urlencode(', '\"redirect_uri\":', 'redirect_uri,', '\"code\":', 'code,', '\"client_id\":', 'client_id,', '\"client_secret\":', 'client_secret,', '\"grant_type\":', 'response', '=', 'http.fetch(', 'self._OAUTH_ACCESS_TOKEN_URL,', 'method', '=', '\"POST\",', 'headers', '=', '\"Content', '-', 'Type\":', '\"application', '/', 'x', '-', 'www', '-', '-', 'urlencoded\"', 'body', '=', 'body,', 'escape.json_decode', 'response.body)', '_OAUTH_ACCESS_TOKEN_URL', '=', '\"https', '/', '/', 'graph.facebook.com', '/', 'oauth', '/', 'access_token?\"', '_OAUTH_AUTHORIZE_URL', '=', '\"https', '/', '/', 'www.facebook.com', '/', 'dialog', '/', 'oauth?\"', '_OAUTH_NO_CALLBACKS', '=', '_FACEBOOK_BASE_URL', '=', '\"https', '/', '/', 'graph.facebook.com\"', 'get_authenticated_user(', 'self,', 'redirect_uri:', 'str,', 'client_id:', 'str,', 'client_secret:', 'str,', 'code:', 'str,', 'extra_fields:', 'Optional', 'Dict', 'str,', 'Any', '=', '->', 'Optional', 'Dict', 'str,', 'Any', 'http', '=', 'self.get_auth_http_client', 'args', '=', '\"redirect_uri\":', 'redirect_uri,', '\"code\":', 'code,', '\"client_id\":', 'client_id,', '\"client_secret\":', 'client_secret,', 'fields', '=', 'set(', '[\"id\",', '\"name\",', '\"first_name\",', '\"locale\",', '\"picture\",', 'extra_fields:', 'fields.update', 'extra_fields)', 'response', '=', 'http.fetch(', 'self._oauth_request_token_url', '**', 'args)', 'args', '=', 'escape.json_decode', 'response.body)', 'session', '=', '\"access_token\":', 'args.get', '\"access_token\"', 'args.get', 'session', '\"access_token\"]', 'user', '=', 'self.facebook_request(', 'path', '=', '\"', '/', 'me\",', 'access_token', '=', 'session', '\"access_token\"', 'appsecret_proof', '=', 'hmac.new(', 'key', '=', 'client_secret.encode', '\"utf8\"', 'msg', '=', 'session', '\"access_token\"', '.encode', '\"utf8\"', 'digestmod', '=', ').hexdigest', 'fields', '=', '\"', 'fields', 'user', 'fieldmap', '=', '{}', 'field', 'fields:', 'fieldmap', 'field]', '=', 'user.get', 'field)', 'fieldmap.update(', '\"access_token\":', 'session', '\"access_token\"', '\"session_expires\":', 'str', 'session.get', 'fieldmap', 'facebook_request(', 'self,', 'path:', 'str,', 'access_token:', 'Optional', 'str]', '=', 'post_args:', 'Optional', 'Dict', 'str,', 'Any', '=', '*', '*', 'args:', 'Any', '->', 'Any:', 'url', '=', 'self._FACEBOOK_BASE_URL', '+', 'path', 'self.oauth2_request(', 'url,', 'access_token', '=', 'access_token,', 'post_args', '=', 'post_args,', '*', '*', 'args', '_oauth_signature(', 'consumer_token:', 'Dict', 'str,', 'Any', 'method:', 'str,', 'url:', 'str,', 'parameters:', 'Dict', 'str,', 'Any]', '=', 'token:', 'Optional', 'Dict', 'str,', 'Any', '=', '->', 'bytes:', 'parts', '=', 'urllib.parse.urlparse', 'url)', 'scheme,', 'netloc,', 'path', '=', 'parts', '3]', '=', 'scheme.lower', '+', '\"', '/', '/', '\"', '+', 'netloc.lower', '+', 'path', '=', '[]', 'method.upper', '\"', '&', '\"', '%', 's', '=', '%', 's\"', '%', '(k,', '_oauth_escape', 'str', 'v', 'k,', 'v', 'parameters.items', '=', '\"', '&', '_oauth_escape', 'e)', 'e', 'key_elems', '=', '[escape.utf8', 'consumer_token', '\"secret\"', 'key_elems.append', 'escape.utf8', 'token', '\"secret\"]', 'token', '\"\"', 'key', '=', 'b\"', '&', 'key_elems)', '=', 'hmac.new', 'key,', 'escape.utf8', '-', '1]', '_oauth10a_signature(', 'consumer_token:', 'Dict', 'str,', 'Any', 'method:', 'str,', 'url:', 'str,', 'parameters:', 'Dict', 'str,', 'Any]', '=', 'token:', 'Optional', 'Dict', 'str,', 'Any', '=', '->', 'bytes:', 'parts', '=', 'urllib.parse.urlparse', 'url)', 'scheme,', 'netloc,', 'path', '=', 'parts', '3]', '=', 'scheme.lower', '+', '\"', '/', '/', '\"', '+', 'netloc.lower', '+', 'path', '=', '[]', 'method.upper', '\"', '&', '\"', '%', 's', '=', '%', 's\"', '%', '(k,', '_oauth_escape', 'str', 'v', 'k,', 'v', 'parameters.items', '=', '\"', '&', '_oauth_escape', 'e)', 'e', 'key_elems', '=', '[escape.utf8', 'urllib.parse.quote', 'consumer_token', '\"secret\"', 'safe', '=', '\"', '~', '\"', 'key_elems.append(', 'escape.utf8', 'urllib.parse.quote', 'token', '\"secret\"', 'safe', '=', '\"', '~', '\")', 'token', '\"\")', 'key', '=', 'b\"', '&', 'key_elems)', '=', 'hmac.new', 'key,', 'escape.utf8', '-', '1]', '_oauth_escape', 'val:', 'Union', 'str,', 'bytes', '->', 'str:', 'val,', 'unicode_type', 'val', '=', 'val.encode', '\"utf', '-', '8\")', 'urllib.parse.quote', 'val,', 'safe', '=', '\"', '~', '\")', '_oauth_parse_response', 'body:', 'bytes)', '->', 'Dict', 'str,', 'Any', 'body_str', '=', 'escape.native_str', 'body)', 'p', '=', 'urllib.parse.parse_qs', 'body_str,', 'keep_blank_values', '=', 'token', '=', 'dict', 'key', '=', 'p', '\"oauth_token\"', '0', 'secret', '=', 'p', '\"oauth_token_secret\"', '0', 'special', '=', '(\"oauth_token\",', '\"oauth_token_secret\")', 'token.update', 'k,', 'p', 'k', '0', 'k', 'p', 'k', 'special)', 'token']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/tornado/autoreload.py",
        "vector": "['os', 'sys', '__name__', '==', 'sys.path', '0]', '==', 'os.path.dirname', '__file__', 'sys.path', '0]', 'functools', 'os', 'pkgutil', 'sys', 'traceback', 'types', 'subprocess', 'weakref', 'ioloop', 'gen_log', 'process', 'signal', 'signal', '=', 'Callable,', 'Dict,', 'Optional,', 'Union', '=', '!=', '_watched_files', '=', 'set', '_reload_hooks', '=', '[]', '_reload_attempted', '=', '_io_loops:', '\"weakref.WeakKeyDictionary', 'ioloop.IOLoop,', 'bool', '\"', '=', 'weakref.WeakKeyDictionary', '=', 'Optional', 'str', '=', '=', 'start', 'check_time:', '=', '500)', '->', 'io_loop', '=', 'ioloop.IOLoop.current', 'io_loop', '_io_loops:', '_io_loops', 'io_loop]', '=', 'len', '_io_loops)', '>', '1:', 'started', 'than', 'once', 'the', 'same', 'process\")', 'Dict', 'str,', 'float]', '=', '{}', 'callback', '=', 'functools.partial', '_reload_on_update,', 'scheduler', '=', 'ioloop.PeriodicCallback', 'callback,', 'check_time)', 'scheduler.start', 'wait', '->', 'io_loop', '=', 'ioloop.IOLoop', 'io_loop.add_callback', 'start)', 'io_loop.start', 'watch', 'filename:', 'str)', '->', '_watched_files.add', 'filename)', 'add_reload_hook', 'fn:', 'Callable', '->', '_reload_hooks.append', 'fn)', '_reload_on_update', 'Dict', 'str,', 'float', '->', '_reload_attempted:', 'module', 'sys.modules.values', 'module,', 'types.ModuleType', 'path', '=', 'getattr', 'module,', '\"__file__\",', 'path:', '\".pyc\")', '\".pyo\"', 'path', '=', 'path', '-', '1]', '_check_file', 'path)', 'path', '_watched_files:', '_check_file', 'path)', '_check_file', 'Dict', 'str,', 'float', 'path:', 'str)', '->', '=', 'os.stat', 'path', '.st_mtime', 'Exception:', 'path', 'path]', '=', 'path]', '!=', '\"', '%', 's', 'server\",', 'path)', '_reload', '_reload', '->', '_reload_attempted', '_reload_attempted', '=', 'fn', '_reload_hooks:', 'fn', '!=', 'signal.setitimer', 'signal.ITIMER_REAL,', '0,', '0)', 'spec', '=', 'argv', '=', 'spec', '=', 'getattr', 'sys.modules', '\"__spec__\",', 'argv', '=', 'sys.argv', 'spec', 'spec.name', '!=', 'argv', '=', '[\"', '-', 'm\",', 'spec.name]', '+', 'argv', '1', 'subprocess.Popen', 'sys.executable]', '+', 'argv)', 'os._exit', '0)', 'os.execv', 'sys.executable,', '[sys.executable]', '+', 'argv)', '_USAGE', '=', '->', 'optparse', '=', '=', '=', 'sys.argv', '=', '=', '=', 'getattr', 'sys.modules', '\"__spec__\",', '=', '=', 'parser', '=', 'optparse.OptionParser(', 'prog', '=', '\"python', '-m', 'usage', '=', '_USAGE,', 'epilog', '=', '\"Either', '-m', 'a', 'path', 'must', 'be', 'but', 'both\",', 'parser.add_option', '\"', '-', 'm\",', 'dest', '=', '\"module\",', 'metavar', '=', '\"module\",', 'help', '=', '\"module', 'to', 'run\")', 'parser.add_option(', '\"', '--', 'until', '-', 'success\",', 'action', '=', 'help', '=', '\"stop', 'after', 'the', 'program', 'successfully', '(status', 'code', '0', '\",', 'opts,', 'rest', '=', 'parser.parse_args', 'opts.module', 'rest:', '\"Either', '-m', 'a', 'path', 'must', 'be', 'file', '=', 'sys.stderr)', 'sys.exit', '1)', 'path', '=', 'rest', '0]', 'sys.argv', '=', 'rest', 'path', '=', 'sys.argv', '=', '[sys.argv', '0', '+', 'rest', 'exit_status:', 'Union', 'str,', '=', '1', 'runpy', 'opts.module', 'runpy.run_module', 'opts.module,', 'run_name', '=', 'alter_sys', '=', 'path', 'runpy.run_path', 'path,', 'run_name', '=', 'SystemExit', 'e:', 'exit_status', '=', 'e.code', '\"Script', 'exited', 'status', '%s\",', 'e.code)', 'Exception', 'e:', '\"Script', 'exited', 'uncaught', '=', 'filename,', 'name,', 'traceback.extract_tb', '2', 'watch', 'filename)', 'e,', 'e.filename', 'watch', 'e.filename)', 'exit_status', '=', '0', '\"Script', 'exited', 'sys.argv', '=', 'opts.module', 'opts.module', 'loader', '=', 'pkgutil.get_loader', 'opts.module)', 'loader', 'loader,', 'watch', 'loader.get_filename', 'opts.until_success', 'exit_status:', 'wait', '__name__', '==']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/tornado/concurrent.py",
        "vector": "['concurrent', 'futures', 'functools', 'sys', 'types', 'app_log', 'Any,', 'Callable,', 'Optional,', 'Tuple,', 'Union', '_T', '=', '\"_T\")', 'Exception', 'Future', '=', 'FUTURES', '=', '(futures.Future,', 'Future)', 'x:', 'Any)', '->', 'bool:', 'x,', 'FUTURES)', 'submit(', 'self,', 'fn:', 'Callable', '...,', '_T', '*args:', 'Any,', '*', '*', 'kwargs:', 'Any', '->', '\"futures.Future', '_T', '\":', 'future', '=', 'futures.Future', 'future_set_result_unless_cancelled', 'future,', 'fn', '*', 'args,', '*', '*', 'kwargs', 'Exception:', 'future,', 'future', '>=', '(3,', '9', 'shutdown', 'self,', 'wait:', 'bool', '=', 'cancel_futures:', 'bool', '=', '->', 'shutdown', 'self,', 'wait:', 'bool', '=', '->', '=', '*', 'args:', 'Any,', '*', '*', 'kwargs:', 'Any)', '->', 'Callable:', 'fn:', 'Callable)', '->', 'Callable', '...,', 'Future', '=', 'kwargs.get', '@functools.wraps', 'fn)', 'wrapper', 'self:', 'Any,', '*args:', 'Any,', '*', '*', 'kwargs:', 'Any)', '->', 'Future:', '=', 'Future', 'conc_future', '=', 'getattr', 'self,', '.submit', 'fn,', 'self,', '*args,', '*', '*', 'kwargs)', 'conc_future,', 'wrapper', 'args', 'kwargs:', 'positional', 'args\")', 'len', 'args)', '==', '1:', 'args', '0', 'len', 'args)', '!=', '0:', '\"expected', '1', 'argument,', 'got', '%d\",', 'len', 'args', '_NO_RESULT', '=', 'object', 'a:', '\"Future', '_T', '\",', 'b:', '\"Future', '_T', '\")', '->', 'copy', 'a:', '\"Future', '_T', '\")', '->', 'b.done', 'a,', 'b,', 'a_exc', '=', 'a_exc', 'a_exc)', 'b.set_result', 'a.result', 'a,', 'Future', 'future_add_done_callback', 'a,', 'copy)', 'IOLoop', 'IOLoop.current', '.add_future', 'a,', 'copy)', 'future_set_result_unless_cancelled(', 'future:', '\"Union', 'futures.Future', '_T', 'Future', '_T', '\",', 'value:', '_T', '->', 'future.cancelled', 'future.set_result', 'value)', 'future:', '\"Union', 'futures.Future', '_T', 'Future', '_T', '\",', 'exc:', '->', 'future.cancelled', 'exc)', '\"Exception', 'after', 'Future', 'cancelled\",', '=', 'exc)', 'future:', '\"Union', 'futures.Future', '_T', 'Future', '_T', '\",', 'Tuple[', 'Optional', 'type', 'Optional', 'Optional', 'types.TracebackType]', '],', '->', '1]', 'Exception', 'called', 'no', 'future,', '1', 'future_add_done_callback(', 'future:', '\"futures.Future', '_T', '\",', 'callback:', 'Callable', '\"futures.Future', '_T', '\"', '->', 'future_add_done_callback(', 'future:', '\"Future', '_T', '\",', 'callback:', 'Callable', '\"Future', '_T', '\"', '->', 'future_add_done_callback(', 'future:', '\"Union', 'futures.Future', '_T', 'Future', '_T', '\",', 'callback:', 'Callable', '...,', '->', 'future.done', 'callback', 'future)', 'future.add_done_callback', 'callback)']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/tornado/curl_httpclient.py",
        "vector": "['collections', 'functools', 'pycurl', 'time', 'io', 'BytesIO', 'httputil', 'ioloop', 'utf8,', 'native_str', 'HTTPRequest,', 'HTTPResponse,', 'AsyncHTTPClient,', 'app_log', 'Dict,', 'Any,', 'Callable,', 'Union,', 'Optional', 'Deque,', 'Tuple', 'curl_log', '=', 'CurlAsyncHTTPClient', 'AsyncHTTPClient', 'self,', 'max_clients:', '=', '10,', 'Optional', 'Dict', 'str,', 'Any', '=', '->', 'super', '=', 'self._multi', '=', 'pycurl.CurlMulti', 'self._multi.setopt', 'pycurl.M_TIMERFUNCTION,', 'self._set_timeout)', 'self._multi.setopt', 'pycurl.M_SOCKETFUNCTION,', 'self._curls', '=', '[self._curl_create', 'i', 'range', 'max_clients', '=', 'self._curls', 'self._requests', '=', 'collections.deque', 'self._fds', '=', '{}', 'self._timeout', '=', '=', 'ioloop.PeriodicCallback(', '1000', '=', 'pycurl.Curl', 'close', 'self)', '->', 'self._timeout', 'self.io_loop.remove_timeout', 'self._timeout)', 'curl', 'self._curls:', 'curl.close', 'self._multi.close', 'super', '.close', '=', 'self._multi', '=', 'fetch_impl(', 'self,', 'request:', 'HTTPRequest,', 'callback:', 'Callable', 'HTTPResponse', '->', 'self._requests.append', 'request,', 'callback,', 'self.io_loop.time', 'self._process_queue', 'self._set_timeout', '0)', 'self,', 'event:', 'fd:', 'multi:', 'Any,', 'data:', 'bytes)', '->', 'event_map', '=', 'pycurl.POLL_NONE:', 'ioloop.IOLoop.NONE,', 'pycurl.POLL_IN:', 'ioloop.IOLoop.READ,', 'pycurl.POLL_OUT:', 'ioloop.IOLoop.WRITE,', 'pycurl.POLL_INOUT:', 'ioloop.IOLoop.READ', '|', 'ioloop.IOLoop.WRITE,', 'event', '==', 'pycurl.POLL_REMOVE:', 'fd', 'self._fds:', 'fd)', 'self._fds', 'fd]', 'ioloop_event', '=', 'event_map', 'event]', 'fd', 'self._fds:', 'fd)', 'fd,', 'ioloop_event)', 'self._fds', 'fd]', '=', 'ioloop_event', '_set_timeout', 'self,', 'msecs:', '->', 'self._timeout', 'self.io_loop.remove_timeout', 'self._timeout)', 'self._timeout', '=', 'self.io_loop.add_timeout(', 'self.io_loop.time', '+', 'msecs', '/', '1000.0,', 'self,', 'fd:', 'events:', '->', 'action', '=', '0', 'events', '&', 'ioloop.IOLoop.READ:', 'action', '|=', 'pycurl.CSELECT_IN', 'events', '&', 'ioloop.IOLoop.WRITE:', 'action', '|=', 'pycurl.CSELECT_OUT', 'ret,', '=', 'self._multi.socket_action', 'fd,', 'action)', 'e:', 'ret', '=', 'e.args', '0]', 'ret', '!=', 'pycurl.E_CALL_MULTI_PERFORM:', 'self)', '->', 'self._timeout', '=', 'ret,', '=', 'self._multi.socket_action', 'pycurl.SOCKET_TIMEOUT,', '0)', 'e:', 'ret', '=', 'e.args', '0]', 'ret', '!=', 'pycurl.E_CALL_MULTI_PERFORM:', 'new_timeout', '=', 'self._multi.timeout', 'new_timeout', '>=', '0:', 'self._set_timeout', 'new_timeout)', 'self)', '->', 'ret,', '=', 'self._multi.socket_all', 'e:', 'ret', '=', 'e.args', '0]', 'ret', '!=', 'pycurl.E_CALL_MULTI_PERFORM:', 'self)', '->', 'num_q,', '=', 'curl', 'curl)', 'curl,', 'errnum,', 'errmsg', 'curl,', 'errnum,', 'errmsg)', 'num_q', '==', '0:', 'self._process_queue', '_process_queue', 'self)', '->', 'started', '=', '0', 'self._requests:', 'started', '+=', '1', 'curl', '=', '(request,', 'callback,', 'queue_start_time)', '=', 'self._requests.popleft', '=', '\"headers\":', 'httputil.HTTPHeaders', '\"buffer\":', 'BytesIO', '\"request\":', 'request,', '\"callback\":', 'callback,', '\"queue_start_time\":', 'queue_start_time,', '\"curl_start_time\":', 'time.time', '\"curl_start_ioloop_time\":', 'self.io_loop.current', '.time', 'self._curl_setup_request(', 'curl,', 'request,', '\"buffer\"', '\"headers\"', 'Exception', 'e:', 'curl)', 'callback', 'HTTPResponse', 'request', '=', 'request,', 'code', '=', '599,', '=', 'e', 'curl)', 'started:', 'self,', 'curl:', 'pycurl.Curl,', 'Optional', '=', 'curl_message:', 'Optional', 'str]', '=', '->', '=', '=', 'curl)', 'curl)', 'buffer', '=', '\"buffer\"]', 'curl_message', '=', 'curl_message)', 'code', '=', 'effective_url', '=', 'buffer.close', 'buffer', '=', '=', 'code', '=', 'pycurl.HTTP_CODE)', 'effective_url', '=', 'pycurl.EFFECTIVE_URL)', 'buffer.seek', '0)', '=', 'dict(', 'queue', '=', '\"curl_start_ioloop_time\"]', '-', '\"queue_start_time\"', 'namelookup', '=', 'pycurl.NAMELOOKUP_TIME', 'connect', '=', 'pycurl.CONNECT_TIME', 'appconnect', '=', 'pycurl.APPCONNECT_TIME', 'pretransfer', '=', 'pycurl.PRETRANSFER_TIME', 'starttransfer', '=', 'pycurl.STARTTRANSFER_TIME', 'total', '=', 'pycurl.TOTAL_TIME', 'redirect', '=', 'pycurl.REDIRECT_TIME', '\"callback\"', 'HTTPResponse(', 'request', '=', '\"request\"', 'code', '=', 'code,', 'headers', '=', '\"headers\"', 'buffer', '=', 'buffer,', 'effective_url', '=', 'effective_url,', '=', '=', '\"headers\"', '.get', '\"X', '-', 'Http', '-', 'request_time', '=', 'self.io_loop.time', '-', '\"curl_start_ioloop_time\"', 'start_time', '=', '\"curl_start_time\"', '=', 'Exception:', '\"callback\"', 'self,', 'callback:', 'Any)', '->', '\"Exception', 'callback', '%r\",', 'callback,', '=', '_curl_create', 'self)', '->', 'pycurl.Curl:', 'curl', '=', 'pycurl.Curl', 'curl.setopt', 'pycurl.VERBOSE,', '1)', 'curl.setopt', 'pycurl.DEBUGFUNCTION,', 'self._curl_debug)', 'pycurl,', '\"PROTOCOLS\"', '):', 'curl.setopt', 'pycurl.PROTOCOLS,', 'pycurl.PROTO_HTTP', '|', 'pycurl.PROTO_HTTPS)', 'curl.setopt', 'pycurl.REDIR_PROTOCOLS,', 'pycurl.PROTO_HTTP', '|', 'pycurl.PROTO_HTTPS)', 'curl', '_curl_setup_request(', 'self,', 'curl:', 'pycurl.Curl,', 'request:', 'HTTPRequest,', 'buffer:', 'BytesIO,', 'headers:', 'httputil.HTTPHeaders,', '->', 'curl.setopt', 'pycurl.URL,', 'native_str', 'request.url', '\"Expect\"', 'request.headers:', 'request.headers', '\"Expect\"]', '=', '\"\"', '\"Pragma\"', 'request.headers:', 'request.headers', '\"Pragma\"]', '=', '\"\"', 'curl.setopt(', 'pycurl.HTTPHEADER,', 'b\"', '%', 's:', '%s\"', '%', '(native_str', 'k', '.encode', '\"ASCII\"', 'native_str', 'v', '.encode', '\"ISO8859', '-', '1\"', 'k,', 'v', 'request.headers.get_all', '],', 'curl.setopt(', 'pycurl.HEADERFUNCTION,', 'functools.partial(', 'self._curl_header_callback,', 'headers,', 'request.header_callback', '),', 'write_function', 'b:', 'Union', 'bytes,', 'bytearray', '->', 'self.io_loop.add_callback', 'b)', 'len', 'b)', 'write_function', '=', 'buffer.write', 'curl.setopt', 'pycurl.WRITEFUNCTION,', 'write_function)', 'curl.setopt', 'pycurl.FOLLOWLOCATION,', 'request.follow_redirects)', 'curl.setopt', 'pycurl.MAXREDIRS,', 'request.max_redirects)', 'request.connect_timeout', 'curl.setopt', 'pycurl.CONNECTTIMEOUT_MS,', '1000', '*', 'request.connect_timeout', 'request.request_timeout', 'curl.setopt', 'pycurl.TIMEOUT_MS,', '1000', '*', 'request.request_timeout', 'request.user_agent:', 'curl.setopt', 'pycurl.USERAGENT,', 'native_str', 'request.user_agent', 'curl.setopt', 'pycurl.USERAGENT,', '\"Mozilla', '/', '5.0', '(compatible;', 'pycurl', '\")', 'curl.setopt', 'pycurl.INTERFACE,', 'request.decompress_response:', 'curl.setopt', 'pycurl.ENCODING,', '\"gzip', 'curl.setopt', 'pycurl.ENCODING,', 'request.proxy_host', 'curl.setopt', 'pycurl.PROXY,', 'request.proxy_host)', 'curl.setopt', 'pycurl.PROXYPORT,', 'request.proxy_username:', 'credentials', '=', 'request.proxy_username,', 'curl.setopt', 'pycurl.PROXYUSERPWD,', 'credentials)', 'request.proxy_auth_mode', 'request.proxy_auth_mode', '==', 'curl.setopt', 'pycurl.PROXYAUTH,', 'pycurl.HTTPAUTH_BASIC)', 'request.proxy_auth_mode', '==', '\"digest\":', 'curl.setopt', 'pycurl.PROXYAUTH,', 'pycurl.HTTPAUTH_DIGEST)', 'proxy_auth_mode', '%s\"', '%', 'request.proxy_auth_mode', 'curl.unsetopt', 'pycurl.PROXY)', 'curl.setopt', 'pycurl.PROXY,', '\"\")', 'curl.unsetopt', 'pycurl.PROXYUSERPWD)', 'request.validate_cert:', 'curl.setopt', 'pycurl.SSL_VERIFYPEER,', '1)', 'curl.setopt', 'pycurl.SSL_VERIFYHOST,', '2)', 'curl.setopt', 'pycurl.SSL_VERIFYPEER,', '0)', 'curl.setopt', 'pycurl.SSL_VERIFYHOST,', '0)', 'request.ca_certs', 'curl.setopt', 'pycurl.CAINFO,', 'request.ca_certs)', 'request.allow_ipv6', 'curl.setopt', 'pycurl.IPRESOLVE,', 'pycurl.IPRESOLVE_V4)', 'curl.setopt', 'pycurl.IPRESOLVE,', 'pycurl.IPRESOLVE_WHATEVER)', 'curl_options', '=', '\"GET\":', 'pycurl.HTTPGET,', '\"POST\":', 'pycurl.POST,', '\"PUT\":', 'pycurl.UPLOAD,', '\"HEAD\":', 'pycurl.NOBODY,', 'custom_methods', '=', 'set', '\"DELETE\",', '\"OPTIONS\",', '\"PATCH\"', 'o', 'curl_options.values', 'curl.setopt', 'o,', 'request.method', 'curl_options:', 'curl.unsetopt', 'pycurl.CUSTOMREQUEST)', 'curl.setopt', 'curl_options', 'request.method', 'request.method', 'custom_methods:', 'curl.setopt', 'pycurl.CUSTOMREQUEST,', 'request.method)', '\"unknown', 'method', '\"', '+', 'request.method)', 'body_expected', '=', 'request.method', '(\"POST\",', '\"PATCH\",', '\"PUT\")', 'body_present', '=', 'request.body', '(body_expected', 'body_present)', 'body_present', 'body_expected', '):', '\"Body', 'must', '%sbe', 'method', '%s', '(unless', '\"', 'true', '\"', '%', '\"', 'body_expected', '\"\",', 'request.method)', 'body_expected', 'body_present:', 'request.method', '==', '\"GET\":', '\"Body', 'must', 'be', 'GET', 'request\")', 'request_buffer', '=', 'BytesIO', 'utf8', 'request.body', '\"\"', 'ioctl', 'cmd:', '->', 'cmd', '==', 'curl.IOCMD_RESTARTREAD:', 'request_buffer.seek', '0)', 'curl.setopt', 'pycurl.READFUNCTION,', 'request_buffer.read)', 'curl.setopt', 'pycurl.IOCTLFUNCTION,', 'ioctl)', 'request.method', '==', '\"POST\":', 'curl.setopt', 'pycurl.POSTFIELDSIZE,', 'len', 'request.body', '\"\"', 'curl.setopt', 'pycurl.UPLOAD,', 'curl.setopt', 'pycurl.INFILESIZE,', 'len', 'request.body', '\"\"', 'request.auth_username', 'request.auth_mode', 'request.auth_mode', '==', 'curl.setopt', 'pycurl.HTTPAUTH,', 'pycurl.HTTPAUTH_BASIC)', 'request.auth_mode', '==', '\"digest\":', 'curl.setopt', 'pycurl.HTTPAUTH,', 'pycurl.HTTPAUTH_DIGEST)', 'auth_mode', '%s\"', '%', 'request.auth_mode)', 'userpwd', '=', 'request.auth_username,', 'curl.setopt', 'pycurl.USERPWD,', 'userpwd)', 'curl_log.debug(', '\"', '%', 's', '%s', '(username:', '%r', '\",', 'request.method,', 'request.url,', 'request.auth_username,', 'curl.unsetopt', 'pycurl.USERPWD)', 'curl_log.debug', '\"', '%', 's', '%s\",', 'request.method,', 'request.url)', 'request.client_cert', 'curl.setopt', 'pycurl.SSLCERT,', 'request.client_cert)', 'request.client_key', 'curl.setopt', 'pycurl.SSLKEY,', 'request.client_key)', 'request.ssl_options', '\"ssl_options', 'curl_httpclient\")', '>', '1:', 'curl.setopt', 'pycurl.NOSIGNAL,', '1)', 'request.prepare_curl_callback', 'request.prepare_curl_callback', 'curl)', '_curl_header_callback(', 'self,', 'headers:', 'httputil.HTTPHeaders,', 'header_callback:', 'Callable', 'str', 'bytes,', '->', '=', 'native_str', 'header_callback', 'self.io_loop.add_callback', 'header_callback,', '=', '\"HTTP', '/', '\"', 'headers.clear', '(__,', '__,', '=', '=', '\"X', '-', 'Http', '-', '%s\"', '%', '_curl_debug', 'self,', 'debug_type:', 'debug_msg:', 'str)', '->', 'debug_types', '=', '(\"I\",', '\"', '<', '\",', '\"', '>', '\",', '\"', '<', '\",', '\"', '>', '\")', 'debug_type', '==', '0:', 'debug_msg', '=', 'native_str', 'debug_msg)', 'curl_log.debug', '\"', '%', 's\",', 'debug_msg.strip', 'debug_type', '(1,', '2', 'debug_msg', '=', 'native_str', 'debug_msg)', 'curl_log.debug', '\"', '%', 's', '%s\",', 'debug_types', 'debug_type', 'debug_type', '==', '4:', 'curl_log.debug', '\"', '%', 's', '%r\",', 'debug_types', 'debug_type', 'debug_msg)', 'self,', 'errno:', 'message:', 'str)', '->', 'self,', '599,', 'message)', 'self.errno', '=', 'errno', '__name__', '==', 'AsyncHTTPClient.configure', 'CurlAsyncHTTPClient)']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/tornado/escape.py",
        "vector": "['html', 'json', 're', 'urllib.parse', 'unicode_type', 'Union,', 'Any,', 'Optional,', 'Dict,', 'Callable', 'xhtml_escape', 'value:', 'Union', 'str,', 'bytes', '->', 'str:', 'html.escape', 'to_unicode', 'value', 'xhtml_unescape', 'value:', 'Union', 'str,', 'bytes', '->', 'str:', 'html.unescape', 'to_unicode', 'value', 'json_encode', 'value:', 'Any)', '->', 'str:', 'json.dumps', 'value', '.replace', '\"', '<', '/', '\",', '\"', '<', '\\\\\\\\', '/', '\")', 'json_decode', 'value:', 'Union', 'str,', 'bytes', '->', 'Any:', 'json.loads', 'value)', 'squeeze', 'value:', 'str)', '->', 'str:', 're.sub', 'r\"', '\\\\x00', '-', '\\\\x20', '+', '\",', '\"', '\",', 'value', '.strip', 'url_escape', 'value:', 'Union', 'str,', 'bytes', 'plus:', 'bool', '=', '->', 'str:', 'quote', '=', 'urllib.parse.quote_plus', 'plus', 'urllib.parse.quote', 'quote', 'value)', 'url_unescape', 'value:', 'Union', 'str,', 'bytes', 'plus:', 'bool', '=', '->', 'bytes:', 'url_unescape(', 'value:', 'Union', 'str,', 'bytes', 'str', '=', '\"utf', '-', '8\",', 'plus:', 'bool', '=', '->', 'str:', 'url_unescape(', 'value:', 'Union', 'str,', 'bytes', 'Optional', 'str]', '=', '\"utf', '-', '8\",', 'plus:', 'bool', '=', '->', 'Union', 'str,', 'bytes', 'plus:', 'value', '=', 'value', '.replace', '\"', '+', '\",', '\"', '\")', 'urllib.parse.unquote_to_bytes', 'value)', 'unquote', '=', 'urllib.parse.unquote_plus', 'plus', 'urllib.parse.unquote', 'unquote', 'value', '=', 'parse_qs_bytes(', 'qs:', 'Union', 'str,', 'bytes', 'keep_blank_values:', 'bool', '=', 'bool', '=', '->', 'Dict', 'str,', 'bytes', 'qs,', 'bytes', 'qs', '=', 'qs.decode', 'result', '=', 'urllib.parse.parse_qs(', 'qs,', 'keep_blank_values,', '=', '=', '\"strict\"', 'encoded', '=', '{}', 'k,', 'v', 'result.items', 'encoded', 'k]', '=', '[i.encode', 'i', 'v]', 'encoded', '_UTF8_TYPES', '=', '(bytes,', 'type', 'utf8', 'value:', 'bytes)', '->', 'bytes:', 'utf8', 'value:', 'str)', '->', 'bytes:', 'utf8', 'value:', '->', 'utf8', 'value:', 'Union', 'str,', 'bytes', '->', 'Optional', 'bytes', 'value,', '_UTF8_TYPES', 'value', 'value,', 'unicode_type', '\"Expected', 'bytes,', 'unicode,', 'got', '%r\"', '%', 'type', 'value', 'value.encode', '\"utf', '-', '8\")', '_TO_UNICODE_TYPES', '=', '(unicode_type,', 'type', 'to_unicode', 'value:', 'str)', '->', 'str:', 'to_unicode', 'value:', 'bytes)', '->', 'str:', 'to_unicode', 'value:', '->', 'to_unicode', 'value:', 'Union', 'str,', 'bytes', '->', 'Optional', 'str', 'value,', '_TO_UNICODE_TYPES', 'value', 'value,', 'bytes', '\"Expected', 'bytes,', 'unicode,', 'got', '%r\"', '%', 'type', 'value', 'value.decode', '\"utf', '-', '8\")', '_unicode', '=', 'to_unicode', 'native_str', '=', 'to_unicode', '=', 'to_unicode', 'recursive_unicode', 'obj:', 'Any)', '->', 'Any:', 'obj,', 'dict', 'dict(', '(recursive_unicode', 'k', 'recursive_unicode', 'v', '(k,', 'v)', 'obj.items', 'obj,', 'recursive_unicode', 'i)', 'i', 'obj)', 'obj,', 'tuple', 'tuple', 'recursive_unicode', 'i)', 'i', 'obj)', 'obj,', 'bytes', 'to_unicode', 'obj)', 'obj', '_URL_RE', '=', 're.compile(', 'to_unicode(', 'rConverts', 'text', 'HTML', 'example:', '\"Hello', 'http', '/', '/', '``', 'would', '``Hello', '<a', 'href', '=', '\"http', '/', '/', '>', 'http', '/', '/', '<', '/', 'a', '>', '!``', 'Parameters:', '*', 'Long', 'urls', 'will', 'be', '*', '``extra_params``:', 'Extra', 'text', 'to', 'the', 'tag,', 'a', 'callable', 'the', 'an', 'argument', 'the', 'extra', 'text', 'e.g.', 'text,', 'extra_params', '=', \"'rel\", '=', '\"nofollow\"', '=', '\"external\"\\'', '``,', 'extra_params_cb', 'url', '\"http', '/', '/', 'example.com\"', '=', '=', '\"external\"', 'rel', '=', '\"nofollow\"\\'', 'text,', 'extra_params', '=', 'extra_params_cb)', '*', '``require_protocol``:', 'Only', 'urls', 'which', 'a', 'protocol.', 'If', 'urls', 'such', 'www.facebook.com', 'will', 'also', 'be', '*', '``permitted_protocols``:', 'set)', 'of', 'protocols', 'which', 'should', 'be', 'e.g.', 'text,', 'permitted_protocols', '=', '\"http\",', '\"ftp\",', '\"mailto\"', '``.', 'It', 'very', 'unsafe', 'to', 'protocols', 'such', '\"\"\"', 'extra_params', 'callable', 'extra_params', 'extra_params', '=', '\"', '\"', '+', 'extra_params.strip', 'm:', '->', 'str:', 'url', '=', 'm.group', '1)', 'proto', '=', 'm.group', '2)', 'require_protocol', 'proto:', 'url', 'proto', 'proto', 'permitted_protocols:', 'url', 'href', '=', 'm.group', '1)', 'proto:', 'href', '=', '\"http', '/', '/', '\"', '+', 'href', 'callable', 'extra_params', 'params', '=', '\"', '\"', '+', 'extra_params', 'href', '.strip', 'params', '=', 'extra_params', 'max_len', '=', '30', 'len', 'url)', '>', 'max_len:', '=', 'url', 'proto:', 'proto_len', '=', 'len', 'proto)', '+', '1', '+', 'len', 'm.group', '3)', '\"\")', 'proto_len', '=', '0', 'parts', '=', 'url', 'proto_len', '.split', '\"', '/', '\")', 'len', 'parts)', '>', '1:', 'url', '=', 'url', 'proto_len]', '+', 'parts', '0]', '+', '\"', '/', '\"', '+', 'parts', '1', '8', '.split', '\"?\"', '0', '.split', '\".\"', '0]', 'len', 'url)', '>', 'max_len', '*', '1.5:', 'url', '=', 'url', 'max_len]', 'url', '!=', 'amp', '=', '\"', '&', '\")', 'amp', '>', 'max_len', '-', '5:', 'url', '=', 'url', 'amp]', 'url', '+=', '\"...\"', 'len', 'url)', '>=', 'len', 'url', '=', 'params', '+=', \"'\", 'title', '=', '\"', '%', 's\"\\'', '%', 'href', \"'\", '<', 'a', 'href', '=', '\"', '%', 's\"', '%', 's', '>', '%', 's', '<', '/', 'a', '>', \"'\", '%', '(href,', 'params,', 'url)', 'text', '=', '_unicode', 'xhtml_escape', 'text', '_URL_RE.sub', 'text)']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/tornado/gen.py",
        "vector": "['collections', 'collections.abc', 'concurrent.futures', 'datetime', 'functools', 'functools', 'sys', 'types', 'Future,', 'future_add_done_callback,', 'future_set_result_unless_cancelled,', 'IOLoop', 'app_log', 'contextvars', 'contextvars', '=', 'Union,', 'Any,', 'Callable,', 'Type,', 'Tuple,', 'Awaitable,', 'Dict,', 'overload', 'Sequence,', 'Deque,', 'Optional,', 'Set,', 'Iterable', '_T', '=', '\"_T\")', '_Yieldable', '=', 'Union[', 'Awaitable,', 'Awaitable', 'Dict', 'Any,', 'Awaitable', 'concurrent.futures.Future', 'Exception', 'Exception', 'Exception', 'Exception', 'Exception', 'e:', 'Union', 'StopIteration,', '\"Return\"', '->', 'Any:', 'e.value', 'e.args', '0]', '_create_future', '->', 'Future:', 'future', '=', 'Future', 'source_traceback', '=', 'getattr', 'future,', '\"_source_traceback\",', 'source_traceback:', 'filename', '=', 'source_traceback', '-', '1', '0]', 'filename', '==', '__file__:', 'source_traceback', '-', '1]', 'future', '_fake_ctx_run', 'f:', 'Callable', '...,', '_T', '*args:', 'Any,', '*', '*', 'kw:', 'Any)', '->', '_T:', 'f', '*', 'args,', '*', '*', 'kw)', '@overload', 'func:', 'Callable', '...,', 'Any,', 'Any,', '_T', '\"]', '->', 'Callable', '...,', '\"Future', '_T', '\"', '...', '@overload', 'func:', 'Callable', '...,', '_T', '->', 'Callable', '...,', '\"Future', '_T', '\"', '...', 'func:', 'Union', 'Callable', '...,', 'Any,', 'Any,', '_T', '\"', 'Callable', '...,', '_T', '->', 'Callable', '...,', '\"Future', '_T', '\"', '@functools.wraps', 'func)', 'wrapper', '*', 'args,', '*', '*', 'kwargs', 'future', '=', '_create_future', 'contextvars', 'ctx_run', '=', 'contextvars.copy_context', '.run', 'ctx_run', '=', '_fake_ctx_run', 'result', '=', 'ctx_run', 'func,', '*args,', '*', '*', 'kwargs)', '(Return,', 'StopIteration)', 'e:', 'result', '=', 'e)', 'Exception:', 'future,', 'future', 'future', '=', 'result,', '=', 'ctx_run', 'next,', 'result)', '(StopIteration,', 'Return)', 'e:', 'future_set_result_unless_cancelled(', 'future,', 'e)', 'Exception:', 'future,', 'runner', '=', 'Runner', 'ctx_run,', 'result,', 'future,', 'future.add_done_callback', '_:', 'runner)', '=', 'future', 'future', '=', 'future_set_result_unless_cancelled', 'future,', 'result)', 'future', 'wrapper.__wrapped__', '=', 'func', '=', 'wrapper', 'func:', 'Any)', '->', 'bool:', 'getattr', 'func,', 'Return', 'Exception', 'self,', 'value:', 'Any', '=', '->', 'super', 'self.value', '=', 'value', 'self.args', '=', '(value', 'object', '=', '{}', 'self,', '*args:', 'Future,', '*', '*', 'kwargs:', 'Future)', '->', 'args', 'kwargs:', '\"You', 'must', 'provide', 'args', 'kwargs,', 'both\")', 'kwargs:', '=', 'dict', 'f,', 'k)', '(k,', 'f)', 'kwargs.items', 'futures', '=', 'kwargs.values', '=', 'dict', 'f,', 'i)', '(i,', 'f)', 'enumerate', 'args', 'futures', '=', 'args', '=', 'collections.deque', '=', 'self.current_future', '=', '=', 'future', 'futures:', 'future_add_done_callback', 'future,', 'self._done_callback)', 'done', 'self)', '->', 'bool:', '=', 'self.current_future', '=', 'next', 'self)', '->', 'Future:', '=', 'Future', '_done_callback', 'self,', 'done:', 'Future)', '->', 'done)', 'done)', 'self,', 'done:', 'Future)', '->', 'Future:', 'Exception', '\"no', 'future', 'done,', 'res', '=', '=', 'self.current_future', '=', 'done', '=', 'done)', 'res', '__aiter__', 'self)', '->', 'self', '__anext__', 'self)', '->', 'Future:', 'self.done', 'getattr', '\"StopAsyncIteration\"', 'self.next', 'multi(', 'children:', 'Union', '_Yieldable', 'Dict', 'Any,', '_Yieldable', '\"Union', 'Type', 'Exception', 'Tuple', 'Type', 'Exception', '...', '\"', '=', '->', '\"Union', 'Future', 'Future', 'Dict', '\":', 'multi_future', 'children,', '=', 'Multi', '=', 'multi', 'multi_future(', 'children:', 'Union', '_Yieldable', 'Dict', 'Any,', '_Yieldable', '\"Union', 'Type', 'Exception', 'Tuple', 'Type', 'Exception', '...', '\"', '=', '->', '\"Union', 'Future', 'Future', 'Dict', '\":', 'children,', 'dict', 'keys', '=', 'children.keys', 'children_seq', '=', 'children.values', 'keys', '=', 'children_seq', '=', 'children', 'children_futs', '=', 'map', 'children_seq', 'all', 'i)', 'i,', '_NullFuture)', 'i', 'children_futs)', '=', 'set', 'children_futs)', 'future', '=', '_create_future', 'children_futs:', 'future_set_result_unless_cancelled', 'future,', '{}', 'keys', 'callback', 'fut:', 'Future)', '->', 'fut)', '=', '[]', 'f', 'children_futs:', 'f.result', 'Exception', 'e:', 'future.done', 'e,', '\"Multiple', '=', 'future,', 'future.done', 'keys', 'future_set_result_unless_cancelled(', 'future,', 'dict', 'zip', 'keys,', 'future_set_result_unless_cancelled', 'future,', '=', 'set', 'f', 'children_futs:', 'f', 'f)', 'future_add_done_callback', 'f,', 'callback)', 'future', 'maybe_future', 'x:', 'Any)', '->', 'Future:', 'x', 'x', 'fut', '=', '_create_future', 'fut.set_result', 'x)', 'fut', 'timeout:', 'Union', 'float,', 'future:', '_Yieldable,', '\"Union', 'Type', 'Exception', 'Tuple', 'Type', 'Exception', '...', '\"', '=', '->', 'Future:', 'future_converted', '=', 'future)', 'result', '=', '_create_future', 'future_converted,', 'result)', 'io_loop', '=', 'IOLoop.current', 'future:', 'Future)', '->', 'future.result', 'Exception', 'e:', 'e,', '\"Exception', 'Future', '%r', 'after', 'timeout\",', 'future,', '=', 'timeout_callback', '->', 'result.done', '\"Timeout\"', 'future_add_done_callback', 'future_converted,', '=', 'io_loop.add_timeout', 'timeout,', 'timeout_callback)', 'future_converted,', 'Future', 'future_add_done_callback(', 'future_converted,', 'future:', 'io_loop.remove_timeout', 'io_loop.add_future(', 'future_converted,', 'future:', 'io_loop.remove_timeout', 'result', 'sleep', 'duration:', 'float)', '->', '\"Future', '\":', 'f', '=', '_create_future', 'IOLoop.current', '.call_later(', 'duration,', 'future_set_result_unless_cancelled', 'f,', 'f', '_NullFuture', 'object', 'result', 'self)', '->', 'done', 'self)', '->', 'bool:', '_null_future', '=', 'Future,', '_NullFuture', 'moment', '=', 'Future,', '_NullFuture', 'moment.__doc__', '=', 'Runner', 'object', 'self,', 'ctx_run:', 'Callable,', 'gen:', '_Yieldable,', 'Any,', '_T', '\",', 'result_future:', '\"Future', '_T', '\",', '_Yieldable,', '->', 'self.ctx_run', '=', 'ctx_run', 'self.gen', '=', 'gen', 'self.result_future', '=', 'result_future', 'self.future', '=', '_null_future', '=', '=', 'self.io_loop', '=', 'IOLoop.current', 'self.ctx_run', 'gen', '=', 'result_future', '=', '=', 'self.ctx_run', 'self.run)', 'run', 'self)', '->', '=', 'future', '=', 'self.future', 'future', 'Exception', '\"No', 'future\")', 'future.done', 'self.future', '=', 'value', '=', 'future.result', 'Exception', 'e:', 'exc:', 'Optional', 'Exception]', '=', 'e', 'exc', '=', 'future', '=', 'exc', '=', 'self.gen.throw', 'exc)', 'exc', '=', 'self.gen.send', 'value)', '(StopIteration,', 'Return)', 'e:', '=', 'self.future', '=', '_null_future', 'future_set_result_unless_cancelled(', 'self.result_future,', 'e)', 'self.result_future', '=', 'Exception:', '=', 'self.future', '=', '_null_future', 'self.result_future,', 'self.result_future', '=', '=', '=', 'self,', '_Yieldable)', '->', 'bool:', 'self.future', '=', 'self.future', '=', 'Future', 'self.future,', 'self.future', 'moment:', 'self.io_loop.add_callback', 'self.ctx_run,', 'self.run)', 'self.future', 'Exception', '\"no', 'future\")', 'self.future.done', 'f:', 'Any)', '->', 'f', '=', 'self.ctx_run', 'self.run)', 'self.io_loop.add_future', 'self.future,', 'self,', 'typ:', 'Type', 'Exception', 'value:', 'Exception,', 'tb:', 'types.TracebackType', '->', 'bool:', 'self.future', '=', 'Future', 'self.future,', '(typ,', 'value,', 'tb', 'self.ctx_run', 'self.run)', 'Awaitable)', '->', 'Future:', 'fut', '=', 'loop', '=', 'IOLoop.current', 'fut)', 'fut.add_done_callback', 'f:', 'f', 'fut', '_Yieldable)', '->', 'Future:', 'moment:', 'moment', '_null_future:', '_null_future', 'dict', 'multi', 'Future,', 'unknown', 'object', '%r\"', '%', '=']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/tornado/http1connection.py",
        "vector": "['re', 'types', 'Future,', 'future_add_done_callback,', 'future_set_result_unless_cancelled,', 'native_str,', 'utf8', 'gen', 'httputil', 'iostream', 'gen_log,', 'app_log', 'Optional,', 'Type,', 'Awaitable,', 'Callable,', 'Union,', 'Tuple', '_QuietException', 'Exception', 'self)', '->', 'object', 'self,', 'logger:', '->', 'self.logger', '=', 'logger', '__enter__', 'self)', '->', '__exit__(', 'self,', 'typ:', '\"Optional', 'Type', '\",', 'value:', 'Optional', 'tb:', 'types.TracebackType,', '->', 'value', 'typ', '\"Uncaught', '=', 'typ,', 'value,', 'tb', '_QuietException', 'HTTP1ConnectionParameters', 'object', 'self,', 'no_keep_alive:', 'bool', '=', 'chunk_size:', 'Optional', '=', 'max_header_size:', 'Optional', '=', 'header_timeout:', 'Optional', 'float]', '=', 'max_body_size:', 'Optional', '=', 'body_timeout:', 'Optional', 'float]', '=', 'decompress:', 'bool', '=', '->', 'self.no_keep_alive', '=', 'no_keep_alive', 'self.chunk_size', '=', 'chunk_size', '65536', 'self.max_header_size', '=', 'max_header_size', '65536', 'self.header_timeout', '=', 'header_timeout', 'self.max_body_size', '=', 'max_body_size', 'self.body_timeout', '=', 'body_timeout', 'self.decompress', '=', 'decompress', 'HTTP1Connection', 'httputil.HTTPConnection', 'self,', 'stream:', 'iostream.IOStream,', 'bool,', 'params:', 'Optional', 'HTTP1ConnectionParameters]', '=', 'context:', 'Optional', 'object]', '=', '->', '=', 'self.stream', '=', 'stream', 'params', 'params', '=', 'HTTP1ConnectionParameters', 'self.params', '=', 'params', 'self.context', '=', 'context', 'self.no_keep_alive', '=', 'params.no_keep_alive', 'self._max_body_size', '=', 'self.params.max_body_size', 'self.params.max_body_size', 'self.stream.max_buffer_size', 'self._body_timeout', '=', 'self.params.body_timeout', '=', '=', '=', 'Future', '=', 'self._clear_callbacks', '=', '=', 'self._request_headers', '=', '=', '=', '=', 'read_response', 'self,', 'httputil.HTTPMessageDelegate)', '->', 'Awaitable', 'bool', 'self.params.decompress:', '=', '_GzipMessageDelegate', 'self.params.chunk_size)', 'self._read_message', '_read_message', 'self,', 'httputil.HTTPMessageDelegate)', '->', 'bool:', '=', 'header_future', '=', 'self.stream.read_until_regex(', 'b\"\\\\r?\\\\n\\\\r?\\\\n\",', 'max_bytes', '=', 'self.params.max_header_size', 'self.params.header_timeout', 'header_data', '=', 'header_future', 'header_data', '=', 'self.stream.io_loop.time', '+', 'self.params.header_timeout,', 'header_future,', '=', 'self.close', 'headers', '=', 'self._parse_headers', 'header_data)', '=', '=', '=', '=', '=', '=', 'self._request_headers', '=', 'headers', '=', '=', 'self._can_keep_alive(', 'headers', '=', 'app_log', 'header_recv_future', '=', 'headers)', 'header_recv_future', 'header_recv_future', 'self.stream', '=', 'skip_body', '=', '==', '\"HEAD\"', '):', 'skip_body', '=', 'code', '=', 'code', '==', '304:', 'skip_body', '=', '100', '<=', 'code', '<', '200:', '\"Content', '-', 'Length\"', 'headers', '\"Transfer', '-', 'headers:', '\"Response', 'code', '%d', 'have', 'body\"', '%', 'code', 'self._read_message', 'headers.get', '\"Expect\")', '==', '\"100', '-', 'self.stream.write', 'b\"HTTP', '/', '1.1', '100', '\\\\r\\\\n\\\\r\\\\n\")', 'skip_body:', 'body_future', '=', 'self._read_body(', '0,', 'headers,', 'body_future', 'self._body_timeout', 'body_future', 'self.stream.io_loop.time', '+', 'self._body_timeout,', 'body_future,', '=', '\"Timeout', 'body', '%s\",', 'self.context)', 'self.stream.close', '=', '=', 'app_log', 'self.stream', 'self.stream.closed', '):', 'self.stream.set_close_callback', 'self._on_connection_close)', 'self.close', 'self.stream', 'e:', 'HTTP', 'message', '%s:', '%s\",', 'self.context,', 'e)', 'self.stream.write', 'b\"HTTP', '/', '1.1', '400', 'Bad', 'Request\\\\r\\\\n\\\\r\\\\n\")', 'self.close', 'app_log', 'header_future', '=', 'self._clear_callbacks', '_clear_callbacks', 'self)', '->', 'self._write_callback', '=', 'self._write_future', '=', 'self._close_callback', '=', 'self.stream', 'self.stream.set_close_callback', 'set_close_callback', 'self,', 'callback:', 'Optional', 'Callable', '->', 'self._close_callback', '=', 'callback', '_on_connection_close', 'self)', '->', 'self._close_callback', 'callback', '=', 'self._close_callback', 'self._close_callback', '=', 'callback', 'future_set_result_unless_cancelled', 'self._clear_callbacks', 'close', 'self)', '->', 'self.stream', 'self.stream.close', 'self._clear_callbacks', 'future_set_result_unless_cancelled', 'detach', 'self)', '->', 'iostream.IOStream:', 'self._clear_callbacks', 'stream', '=', 'self.stream', 'self.stream', '=', 'future_set_result_unless_cancelled', 'stream', 'set_body_timeout', 'self,', 'timeout:', 'float)', '->', 'self._body_timeout', '=', 'timeout', 'set_max_body_size', 'self,', 'max_body_size:', '->', 'self._max_body_size', '=', 'max_body_size', 'write_headers(', 'self,', 'Union', 'headers:', 'httputil.HTTPHeaders,', 'chunk:', 'Optional', 'bytes]', '=', '->', '\"Future', '\":', '=', '[]', '=', 'utf8', '\"', '%', 's', '%s', 'HTTP', '/', '1.1\"', '%', '0', '1', '=', '(\"POST\",', '\"PUT\",', '\"PATCH\")', '\"Content', '-', 'Length\"', 'headers', '\"Transfer', '-', 'headers', 'headers', '\"Transfer', '-', '==', '\"chunked\"', 'self._request_headers', '=', 'utf8', '\"HTTP', '/', '1.1', '%d', '%s\"', '%', '1', '2', '=', '==', '\"HTTP', '/', '1.1\"', '!=', '\"HEAD\"', '(204,', '304)', '<', '100', '>=', '200)', '\"Content', '-', 'Length\"', 'headers', '\"Transfer', '-', 'headers', '==', '\"HTTP', '/', '1.1\"', '):', 'headers', '\"Connection\"]', '=', '\"close\"', '==', '\"HTTP', '/', '1.0\"', 'self._request_headers.get', '\"Connection\",', '\"\"', '.lower', '==', '\"keep', '-', 'alive\"', '):', 'headers', '\"Connection\"]', '=', '\"Keep', '-', 'Alive\"', 'headers', '\"Transfer', '-', '=', '\"chunked\"', '==', '\"HEAD\"', '.code', '==', '304', '):', '=', '0', '\"Content', '-', 'Length\"', 'headers:', '=', 'headers', '\"Content', '-', 'Length\"', '=', '=', 'native_str', 'n)', '+', '\":', '\"', '+', 'native_str', 'v)', 'n,', 'v', 'headers.get_all', 'b\"\\\\n\"', 'header:', '\"', '+', 'repr', 'future', '=', 'self.stream.closed', 'future', '=', 'self._write_future', '=', 'Future', 'future', '=', 'self._write_future', '=', 'Future', 'data', '=', '+', 'b\"\\\\r\\\\n\\\\r\\\\n\"', 'chunk:', 'data', '+=', 'chunk)', '=', 'self.stream.write', 'data)', 'future_add_done_callback', 'self._on_write_complete)', 'future', 'self,', 'chunk:', 'bytes)', '->', 'bytes:', '-=', 'len', 'chunk)', '<', '0:', 'self.stream.close', '\"Tried', 'to', 'write', 'data', 'than', 'Content', '-', 'Length\"', 'chunk:', 'utf8', '\"', '%', 'x\"', '%', 'len', 'chunk', '+', 'b\"\\\\r\\\\n\"', '+', 'chunk', '+', 'b\"\\\\r\\\\n\"', 'chunk', 'write', 'self,', 'chunk:', 'bytes)', '->', '\"Future', '\":', 'future', '=', 'self.stream.closed', 'future', '=', 'self._write_future', '=', 'Future', 'future', '=', 'self._write_future', '=', 'Future', '=', 'self.stream.write', 'chunk', 'future_add_done_callback', 'self._on_write_complete)', 'future', 'self)', '->', '!=', '0', 'self.stream.closed', '):', 'self.stream.close', '\"Tried', 'to', 'write', '%d', 'bytes', 'less', 'than', 'Content', '-', 'Length\"', '%', 'self.stream.closed', '=', 'self.stream.write', 'b\"0\\\\r\\\\n\\\\r\\\\n\")', 'self._on_write_complete)', '=', '=', 'future_add_done_callback', '_on_write_complete', 'self,', 'future:', '\"Future', '\")', '->', 'exc', '=', 'exc', 'exc,', 'future.result', 'self._write_callback', 'callback', '=', 'self._write_callback', 'self._write_callback', '=', 'self.stream.io_loop.add_callback', 'callback)', 'self._write_future', 'future', '=', 'self._write_future', 'self._write_future', '=', 'future_set_result_unless_cancelled', 'future,', '_can_keep_alive(', 'self,', 'headers:', 'httputil.HTTPHeaders', '->', 'bool:', 'self.params.no_keep_alive:', 'connection_header', '=', 'headers.get', '\"Connection\")', 'connection_header', 'connection_header', '=', 'connection_header.lower', '==', '\"HTTP', '/', '1.1\":', 'connection_header', '!=', '\"close\"', '\"Content', '-', 'Length\"', 'headers', 'headers.get', '\"Transfer', '-', '\"\"', '.lower', '==', '\"chunked\"', 'getattr', '\"method\",', '(\"HEAD\",', '\"GET\")', '):', 'connection_header', '==', '\"keep', '-', 'alive\"', 'self,', 'future:', '\"Optional', 'Future', '\")', '->', 'self._clear_callbacks', 'self.close', 'future_set_result_unless_cancelled', '_parse_headers', 'self,', 'data:', 'bytes)', '->', 'Tuple', 'str,', 'httputil.HTTPHeaders', 'data_str', '=', 'native_str', 'data.decode', '.lstrip', '\"\\\\r\\\\n\")', 'eol', '=', '\"\\\\n\")', '=', 'data_str', 'eol', '.rstrip', '\"\\\\r\")', 'headers', '=', 'httputil.HTTPHeaders.parse', 'data_str', 'eol', 'headers', '_read_body(', 'self,', 'code:', 'headers:', 'httputil.HTTPHeaders,', 'httputil.HTTPMessageDelegate,', '->', 'Optional', 'Awaitable', '\"Content', '-', 'Length\"', 'headers:', '\"Transfer', '-', 'headers:', '\"Response', 'both', 'Transfer', '-', 'Content', '-', 'Length\"', '\"', '\"', 'headers', '\"Content', '-', 'Length\"', 'pieces', '=', 're.split', 'r\"', '\\\\s', '*', '\",', 'headers', '\"Content', '-', 'Length\"', 'any', 'i', '!=', 'pieces', '0]', 'i', 'pieces', '\"Multiple', 'unequal', 'Content', '-', 'Lengths:', '%r\"', '%', 'headers', '\"Content', '-', 'Length\"]', 'headers', '\"Content', '-', 'Length\"]', '=', 'pieces', '0]', 'content_length:', 'Optional', '=', 'headers', '\"Content', '-', 'Length\"', '\"Only', 'Content', '-', 'Length', 'allowed:', '%s\"', '%', 'headers', '\"Content', '-', 'Length\"]', 'content_length)', '>', 'self._max_body_size:', '\"Content', '-', 'Length', 'too', 'long\")', 'content_length', '=', 'code', '==', '204:', '\"Transfer', '-', 'headers', 'content_length', '0', '\"Response', 'code', '%d', 'should', 'have', 'body\"', '%', 'code', 'content_length', '=', '0', 'content_length', 'self._read_fixed_body', 'content_length,', 'headers.get', '\"Transfer', '-', '\"\"', '.lower', '==', '\"chunked\":', 'self._read_chunked_body', 'self._read_body_until_close', '_read_fixed_body(', 'self,', 'content_length:', 'httputil.HTTPMessageDelegate', '->', 'content_length', '>', '0:', 'body', '=', 'self.stream.read_bytes(', 'self.params.chunk_size,', 'content_length', 'partial', '=', 'content_length', '-=', 'len', 'body)', 'app_log', 'ret', '=', 'body)', 'ret', 'ret', '_read_chunked_body', 'self,', 'httputil.HTTPMessageDelegate)', '->', 'total_size', '=', '0', 'chunk_len_str', '=', 'self.stream.read_until', 'b\"\\\\r\\\\n\",', 'max_bytes', '=', '64)', 'chunk_len', '=', 'native_str', 'chunk_len_str', '-', '2', 'chunk', 'size\")', 'chunk_len', '==', '0:', 'crlf', '=', 'self.stream.read_bytes', '2)', 'crlf', '!=', 'b\"\\\\r\\\\n\":', '\"improperly', 'chunked', 'request\"', 'total_size', '+=', 'chunk_len', 'total_size', '>', 'self._max_body_size:', '\"chunked', 'body', 'too', 'large\")', 'bytes_to_read', '=', 'chunk_len', 'bytes_to_read:', 'chunk', '=', 'self.stream.read_bytes(', 'bytes_to_read,', 'self.params.chunk_size', 'partial', '=', 'bytes_to_read', '-=', 'len', 'chunk)', 'app_log', 'ret', '=', 'chunk)', 'ret', 'ret', 'crlf', '=', 'self.stream.read_bytes', '2)', 'crlf', '==', 'b\"\\\\r\\\\n\"', '_read_body_until_close(', 'self,', 'httputil.HTTPMessageDelegate', '->', 'body', '=', 'self.stream.read_until_close', 'app_log', 'ret', '=', 'body)', 'ret', 'ret', '_GzipMessageDelegate', 'httputil.HTTPMessageDelegate', 'self,', 'httputil.HTTPMessageDelegate,', 'chunk_size:', '->', '=', 'self._chunk_size', '=', 'chunk_size', '=', 'headers_received(', 'self,', 'Union', 'headers:', 'httputil.HTTPHeaders,', '->', 'Optional', 'Awaitable', 'headers.get', '\"Content', '-', '\"\"', '.lower', '==', '\"gzip\":', '=', 'headers.add', '\"X', '-', 'Consumed', '-', 'Content', '-', 'headers', '\"Content', '-', 'headers', '\"Content', '-', 'headers)', 'data_received', 'self,', 'chunk:', 'bytes)', '->', 'compressed_data', '=', 'chunk', 'compressed_data:', 'decompressed', '=', 'compressed_data,', 'self._chunk_size', 'decompressed:', 'ret', '=', 'decompressed)', 'ret', 'ret', 'compressed_data', '=', 'compressed_data', 'decompressed:', '\"encountered', 'unconsumed', 'gzip', 'data', 'progress\"', 'ret', '=', 'chunk)', 'ret', 'ret', 'self)', '->', 'tail', '=', 'tail:', 'data;', 'possible', 'truncated', 'on_connection_close', 'self)', '->', 'HTTP1ServerConnection', 'object', 'self,', 'stream:', 'iostream.IOStream,', 'params:', 'Optional', 'HTTP1ConnectionParameters]', '=', 'context:', 'Optional', 'object]', '=', '->', 'self.stream', '=', 'stream', 'params', 'params', '=', 'HTTP1ConnectionParameters', 'self.params', '=', 'params', 'self.context', '=', 'context', '=', 'close', 'self)', '->', 'self.stream.close', 'Exception:', 'self,', 'httputil.HTTPServerConnectionDelegate)', '->', 'httputil.HTTPServerConnectionDelegate)', 'fut', '=', 'self._server_request_loop', '=', 'fut', 'self.stream.io_loop.add_future', 'fut,', 'f:', 'f.result', '_server_request_loop(', 'self,', 'httputil.HTTPServerConnectionDelegate', '->', 'conn', '=', 'HTTP1Connection', 'self.stream,', 'self.params,', 'self.context)', '=', 'self,', 'conn)', 'ret', '=', 'conn.read_response', '):', '_QuietException:', 'conn.close', 'Exception:', '\"Uncaught', '=', 'conn.close', 'ret:', '0)', 'self)', 'DIGITS', '=', 're.compile', 'r\"', '0', '-', '9', '+', '\")', 'HEXDIGITS', '=', 're.compile', 'r\"', '0', '-', '9a', '-', 'fA', '-', 'F', '+', '\")', 's:', 'str)', '->', 'DIGITS.fullmatch', 's)', 'an', '%r\"', '%', 's)', 's)', 's:', 'str)', '->', 'HEXDIGITS.fullmatch', 's)', 'a', 'hexadecimal', '%r\"', '%', 's)', 's,', '16)']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/tornado/httpclient.py",
        "vector": "['datetime', 'functools', 'io', 'BytesIO', 'ssl', 'time', 'weakref', 'Future,', 'future_set_result_unless_cancelled,', 'utf8,', 'native_str', 'gen,', 'httputil', 'IOLoop', 'Configurable', 'Type,', 'Any,', 'Union,', 'Dict,', 'Callable,', 'Optional,', 'HTTPClient', 'object', 'self,', '\"Optional', 'Type', 'AsyncHTTPClient', '\"', '=', '*', '*', 'kwargs:', 'Any', '->', 'self._closed', '=', 'self._io_loop', '=', 'IOLoop', 'make_current', '=', '=', 'AsyncHTTPClient', 'make_client', '->', '\"AsyncHTTPClient\":', 'gen.sleep', '0)', '**', 'kwargs)', '=', 'self._io_loop.run_sync', 'make_client)', 'self._closed', '=', 'self)', '->', 'self.close', 'close', 'self)', '->', 'self._closed:', 'self._io_loop.close', 'self._closed', '=', 'fetch(', 'self,', 'request:', 'Union', '\"HTTPRequest\",', 'str', '*', '*', 'kwargs:', 'Any', '->', '\"HTTPResponse\":', 'response', '=', 'self._io_loop.run_sync(', 'functools.partial', 'request,', '*', '*', 'kwargs)', 'response', 'AsyncHTTPClient', 'Configurable', '=', 'cls)', '->', 'Type', 'Configurable', 'AsyncHTTPClient', 'cls)', '->', 'Type', 'Configurable', 'SimpleAsyncHTTPClient', 'SimpleAsyncHTTPClient', 'cls)', '->', 'Dict', 'IOLoop,', '\"AsyncHTTPClient\"', 'attr_name', '=', '+', 'cls.__name__', 'cls,', 'attr_name', 'setattr', 'cls,', 'attr_name,', 'weakref.WeakKeyDictionary', 'getattr', 'cls,', 'attr_name)', '__new__', 'cls,', 'bool', '=', '*', '*', 'kwargs:', 'Any)', '->', '\"AsyncHTTPClient\":', 'io_loop', '=', 'IOLoop.current', '=', '=', 'io_loop', 'io_loop]', '=', 'super', 'AsyncHTTPClient,', 'cls', '.__new__', 'cls,', '*', '*', 'kwargs)', '=', '=', 'self,', 'Optional', 'Dict', 'str,', 'Any', '=', '->', 'self.io_loop', '=', 'IOLoop.current', '=', 'dict', 'HTTPRequest._DEFAULTS)', 'self._closed', '=', 'close', 'self)', '->', 'self._closed:', 'self._closed', '=', 'cached_val', '=', 'self.io_loop,', 'cached_val', 'cached_val', 'self:', 'AsyncHTTPClient', 'cache\")', 'fetch(', 'self,', 'request:', 'Union', 'str,', '\"HTTPRequest\"', 'bool', '=', '*', '*', 'kwargs:', 'Any', '->', '\"Future', 'HTTPResponse', '\":', 'self._closed:', '\"fetch', 'called', 'on', 'closed', 'AsyncHTTPClient\")', 'request,', 'HTTPRequest', 'request', '=', 'HTTPRequest', 'url', '=', 'request,', '*', '*', 'kwargs)', 'kwargs:', '\"kwargs', \"can't\", 'be', 'used', 'request', 'an', 'HTTPRequest', 'object\"', 'request.headers', '=', 'httputil.HTTPHeaders', 'request.headers)', 'request_proxy', '=', '_RequestProxy', 'request,', 'future', '=', 'Future', 'response:', '\"HTTPResponse\")', '->', 'future,', 'future_set_result_unless_cancelled', 'future,', 'response)', 'self.fetch_impl', 'HTTPRequest,', 'request_proxy', 'future', 'fetch_impl(', 'self,', 'request:', '\"HTTPRequest\",', 'callback:', 'Callable', '\"HTTPResponse\"', '->', 'configure(', 'cls,', 'impl:', '\"Union', 'str,', 'Type', 'Configurable', '\",', '*', '*', 'kwargs:', 'Any', '->', 'super', 'AsyncHTTPClient,', 'cls', '.configure', 'impl,', '*', '*', 'kwargs)', 'HTTPRequest', 'object', '_headers', '=', '_DEFAULTS', '=', 'dict(', 'connect_timeout', '=', '20.0,', 'request_timeout', '=', '20.0,', 'follow_redirects', '=', 'max_redirects', '=', '5,', 'decompress_response', '=', '=', '\"\",', '=', 'validate_cert', '=', 'self,', 'url:', 'str,', 'method:', 'str', '=', '\"GET\",', 'headers:', 'Optional', 'Union', 'Dict', 'str,', 'str', 'httputil.HTTPHeaders', '=', 'body:', 'Optional', 'Union', 'bytes,', 'str', '=', 'auth_username:', 'Optional', 'str]', '=', 'Optional', 'str]', '=', 'auth_mode:', 'Optional', 'str]', '=', 'connect_timeout:', 'Optional', 'float]', '=', 'request_timeout:', 'Optional', 'float]', '=', 'Optional', 'Union', 'float,', 'datetime.datetime', '=', 'follow_redirects:', 'Optional', 'bool]', '=', 'max_redirects:', 'Optional', '=', 'user_agent:', 'Optional', 'str]', '=', 'use_gzip:', 'Optional', 'bool]', '=', 'Optional', 'str]', '=', 'Optional', 'Callable', 'bytes', '=', 'header_callback:', 'Optional', 'Callable', 'str', '=', 'prepare_curl_callback:', 'Optional', 'Callable', 'Any', '=', 'proxy_host:', 'Optional', 'str]', '=', 'Optional', '=', 'proxy_username:', 'Optional', 'str]', '=', 'Optional', 'str]', '=', 'proxy_auth_mode:', 'Optional', 'str]', '=', 'Optional', 'bool]', '=', 'validate_cert:', 'Optional', 'bool]', '=', 'ca_certs:', 'Optional', 'str]', '=', 'allow_ipv6:', 'Optional', 'bool]', '=', 'client_key:', 'Optional', 'str]', '=', 'client_cert:', 'Optional', 'str]', '=', 'body_producer:', 'Optional[', 'Callable', 'Callable', 'bytes', '\"Future', '\"]', '=', 'bool', '=', 'decompress_response:', 'Optional', 'bool]', '=', 'ssl_options:', 'Optional', 'Union', 'Dict', 'str,', 'Any', 'ssl.SSLContext', '=', '->', 'r', 'self.headers', '=', 'headers', 'self.headers', '\"If', '-', '-', '=', 'self.proxy_host', '=', 'proxy_host', '=', 'self.proxy_username', '=', 'proxy_username', '=', 'self.proxy_auth_mode', '=', 'proxy_auth_mode', 'self.url', '=', 'url', 'self.method', '=', 'method', 'self.body', '=', 'body', 'self.body_producer', '=', 'body_producer', 'self.auth_username', '=', 'auth_username', '=', 'self.auth_mode', '=', 'auth_mode', 'self.connect_timeout', '=', 'connect_timeout', 'self.request_timeout', '=', 'request_timeout', 'self.follow_redirects', '=', 'follow_redirects', 'self.max_redirects', '=', 'max_redirects', 'self.user_agent', '=', 'user_agent', 'decompress_response', 'self.decompress_response', '=', 'decompress_response', 'self.decompress_response', '=', 'use_gzip', '=', '=', 'self.header_callback', '=', 'header_callback', 'self.prepare_curl_callback', '=', 'prepare_curl_callback', '=', 'self.validate_cert', '=', 'validate_cert', 'self.ca_certs', '=', 'ca_certs', 'self.allow_ipv6', '=', 'allow_ipv6', 'self.client_key', '=', 'client_key', 'self.client_cert', '=', 'client_cert', 'self.ssl_options', '=', 'ssl_options', '=', 'self.start_time', '=', 'time.time', '@property', 'headers', 'self)', '->', 'httputil.HTTPHeaders:', 'self._headers', '@headers.setter', 'headers', 'self,', 'value:', 'Union', 'Dict', 'str,', 'str', 'httputil.HTTPHeaders', '->', 'value', 'self._headers', '=', 'httputil.HTTPHeaders', 'self._headers', '=', 'value', '@property', 'body', 'self)', '->', 'bytes:', 'self._body', '@body.setter', 'body', 'self,', 'value:', 'Union', 'bytes,', 'str', '->', 'self._body', '=', 'utf8', 'value)', 'HTTPResponse', 'object', '=', '=', 'request', '=', 'self,', 'request:', 'HTTPRequest,', 'code:', 'headers:', 'Optional', 'httputil.HTTPHeaders]', '=', 'buffer:', 'Optional', 'BytesIO]', '=', 'effective_url:', 'Optional', 'str]', '=', 'Optional', '=', 'request_time:', 'Optional', 'float]', '=', 'Optional', 'Dict', 'str,', 'float', '=', 'Optional', 'str]', '=', 'start_time:', 'Optional', 'float]', '=', '->', 'request,', '_RequestProxy', 'self.request', '=', 'request.request', 'self.request', '=', 'request', 'self.code', '=', 'code', '=', 'httputil.responses.get', 'code,', '\"Unknown\")', 'headers', 'self.headers', '=', 'headers', 'self.headers', '=', 'httputil.HTTPHeaders', 'self.buffer', '=', 'buffer', 'self._body', '=', 'effective_url', 'self.effective_url', '=', 'request.url', 'self.effective_url', '=', 'effective_url', '=', 'self.code', '<', '200', 'self.code', '>=', '300:', '=', '=', 'self.code,', 'message', '=', 'response', '=', 'self)', '=', '=', 'self.start_time', '=', 'start_time', 'self.request_time', '=', 'request_time', '=', '{}', '@property', 'body', 'self)', '->', 'bytes:', 'self.buffer', 'b\"\"', 'self._body', 'self._body', '=', 'self.buffer.getvalue', 'self._body', 'rethrow', 'self)', '->', '__repr__', 'self)', '->', 'str:', 'args', '=', '\"', '\"', '%', 's', '=', '%', 'r\"', '%', 'i', 'i', 'self.__dict__.items', '\"', '%', 's', '%', 's', '\"', '%', 'args)', 'Exception', 'self,', 'code:', 'message:', 'Optional', 'str]', '=', 'response:', 'Optional', 'HTTPResponse]', '=', '->', 'self.code', '=', 'code', 'self.message', '=', 'message', 'httputil.responses.get', 'code,', '\"Unknown\")', 'self.response', '=', 'response', 'super', 'code,', 'message,', 'response)', '__str__', 'self)', '->', 'str:', '\"HTTP', '%d:', '%s\"', '%', '(self.code,', 'self.message)', '__repr__', '=', '__str__', '=', '_RequestProxy', 'object', 'self,', 'request:', 'HTTPRequest,', 'Optional', 'Dict', 'str,', 'Any', '->', 'self.request', '=', 'request', '=', '__getattr__', 'self,', 'name:', 'str)', '->', 'Any:', 'request_attr', '=', 'getattr', 'self.request,', 'name)', 'request_attr', 'request_attr', 'name,', '->', 'options,', 'type', '=', 'bool,', '=', 'type', '=', 'bool,', '=', '\"follow_redirects\",', 'type', '=', 'bool,', '=', '\"validate_cert\",', 'type', '=', 'bool,', '=', '\"proxy_host\",', 'type', '=', 'str)', 'type', '=', 'args', '=', 'client', '=', 'HTTPClient', 'arg', 'args:', 'response', '=', 'client.fetch(', 'arg,', 'follow_redirects', '=', 'options.follow_redirects,', 'validate_cert', '=', 'options.validate_cert,', 'proxy_host', '=', 'options.proxy_host,', '=', 'e:', 'e.response', 'response', '=', 'e.response', 'response.headers)', 'native_str', 'response.body', 'client.close', '__name__', '==']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/tornado/httpserver.py",
        "vector": "['socket', 'ssl', 'native_str', 'HTTP1ServerConnection,', 'HTTP1ConnectionParameters', 'httputil', 'iostream', 'netutil', 'TCPServer', 'Configurable', 'Union,', 'Any,', 'Dict,', 'Callable,', 'Type,', 'Tuple,', 'Optional,', 'Awaitable', 'Set', 'HTTPServer', 'TCPServer,', 'Configurable,', 'httputil.HTTPServerConnectionDelegate', 'r', 'self,', '*args:', 'Any,', '*', '*', 'kwargs:', 'Any)', '->', 'self,', 'request_callback:', 'Union[', 'httputil.HTTPServerConnectionDelegate,', 'Callable', 'httputil.HTTPServerRequest', '],', 'no_keep_alive:', 'bool', '=', 'xheaders:', 'bool', '=', 'ssl_options:', 'Optional', 'Union', 'Dict', 'str,', 'Any', 'ssl.SSLContext', '=', 'protocol:', 'Optional', 'str]', '=', 'decompress_request:', 'bool', '=', 'chunk_size:', 'Optional', '=', 'max_header_size:', 'Optional', '=', 'idle_connection_timeout:', 'Optional', 'float]', '=', 'body_timeout:', 'Optional', 'float]', '=', 'max_body_size:', 'Optional', '=', 'max_buffer_size:', 'Optional', '=', 'trusted_downstream:', 'Optional', 'str', '=', '->', 'self.request_callback', '=', 'request_callback', 'self.xheaders', '=', 'xheaders', 'self.protocol', '=', 'protocol', 'self.conn_params', '=', 'HTTP1ConnectionParameters(', 'decompress', '=', 'decompress_request,', 'chunk_size', '=', 'chunk_size,', 'max_header_size', '=', 'max_header_size,', 'header_timeout', '=', 'idle_connection_timeout', '3600,', 'max_body_size', '=', 'max_body_size,', 'body_timeout', '=', 'body_timeout,', 'no_keep_alive', '=', 'no_keep_alive,', 'self,', 'ssl_options', '=', 'ssl_options,', 'max_buffer_size', '=', 'max_buffer_size,', 'read_chunk_size', '=', 'chunk_size,', 'self._connections', '=', 'set', 'self.trusted_downstream', '=', 'trusted_downstream', 'cls)', '->', 'Type', 'Configurable', 'HTTPServer', 'cls)', '->', 'Type', 'Configurable', 'HTTPServer', 'close_all_connections', 'self)', '->', 'self._connections:', 'conn', '=', 'next', 'iter', 'self._connections', 'conn.close', 'self,', 'stream:', 'iostream.IOStream,', 'address:', 'Tuple)', '->', 'context', '=', '_HTTPRequestContext(', 'stream,', 'address,', 'self.protocol,', 'self.trusted_downstream', 'conn', '=', 'HTTP1ServerConnection', 'stream,', 'self.conn_params,', 'context)', 'self._connections.add', 'conn)', 'self)', 'start_request(', 'self,', 'server_conn:', 'object,', 'request_conn:', 'httputil.HTTPConnection', '->', 'httputil.HTTPMessageDelegate:', 'self.request_callback,', 'httputil.HTTPServerConnectionDelegate', '=', 'self.request_callback.start_request', 'server_conn,', 'request_conn)', '=', '_CallableAdapter', 'self.request_callback,', 'request_conn)', 'self.xheaders:', '=', '_ProxyAdapter', 'request_conn)', 'on_close', 'self,', 'server_conn:', 'object)', '->', 'self._connections.remove', 'HTTP1ServerConnection,', 'server_conn', '_CallableAdapter', 'httputil.HTTPMessageDelegate', 'self,', 'request_callback:', 'Callable', 'httputil.HTTPServerRequest', 'request_conn:', 'httputil.HTTPConnection,', '->', 'self.connection', '=', 'request_conn', 'self.request_callback', '=', 'request_callback', 'self.request', '=', '=', 'self._chunks', '=', '[]', 'headers_received(', 'self,', 'Union', 'headers:', 'httputil.HTTPHeaders,', '->', 'Optional', 'Awaitable', 'self.request', '=', 'httputil.HTTPServerRequest(', 'connection', '=', 'self.connection,', '=', 'headers', '=', 'headers,', 'data_received', 'self,', 'chunk:', 'bytes)', '->', 'Optional', 'Awaitable', 'self._chunks.append', 'chunk)', 'self)', '->', 'self.request', 'self.request.body', '=', 'self._chunks)', 'self.request._parse_body', 'self.request_callback', 'self.request)', 'on_connection_close', 'self)', '->', 'self._chunks', '_HTTPRequestContext', 'object', 'self,', 'stream:', 'iostream.IOStream,', 'address:', 'Tuple,', 'protocol:', 'Optional', 'str', 'trusted_downstream:', 'Optional', 'str', '=', '->', 'self.address', '=', 'address', 'stream.socket', 'self.address_family', '=', 'stream.socket.family', 'self.address_family', '=', 'self.address_family', '(socket.AF_INET,', 'socket.AF_INET6)', 'address', '):', 'self.remote_ip', '=', 'address', '0]', 'self.remote_ip', '=', '\"0.0.0.0\"', 'protocol:', 'self.protocol', '=', 'protocol', 'stream,', 'iostream.SSLIOStream', 'self.protocol', '=', '\"https\"', 'self.protocol', '=', '\"http\"', '=', 'self.remote_ip', '=', 'self.protocol', 'self.trusted_downstream', '=', 'set', 'trusted_downstream', '__str__', 'self)', '->', 'str:', 'self.address_family', '(socket.AF_INET,', 'socket.AF_INET6', 'self.remote_ip', 'self.address,', 'bytes', 'native_str', 'self.address)', 'str', 'self.address)', '_apply_xheaders', 'self,', 'headers:', 'httputil.HTTPHeaders)', '->', 'ip', '=', 'headers.get', '\"X', '-', '-', 'self.remote_ip)', 'ip', 'reversed', 'ip.split', '\"', '\"', 'ip', 'self.trusted_downstream:', 'ip', '=', 'headers.get', '\"X', '-', 'Real', '-', 'Ip\",', 'ip)', 'ip', 'self.remote_ip', '=', 'ip', 'proto_header', '=', 'headers.get(', '\"X', '-', 'Scheme\",', 'headers.get', '\"X', '-', '-', 'Proto\",', 'self.protocol)', 'proto_header:', 'proto_header', '=', 'proto_header.split', '\"', '\"', '-', '1', '.strip', 'proto_header', '(\"http\",', '\"https\"', 'self.protocol', '=', 'proto_header', '_unapply_xheaders', 'self)', '->', 'self.remote_ip', '=', 'self.protocol', '=', '_ProxyAdapter', 'httputil.HTTPMessageDelegate', 'self,', 'httputil.HTTPMessageDelegate,', 'request_conn:', 'httputil.HTTPConnection,', '->', 'self.connection', '=', 'request_conn', '=', 'headers_received(', 'self,', 'Union', 'headers:', 'httputil.HTTPHeaders,', '->', 'Optional', 'Awaitable', 'self.connection.context._apply_xheaders', 'headers)', 'headers)', 'data_received', 'self,', 'chunk:', 'bytes)', '->', 'Optional', 'Awaitable', 'chunk)', 'self)', '->', 'self._cleanup', 'on_connection_close', 'self)', '->', 'self._cleanup', '_cleanup', 'self)', '->', 'self.connection.context._unapply_xheaders', 'HTTPRequest', '=', 'httputil.HTTPServerRequest']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/tornado/httputil.py",
        "vector": "['calendar', 'collections.abc', 'copy', 'datetime', 'email.utils', 'functools', 'lru_cache', 'http.client', 'responses', 'http.cookies', 're', 'ssl', 'time', 'unicodedata', 'urllib.parse', 'urlencode,', 'urlparse,', 'urlunparse,', 'parse_qsl', 'native_str,', 'parse_qs_bytes,', 'utf8', 'gen_log', 'ObjectDict,', 'unicode_type', 'responses', 'Tuple,', 'Iterable,', 'Dict,', 'Union,', 'Optional,', 'Awaitable,', 'AnyStr,', 'Deque', 'Future', 'unittest', '@lru_cache', '1000)', 'name:', 'str)', '->', 'str:', '\"', '-', 'w.capitalize', 'w', 'name.split', '\"', '-', '\"', 'HTTPHeaders', 'self,', '__arg:', 'str,', 'str', '->', 'self,', '__arg:', 'str,', 'str', '->', 'self,', '*args:', 'Tuple', 'str,', 'str', '->', 'self,', '*', '*', 'kwargs:', 'str)', '->', 'self,', '*args:', '*', '*', 'kwargs:', 'str)', '->', 'self._dict', '=', '{}', '=', '{}', '=', 'len', 'args)', '==', '1', 'len', 'kwargs)', '==', '0', 'args', '0', 'HTTPHeaders', 'k,', 'v', 'args', '0', '.get_all', 'self.add', 'k,', 'v)', 'self.update', '*', 'args,', '*', '*', 'kwargs)', 'add', 'self,', 'name:', 'str,', 'value:', 'str)', '->', '=', 'name)', '=', 'self:', 'self._dict', '=', 'native_str', 'self', '+', '\"', '\"', '+', 'native_str', 'value)', '.append', 'value)', 'self', '=', 'value', 'self,', 'name:', 'str)', '->', 'str', '=', 'name)', 'get_all', 'self)', '->', 'Iterable', 'Tuple', 'str,', 'str', 'name,', 'values', 'value', 'values:', '(name,', 'value)', 'self,', 'str)', '->', '0', '\"first', 'header', 'start', 'whitespace\")', 'new_part', '=', '\"', '\"', '+', '-', '1]', '+=', 'new_part', 'self._dict', '+=', 'new_part', 'name,', 'value', '=', '\"', '\",', '1)', '\"no', 'colon', 'header', 'self.add', 'name,', 'value.strip', 'parse', 'cls,', 'headers:', 'str)', '->', '\"HTTPHeaders\":', 'h', '=', 'cls', 'headers.split', '\"\\\\n\"', '\"\\\\r\"', '=', '-', '1]', 'h', '__setitem__', 'self,', 'name:', 'str,', 'value:', 'str)', '->', '=', 'name)', 'self._dict', '=', 'value', '=', '[value]', '__getitem__', 'self,', 'name:', 'str)', '->', 'str:', 'self._dict', 'name', 'self,', 'name:', 'str)', '->', '=', 'name)', 'self._dict', '__len__', 'self)', '->', 'len', 'self._dict)', '__iter__', 'self)', '->', 'iter', 'self._dict)', 'copy', 'self)', '->', '\"HTTPHeaders\":', 'HTTPHeaders', 'self)', '__copy__', '=', 'copy', '__str__', 'self)', '->', 'str:', '=', '[]', 'name,', 'value', 'self.get_all', '\"', '%', 's:', '%s\\\\n\"', '%', '(name,', 'value', '__unicode__', '=', '__str__', 'HTTPServerRequest', 'object', 'path', '=', 'query', '=', '_body_future', '=', 'self,', 'method:', 'Optional', 'str]', '=', 'uri:', 'Optional', 'str]', '=', 'version:', 'str', '=', '\"HTTP', '/', '1.0\",', 'headers:', 'Optional', 'HTTPHeaders]', '=', 'body:', 'Optional', 'bytes]', '=', 'host:', 'Optional', 'str]', '=', 'files:', 'Optional', 'Dict', 'str,', '\"HTTPFile\"', '=', 'connection:', 'Optional', '\"HTTPConnection\"]', '=', 'Optional', '=', 'server_connection:', 'Optional', 'object]', '=', '->', 'method,', 'uri,', 'version', '=', 'self.method', '=', 'method', 'self.uri', '=', 'uri', 'self.version', '=', 'version', 'self.headers', '=', 'headers', 'HTTPHeaders', 'self.body', '=', 'body', 'b\"\"', 'context', '=', 'getattr', 'connection,', '\"context\",', 'self.remote_ip', '=', 'getattr', 'context,', '\"remote_ip\",', 'self.protocol', '=', 'getattr', 'context,', '\"protocol\",', '\"http\")', 'self.host', '=', 'host', 'self.headers.get', '\"Host\")', '\"127.0.0.1\"', 'self.host_name', '=', 'self.host.lower', '0]', 'self.files', '=', 'files', '{}', 'self.connection', '=', 'connection', 'self.server_connection', '=', 'server_connection', 'self._start_time', '=', 'time.time', '=', 'uri', 'self.path,', 'sep,', 'self.query', '=', 'uri.partition', '\"?\")', 'self.arguments', '=', 'parse_qs_bytes', 'self.query,', 'keep_blank_values', '=', 'self.query_arguments', '=', 'copy.deepcopy', 'self.arguments)', 'self.body_arguments', '=', '{}', '@property', 'cookies', 'self)', '->', 'Dict', 'str,', 'self,', '\"_cookies\"', 'self._cookies', '=', 'http.cookies.SimpleCookie', '\"Cookie\"', 'self.headers:', 'parsed', '=', 'parse_cookie', 'self.headers', '\"Cookie\"', 'Exception:', 'k,', 'v', 'parsed.items', 'self._cookies', 'k]', '=', 'v', 'Exception:', 'self._cookies', 'full_url', 'self)', '->', 'str:', 'self.protocol', '+', '\"', '/', '/', '\"', '+', 'self.host', '+', 'self.uri', 'request_time', 'self)', '->', 'float:', 'time.time', '-', 'self._start_time', '-', 'self._start_time', 'self,', 'bool', '=', '->', 'Union', 'Dict,', 'bytes', 'self.connection', 'self.connection.stream.socket.getpeercert(', '=', '_parse_body', 'self)', '->', 'parse_body_arguments(', 'self.headers.get', '\"Content', '-', 'Type\",', '\"\"', 'self.body,', 'self.body_arguments,', 'self.files,', 'self.headers,', 'k,', 'v', 'self.body_arguments.items', 'k,', '.extend', 'v)', '__repr__', 'self)', '->', 'str:', 'attrs', '=', '(\"protocol\",', '\"host\",', '\"method\",', '\"uri\",', '\"version\",', '\"remote_ip\")', 'args', '=', '\",', '\"', '%', 's', '=', '%', 'r\"', '%', '(n,', 'getattr', 'self,', 'n', 'n', 'attrs', '\"', '%', 's', '%', 's', '\"', '%', 'args)', 'Exception', 'Exception', 'HTTPServerConnectionDelegate', 'object', 'start_request(', 'self,', 'server_conn:', 'object,', 'request_conn:', '\"HTTPConnection\"', '->', '\"HTTPMessageDelegate\":', 'on_close', 'self,', 'server_conn:', 'object)', '->', 'HTTPMessageDelegate', 'object', 'headers_received(', 'self,', 'Union', 'headers:', 'HTTPHeaders,', '->', 'Optional', 'Awaitable', 'data_received', 'self,', 'chunk:', 'bytes)', '->', 'Optional', 'Awaitable', 'self)', '->', 'on_connection_close', 'self)', '->', 'HTTPConnection', 'object', 'write_headers(', 'self,', 'Union', 'headers:', 'HTTPHeaders,', 'chunk:', 'Optional', 'bytes]', '=', '->', '\"Future', '\":', 'write', 'self,', 'chunk:', 'bytes)', '->', '\"Future', '\":', 'self)', '->', 'url_concat(', 'url:', 'str,', 'args:', 'Union[', 'Dict', 'str,', 'str', 'Tuple', 'str,', 'str', 'Tuple', 'Tuple', 'str,', 'str', '...]', '],', '->', 'str:', 'args', 'url', 'parsed_url', '=', 'urlparse', 'url)', 'args,', 'dict', 'parsed_query', '=', 'parse_qsl', 'parsed_url.query,', 'keep_blank_values', '=', 'parsed_query.extend', 'args.items', 'args,', 'args,', 'tuple', 'parsed_query', '=', 'parse_qsl', 'parsed_url.query,', 'keep_blank_values', '=', 'parsed_query.extend', 'args)', 'err', '=', '\"\\'args\\'', 'parameter', 'should', 'be', 'dict,', 'tuple.', 'Not', '{0', 'type', 'args)', 'err)', '=', 'urlencode', 'parsed_query)', 'url', '=', 'urlunparse(', 'parsed_url', '0', 'parsed_url', '1', 'parsed_url', '2', 'parsed_url', '3', 'parsed_url', '5', 'url', 'HTTPFile', 'ObjectDict', 'filename:', 'str', 'body:', 'bytes', 'content_type:', 'str', '_parse_request_range(', 'range_header:', 'str,', '->', 'Optional', 'Tuple', 'Optional', 'Optional', 'unit,', '_,', 'value', '=', 'range_header.partition', '\"', '=', '\")', 'unit,', 'value', '=', 'unit.strip', 'value.strip', 'unit', '!=', '\"bytes\":', 'start_b,', '_,', 'end_b', '=', 'value.partition', '\"', '-', '\")', 'start', '=', 'start_b)', 'end', '=', 'end_b)', 'end', 'start', 'end', '!=', '0:', 'start', '=', '-end', 'end', '=', 'end', '+=', '1', '(start,', 'end)', '_get_content_range', 'start:', 'Optional', 'end:', 'Optional', 'total:', '->', 'str:', 'start', '=', 'start', '0', 'end', '=', '(end', 'total)', '-', '1', '\"bytes', '%s', '-', '%', 's', '/', '%', 's\"', '%', '(start,', 'end,', 'total)', 'val:', 'str)', '->', 'Optional', 'val', '=', 'val.strip', 'val', '==', '\"\":', 'val)', 'parse_body_arguments(', 'content_type:', 'str,', 'body:', 'bytes,', 'arguments:', 'Dict', 'str,', 'bytes', 'files:', 'Dict', 'str,', 'HTTPFile', 'headers:', 'Optional', 'HTTPHeaders]', '=', '->', '\"application', '/', 'x', '-', 'www', '-', '-', 'urlencoded\"', 'headers', '\"Content', '-', 'headers:', 'Content', '-', '%s\",', 'headers', '\"Content', '-', 'uri_arguments', '=', 'parse_qs_bytes', 'body,', 'keep_blank_values', '=', 'Exception', 'e:', '\"Invalid', 'x', '-', 'www', '-', '-', 'urlencoded', 'body:', '%s\",', 'e)', 'uri_arguments', '=', '{}', 'name,', 'values', 'uri_arguments.items', 'values:', 'name,', '.extend', 'values)', '\"multipart', '/', '-', 'data\"', 'headers', '\"Content', '-', 'headers:', 'Content', '-', '%s\",', 'headers', '\"Content', '-', 'fields', '=', 'content_type.split', '\"', '\")', 'field', 'fields:', 'k,', 'sep,', 'v', '=', 'field.strip', '.partition', '\"', '=', '\")', 'k', '==', '\"boundary\"', 'v:', 'utf8', 'v', 'body,', 'arguments,', 'files)', '\"multipart', 'boundary', 'found\")', 'Exception', 'e:', '\"Invalid', 'multipart', '/', '-', 'data:', '%s\",', 'e)', 'boundary:', 'bytes,', 'data:', 'bytes,', 'arguments:', 'Dict', 'str,', 'bytes', 'files:', 'Dict', 'str,', 'HTTPFile', '->', 'b\\'\"\\')', 'b\\'\"\\'', 'boundary', '=', 'boundary', '1', '-', '1]', '=', 'b\"', '--', '\"', '+', 'boundary', '+', 'b\"', '--', '\")', '==', '-1:', '\"Invalid', 'multipart', '/', '-', 'data:', 'no', 'boundary\")', 'parts', '=', 'data', '.split', 'b\"', '--', '\"', '+', 'boundary', '+', 'b\"\\\\r\\\\n\")', 'part', 'parts:', 'part:', 'eoh', '=', 'b\"\\\\r\\\\n\\\\r\\\\n\")', 'eoh', '==', '-1:', '\"multipart', '/', '-', 'data', 'headers\")', 'headers', '=', 'HTTPHeaders.parse', 'part', 'eoh', '.decode', '\"utf', '-', '8\"', '=', 'headers.get', '\"Content', '-', '\"\")', '=', '_parse_header', '!=', '-', 'data\"', 'b\"\\\\r\\\\n\"', '\"Invalid', 'multipart', '/', '-', 'data\")', 'value', '=', 'part', 'eoh', '+', '4', '-2]', '\"name\"', '\"multipart', '/', '-', 'data', 'value', 'name\")', 'name', '=', '\"name\"]', '\"filename\"', 'ctype', '=', 'headers.get', '\"Content', '-', 'Type\",', '\"application', '/', 'unknown\")', 'name,', '.append(', 'HTTPFile(', 'filename', '=', '\"filename\"', 'body', '=', 'value,', 'content_type', '=', 'ctype', 'name,', '.append', 'value)', 'ts:', 'Union', 'float,', 'tuple,', 'time.struct_time,', 'datetime.datetime]', '->', 'str:', 'ts,', 'float', 'time_num', '=', 'ts', 'ts,', '(tuple,', 'time.struct_time', 'time_num', '=', 'calendar.timegm', 'ts)', 'ts,', 'datetime.datetime', 'time_num', '=', 'calendar.timegm', 'ts.utctimetuple', '\"unknown', 'timestamp', 'type:', '%r\"', '%', 'ts)', 'time_num,', 'usegmt', '=', '=', 'collections.namedtuple(', '[\"method\",', '\"path\",', '\"version\"]', '_http_version_re', '=', 're.compile', 'r\"', '^', 'HTTP', '/', '1\\\\.', '0', '-', '9', '$\")', 'str)', '->', 'method,', 'path,', 'version', '=', '\"', '\")', 'HTTP', 'request', '_http_version_re.match', 'version', 'HTTP', 'version', 'HTTP', 'Request', '-', '%r\"', '%', 'version', 'method,', 'path,', 'version)', '=', 'collections.namedtuple(', '[\"version\",', '\"code\",', '=', 're.compile', 'r\"', 'HTTP', '/', '1.', '0', '-', '9', '0', '-', '9', '+', '^', '\\\\r', '*', '\")', 'str)', '->', '=', 'native_str', 'match', '=', 'match:', 'response', 'start', 'match.group', '1', 'match.group', '2', 'match.group', '3', '_parseparam', 's:', 'str)', '->', 'str,', 's', '1]', '==', '\"', '\":', 's', '=', 's', '1', 'end', '=', '\"', '\")', 'end', '>', '0', '(s.count', '\\'\"\\',', '0,', 'end)', '-', 's.count', '\\'\\\\\\\\\"\\',', '0,', 'end', '%', '2:', 'end', '=', '\"', '\",', 'end', '+', '1)', 'end', '<', '0:', 'end', '=', 'len', 's)', 'f', '=', 's', 'end]', 'f.strip', 's', '=', 's', 'end', '_parse_header', 'str)', '->', 'Tuple', 'str,', 'Dict', 'str,', 'str', 'r', 'parts', '=', '_parseparam', '\"', '\"', '+', 'key', '=', 'next', 'parts)', 'params', '=', '\"Dummy\",', '\"value\"', 'p', 'parts:', 'i', '=', '\"', '=', '\")', 'i', '>=', '0:', 'name', '=', 'p', 'i', '.strip', '.lower', 'value', '=', 'p', 'i', '+', '1', '.strip', 'params.append', 'name,', 'native_str', 'value', 'decoded_params', '=', 'email.utils.decode_params', 'params)', 'decoded_params.pop', '0)', 'pdict', '=', '{}', 'name,', 'decoded_value', 'decoded_params:', 'value', '=', 'email.utils.collapse_rfc2231_value', 'decoded_value)', 'len', 'value)', '>=', '2', 'value', '0]', '==', '\\'\"\\'', 'value', '-', '1]', '==', '\\'\"\\':', 'value', '=', 'value', '1', '-', '1]', 'pdict', 'name]', '=', 'value', 'key,', 'pdict', '_encode_header', 'key:', 'str,', 'pdict:', 'Dict', 'str,', 'str', '->', 'str:', 'pdict:', 'key', 'out', '=', '[key]', 'k,', 'v', 'pdict.items', 'v', 'out.append', 'k)', 'out.append', '\"', '%', 's', '=', '%', 's\"', '%', '(k,', 'v', '\";', 'out)', 'username:', 'Union', 'str,', 'bytes', 'Union', 'str,', 'bytes]', '->', 'bytes:', 'username,', 'unicode_type', 'username', '=', '\"NFC\",', 'username)', 'unicode_type', '=', '\"NFC\",', 'utf8', 'username)', '+', 'b\"', '\"', '+', 'utf8', 'doctests', 'doctest', 'doctest.DocTestSuite', '_netloc_re', '=', 're.compile', 'r\"', '^', '.', '+', '\\\\d', '+', '$\")', 'netloc:', 'str)', '->', 'Tuple', 'str,', 'Optional', 'match', '=', '_netloc_re.match', 'netloc)', 'match:', 'host', '=', 'match.group', '1)', '=', 'match.group', '2', 'host', '=', 'netloc', '=', '(host,', 'qs_to_qsl', 'qs:', 'Dict', 'str,', 'AnyStr', '->', 'Iterable', 'Tuple', 'str,', 'AnyStr', 'k,', 'vs', 'qs.items', 'v', 'vs:', '(k,', 'v)', '_OctalPatt', '=', 're.compile', 'r\"\\\\\\\\', '0', '-', '3', '0', '-', '7', '0', '-', '7', '\")', '_QuotePatt', '=', 're.compile', 'r\"', '\\\\\\\\', '.\")', '=', '_unquote_cookie', 's:', 'str)', '->', 'str:', 's', 'len', 's)', '<', '2:', 's', 's', '0]', '!=', '\\'\"\\'', 's', '-', '1]', '!=', '\\'\"\\':', 's', 's', '=', 's', '1', '-', '1]', 'i', '=', '0', 'n', '=', 'len', 's)', 'res', '=', '[]', '0', '<=', 'i', '<', 'n:', 'o_match', '=', '_OctalPatt.search', 's,', 'i)', 'q_match', '=', '_QuotePatt.search', 's,', 'i)', 'o_match', 'q_match:', 'res.append', 's', 'i', 'j', '=', 'k', '=', '-1', 'o_match:', 'j', '=', 'o_match.start', '0)', 'q_match:', 'k', '=', 'q_match.start', '0)', 'q_match', 'o_match', 'k', '<', 'j', 'res.append', 's', 'i', 'k', 'res.append', 's', 'k', '+', '1', 'i', '=', 'k', '+', '2', 'res.append', 's', 'i', 'j', 'res.append', 'chr', 's', 'j', '+', '1', 'j', '+', '4', '8', 'i', '=', 'j', '+', '4', 'res)', 'parse_cookie', 'cookie:', 'str)', '->', 'Dict', 'str,', 'str', 'cookiedict', '=', '{}', 'chunk', 'cookie.split', 'str', '\"', '\"', 'str', '\"', '=', '\")', 'chunk:', 'key,', 'val', '=', 'chunk.split', 'str', '\"', '=', '\"', '1)', 'key,', 'val', '=', 'str', '\"\"', 'chunk', 'key,', 'val', '=', 'key.strip', 'val.strip', 'key', 'val:', 'cookiedict', 'key]', '=', '_unquote_cookie', 'val)', 'cookiedict']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/tornado/ioloop.py",
        "vector": "['concurrent.futures', 'datetime', 'functools', 'numbers', 'os', 'sys', 'time', 'math', 'Future,', 'future_add_done_callback,', 'app_log', 'Configurable,', 'Union,', 'Any,', 'Type,', 'Optional,', 'Callable,', 'TypeVar,', 'Tuple,', 'Awaitable', 'Dict,', 'Set', 'Protocol', 'Protocol', '=', 'object', '_Selectable', 'Protocol', 'fileno', 'self)', '->', 'close', 'self)', '->', '_T', '=', 'TypeVar', '\"_T\")', '_S', '=', 'TypeVar', '\"_S\",', 'bound', '=', '_Selectable)', 'IOLoop', 'Configurable', 'NONE', '=', '0', 'READ', '=', '0x001', 'WRITE', '=', '0x004', 'ERROR', '=', '0x018', '=', 'dict', '=', 'set', 'configure(', 'cls,', 'impl:', '\"Union', 'str,', 'Type', 'Configurable', '\",', '*', '*', 'kwargs:', 'Any', '->', 'impl,', 'str', 'impl', '=', 'impl)', 'impl,', 'type)', 'impl,', '\"only', 'AsyncIOLoop', 'allowed', 'when', 'available\")', 'super', 'IOLoop,', 'cls', '.configure', 'impl,', '*', '*', 'kwargs)', '@staticmethod', '->', '\"IOLoop\":', 'IOLoop.current', 'self)', '->', 'self.make_current', '@staticmethod', '->', 'IOLoop.clear_current', '@staticmethod', 'current', '->', '\"IOLoop\":', '@staticmethod', 'current', 'bool', '=', '->', 'Optional', '\"IOLoop\"', '@staticmethod', 'current', 'bool', '=', '->', 'Optional', '\"IOLoop\"', 'loop', '=', 'loop', '=', 'loop)', 'loop]', 'current', '=', 'current', '=', 'current', 'make_current', 'self)', '->', '\"make_current', 'deprecated;', 'start', 'the', 'event', 'loop', 'first\",', 'stacklevel', '=', '2,', 'self._make_current', '_make_current', 'self)', '->', '@staticmethod', 'clear_current', '->', '\"clear_current', 'deprecated\",', 'stacklevel', '=', '2,', 'IOLoop._clear_current', '@staticmethod', '_clear_current', '->', 'old', '=', 'IOLoop.current', '=', 'old', 'old._clear_current_hook', '_clear_current_hook', 'self)', '->', 'cls)', '->', 'Type', 'Configurable', 'IOLoop', 'cls)', '->', 'Type', 'Configurable', 'AsyncIOLoop', 'AsyncIOLoop', 'self,', 'make_current:', 'bool', '=', '->', 'make_current:', 'self._make_current', 'close', 'self,', 'all_fds:', 'bool', '=', '->', 'self,', 'fd:', 'Callable', 'events:', '->', 'self,', 'fd:', '_S,', 'Callable', '_S,', 'events:', '->', 'self,', 'fd:', 'Union', '_Selectable', 'Callable', '...,', 'events:', '->', 'self,', 'fd:', 'Union', '_Selectable', 'events:', '->', 'self,', 'fd:', 'Union', '_Selectable', '->', 'start', 'self)', '->', 'stop', 'self)', '->', 'run_sync', 'self,', 'func:', 'Callable,', 'timeout:', 'Optional', 'float]', '=', '->', 'Any:', 'future_cell', '=', 'run', '->', 'result', '=', 'func', 'result', 'result', '=', 'result)', 'Exception:', 'fut', '=', 'Future', 'future_cell', '0]', '=', 'fut', 'fut,', 'result', 'future_cell', '0]', '=', 'result', 'fut', '=', 'Future', 'future_cell', '0]', '=', 'fut', 'fut.set_result', 'result)', 'future_cell', '0]', 'self.add_future', 'future_cell', '0', 'future:', 'self.stop', 'self.add_callback', 'run)', 'timeout', 'timeout_callback', '->', 'future_cell', '0]', 'future_cell', '0', '.cancel', 'self.stop', '=', 'self.add_timeout', 'self.time', '+', 'timeout,', 'timeout_callback)', 'self.start', 'timeout', 'self.remove_timeout', 'future_cell', '0]', 'future_cell', '0', '.cancelled', 'future_cell', '0', '.done', '\"Operation', 'timed', 'out', 'after', '%s', 'seconds\"', '%', 'timeout)', 'future_cell', '0', '.result', 'time', 'self)', '->', 'float:', 'time.time', 'add_timeout(', 'self,', 'Union', 'float,', 'callback:', 'Callable,', '*args:', 'Any,', '*', '*', 'kwargs:', 'Any', '->', 'object:', 'numbers.Real', 'self.call_at', 'callback,', '*args,', '*', '*', 'kwargs)', 'self.call_at(', 'self.time', '+', 'callback,', '*args,', '*', '*', 'kwargs', '%r\"', '%', 'call_later(', 'self,', 'float,', 'callback:', 'Callable,', '*args:', 'Any,', '*', '*', 'kwargs:', 'Any', '->', 'object:', 'self.call_at', 'self.time', '+', 'callback,', '*args,', '*', '*', 'kwargs)', 'call_at(', 'self,', 'when:', 'float,', 'callback:', 'Callable,', '*args:', 'Any,', '*', '*', 'kwargs:', 'Any', '->', 'object:', 'self.add_timeout', 'when,', 'callback,', '*args,', '*', '*', 'kwargs)', 'remove_timeout', 'self,', 'timeout:', 'object)', '->', 'add_callback', 'self,', 'callback:', 'Callable,', '*args:', 'Any,', '*', '*', 'kwargs:', 'Any)', '->', 'self,', 'callback:', 'Callable,', '*args:', 'Any,', '*', '*', 'kwargs:', 'Any', '->', 'spawn_callback', 'self,', 'callback:', 'Callable,', '*args:', 'Any,', '*', '*', 'kwargs:', 'Any)', '->', 'self.add_callback', 'callback,', '*args,', '*', '*', 'kwargs)', 'add_future(', 'self,', 'future:', '\"Union', 'Future', '_T', 'concurrent.futures.Future', '_T', '\",', 'callback:', 'Callable', '\"Future', '_T', '\"', '->', 'future,', 'Future', 'future.add_done_callback(', 'f:', 'self._run_callback', 'functools.partial', 'callback,', 'f', 'future)', 'future_add_done_callback', 'future,', 'f:', 'self.add_callback', 'callback,', 'f', 'self,', 'Optional', 'func:', 'Callable', '...,', '_T', '*args:', 'Any', '->', '\"Future', '_T', '\":', 'self,', 'cpu_count', '=', '=', 'cpu_count', '*', '5)', '=', 'c_future', '=', 'func,', '*args)', 't_future', '=', 'Future', 'self.add_future', 'c_future,', 'f:', 'f,', 't_future', 't_future', 'self,', '->', '=', '_run_callback', 'self,', 'callback:', 'Callable', 'Any', '->', 'ret', '=', 'callback', 'ret', 'gen', 'ret', '=', 'ret)', 'self.add_future', 'ret,', 'Exception:', '\"Exception', 'callback', '%r\",', 'callback,', '=', 'self,', 'future:', 'Future)', '->', 'future.result', 'split_fd(', 'self,', 'fd:', 'Union', '_Selectable]', '->', 'Tuple', 'Union', '_Selectable', 'fd,', 'fd,', 'fd', 'fd.fileno', 'fd', 'close_fd', 'self,', 'fd:', 'Union', '_Selectable', '->', 'fd,', 'os.close', 'fd)', 'fd.close', 'self,', 'f:', 'Future)', '->', 'f)', 'self,', 'f:', 'Future)', '->', 'f)', '_Timeout', 'object', '__slots__', '=', '\"callback\",', 'self,', 'float,', 'callback:', 'Callable', 'io_loop:', 'IOLoop', '->', 'numbers.Real', '%r\"', '%', '=', 'self.callback', '=', 'callback', '=', 'next', 'io_loop._timeout_counter', '__lt__', 'self,', 'other:', '\"_Timeout\")', '->', 'bool:', '<', '__le__', 'self,', 'other:', '\"_Timeout\")', '->', 'bool:', '<=', 'PeriodicCallback', 'object', 'self,', 'callback:', 'Callable', 'Optional', 'Awaitable', 'callback_time:', 'Union', 'float', 'jitter:', 'float', '=', '0,', '->', 'self.callback', '=', 'callback', 'callback_time,', 'self.callback_time', '=', 'callback_time', '/', '=', '1)', 'callback_time', '<=', '0:', '\"Periodic', 'callback', 'must', 'have', 'a', 'positive', 'callback_time\")', 'self.callback_time', '=', 'callback_time', 'self.jitter', '=', 'jitter', '=', 'self._timeout', '=', 'start', 'self)', '->', 'self.io_loop', '=', 'IOLoop.current', '=', 'self._next_timeout', '=', 'self.io_loop.time', 'self._schedule_next', 'stop', 'self)', '->', '=', 'self._timeout', 'self.io_loop.remove_timeout', 'self._timeout)', 'self._timeout', '=', 'self)', '->', 'bool:', '_run', 'self)', '->', 'val', '=', 'self.callback', 'val', 'val', 'val', 'Exception:', '\"Exception', 'callback', '%r\",', 'self.callback,', '=', 'self._schedule_next', '_schedule_next', 'self)', '->', 'self._update_next', 'self.io_loop.time', 'self._timeout', '=', 'self.io_loop.add_timeout', 'self._next_timeout,', 'self._run)', '_update_next', 'self,', 'current_time:', 'float)', '->', 'callback_time_sec', '=', 'self.callback_time', '/', '1000.0', 'self.jitter:', 'callback_time_sec', '*=', '1', '+', '(self.jitter', '*', '-', '0.5', 'self._next_timeout', '<=', 'current_time:', 'self._next_timeout', '+=', 'current_time', '-', 'self._next_timeout)', '/', 'callback_time_sec)', '+', '1', '*', 'callback_time_sec', 'self._next_timeout', '+=', 'callback_time_sec']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/tornado/iostream.py",
        "vector": "['collections', 'errno', 'io', 'numbers', 'os', 'socket', 'ssl', 'sys', 're', 'Future,', 'future_set_result_unless_cancelled', 'ioloop', 'gen_log', 'ssl_wrap_socket,', 'Union,', 'Optional,', 'Awaitable,', 'Callable,', 'Pattern,', 'Any,', 'Dict,', 'TypeVar,', 'Tuple,', 'types', 'TracebackType', 'Deque,', 'Type', '_IOStreamType', '=', 'TypeVar', '\"_IOStreamType\",', 'bound', '=', '\"IOStream\")', '_ERRNO_CONNRESET', '=', '(errno.ECONNRESET,', 'errno.ECONNABORTED,', 'errno.EPIPE,', 'errno.ETIMEDOUT)', 'errno,', '\"WSAECONNRESET\"', '_ERRNO_CONNRESET', '+=', 'errno.WSAECONNRESET,', 'errno.WSAECONNABORTED,', 'errno.WSAETIMEDOUT,', '==', '_ERRNO_CONNRESET', '+=', '(errno.EPROTOTYPE', '_WINDOWS', '=', 'self,', 'Optional', '=', '->', 'super', '\"Stream', 'closed\")', '=', 'Exception', 'Exception', '_StreamBuffer', 'object', 'self)', '->', 'self._buffers', '=', 'collections.deque', 'self._first_pos', '=', '0', 'self._size', '=', '0', '__len__', 'self)', '->', 'self._size', '_large_buf_threshold', '=', '2048', 'append', 'self,', 'data:', 'Union', 'bytes,', 'bytearray,', '->', 'size', '=', 'len', 'data)', 'size', '>', 'self._large_buf_threshold:', 'data,', 'data', '=', 'data)', 'self._buffers.append', 'data', 'size', '>', '0:', 'self._buffers:', 'b', '=', 'self._buffers', '-', '1]', 'new_buf', '=', 'len', 'b)', '>=', 'self._large_buf_threshold', 'new_buf', '=', 'new_buf:', 'self._buffers.append', 'bytearray', 'data', 'b', '+=', 'data', 'self._size', '+=', 'size', 'peek', 'self,', 'size:', '->', 'size', '>', '0', 'b', '=', 'self._buffers', '0]', 'b\"\")', 'pos', '=', 'self._first_pos', 'b', 'pos', 'pos', '+', 'size', 'b', 'pos', 'pos', '+', 'size]', 'advance', 'self,', 'size:', '->', '0', '<', 'size', '<=', 'self._size', 'self._size', '-=', 'size', 'pos', '=', 'self._first_pos', 'buffers', '=', 'self._buffers', 'buffers', 'size', '>', '0:', 'b', '=', 'buffers', '0]', '=', 'len', 'b)', '-', 'size', '-', 'pos', '<=', '0:', 'buffers.popleft', 'size', '-=', 'len', 'b)', '-', 'pos', 'pos', '=', '0', 'pos', '+=', 'size', 'size', '=', '0', 'pos', '+=', 'size', 'bytearray,', 'b', 'pos]', 'pos', '=', '0', 'size', '=', '0', 'size', '==', '0', 'self._first_pos', '=', 'pos', 'object', 'self,', 'max_buffer_size:', 'Optional', '=', 'read_chunk_size:', 'Optional', '=', 'max_write_buffer_size:', 'Optional', '=', '->', 'self.io_loop', '=', 'ioloop.IOLoop.current', 'self.max_buffer_size', '=', 'max_buffer_size', '104857600', 'self.read_chunk_size', '=', 'read_chunk_size', '65536,', 'self.max_buffer_size', '//', '2)', 'self.max_write_buffer_size', '=', 'max_write_buffer_size', '=', 'self._read_buffer', '=', 'bytearray', 'self._read_buffer_size', '=', '0', 'self._user_read_buffer', '=', 'self._after_user_read_buffer', '=', 'self._write_buffer', '=', '_StreamBuffer', '=', '0', '=', '0', '=', 'self._read_regex', '=', 'self._read_max_bytes', '=', 'self._read_bytes', '=', 'self._read_partial', '=', 'self._read_until_close', '=', 'self._read_future', '=', 'self._write_futures', '=', 'collections.deque', 'self._close_callback', '=', 'self._connect_future', '=', 'self._ssl_connect_future', '=', '=', 'self._state', '=', 'self._closed', '=', 'fileno', 'self)', '->', 'Union', 'ioloop._Selectable', 'close_fd', 'self)', '->', 'write_to_fd', 'self,', 'data:', '->', 'self,', 'buf:', 'Union', 'bytearray,', '->', 'Optional', 'self)', '->', 'Optional', 'Exception', 'read_until_regex(', 'self,', 'regex:', 'bytes,', 'max_bytes:', 'Optional', '=', '->', 'Awaitable', 'bytes', 'future', '=', 'self._start_read', 'self._read_regex', '=', 're.compile', 'regex)', 'self._read_max_bytes', '=', 'max_bytes', 'e:', 'read,', 'connection:', '%s\"', '%', 'e)', 'self.close', '=', 'e)', 'future', 'future.add_done_callback', 'f:', 'future', 'read_until(', 'self,', 'bytes,', 'max_bytes:', 'Optional', '=', '->', 'Awaitable', 'bytes', 'future', '=', 'self._start_read', '=', 'self._read_max_bytes', '=', 'max_bytes', 'e:', 'read,', 'connection:', '%s\"', '%', 'e)', 'self.close', '=', 'e)', 'future', 'future.add_done_callback', 'f:', 'future', 'read_bytes', 'self,', 'num_bytes:', 'partial:', 'bool', '=', '->', 'Awaitable', 'bytes', 'future', '=', 'self._start_read', 'num_bytes,', 'numbers.Integral)', 'self._read_bytes', '=', 'num_bytes', 'self._read_partial', '=', 'partial', 'future.add_done_callback', 'f:', 'future', 'self,', 'buf:', 'bytearray,', 'partial:', 'bool', '=', '->', 'Awaitable', 'future', '=', 'self._start_read', 'available_bytes', '=', 'self._read_buffer_size', 'n', '=', 'len', 'buf)', 'available_bytes', '>=', 'n:', 'buf', '=', 'self._read_buffer', 'n]', 'self._read_buffer', 'n]', 'self._after_user_read_buffer', '=', 'self._read_buffer', 'available_bytes', '>', '0:', 'buf', 'available_bytes]', '=', 'self._read_buffer', 'self._user_read_buffer', '=', 'self._read_buffer', '=', 'buf', 'self._read_buffer_size', '=', 'available_bytes', 'self._read_bytes', '=', 'n', 'self._read_partial', '=', 'partial', 'future.add_done_callback', 'f:', 'future', 'read_until_close', 'self)', '->', 'Awaitable', 'bytes', 'future', '=', 'self._start_read', 'self.closed', 'self._read_buffer_size)', 'future', 'self._read_until_close', '=', 'future.add_done_callback', 'f:', 'future', 'write', 'self,', 'data:', 'Union', 'bytes,', '->', '\"Future', '\":', 'self._check_closed', 'data:', 'data,', 'data', '=', 'data', '\"B\")', 'self.max_write_buffer_size', 'len', 'self._write_buffer)', '+', 'len', 'data)', '>', 'self.max_write_buffer_size', '):', '\"Reached', 'maximum', 'write', 'buffer', 'size\")', 'self._write_buffer.append', 'data)', '+=', 'len', 'data)', 'future', '=', 'Future', 'future.add_done_callback', 'f:', 'self._write_futures.append', 'future', 'self._write_buffer:', 'self._add_io_state', 'self.io_loop.WRITE)', 'future', 'set_close_callback', 'self,', 'callback:', 'Optional', 'Callable', '->', 'self._close_callback', '=', 'callback', 'close(', 'self,', 'Union[', 'bool,', 'Tuple[', '\"Optional', 'Type', '\",', 'Optional', 'Optional', 'TracebackType', '],', '=', '->', 'self.closed', 'tuple', '=', '1]', '=', '=', 'any', '=', '1]', 'self._read_until_close:', 'self._read_until_close', '=', 'self._read_buffer_size)', 'self._read_future', 'pos', '=', 'pos', 'pos)', 'self._state', 'self.fileno', 'self._state', '=', 'self.close_fd', 'self._closed', '=', 'self._signal_closed', '_signal_closed', 'self)', '->', 'futures', '=', '[]', 'self._read_future', 'futures.append', 'self._read_future)', 'self._read_future', '=', 'futures', '+=', '[future', '_,', 'future', 'self._write_futures]', 'self._write_futures.clear', 'self._connect_future', 'futures.append', 'self._connect_future)', 'self._connect_future', '=', 'future', 'futures:', 'future.done', '=', 'self._ssl_connect_future', 'self._ssl_connect_future.done', 'self._ssl_connect_future', '=', 'self._close_callback', 'cb', '=', 'self._close_callback', 'self._close_callback', '=', 'self.io_loop.add_callback', 'cb)', 'self._write_buffer', '=', 'self)', '->', 'bool:', 'self._read_future', 'self)', '->', 'bool:', 'bool', 'self._write_buffer)', 'closed', 'self)', '->', 'bool:', 'self._closed', 'self,', 'value:', 'bool)', '->', 'self)', '->', 'self,', 'fd:', 'Union', 'ioloop._Selectable', 'events:', '->', 'self.closed', '\"Got', 'events', 'closed', 'stream', '%s\",', 'fd)', 'self.closed', 'events', '&', 'self.io_loop.READ:', 'self.closed', 'events', '&', 'self.io_loop.WRITE:', 'self.closed', 'events', '&', 'self.io_loop.ERROR:', '=', 'self.io_loop.add_callback', 'self.close)', 'state', '=', 'self.io_loop.ERROR', 'state', '|=', 'self.io_loop.READ', 'state', '|=', 'self.io_loop.WRITE', 'state', '==', 'self.io_loop.ERROR', 'self._read_buffer_size', '==', '0:', 'state', '|=', 'self.io_loop.READ', 'state', '!=', 'self._state:', 'self._state', '),', '\"shouldn\\'t', 'happen:', 'self._state\"', 'self._state', '=', 'state', 'self.fileno', 'self._state)', 'e:', 'read,', 'connection:', '%s\"', '%', 'e)', 'self.close', '=', 'e)', 'Exception', 'e:', '\"Uncaught', 'connection.\",', '=', 'self.close', '=', 'e)', '_read_to_buffer_loop', 'self)', '->', 'Optional', 'self._read_bytes', 'target_bytes', '=', 'self._read_bytes', 'self._read_max_bytes', 'target_bytes', '=', 'self._read_max_bytes', 'target_bytes', '=', 'target_bytes', '=', '0', '=', '0', 'self.closed', 'self._read_to_buffer', '==', '0:', 'target_bytes', 'self._read_buffer_size', '>=', 'target_bytes:', 'self._read_buffer_size', '>=', 'pos', '=', 'pos', 'pos', '=', 'self._read_buffer_size', '*', '2', 'self)', '->', 'pos', '=', 'self._read_to_buffer_loop', 'Exception', 'e:', 'on', 'read:', '%s\"', '%', 'e)', 'self.close', '=', 'e)', 'pos', 'pos)', '_start_read', 'self)', '->', 'Future:', 'self._read_future', 'self._check_closed', 'self._read_future', '\"Already', 'self._read_future', '=', 'Future', 'self._read_future', 'self,', 'size:', '->', 'self._user_read_buffer:', 'self._read_buffer', '=', 'self._after_user_read_buffer', 'bytearray', 'self._after_user_read_buffer', '=', 'self._read_buffer_size', '=', 'len', 'self._read_buffer)', 'self._user_read_buffer', '=', 'result', '=', 'size', 'result', '=', 'self._consume', 'size)', 'self._read_future', 'future', '=', 'self._read_future', 'self._read_future', '=', 'future_set_result_unless_cancelled', 'future,', 'result)', 'self)', '->', 'pos', '=', 'pos', 'pos)', 'self._check_closed', 'pos', '=', 'self._read_to_buffer_loop', 'pos', 'pos)', 'self.closed', 'self._add_io_state', 'ioloop.IOLoop.READ)', '_read_to_buffer', 'self)', '->', 'Optional', 'self._user_read_buffer:', 'buf', '=', 'self._read_buffer', 'self._read_buffer_size', 'buf', '=', 'bytearray', 'self.read_chunk_size)', 'bytes_read', '=', 'buf)', 'e:', 'e', 'self.close', '=', 'e)', 'self.close', '=', 'e)', 'bytes_read', '0', 'bytes_read', '==', '0:', 'self.close', '0', 'self._user_read_buffer:', 'self._read_buffer', '+=', 'buf', 'bytes_read]', 'self._read_buffer_size', '+=', 'bytes_read', 'buf', 'self._read_buffer_size', '>', 'self.max_buffer_size:', '\"Reached', 'maximum', 'read', 'buffer', 'size\")', 'self.close', '\"Reached', 'maximum', 'read', 'buffer', 'size\")', 'bytes_read', 'self,', 'pos:', '->', 'self._read_bytes', '=', '=', 'self._read_regex', '=', 'self._read_partial', '=', 'pos)', 'self)', '->', 'Optional', 'self._read_bytes', 'self._read_buffer_size', '>=', 'self._read_bytes', '(self._read_partial', 'self._read_buffer_size', '>', '0)', '):', 'num_bytes', '=', 'self._read_bytes,', 'self._read_buffer_size)', 'num_bytes', 'self._read_buffer:', 'loc', '=', 'loc', '!=', '-1:', '=', 'len', 'self._check_max_bytes', 'loc', '+', 'loc', '+', 'self._check_max_bytes', 'self._read_buffer_size)', 'self._read_regex', 'self._read_buffer:', 'm', '=', 'self._read_regex.search', 'self._read_buffer)', 'm', 'loc', '=', 'm.end', 'self._check_max_bytes', 'self._read_regex,', 'loc)', 'loc', 'self._check_max_bytes', 'self._read_regex,', 'self._read_buffer_size)', '_check_max_bytes', 'self,', 'Union', 'bytes,', 'Pattern', 'size:', '->', 'self._read_max_bytes', 'size', '>', 'self._read_max_bytes:', '%r', 'found', '%d', 'bytes\"', '%', 'self._read_max_bytes)', 'self)', '->', 'size', '=', 'len', 'self._write_buffer)', 'size:', 'size', '>', '0', '_WINDOWS:', 'size', '=', '128', '*', '1024', 'num_bytes', '=', 'self.write_to_fd', 'self._write_buffer.peek', 'size', 'num_bytes', '==', '0:', 'self._write_buffer.advance', 'num_bytes)', '+=', 'num_bytes', 'e:', 'e', '\"Write', 'on', '%s:', '%s\",', 'self.fileno', 'e)', 'self.close', '=', 'e)', 'self._write_futures:', 'future', '=', 'self._write_futures', '0]', '>', 'self._write_futures.popleft', 'future_set_result_unless_cancelled', 'future,', '_consume', 'self,', 'loc:', '->', 'bytes:', 'loc', '==', '0:', 'b\"\"', 'loc', '<=', 'self._read_buffer_size', 'b', '=', 'self._read_buffer', 'loc', '.tobytes', 'self._read_buffer_size', '-=', 'loc', 'self._read_buffer', 'loc]', 'b', '_check_closed', 'self)', '->', 'self.closed', '=', 'self)', '->', 'self._state', 'self._state', '==', 'ioloop.IOLoop.ERROR:', 'self.closed', 'self._read_buffer_size', '==', '0', 'self._close_callback', '):', 'self._add_io_state', 'ioloop.IOLoop.READ)', '_add_io_state', 'self,', 'state:', '->', 'self.closed', 'self._state', 'self._state', '=', 'ioloop.IOLoop.ERROR', '|', 'state', 'self.fileno', 'self._state)', 'self._state', '&', 'state:', 'self._state', '=', 'self._state', '|', 'state', 'self.fileno', 'self._state)', 'self,', 'exc:', '->', 'bool:', 'exc,', 'exc)', '_ERRNO_CONNRESET', 'IOStream', 'r', 'self,', 'socket:', 'socket.socket,', '*args:', 'Any,', '*', '*', 'kwargs:', 'Any)', '->', 'self.socket', '=', 'socket', 'super', '*', 'args,', '*', '*', 'kwargs)', 'fileno', 'self)', '->', 'Union', 'ioloop._Selectable', 'self.socket', 'close_fd', 'self)', '->', 'self.socket.close', 'self.socket', '=', 'self)', '->', 'Optional', 'Exception', 'errno', '=', 'self.socket.getsockopt', 'socket.SOL_SOCKET,', 'socket.SO_ERROR)', 'errno,', 'errno', 'self,', 'buf:', 'Union', 'bytearray,', '->', 'Optional', 'buf,', 'len', 'buf', 'buf', 'write_to_fd', 'self,', 'data:', '->', 'self.socket.send', 'data)', 'data', 'connect(', 'self:', '_IOStreamType,', 'address:', 'Any,', 'server_hostname:', 'Optional', 'str]', '=', '->', '\"Future', '_IOStreamType', '\":', '=', 'future', '=', 'Future', 'self._connect_future', '=', '\"Future', 'IOStream', '\",', 'future)', 'self.socket.connect', 'address)', 'e:', 'future', '\"Connect', 'on', 'fd', '%s:', '%s\",', 'self.socket.fileno', 'e)', 'self.close', '=', 'e)', 'future', 'self._add_io_state', 'self.io_loop.WRITE)', 'future', 'start_tls(', 'self,', 'server_side:', 'bool,', 'ssl_options:', 'Optional', 'Union', 'Dict', 'str,', 'Any', 'ssl.SSLContext', '=', 'server_hostname:', 'Optional', 'str]', '=', '->', 'Awaitable', '\"SSLIOStream\"', 'self._read_future', 'self._write_futures', 'self._connect_future', 'self._closed', 'self._read_buffer', 'self._write_buffer', '):', '\"IOStream', 'idle;', 'convert', 'to', 'SSL\")', 'ssl_options', 'server_side:', 'ssl_options', '=', 'ssl_options', '=', 'socket', '=', 'self.socket', 'socket)', 'self.socket', '=', 'socket', '=', 'ssl_wrap_socket(', 'socket,', 'ssl_options,', 'server_hostname', '=', 'server_hostname,', 'server_side', '=', 'server_side,', '=', '=', 'self._close_callback', 'self._close_callback', '=', 'future', '=', 'Future', 'ssl_stream', '=', 'SSLIOStream', 'socket,', 'ssl_options', '=', 'ssl_options)', 'ssl_stream.set_close_callback', 'ssl_stream._ssl_connect_future', '=', 'future', 'ssl_stream.max_buffer_size', '=', 'self.max_buffer_size', 'ssl_stream.read_chunk_size', '=', 'self.read_chunk_size', 'future', 'self)', '->', 'err', '=', 'self.socket.getsockopt', 'socket.SOL_SOCKET,', 'socket.SO_ERROR)', 'e:', 'e)', '==', 'errno.ENOPROTOOPT:', 'err', '=', '0', 'err', '!=', '0:', '=', 'err,', 'err', 'self._connect_future', '\"Connect', 'on', 'fd', '%s:', '%s\",', 'self.socket.fileno', 'err', 'self.close', 'self._connect_future', 'future', '=', 'self._connect_future', 'self._connect_future', '=', 'future_set_result_unless_cancelled', 'future,', 'self)', '=', 'self,', 'value:', 'bool)', '->', 'self.socket', 'self.socket.family', 'socket.AF_INET,', 'socket.AF_INET6,', '):', 'self.socket.setsockopt(', 'socket.IPPROTO_TCP,', 'socket.TCP_NODELAY,', '1', 'value', '0', 'e:', 'e.errno', '!=', 'errno.EINVAL', 'e', 'SSLIOStream', 'IOStream', 'socket', '=', 'self,', '*args:', 'Any,', '*', '*', 'kwargs:', 'Any)', '->', 'self._ssl_options', '=', 'kwargs.pop', '\"ssl_options\",', 'super', '*', 'args,', '*', '*', 'kwargs)', '=', '=', '=', 'self._server_hostname', '=', 'self.socket.getpeername', 'self._add_io_state', 'self.io_loop.WRITE)', 'self)', '->', 'bool:', 'super', 'self)', '->', 'bool:', 'super', 'self)', '->', '=', '=', 'err:', 'err.args', '0]', '==', 'ssl.SSL_ERROR_WANT_READ:', '=', 'err.args', '0]', '==', 'ssl.SSL_ERROR_WANT_WRITE:', '=', 'err.args', '0]', '(ssl.SSL_ERROR_EOF,', 'ssl.SSL_ERROR_ZERO_RETURN', 'self.close', '=', 'err)', 'err.args', '0]', '==', 'ssl.SSL_ERROR_SSL:', 'peer', '=', 'self.socket.getpeername', 'Exception:', 'peer', '=', '\"', 'connected', '\"', '\"SSL', 'on', '%s', '%s:', '%s\",', 'self.socket.fileno', 'peer,', 'err', 'self.close', '=', 'err)', 'err:', 'self.close', '=', 'err)', 'err:', 'err)', 'err.args', '0]', '0,', 'errno.EBADF,', 'errno.ENOTCONN,', '):', 'self.close', '=', 'err)', 'err:', 'self.close', '=', 'err)', '=', 'ssl.HAS_SNI', 'self)', '->', 'self._ssl_connect_future', 'future', '=', 'self._ssl_connect_future', 'self._ssl_connect_future', '=', 'future_set_result_unless_cancelled', 'future,', 'self)', 'self)', '->', 'super', 'self)', '->', 'super', 'connect(', 'self,', 'address:', 'Tuple,', 'server_hostname:', 'Optional', 'str]', '=', '->', '\"Future', 'SSLIOStream', '\":', 'self._server_hostname', '=', 'server_hostname', 'fut', '=', 'super', '.connect', 'address)', 'fut.add_done_callback', 'f:', 'self)', '->', 'super', 'self.closed', 'self.socket)', 'old_state', '=', 'self._state', 'old_state', 'self._state', '=', 'self.socket', '=', 'ssl_wrap_socket(', 'self.socket,', 'self._ssl_options,', 'server_hostname', '=', 'self._server_hostname,', '=', 'server_side', '=', 'self._add_io_state', 'old_state)', 'self)', '->', '\"Future', 'SSLIOStream', '\":', 'self._ssl_connect_future', '\"Already', 'future', '=', 'self._ssl_connect_future', '=', 'Future', 'future', 'write_to_fd', 'self,', 'data:', '->', 'len', 'data)', '>>', '30:', 'data', '=', 'data', '1', '<<', '30]', 'self.socket.send', 'data)', 'e:', 'e.args', '0]', '==', 'ssl.SSL_ERROR_WANT_WRITE:', '0', 'data', 'self,', 'buf:', 'Union', 'bytearray,', '->', 'Optional', 'len', 'buf)', '>>', '30:', 'buf', '=', 'buf', '1', '<<', '30]', 'buf,', 'len', 'buf', 'e:', 'e.args', '0]', '==', 'ssl.SSL_ERROR_WANT_READ:', 'buf', 'self,', 'e:', '->', 'bool:', 'e,', 'e.args', '0]', '==', 'ssl.SSL_ERROR_EOF:', 'super', 'e)', 'PipeIOStream', 'self,', 'fd:', '*args:', 'Any,', '*', '*', 'kwargs:', 'Any)', '->', 'self.fd', '=', 'fd', 'self._fio', '=', 'io.FileIO', 'self.fd,', '\"r', '+', '\")', '==', '\"PipeIOStream', 'on', 'fd,', 'super', '*', 'args,', '*', '*', 'kwargs)', 'fileno', 'self)', '->', 'self.fd', 'close_fd', 'self)', '->', 'self._fio.close', 'write_to_fd', 'self,', 'data:', '->', 'os.write', 'self.fd,', 'data)', 'data', 'self,', 'buf:', 'Union', 'bytearray,', '->', 'Optional', 'buf)', 'e:', 'e)', '==', 'errno.EBADF:', 'self.close', '=', 'e)', 'buf', 'doctests', '->', 'Any:', 'doctest', 'doctest.DocTestSuite']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/tornado/locale.py",
        "vector": "['codecs', 'csv', 'datetime', 'gettext', 'glob', 'os', 're', 'escape', 'gen_log', 'LOCALE_NAMES', 'Iterable,', 'Any,', 'Union,', 'Dict,', 'Optional', '=', '\"en_US\"', '_translations', '=', '{}', '=', 'frozenset', '_use_gettext', '=', 'CONTEXT_SEPARATOR', '=', '\"\\\\x04\"', 'get', '*', 'locale_codes:', 'str)', '->', '\"Locale\":', 'Locale.get_closest', '*', 'locale_codes)', 'code:', 'str)', '->', '=', 'code', '=', 'frozenset', '_translations.keys', '+', 'load_translations', 'str,', 'Optional', 'str]', '=', '->', '_translations', '_translations', '=', '{}', 'path', '\".csv\"', 'locale,', 'extension', '=', 'path.split', '\".\")', 're.match', '\"', 'a', '-', 'z', '+', '_', 'A', '-', 'Z', '+', '?$\",', 'locale', '\"Unrecognized', 'locale', '%r', '(path:', '%s', '\",', 'locale,', 'path', 'full_path', '=', 'path)', 'open', 'full_path,', '\"rb\")', 'bf:', 'data', '=', 'bf.read', 'len', 'codecs.BOM_UTF16_LE', 'data', '(codecs.BOM_UTF16_LE,', 'codecs.BOM_UTF16_BE', '=', '\"utf', '-', '16\"', '=', '\"utf', '-', '8', '-', 'sig\"', 'open', 'full_path,', '=', 'f:', '_translations', 'locale]', '=', '{}', 'i,', 'row', 'enumerate', 'csv.reader', 'f', 'row', 'len', 'row)', '<', '2:', 'row', '=', '[escape.to_unicode', 'c', '.strip', 'c', 'row]', 'translation', '=', 'row', '2]', 'len', 'row)', '>', '2:', 'plural', '=', 'row', '2]', '\"unknown\"', 'plural', '=', '\"unknown\"', 'plural', '(\"plural\",', '\"unknown\"', '\"Unrecognized', 'plural', '%r', '%s', '%d\",', 'plural,', 'path,', 'i', '+', '1,', '_translations', 'locale', 'plural,', '=', 'translation', '=', 'frozenset', '_translations.keys', '+', 'gen_log.debug', 'locales:', '%s\",', 'load_gettext_translations', 'str,', 'str)', '->', '_translations', '_use_gettext', '_translations', '=', '{}', 'filename', 'glob.glob(', '\"', '*', '\",', '\"LC_MESSAGES\",', '+', '\".mo\")', '):', 'lang', '=', 'os.path.dirname', 'os.path.dirname', 'filename', '_translations', 'lang]', '=', 'gettext.translation(', 'languages', '=', 'lang]', 'Exception', 'e:', 'load', 'translation', \"'\", '%', \"s':\", '%s\",', 'lang,', 'str', 'e', '=', 'frozenset', '_translations.keys', '+', '_use_gettext', '=', 'gen_log.debug', 'locales:', '%s\",', '->', 'Iterable', 'str', 'Locale', 'object', '_cache', '=', '{}', 'get_closest', 'cls,', '*locale_codes:', 'str)', '->', '\"Locale\":', 'code', 'locale_codes:', 'code:', 'code', '=', 'code.replace', '\"', '-', '\",', '\"_\")', 'parts', '=', 'code.split', '\"_\")', 'len', 'parts)', '>', '2:', 'len', 'parts)', '==', '2:', 'code', '=', 'parts', '0', '.lower', '+', '\"_\"', '+', 'parts', '1', '.upper', 'code', 'cls.get', 'code)', 'parts', '0', '.lower', 'cls.get', 'parts', '0', '.lower', 'cls.get', 'get', 'cls,', 'code:', 'str)', '->', '\"Locale\":', 'code', 'cls._cache:', 'code', 'translations', '=', '_translations.get', 'code,', 'translations', 'locale', '=', 'CSVLocale', 'code,', '_use_gettext:', 'locale', '=', 'GettextLocale', 'code,', 'translations)', 'locale', '=', 'CSVLocale', 'code,', 'translations)', 'cls._cache', 'code]', '=', 'locale', 'cls._cache', 'code]', 'self,', 'code:', 'str)', '->', 'self.code', '=', 'code', 'self.name', '=', 'LOCALE_NAMES.get', 'code,', '.get', '\"name\",', '\"Unknown\")', 'self.rtl', '=', 'prefix', '[\"fa\",', '\"ar\",', '\"he\"', 'prefix', 'self.rtl', '=', '_', '=', 'self.translate', 'self._months', '=', '_', '\"January\"', '_', '\"February\"', '_', '\"March\"', '_', '\"April\"', '_', '\"May\"', '_', '\"June\"', '_', '\"July\"', '_', '\"August\"', '_', '\"September\"', '_', '\"October\"', '_', '\"November\"', '_', '\"December\"', 'self._weekdays', '=', '_', '\"Monday\"', '_', '\"Tuesday\"', '_', '\"Wednesday\"', '_', '\"Thursday\"', '_', '\"Friday\"', '_', '\"Saturday\"', '_', '\"Sunday\"', 'translate(', 'self,', 'message:', 'str,', 'plural_message:', 'Optional', 'str]', '=', 'count:', 'Optional', '=', '->', 'str:', 'pgettext(', 'self,', 'context:', 'str,', 'message:', 'str,', 'plural_message:', 'Optional', 'str]', '=', 'count:', 'Optional', '=', '->', 'str:', 'self,', 'date:', 'Union', 'float,', 'datetime.datetime', 'gmt_offset:', '=', '0,', 'relative:', 'bool', '=', 'bool', '=', 'bool', '=', '->', 'str:', 'date,', 'float', 'date', '=', 'date,', 'datetime.timezone.utc)', 'date', '=', 'date.replace', '=', 'datetime.timezone.utc)', 'now', '=', 'datetime.datetime.now', 'datetime.timezone.utc)', 'date', '>', 'now:', 'relative', '(date', '-', 'now', '.seconds', '<', '60:', 'date', '=', 'now', '=', 'local_date', '=', 'date', '-', '=', 'gmt_offset)', 'local_now', '=', 'now', '-', '=', 'gmt_offset)', 'local_yesterday', '=', 'local_now', '-', 'hours', '=', '24)', '=', 'now', '-', 'date', 'seconds', '=', 'days', '=', '_', '=', 'self.translate', '=', 'relative', 'days', '==', '0:', 'seconds', '<', '50:', '_', '\"1', 'second', 'ago\",', '\"', '%', 'seconds', 'd', 'seconds', 'ago\",', 'seconds)', '%', '\"seconds\":', 'seconds', 'seconds', '<', '50', '*', '60:', '=', 'round', 'seconds', '/', '60.0)', '_', '\"1', 'ago\",', '\"', '%', 'd', 'ago\",', '%', 'hours', '=', 'round', 'seconds', '/', '(60.0', '*', '60', '_', '\"1', 'hour', 'ago\",', '\"', '%', 'hours', 'd', 'hours', 'ago\",', 'hours)', '%', '{\"hours\":', 'hours}', 'days', '==', '0:', '=', '_', '\"', '%', 'time', 's\")', 'days', '==', '1', 'local_date.day', '==', 'local_yesterday.day', 'relative:', '=', '_', '\"yesterday\")', '_', '\"yesterday', 'at', '%', 'time', 's\")', 'days', '<', '5:', '=', '_', '\"', '%', 'weekday', 's\")', '_', '\"', '%', 'weekday', 's', 'at', '%', 'time', 's\")', 'days', '<', '334:', '=', '_', '\"', '%', 'month_name', 's', '%', 'day', 's\")', '_', '\"', '%', 'month_name', 's', '%', 'day', 's', 'at', '%', 'time', 's\")', '=', '_', '\"', '%', 'month_name', 's', '%', 'day', 's,', '%', 'year', 's\")', '_', '\"', '%', 'month_name', 's', '%', 'day', 's,', '%', 'year', 's', 'at', '%', 'time', 's\")', 'tfhour_clock', '=', 'self.code', '(\"en\",', '\"en_US\",', '\"zh_CN\")', 'tfhour_clock:', 'str_time', '=', '\"', '%', 'd', '%', '02d\"', '%', '(local_date.hour,', 'self.code', '==', '\"zh_CN\":', 'str_time', '=', '\"', '%', 's', '%', 'd', '%', '02d\"', '%', '(\"\\\\u4e0a\\\\u5348\",', '\"\\\\u4e0b\\\\u5348\"', 'local_date.hour', '>=', '12', 'local_date.hour', '%', '12', '12,', 'str_time', '=', '\"', '%', 'd', '%', '02d', '%s\"', '%', 'local_date.hour', '%', '12', '12,', '(\"am\",', '\"pm\"', 'local_date.hour', '>=', '12', '%', '\"month_name\":', 'self._months', 'local_date.month', '-', '1', '\"weekday\":', 'self._weekdays', 'local_date.weekday', '\"day\":', 'str', 'local_date.day', '\"year\":', 'str', 'local_date.year', '\"time\":', 'str_time,', 'self,', 'date:', 'datetime.datetime,', 'gmt_offset:', '=', '0,', 'dow:', 'bool', '=', '->', 'bool:', 'local_date', '=', 'date', '-', '=', 'gmt_offset)', '_', '=', 'self.translate', 'dow:', '_', '\"', '%', 'weekday', 's,', '%', 'month_name', 's', '%', 'day', 's\")', '%', '\"month_name\":', 'self._months', 'local_date.month', '-', '1', '\"weekday\":', 'self._weekdays', 'local_date.weekday', '\"day\":', 'str', 'local_date.day', '_', '\"', '%', 'month_name', 's', '%', 'day', 's\")', '%', '\"month_name\":', 'self._months', 'local_date.month', '-', '1', '\"day\":', 'str', 'local_date.day', 'self,', 'parts:', 'Any)', '->', 'str:', '_', '=', 'self.translate', 'len', 'parts)', '==', '0:', '\"\"', 'len', 'parts)', '==', '1:', 'parts', '0]', 'comma', '=', '\"', '\\\\u0648', '\"', '\"fa\")', '\",', '\"', '_', '\"', '%', 's', '%', 's\")', '%', 'parts', '-', '1', 'parts', 'len', 'parts)', '-', '1', 'friendly_number', 'self,', 'value:', '->', 'str:', 'self.code', '(\"en\",', '\"en_US\"', 'str', 'value)', 's', '=', 'str', 'value)', 'parts', '=', '[]', 's:', 'parts.append', 's', '-', '3', 's', '=', 's', '-', '3]', '\"', 'reversed', 'parts', 'CSVLocale', 'Locale', 'self,', 'code:', 'str,', 'translations:', 'Dict', 'str,', 'Dict', 'str,', 'str', '->', 'self.translations', '=', 'translations', 'super', 'code)', 'translate(', 'self,', 'message:', 'str,', 'plural_message:', 'Optional', 'str]', '=', 'count:', 'Optional', '=', '->', 'str:', 'plural_message', 'count', 'count', '!=', '1:', 'message', '=', 'plural_message', 'message_dict', '=', 'self.translations.get', '\"plural\",', 'message_dict', '=', 'self.translations.get', 'message_dict', '=', 'self.translations.get', '\"unknown\",', 'message_dict.get', 'message,', 'message)', 'pgettext(', 'self,', 'context:', 'str,', 'message:', 'str,', 'plural_message:', 'Optional', 'str]', '=', 'count:', 'Optional', '=', '->', 'str:', 'self.translations:', '\"pgettext', 'by', 'CSVLocale\")', 'self.translate', 'message,', 'plural_message,', 'count)', 'GettextLocale', 'Locale', 'self,', 'code:', 'str,', 'translations:', 'gettext.NullTranslations)', '->', 'self.ngettext', '=', 'translations.ngettext', 'self.gettext', '=', 'translations.gettext', 'super', 'code)', 'translate(', 'self,', 'message:', 'str,', 'plural_message:', 'Optional', 'str]', '=', 'count:', 'Optional', '=', '->', 'str:', 'plural_message', 'count', 'self.ngettext', 'message,', 'plural_message,', 'count)', 'self.gettext', 'message)', 'pgettext(', 'self,', 'context:', 'str,', 'message:', 'str,', 'plural_message:', 'Optional', 'str]', '=', 'count:', 'Optional', '=', '->', 'str:', 'plural_message', 'count', '=', '\"', '%', 's', '%', 's', '%', 's\"', '%', '(context,', 'CONTEXT_SEPARATOR,', 'message', '\"', '%', 's', '%', 's', '%', 's\"', '%', '(context,', 'CONTEXT_SEPARATOR,', 'plural_message', 'count,', 'result', '=', 'self.ngettext', '*', 'CONTEXT_SEPARATOR', 'result:', 'result', '=', 'self.ngettext', 'message,', 'plural_message,', 'count)', 'result', '=', '\"', '%', 's', '%', 's', '%', 's\"', '%', '(context,', 'CONTEXT_SEPARATOR,', 'message)', 'result', '=', 'self.gettext', 'CONTEXT_SEPARATOR', 'result:', 'result', '=', 'message', 'result']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/tornado/locks.py",
        "vector": "['collections', 'datetime', 'types', 'gen,', 'ioloop', 'Future,', 'future_set_result_unless_cancelled', 'Union,', 'Optional,', 'Type,', 'Any,', 'Awaitable', 'Deque,', 'Set', '__all__', '=', '[\"Condition\",', '\"Event\",', '\"Lock\"]', 'object', 'self)', '->', 'self._waiters', '=', 'collections.deque', 'self._timeouts', '=', '0', '_garbage_collect', 'self)', '->', 'self._timeouts', '+=', '1', 'self._timeouts', '>', '100:', 'self._timeouts', '=', '0', 'self._waiters', '=', 'collections.deque', 'w', 'w', 'self._waiters', 'w.done', 'Condition', '__repr__', 'self)', '->', 'str:', 'result', '=', '\"', '<', '%', 's\"', '%', 'self._waiters:', 'result', '+=', '\"', 'waiters', '%', 's', '\"', '%', 'len', 'self._waiters)', 'result', '+', '\"', '>', '\"', 'wait(', 'self,', 'timeout:', 'Optional', 'Union', 'float,', '=', '->', 'Awaitable', 'bool', 'waiter', '=', 'Future', 'self._waiters.append', 'waiter)', 'timeout:', 'on_timeout', '->', 'waiter.done', 'future_set_result_unless_cancelled', 'waiter,', 'self._garbage_collect', 'io_loop', '=', 'ioloop.IOLoop.current', '=', 'io_loop.add_timeout', 'timeout,', 'on_timeout)', 'waiter.add_done_callback', '_:', 'io_loop.remove_timeout', 'waiter', 'self,', 'n:', '=', '1)', '->', 'waiters', '=', '[]', 'n', 'self._waiters:', 'waiter', '=', 'self._waiters.popleft', 'waiter.done', 'n', '-=', '1', 'waiters.append', 'waiter)', 'waiter', 'waiters:', 'future_set_result_unless_cancelled', 'waiter,', 'self)', '->', 'len', 'self._waiters', 'Event', 'object', 'self)', '->', 'self._value', '=', 'self._waiters', '=', 'set', '__repr__', 'self)', '->', 'str:', '\"', '<', '%', 's', '%s', '>', '\"', '%', '\"set\"', '\"clear\",', 'self)', '->', 'bool:', 'self._value', 'set', 'self)', '->', 'self._value:', 'self._value', '=', 'fut', 'self._waiters:', 'fut.done', 'fut.set_result', 'clear', 'self)', '->', 'self._value', '=', 'wait(', 'self,', 'timeout:', 'Optional', 'Union', 'float,', '=', '->', 'Awaitable', 'fut', '=', 'Future', 'self._value:', 'fut.set_result', 'fut', 'self._waiters.add', 'fut)', 'fut.add_done_callback', 'fut:', 'self._waiters.remove', 'fut', 'timeout', 'fut', 'timeout_fut', '=', 'timeout,', 'fut)', 'timeout_fut.add_done_callback(', 'tf:', 'fut.cancel', 'fut.done', 'timeout_fut', 'object', 'self,', 'obj:', 'Any)', '->', 'self._obj', '=', 'obj', '__enter__', 'self)', '->', '__exit__(', 'self,', 'exc_type:', '\"Optional', 'Type', '\",', 'exc_val:', 'Optional', 'exc_tb:', 'Optional', 'types.TracebackType', '->', 'self,', 'value:', '=', '1)', '->', 'super', 'value', '<', '0:', 'value', 'must', 'be', '>=', '0\")', 'self._value', '=', 'value', '__repr__', 'self)', '->', 'str:', 'res', '=', 'super', '.__repr__', 'extra', '=', '\"locked\"', 'self._value', '==', '0', '\"unlocked', 'value', '0', 'self._value)', 'self._waiters:', 'extra', '=', '\"', '0', 'waiters', '1', 'extra,', 'len', 'self._waiters', '\"', '<', '0}', '1', '>', 'res', '1', '-', '1', 'extra)', 'self)', '->', 'self._value', '+=', '1', 'self._waiters:', 'waiter', '=', 'self._waiters.popleft', 'waiter.done', 'self._value', '-=', '1', 'waiter.set_result', 'self', 'acquire(', 'self,', 'timeout:', 'Optional', 'Union', 'float,', '=', '->', 'Awaitable', 'waiter', '=', 'Future', 'self._value', '>', '0:', 'self._value', '-=', '1', 'waiter.set_result', 'self', 'self._waiters.append', 'waiter)', 'timeout:', 'on_timeout', '->', 'waiter.done', 'self._garbage_collect', 'io_loop', '=', 'ioloop.IOLoop.current', '=', 'io_loop.add_timeout', 'timeout,', 'on_timeout)', 'waiter.add_done_callback(', '_:', 'io_loop.remove_timeout', 'waiter', '__enter__', 'self)', '->', '\"Use', 'of', '__exit__(', 'self,', 'typ:', '\"Optional', 'Type', '\",', 'value:', 'Optional', 'traceback:', 'Optional', 'types.TracebackType', '->', 'self.__enter__', '__aenter__', 'self)', '->', 'self.acquire', '__aexit__(', 'self,', 'typ:', '\"Optional', 'Type', '\",', 'value:', 'Optional', 'tb:', 'Optional', 'types.TracebackType', '->', 'self,', 'value:', '=', '1)', '->', 'super', 'value', '=', 'value)', '=', 'value', 'self)', '->', 'self._value', '>=', 'too', 'many', 'times\")', 'super', 'Lock', 'object', 'self)', '->', 'self._block', '=', 'value', '=', '1)', '__repr__', 'self)', '->', 'str:', '\"', '<', '%', 's', '_block', '=', '%', 's', '>', '\"', '%', 'self._block)', 'acquire(', 'self,', 'timeout:', 'Optional', 'Union', 'float,', '=', '->', 'Awaitable', 'self._block.acquire', 'timeout)', 'self)', '->', 'unlocked', 'lock\")', '__enter__', 'self)', '->', '\"Use', 'of', 'Lock\")', '__exit__(', 'self,', 'typ:', '\"Optional', 'Type', '\",', 'value:', 'Optional', 'tb:', 'Optional', 'types.TracebackType', '->', 'self.__enter__', '__aenter__', 'self)', '->', 'self.acquire', '__aexit__(', 'self,', 'typ:', '\"Optional', 'Type', '\",', 'value:', 'Optional', 'tb:', 'Optional', 'types.TracebackType', '->']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/tornado/log.py",
        "vector": "['sys', '_unicode', 'unicode_type,', '=', 'curses', 'curses', '=', 'Dict,', 'Any,', 'Optional', 'access_log', '=', 'app_log', '=', 'gen_log', '=', '->', 'bool:', 'sys.stderr,', 'curses:', 'curses.setupterm', 'curses.tigetnum', '>', '0:', 'sys.stderr', 'getattr(', '\"wrapped_stderr\",', 'object', '):', 'Exception:', '_safe_unicode', 's:', 'Any)', '->', 'str:', '_unicode', 's)', 'repr', 's)', 'DEFAULT_FORMAT', '=', '\"', '%', 's', '%', 'levelname', '1.1s', '%', 's', '%', 'module', 's', '%', 'd', '%', 's', '%', 'message', 's\"', 'DEFAULT_DATE_FORMAT', '=', '\"', '%', 'y', '%', 'm', '%', 'd', '%H', '%', 'M', '%', 'S\"', 'DEFAULT_COLORS', '=', '4,', '2,', '3,', '1,', '5,', 'self,', 'fmt:', 'str', '=', 'DEFAULT_FORMAT,', 'datefmt:', 'str', '=', 'DEFAULT_DATE_FORMAT,', 'style:', 'str', '=', '\"', '%', '\",', 'bool', '=', 'Dict', '=', 'DEFAULT_COLORS,', '->', 'r', 'self,', 'datefmt', '=', 'datefmt)', 'self._fmt', '=', 'fmt', '=', '{}', 'curses', '=', 'curses.tigetstr', '\"setaf\")', 'curses.tigetstr', '\"setf\")', 'b\"\"', 'levelno,', 'code', 'levelno]', '=', 'unicode_type(', 'curses.tparm', 'code', '=', 'curses.tigetstr', '\"sgr0\")', '=', 'unicode_type', '=', '\"\"', 'levelno,', 'code', 'levelno]', '=', '\"\\\\033', '2', '3', '%', 'dm\"', '%', 'code', '=', '\"\\\\033', '0m\"', '=', '\"\"', 'self,', 'Any)', '->', 'str:', 'message', '=', 'message,', '=', '_safe_unicode', 'message)', 'Exception', 'e:', '=', '\"Bad', 'message', '%', 'r', '%r\"', '%', '(e,', '=', 'str,', 'self.datefmt', '=', '=', '=', '=', '\"\"', '=', 'self._fmt', '%', '=', '=', '_safe_unicode', 'ln)', 'ln', '\"\\\\n\"', '=', '\"\\\\n\",', '\"\\\\n', '\")', 'options:', 'Any', '=', 'logger:', 'Optional', '=', '->', 'options', 'options', '=', '==', '\"none\":', 'logger', 'logger', '=', 'logger.setLevel', 'getattr', 'options.log_file_prefix:', 'rotate_mode', '=', 'options.log_rotate_mode', 'rotate_mode', '==', '\"size\":', 'channel', '=', 'filename', '=', 'options.log_file_prefix,', 'maxBytes', '=', 'options.log_file_max_size,', 'backupCount', '=', 'options.log_file_num_backups,', '=', '\"utf', '-', '8\",', 'rotate_mode', '==', '\"time\":', 'channel', '=', 'filename', '=', 'options.log_file_prefix,', 'when', '=', 'options.log_rotate_when,', '=', 'backupCount', '=', 'options.log_file_num_backups,', '=', '\"utf', '-', '8\",', '=', '\"The', 'value', 'of', 'log_rotate_mode', 'option', 'should', 'be', '\"', '+', '\\'\"size\"', '\"time\",', '\"', '%', 's\".\\'', '%', 'rotate_mode', '=', 'channel)', 'options.log_to_stderr', '(options.log_to_stderr', 'channel', '=', 'channel)', 'options:', 'Any', '=', '->', 'options', 'options', '=', '=', 'help', '=', '\"Set', 'the', 'Python', 'log', 'level.', 'If', \"'none',\", \"won't\", 'touch', 'the', '\"', 'configuration.\"', '),', 'metavar', '=', '\"debug', '|', '|', '|', '|', 'none\",', '\"log_to_stderr\",', 'type', '=', 'bool,', '=', 'help', '=', '\"Send', 'log', 'output', 'to', 'stderr', 'possible', '.', '\"', '\"By', 'use', 'stderr', '-', '-', 'log_file_prefix', 'set', '\"', '\"no', 'other', 'configured.\"', '),', '\"log_file_prefix\",', 'type', '=', 'str,', '=', 'metavar', '=', '\"PATH\",', 'help', '=', '\"Path', 'prefix', 'log', 'files.', '\"', '\"Note', 'that', 'you', 'are', 'multiple', 'processes,', '\"', '\"log_file_prefix', 'must', 'be', 'each', 'of', 'them', '(e.g.', '\"', 'the', 'number', '\"', '),', '\"log_file_max_size\",', 'type', '=', '=', '100', '*', '1000', '*', '1000,', 'help', '=', '\"max', 'size', 'of', 'log', 'files', 'rollover\",', '\"log_file_num_backups\",', 'type', '=', '=', '10,', 'help', '=', '\"number', 'of', 'log', 'files', 'to', 'keep\"', '\"log_rotate_when\",', 'type', '=', 'str,', '=', '\"midnight\",', 'help', '=', 'the', 'type', 'of', '\"', '\"other', 'options', \"'S',\", \"'M',\", \"'H',\", \"'D',\", \"'W0'\", '-', \"'W6'\", '\"', '),', 'type', '=', '=', '1,', 'help', '=', '\"The', 'value', 'of', 'timed', '\"log_rotate_mode\",', 'type', '=', 'str,', '=', '\"size\",', 'help', '=', '\"The', 'mode', 'of', 'files', 'time', 'size', '\",', 'options.add_parse_callback', 'options']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/tornado/netutil.py",
        "vector": "['concurrent.futures', 'errno', 'os', 'sys', 'socket', 'ssl', 'stat', 'IOLoop', 'Configurable,', 'Callable,', 'Any,', 'Type,', 'Dict,', 'Union,', 'Tuple,', 'Awaitable,', 'Optional', '=', 'ssl.Purpose.SERVER_AUTH)', '=', 'ssl.Purpose.CLIENT_AUTH)', 'ssl,', '\"OP_NO_COMPRESSION\"', '|=', 'ssl.OP_NO_COMPRESSION', '|=', 'ssl.OP_NO_COMPRESSION', '\"foo\".encode', '\"idna\")', '\"foo\".encode', '_DEFAULT_BACKLOG', '=', '128', 'address:', 'Optional', 'str]', '=', 'family:', 'socket.AddressFamily', '=', 'socket.AF_UNSPEC,', 'backlog:', '=', '_DEFAULT_BACKLOG,', 'flags:', 'Optional', '=', 'bool', '=', '->', 'socket.socket', 'socket,', '\"SO_REUSEPORT\"', '\"the', \"doesn't\", 'SO_REUSEPORT\")', 'sockets', '=', '[]', 'address', '==', '\"\":', 'address', '=', 'family', '==', 'socket.AF_UNSPEC:', 'family', '=', 'socket.AF_INET', 'flags', 'flags', '=', 'socket.AI_PASSIVE', '=', 'unique_addresses', '=', 'set', 'res', 'address,', 'family,', 'socket.SOCK_STREAM,', '0,', 'flags', 'key', '=', 'x:', 'x', '0', '):', 'res', 'unique_addresses:', 'unique_addresses.add', 'res)', 'af,', 'socktype,', 'proto,', 'canonname,', 'sockaddr', '=', 'res', '==', 'address', '==', '\"localhost\"', 'af', '==', 'socket.AF_INET6', 'sockaddr', '3]', '!=', '0', '):', 'sock', '=', 'socket.socket', 'af,', 'socktype,', 'proto)', 'e:', 'e)', '==', 'errno.EAFNOSUPPORT:', 'os.name', '!=', '\"nt\":', 'sock.setsockopt', 'socket.SOL_SOCKET,', 'socket.SO_REUSEADDR,', '1)', 'e:', 'e)', '!=', 'errno.ENOPROTOOPT:', 'sock.setsockopt', 'socket.SOL_SOCKET,', 'socket.SO_REUSEPORT,', '1)', 'af', '==', 'socket.AF_INET6:', 'socket,', '\"IPPROTO_IPV6\"', 'sock.setsockopt', 'socket.IPPROTO_IPV6,', 'socket.IPV6_V6ONLY,', '1)', 'host,', '=', 'sockaddr', '2]', '==', '0', 'sockaddr', '=', 'tuple', 'host,', '+', 'sockaddr', '2', 'sockaddr)', 'e:', 'e)', '==', 'errno.EADDRNOTAVAIL', 'address', '==', '\"localhost\"', 'sockaddr', '0]', '==', '\"', '1\"', '):', 'sock.close', '=', 'sock.getsockname', '1]', 'backlog)', 'sockets.append', 'sock)', 'sockets', 'socket,', '\"AF_UNIX\"', 'file:', 'str,', 'mode:', '=', '0o600,', 'backlog:', '=', '_DEFAULT_BACKLOG', '->', 'socket.socket:', 'sock', '=', 'socket.socket', 'socket.AF_UNIX,', 'socket.SOCK_STREAM)', 'sock.setsockopt', 'socket.SOL_SOCKET,', 'socket.SO_REUSEADDR,', '1)', 'e:', 'e)', '!=', 'errno.ENOPROTOOPT:', 'st', '=', 'os.stat', 'file)', 'stat.S_ISSOCK', 'st.st_mode', 'os.remove', 'file)', '\"File', '%s', 'a', 'socket\",', 'file)', 'file)', 'os.chmod', 'file,', 'mode)', 'backlog)', 'sock', 'sock:', 'socket.socket,', 'callback:', 'Callable', 'socket.socket,', 'Any', '->', 'Callable', 'io_loop', '=', 'IOLoop.current', 'removed', '=', 'fd:', 'socket.socket,', 'events:', '->', 'i', 'range', '_DEFAULT_BACKLOG', 'removed', '0', 'connection,', 'address', '=', 'sock.accept', 'callback', 'connection,', 'address)', '->', 'sock)', 'removed', '0]', '=', 'sock,', 'IOLoop.READ)', 'ip:', 'str)', '->', 'bool:', 'ip', '\"\\\\x00\"', 'ip:', 'res', '=', 'ip,', '0,', 'socket.AF_UNSPEC,', 'socket.SOCK_STREAM,', '0,', 'socket.AI_NUMERICHOST', 'bool', 'res)', 'e:', 'e.args', '0]', '==', 'socket.EAI_NONAME:', 'Resolver', 'Configurable', 'cls)', '->', 'Type', '\"Resolver\"', 'Resolver', 'cls)', '->', 'Type', '\"Resolver\"', 'DefaultLoopResolver', 'resolve(', 'self,', 'host:', 'str,', 'family:', 'socket.AddressFamily', '=', 'socket.AF_UNSPEC', '->', 'Awaitable', 'Tuple', 'Any', 'close', 'self)', '->', '_resolve_addr(', 'host:', 'str,', 'family:', 'socket.AddressFamily', '=', 'socket.AF_UNSPEC', '->', 'Tuple', 'Any', '=', 'host,', 'family,', 'socket.SOCK_STREAM)', 'results', '=', '[]', 'fam,', 'socktype,', 'proto,', 'canonname,', 'address', 'results.append', 'fam,', 'address', 'results', 'Resolver', 'resolve(', 'self,', 'host:', 'str,', 'family:', 'socket.AddressFamily', '=', 'socket.AF_UNSPEC', '->', 'Tuple', 'Any', 'result', '=', 'IOLoop.current', '_resolve_addr,', 'host,', 'family', 'result', 'DefaultLoopResolver', 'Resolver', 'resolve(', 'self,', 'host:', 'str,', 'family:', 'socket.AddressFamily', '=', 'socket.AF_UNSPEC', '->', 'Tuple', 'Any', '(fam,', 'address)', 'fam,', '_,', '_,', '_,', 'address', 'host,', 'family', '=', 'family,', 'type', '=', 'socket.SOCK_STREAM', 'Resolver', 'self,', 'Optional', '=', 'bool', '=', '->', '=', '=', '=', '=', 'close', 'self)', '->', '=', 'resolve(', 'self,', 'host:', 'str,', 'family:', 'socket.AddressFamily', '=', 'socket.AF_UNSPEC', '->', 'Tuple', 'Any', '_resolve_addr', 'host,', 'family)', 'self)', '->', 'super', 'ThreadedResolver', '_threadpool', '=', '_threadpool_pid', '=', 'self,', 'num_threads:', '=', '10)', '->', 'threadpool', '=', 'ThreadedResolver._create_threadpool', 'num_threads)', 'super', '=', 'threadpool,', '=', '_create_threadpool(', 'cls,', 'num_threads:', '->', 'pid', '=', 'os.getpid', 'cls._threadpool_pid', '!=', 'pid:', 'cls._threadpool', '=', 'cls._threadpool', 'cls._threadpool', '=', 'num_threads)', 'cls._threadpool_pid', '=', 'pid', 'cls._threadpool', 'OverrideResolver', 'Resolver', 'self,', 'resolver:', 'Resolver,', 'dict)', '->', 'self.resolver', '=', 'resolver', '=', 'close', 'self)', '->', 'self.resolver.close', 'resolve(', 'self,', 'host:', 'str,', 'family:', 'socket.AddressFamily', '=', 'socket.AF_UNSPEC', '->', 'Awaitable', 'Tuple', 'Any', '(host,', 'family)', 'host,', '=', 'host,', 'family', '(host,', 'host,', '=', 'host,', 'host', 'host', '=', 'host]', 'self.resolver.resolve', 'host,', 'family)', '_SSL_CONTEXT_KEYWORDS', '=', 'frozenset(', '[\"ssl_version\",', '\"certfile\",', '\"keyfile\",', '\"cert_reqs\",', '\"ca_certs\",', '\"ciphers\"]', 'ssl_options_to_context(', 'ssl_options:', 'Union', 'Dict', 'str,', 'Any', 'ssl.SSLContext', 'server_side:', 'Optional', 'bool]', '=', '->', 'ssl.SSLContext:', 'ssl_options,', 'ssl.SSLContext', 'ssl_options', 'ssl_options,', 'dict)', 'all', 'k', '_SSL_CONTEXT_KEYWORDS', 'k', 'ssl_options', 'ssl_options', '=', 'ssl.PROTOCOL_TLS', 'server_side:', '=', 'ssl.PROTOCOL_TLS_SERVER', 'server_side', '=', 'ssl.PROTOCOL_TLS_CLIENT', 'context', '=', 'ssl.SSLContext', 'ssl_options.get', '\"ssl_version\",', '\"certfile\"', 'ssl_options:', 'ssl_options', '\"certfile\"', 'ssl_options.get', '\"keyfile\",', '\"cert_reqs\"', 'ssl_options:', 'ssl_options', '\"cert_reqs\"]', '==', 'ssl.CERT_NONE:', 'context.check_hostname', '=', '=', 'ssl_options', '\"cert_reqs\"]', '\"ca_certs\"', 'ssl_options:', 'ssl_options', '\"ca_certs\"', '\"ciphers\"', 'ssl_options:', 'context.set_ciphers', 'ssl_options', '\"ciphers\"', 'ssl,', '\"OP_NO_COMPRESSION\"', 'context.options', '|=', 'ssl.OP_NO_COMPRESSION', 'context', 'ssl_wrap_socket(', 'socket:', 'socket.socket,', 'ssl_options:', 'Union', 'Dict', 'str,', 'Any', 'ssl.SSLContext', 'server_hostname:', 'Optional', 'str]', '=', 'server_side:', 'Optional', 'bool]', '=', '*', '*', 'kwargs:', 'Any', '->', 'ssl.SSLSocket:', 'context', '=', 'ssl_options_to_context', 'ssl_options,', 'server_side', '=', 'server_side)', 'server_side', 'server_side', '=', 'ssl.HAS_SNI', 'context.wrap_socket(', 'socket,', 'server_hostname', '=', 'server_hostname,', 'server_side', '=', 'server_side,', '*', '*', 'kwargs']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/tornado/options.py",
        "vector": "['datetime', 'numbers', 're', 'sys', 'os', 'textwrap', '_unicode,', 'native_str', 'Any,', 'Iterable,', 'Tuple,', 'Set,', 'Dict,', 'Callable,', 'TextIO,', 'Optional,', 'Exception', 'OptionParser', 'object', 'self)', '->', 'self.__dict__', '\"_options\"]', '=', '{}', 'self.__dict__', '\"_parse_callbacks\"]', '=', '[]', '\"help\",', 'type', '=', 'bool,', 'help', '=', '\"show', 'help', 'callback', '=', 'self._help_callback,', 'self,', 'name:', 'str)', '->', 'str:', 'name.replace', '\"_\",', '\"', '-', '\")', '__getattr__', 'self,', 'name:', 'str)', '->', 'Any:', 'name', '=', 'name)', 'self._options.get', 'name', '_Option', 'self._options', 'name', '.value', '\"Unrecognized', 'option', '%r\"', '%', 'name)', '__setattr__', 'self,', 'name:', 'str,', 'value:', 'Any)', '->', 'name', '=', 'name)', 'self._options.get', 'name', '_Option', 'self._options', 'name', '.set', 'value)', '\"Unrecognized', 'option', '%r\"', '%', 'name)', '__iter__', 'self)', '->', '(opt.name', 'opt', 'self._options.values', 'self,', 'name:', 'str)', '->', 'bool:', 'name', '=', 'name)', 'name', 'self._options', '__getitem__', 'self,', 'name:', 'str)', '->', 'Any:', 'self.__getattr__', 'name)', '__setitem__', 'self,', 'name:', 'str,', 'value:', 'Any)', '->', 'self.__setattr__', 'name,', 'value)', 'items', 'self)', '->', 'Iterable', 'Tuple', 'str,', 'Any', 'opt.name,', 'opt.value', 'name,', 'opt', 'self._options.items', 'groups', 'self)', '->', 'Set', 'str', 'set', 'opt.group_name', 'opt', 'self._options.values', 'group_dict', 'self,', 'group:', 'str)', '->', 'Dict', 'str,', 'Any', 'dict(', '(opt.name,', 'opt.value', 'name,', 'opt', 'self._options.items', 'group', 'group', '==', 'opt.group_name', 'self)', '->', 'Dict', 'str,', 'Any', 'dict', 'opt.name,', 'opt.value', 'name,', 'opt', 'self._options.items', 'self,', 'name:', 'str,', 'Any', '=', 'type:', 'Optional', 'type]', '=', 'help:', 'Optional', 'str]', '=', 'metavar:', 'Optional', 'str]', '=', 'multiple:', 'bool', '=', 'group:', 'Optional', 'str]', '=', 'callback:', 'Optional', 'Callable', 'Any', '=', '->', '=', 'name)', 'self._options:', '\"Option', '%r', 'already', '%s\"', '%', 'self._options', '.file_name)', 'frame', '=', 'sys._getframe', '0)', 'frame', 'options_file', '=', 'frame.f_code.co_filename', 'frame.f_back', 'frame.f_back.f_code.co_filename', '==', 'options_file', 'frame.f_back.f_code.co_name', '==', '):', 'frame', '=', 'frame.f_back', 'frame.f_back', 'file_name', '=', 'frame.f_back.f_code.co_filename', 'file_name', '=', '\"', '<', 'unknown', '>', '\"', 'file_name', '==', 'options_file:', 'file_name', '=', '\"\"', 'type', 'multiple', 'type', '=', 'type', '=', 'str', 'group:', 'group_name', '=', 'group', 'group_name', '=', 'file_name', 'option', '=', '_Option(', 'name,', 'file_name', '=', 'file_name,', '=', 'type', '=', 'type,', 'help', '=', 'help,', 'metavar', '=', 'metavar,', 'multiple', '=', 'multiple,', 'group_name', '=', 'group_name,', 'callback', '=', 'callback,', 'self._options', '=', 'option', 'self,', 'args:', 'Optional', 'str', '=', 'bool', '=', '->', 'str', 'args', 'args', '=', 'sys.argv', '=', '[]', 'i', 'range', '1,', 'len', 'args', 'args', 'i', '\"', '-', '\"', '=', 'args', 'i', 'args', 'i]', '==', '\"', '--', '\":', '=', 'args', 'i', '+', '1', ':]', 'arg', '=', 'args', 'i', '.lstrip', '\"', '-', '\")', 'name,', 'equals,', 'value', '=', 'arg.partition', '\"', '=', '\")', 'name', '=', 'name)', 'name', 'self._options:', '\"Unrecognized', 'option:', '%r\"', '%', 'name)', 'option', '=', 'self._options', 'name]', 'equals:', 'option.type', '==', 'bool:', 'value', '=', '\"true\"', '\"Option', '%r', 'requires', 'a', 'value\"', '%', 'name)', 'option.parse', 'value)', 'self.run_parse_callbacks', 'parse_config_file', 'self,', 'path:', 'str,', 'bool', '=', '->', 'config', '=', '{\"__file__\":', 'os.path.abspath', 'path', 'open', 'path,', '\"rb\")', 'f:', 'native_str', 'f.read', 'config,', 'config)', 'name', 'config:', '=', 'name)', 'self._options:', 'option', '=', 'self._options', 'option.multiple:', 'config', 'name', 'str', '\"Option', '%r', 'required', 'to', 'be', 'a', 'of', '%s', '\"', 'a', 'comma', '-', 'separated', '%', '(option.name,', 'option.type.__name__)', 'type', 'config', 'name', '==', 'str', 'option.type', '!=', 'str', 'option.multiple', '):', 'option.parse', 'config', 'name', 'option.set', 'config', 'name', 'self.run_parse_callbacks', 'self,', 'file:', 'Optional', 'TextIO]', '=', '->', 'file', 'file', '=', 'sys.stderr', '\"Usage:', '%s', '[OPTIONS', '\"', '%', 'sys.argv', '0', 'file', '=', 'file)', '\"\\\\nOptions', '\\\\n\",', 'file', '=', 'file)', 'by_group', '=', '{}', 'option', 'self._options.values', 'option.group_name,', '.append', 'option)', 'filename,', 'o', 'by_group.items', 'filename:', '\"\\\\n', '%', 's', 'options', '\\\\n\"', '%', 'filename', 'file', '=', 'file)', 'key', '=', 'option:', 'option.name)', 'option', 'o:', 'prefix', '=', 'option.name)', 'option.metavar:', 'prefix', '+=', '\"', '=', '\"', '+', 'option.metavar', 'description', '=', 'option.help', '\"\"', '!=', '\"\":', 'description', '+=', '\"', '%s', '\"', '%', '=', 'textwrap.wrap', 'description,', '79', '-', '35)', 'len', 'prefix)', '>', '30', 'len', '==', '0:', '0,', '\"\")', '\"', '-', '-', '%', '-', '30s', '%s\"', '%', '(prefix,', '0', 'file', '=', 'file)', '1', '\"', '%', '-', '34s', '%s\"', '%', '(\"', '\",', 'file', '=', 'file)', 'file', '=', 'file)', '_help_callback', 'self,', 'value:', 'bool)', '->', 'value:', 'sys.exit', '0)', 'add_parse_callback', 'self,', 'callback:', 'Callable', '->', 'self._parse_callbacks.append', 'callback)', 'run_parse_callbacks', 'self)', '->', 'callback', 'self._parse_callbacks:', 'callback', 'mockable', 'self)', '->', '\"_Mockable\":', '_Mockable', 'self)', '_Mockable', 'object', 'self,', 'options:', 'OptionParser)', '->', 'self.__dict__', '\"_options\"]', '=', 'options', 'self.__dict__', '=', '{}', '__getattr__', 'self,', 'name:', 'str)', '->', 'Any:', 'getattr', 'self._options,', 'name)', '__setattr__', 'self,', 'name:', 'str,', 'value:', 'Any)', '->', 'name', '\"don\\'t', 'reuse', 'mockable', 'objects\"', 'name]', '=', 'getattr', 'self._options,', 'name)', 'setattr', 'self._options,', 'name,', 'value)', 'self,', 'name:', 'str)', '->', 'setattr', 'self._options,', 'name,', 'name', '_Option', 'object', 'UNSET', '=', 'object', 'self,', 'name:', 'str,', 'Any', '=', 'type:', 'Optional', 'type]', '=', 'help:', 'Optional', 'str]', '=', 'metavar:', 'Optional', 'str]', '=', 'multiple:', 'bool', '=', 'file_name:', 'Optional', 'str]', '=', 'group_name:', 'Optional', 'str]', '=', 'callback:', 'Optional', 'Callable', 'Any', '=', '->', 'multiple:', '=', '[]', 'self.name', '=', 'name', 'type', '\"type', 'must', 'be', 'self.type', '=', 'type', 'self.help', '=', 'help', 'self.metavar', '=', 'metavar', 'self.multiple', '=', 'multiple', 'self.file_name', '=', 'file_name', 'self.group_name', '=', 'group_name', 'self.callback', '=', 'callback', '=', 'self._value', '=', '_Option.UNSET', 'value', 'self)', '->', 'Any:', 'self._value', '_Option.UNSET', 'self._value', 'parse', 'self,', 'value:', 'str)', '->', 'Any:', '_parse', '=', 'datetime.datetime:', 'self._parse_datetime,', 'bool:', 'self._parse_bool,', '}.get(', 'self.type,', 'self.type', 'self.multiple:', 'self._value', '=', '[]', 'part', 'value.split', '\"', '\"', 'self.type,', 'numbers.Integral', 'lo_str,', '_,', 'hi_str', '=', 'part.partition', '\"', '\")', 'lo', '=', '_parse', 'lo_str)', 'hi', '=', '_parse', 'hi_str)', 'hi_str', 'lo', 'self._value.extend', 'range', 'lo,', 'hi', '+', '1', 'self._value.append', '_parse', 'part', 'self._value', '=', '_parse', 'value)', 'self.callback', 'self.callback', 'self._value)', 'self.value', 'set', 'self,', 'value:', 'Any)', '->', 'self.multiple:', 'value,', '\"Option', '%r', 'required', 'to', 'be', 'a', 'of', '%s\"', '%', '(self.name,', 'self.type.__name__)', 'item', 'value:', 'item', 'item,', 'self.type', '\"Option', '%r', 'required', 'to', 'be', 'a', 'of', '%s\"', '%', '(self.name,', 'self.type.__name__)', 'value', 'value,', 'self.type', '\"Option', '%r', 'required', 'to', 'be', 'a', '%s', '%', 's', 'given', '\"', '%', '(self.name,', 'self.type.__name__,', 'type', 'value', 'self._value', '=', 'value', 'self.callback', 'self.callback', 'self._value)', '_DATETIME_FORMATS', '=', '\"', '%', 'a', '%b', '%d', '%H', '%', 'M', '%', 'S', '%Y\",', '\"', '%', 'Y', '-', '%', 'm', '-', '%', 'd', '%H', '%', 'M', '%', 'S\",', '\"', '%', 'Y', '-', '%', 'm', '-', '%', 'd', '%H', '%', 'M\",', '\"', '%', 'Y', '-', '%', 'm', '-', '%', 'dT', '%', 'H', '%', 'M\",', '\"', '%', 'Y', '%', 'm', '%', 'd', '%H', '%', 'M', '%', 'S\",', '\"', '%', 'Y', '%', 'm', '%', 'd', '%H', '%', 'M\",', '\"', '%', 'Y', '-', '%', 'm', '-', '%', 'd\",', '\"', '%', 'Y', '%', 'm', '%', 'd\",', '\"', '%', 'H', '%', 'M', '%', 'S\",', '\"', '%', 'H', '%', 'M\",', '_parse_datetime', 'self,', 'value:', 'str)', '->', 'datetime.datetime:', 'self._DATETIME_FORMATS:', 'datetime.datetime.strptime', 'value,', '\"Unrecognized', 'date', '/', 'time', '%r\"', '%', 'value)', '_TIMEDELTA_ABBREV_DICT', '=', '\"h\":', '\"hours\",', '\"m\":', '\"s\":', '\"seconds\",', '\"sec\":', '\"seconds\",', '\"ms\":', '\"us\":', '\"microseconds\",', '\"d\":', '\"days\",', '\"w\":', '\"weeks\",', '_FLOAT_PATTERN', '=', 'r\"', '-', '+', '?', '?', '\\\\d', '+', '?', '\\\\.\\\\d', '*', '?', '|', '\\\\.\\\\d', '+', '?', 'eE', '-', '+', '?\\\\d', '+', '?\"', '_TIMEDELTA_PATTERN', '=', 're.compile(', 'r\"\\\\s', '*', '%', 's', '\\\\s', '*', '\\\\w', '*', '\\\\s', '*', '\"', '%', '_FLOAT_PATTERN,', 're.IGNORECASE', 'self,', 'value:', 'str)', '->', 'sum', '=', 'start', '=', '0', 'start', '<', 'len', 'value', 'm', '=', 'self._TIMEDELTA_PATTERN.match', 'value,', 'start)', 'm:', 'Exception', 'num', '=', 'float', 'm.group', '1', 'units', '=', 'm.group', '2)', '\"seconds\"', 'units', '=', 'self._TIMEDELTA_ABBREV_DICT.get', 'units,', 'units)', 'sum', '+=', '**', 'units:', 'num', 'start', '=', 'm.end', 'sum', 'Exception:', '_parse_bool', 'self,', 'value:', 'str)', '->', 'bool:', 'value.lower', '(\"false\",', '\"0\",', '\"f\")', 'self,', 'value:', 'str)', '->', 'str:', '_unicode', 'value)', 'options', '=', 'OptionParser', 'name:', 'str,', 'Any', '=', 'type:', 'Optional', 'type]', '=', 'help:', 'Optional', 'str]', '=', 'metavar:', 'Optional', 'str]', '=', 'multiple:', 'bool', '=', 'group:', 'Optional', 'str]', '=', 'callback:', 'Optional', 'Callable', 'Any', '=', '->', 'name,', '=', 'type', '=', 'type,', 'help', '=', 'help,', 'metavar', '=', 'metavar,', 'multiple', '=', 'multiple,', 'group', '=', 'group,', 'callback', '=', 'callback,', 'args:', 'Optional', 'str', '=', 'bool', '=', '->', 'str', 'args,', '=', 'parse_config_file', 'path:', 'str,', 'bool', '=', '->', 'options.parse_config_file', 'path,', '=', 'file:', 'Optional', 'TextIO]', '=', '->', 'file)', 'add_parse_callback', 'callback:', 'Callable', '->', 'options.add_parse_callback', 'callback)', 'options)']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/tornado/platform/__init__.py",
        "vector": "[]"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/tornado/platform/asyncio.py",
        "vector": "['atexit', 'concurrent.futures', 'errno', 'functools', 'select', 'socket', 'sys', 'IOLoop,', '_Selectable', 'Any,', 'Callable,', 'Dict,', 'Optional,', 'Protocol,', 'Set,', 'Tuple,', 'TypeVar,', 'Union,', 'Protocol', 'fileno', 'self)', '->', '=', 'Union', '_T', '=', 'TypeVar', '\"_T\")', 'Set', '=', 'set', '_atexit_callback', '->', 'loop', 'loop._select_cond:', '=', 'loop._waker_w.send', 'b\"a\")', 'loop._thread', '_atexit_callback)', 'IOLoop', 'self,', '*', '*', 'kwargs:', 'Any', '->', '=', '=', '):', '=', 'Dict', 'Tuple', 'Union', '_Selectable', 'Callable', '=', '{}', 'self.readers:', 'Set', '=', 'set', 'self.writers:', 'Set', '=', 'set', '=', 'loop', 'loop]', '=', 'self)', 'self:', 'f\"IOLoop', 'already', 'loop', '\"', 'super', '**', 'kwargs)', 'close', 'self,', 'all_fds:', 'bool', '=', '->', '=', 'fd', 'fileobj,', '=', 'fd]', 'fd)', 'all_fds:', 'self.close_fd', 'fileobj)', 'self,', 'fd:', 'Union', '_Selectable', 'Callable', '...,', 'events:', '->', 'fd,', 'fileobj', '=', 'self.split_fd', 'fd)', 'fd', '\"fd', '%s', 'added', 'twice\"', '%', 'fd)', 'fd]', '=', '(fileobj,', 'events', '&', 'IOLoop.READ:', 'fd,', 'fd,', 'IOLoop.READ)', 'self.readers.add', 'fd)', 'events', '&', 'IOLoop.WRITE:', 'fd,', 'fd,', 'IOLoop.WRITE)', 'self.writers.add', 'fd)', 'self,', 'fd:', 'Union', '_Selectable', 'events:', '->', 'fd,', 'fileobj', '=', 'self.split_fd', 'fd)', 'events', '&', 'IOLoop.READ:', 'fd', 'self.readers:', 'fd,', 'fd,', 'IOLoop.READ)', 'self.readers.add', 'fd)', 'fd', 'self.readers:', 'fd)', 'self.readers.remove', 'fd)', 'events', '&', 'IOLoop.WRITE:', 'fd', 'self.writers:', 'fd,', 'fd,', 'IOLoop.WRITE)', 'self.writers.add', 'fd)', 'fd', 'self.writers:', 'fd)', 'self.writers.remove', 'fd)', 'self,', 'fd:', 'Union', '_Selectable', '->', 'fd,', 'fileobj', '=', 'self.split_fd', 'fd)', 'fd', 'fd', 'self.readers:', 'fd)', 'self.readers.remove', 'fd)', 'fd', 'self.writers:', 'fd)', 'self.writers.remove', 'fd)', 'fd]', 'self,', 'fd:', 'events:', '->', 'fileobj,', '=', 'fd]', 'fileobj,', 'events)', 'start', 'self)', '->', 'stop', 'self)', '->', 'call_at(', 'self,', 'when:', 'float,', 'callback:', 'Callable,', '*args:', 'Any,', '*', '*', 'kwargs:', 'Any', '->', 'object:', 'max', '0,', 'when', '-', 'self.time', 'self._run_callback,', 'functools.partial', 'callback,', '*args,', '*', '*', 'kwargs', 'remove_timeout', 'self,', 'timeout:', 'object)', '->', 'timeout.cancel', 'add_callback', 'self,', 'callback:', 'Callable,', '*args:', 'Any,', '*', '*', 'kwargs:', 'Any)', '->', 'call_soon', '=', 'call_soon', '=', 'call_soon', '=', 'call_soon', 'self._run_callback,', 'functools.partial', 'callback,', '*args,', '*', '*', 'kwargs', 'self,', 'callback:', 'Callable,', '*args:', 'Any,', '*', '*', 'kwargs:', 'Any', '->', 'deprecated\",', 'self._run_callback,', 'functools.partial', 'callback,', '*args,', '*', '*', 'kwargs)', 'self,', 'Optional', 'func:', 'Callable', '...,', '_T', '*args:', 'Any,', '->', '_T', '\":', 'func,', '*args)', 'self,', '->', 'self,', '*', '*', 'kwargs:', 'Any)', '->', 'super', '*', '*', 'kwargs)', '_make_current', 'self)', '->', 'AsyncIOLoop', 'self,', '*', '*', 'kwargs:', 'Any)', '->', '=', 'loop', '=', 'kwargs:', 'kwargs', '=', 'loop', '=', 'super', '**', 'kwargs)', 'Exception:', 'loop', 'loop.close', 'close', 'self,', 'all_fds:', 'bool', '=', '->', 'self._clear_current', 'super', '.close', 'all_fds', '=', 'all_fds)', '_make_current', 'self)', '->', '=', '=', '=', '_clear_current_hook', 'self)', '->', '=', '->', '->', '==', '=', '=', 'AnyThreadEventLoopPolicy', 'self)', '->', 'super', '\"AnyThreadEventLoopPolicy', 'deprecated,', 'use', '\"', 'stacklevel', '=', '2,', 'get_event_loop', 'self)', '->', 'super', '.get_event_loop', 'loop', '=', 'self.new_event_loop', 'self.set_event_loop', 'loop)', 'loop', '_closed', '=', 'self,', 'real_loop:', '->', 'self._real_loop', '=', 'real_loop', 'self._select_cond', '=', 'self._select_args:', 'Optional[', 'Tuple', '=', '=', 'self._thread:', 'Optional', '=', '=', 'self._thread_manager', 'thread_manager_anext', '->', 'self._real_loop.call_soon(', 'thread_manager_anext', 'self._readers:', 'Dict', 'Callable]', '=', '{}', 'self._writers:', 'Dict', 'Callable]', '=', '{}', 'self._waker_r,', 'self._waker_w', '=', 'socket.socketpair', 'self)', 'self.add_reader', 'self._waker_r,', 'self._consume_waker)', 'close', 'self)', '->', 'self._closed:', 'self._select_cond:', '=', 'self._thread', 'self)', 'self.remove_reader', 'self._waker_r)', 'self._waker_r.close', 'self._waker_w.close', 'self._closed', '=', '_thread_manager', 'self)', '->', 'self._thread', '=', 'name', '=', 'daemon', '=', 'target', '=', 'self._run_select,', 'self._thread.start', 'self._start_select', 'self.close', 'self)', '->', 'self._closed:', 'self._waker_w.send', 'b\"a\")', '_consume_waker', 'self)', '->', 'self._waker_r.recv', '1024)', '_start_select', 'self)', '->', 'self._select_cond:', 'self._select_args', 'self._select_args', '=', 'self._readers.keys', 'self._writers.keys', '_run_select', 'self)', '->', 'self._select_cond:', 'self._select_args', 'self._select_cond.wait', 'self._select_args', 'to_read,', 'to_write', '=', 'self._select_args', 'self._select_args', '=', 'rs,', 'ws,', 'xs', '=', 'select.select', 'to_read,', 'to_write,', 'to_write)', 'ws', '=', 'ws', '+', 'xs', 'e:', 'e.errno', '==', 'getattr', 'errno,', '\"WSAENOTSOCK\",', 'errno.EBADF', 'rs,', '_,', '_', '=', 'select.select', 'self._waker_r.fileno', '0)', 'rs:', 'ws', '=', '[]', 'self._real_loop.call_soon_threadsafe', 'rs,', 'ws)', 'self,', 'rs:', 'ws:', '->', 'r', 'rs:', 'r,', 'self._readers)', 'w', 'ws:', 'w,', 'self._writers)', 'self._start_select', 'self,', 'fd:', 'cb_map:', 'Dict', 'Callable', '->', 'callback', '=', 'cb_map', 'fd]', 'callback', 'add_reader(', 'self,', 'fd:', 'callback:', 'Callable', '...,', '*args:', 'Any', '->', 'self._readers', 'fd]', '=', 'functools.partial', 'callback,', '*args)', 'add_writer(', 'self,', 'fd:', 'callback:', 'Callable', '...,', '*args:', 'Any', '->', 'self._writers', 'fd]', '=', 'functools.partial', 'callback,', '*args)', 'remove_reader', 'self,', 'fd:', '->', 'bool:', 'self._readers', 'fd]', 'remove_writer', 'self,', 'fd:', '->', 'bool:', 'self._writers', 'fd]', 'MY_ATTRIBUTES', '=', '\"_real_loop\",', '\"add_reader\",', '\"add_writer\",', '\"close\",', '\"remove_reader\",', '\"remove_writer\",', '__getattribute__', 'self,', 'name:', 'str)', '->', 'Any:', 'name', 'super', '.__getattribute__', 'name)', 'getattr', 'self._real_loop,', 'name)', 'self,', 'real_loop:', '->', 'self._real_loop', '=', 'real_loop', '=', 'real_loop)', 'close', 'self)', '->', 'self._real_loop.close', 'add_reader(', 'self,', 'fd:', 'callback:', 'Callable', '...,', '*args:', 'Any', '->', 'fd,', 'callback,', '*args)', 'add_writer(', 'self,', 'fd:', 'callback:', 'Callable', '...,', '*args:', 'Any', '->', 'fd,', 'callback,', '*args)', 'remove_reader', 'self,', 'fd:', '->', 'bool:', 'fd)', 'remove_writer', 'self,', 'fd:', '->', 'bool:', 'fd)']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/tornado/platform/caresresolver.py",
        "vector": "['pycares', 'socket', 'Future', 'gen', 'IOLoop', 'Resolver,', 'Any,', 'Tuple,', 'Dict', 'CaresResolver', 'Resolver', 'self)', '->', 'self.io_loop', '=', 'IOLoop.current', 'self.channel', '=', 'pycares.Channel', 'sock_state_cb', '=', 'self._sock_state_cb)', 'self.fds', '=', '{}', '_sock_state_cb', 'self,', 'fd:', 'readable:', 'bool,', 'writable:', 'bool)', '->', 'state', '=', '(IOLoop.READ', 'readable', '0)', '|', '(IOLoop.WRITE', 'writable', '0)', 'state:', 'fd)', 'self.fds', 'fd]', 'fd', 'self.fds:', 'fd,', 'state)', 'self.fds', 'fd]', '=', 'state', 'fd,', 'state)', 'self.fds', 'fd]', '=', 'state', 'self,', 'fd:', 'events:', '->', 'read_fd', '=', 'pycares.ARES_SOCKET_BAD', 'write_fd', '=', 'pycares.ARES_SOCKET_BAD', 'events', '&', 'IOLoop.READ:', 'read_fd', '=', 'fd', 'events', '&', 'IOLoop.WRITE:', 'write_fd', '=', 'fd', 'self.channel.process_fd', 'read_fd,', 'write_fd)', 'resolve(', 'self,', 'host:', 'str,', 'family:', '=', '0', '->', 'Any,', 'Any,', 'Tuple', 'Any', '\":', 'host', 'addresses', '=', '[host]', 'fut', '=', 'Future', 'self.channel.gethostbyname(', 'host,', 'family,', 'result,', 'fut.set_result', 'result,', 'result,', '=', 'fut', '\"C', '-', 'Ares', '%s:', '%s', '%s\"', '%', 'host)', 'addresses', '=', 'result.addresses', '=', '[]', 'address', 'addresses:', '\".\"', 'address:', 'address_family', '=', 'socket.AF_INET', '\"', '\"', 'address:', 'address_family', '=', 'socket.AF_INET6', 'address_family', '=', 'socket.AF_UNSPEC', 'family', '!=', 'socket.AF_UNSPEC', 'family', '!=', 'address_family:', '\"Requested', 'socket', 'family', '%d', 'but', 'got', '%d\"', '%', '(family,', 'address_family)', 'address_family', '(address,']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/tornado/platform/twisted.py",
        "vector": "['socket', 'sys', 'Deferred', 'failure', 'Future,', 'utf8', 'gen', 'Resolver', 'Any,', 'Tuple', 'Resolver', 'self)', '->', '=', 'host_resolver', '=', '\"', '/', 'etc', '/', 'hosts\")', 'cache_resolver', '=', '=', 'real_resolver', '=', '\"', '/', 'etc', '/', 'resolv.conf\",', '=', 'self.resolver', '=', '[host_resolver,', 'cache_resolver,', 'real_resolver]', 'resolve(', 'self,', 'host:', 'str,', 'family:', '=', '0', '->', 'Any,', 'Any,', 'Tuple', 'Any', '\":', 'host', 'resolved', '=', 'host', 'resolved_family', '=', 'socket.AF_INET', 'host', 'resolved', '=', 'host', 'resolved_family', '=', 'socket.AF_INET6', '=', 'self.resolver.getHostByName', 'utf8', 'host', 'fut', '=', 'Future', 'fut.set_result)', 'resolved', '=', 'fut', 'resolved,', 'failure.Failure', 'e:', 'e)', 'resolved', 'resolved_family', '=', 'socket.AF_INET', 'resolved', 'resolved_family', '=', 'socket.AF_INET6', 'resolved_family', '=', 'socket.AF_UNSPEC', 'family', '!=', 'socket.AF_UNSPEC', 'family', '!=', 'resolved_family:', 'Exception(', '\"Requested', 'socket', 'family', '%d', 'but', 'got', '%d\"', '%', '(family,', 'resolved_family)', 'result', '=', 'resolved_family', '(resolved,', 'result', '->', 'Deferred)', '_', 'd:', 'Deferred)', '->', 'Future:', 'f', '=', 'Future', 'errback', 'failure:', 'failure.Failure)', '->', 'Exception', '\"errback', 'called', 'f,', 'd.addCallbacks', 'f.set_result,', 'errback)', 'f']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/tornado/process.py",
        "vector": "['os', 'signal', 'subprocess', 'sys', 'time', 'Future,', 'future_set_result_unless_cancelled,', 'ioloop', 'PipeIOStream', 'gen_log', 'Optional,', 'Any,', 'Callable', '=', 'cpu_count', '->', '1', 'os.sysconf', '\"SC_NPROCESSORS_CONF\")', '\"Could', 'detect', 'number', 'of', '1\")', '1', '->', 'sys.modules:', 'seed', '=', '16', '16)', 'seed', '=', 'time.time', '*', '1000)', '^', 'os.getpid', 'seed)', '=', 'num_processes:', 'Optional', 'max_restarts:', 'Optional', '=', '->', '==', 'Exception', 'available', 'on', 'max_restarts', 'max_restarts', '=', '100', 'num_processes', 'num_processes', '<=', '0:', 'num_processes', '=', 'cpu_count', '%d', 'processes\",', 'num_processes)', 'children', '=', '{}', 'start_child', 'i:', '->', 'Optional', 'pid', '=', 'pid', '==', '0:', '=', 'i', 'i', 'children', 'pid]', '=', 'i', 'i', 'range', 'num_processes', 'id', '=', 'start_child', 'i)', 'id', 'id', 'num_restarts', '=', '0', 'children:', 'pid,', 'status', '=', 'os.wait', 'pid', 'children:', 'id', '=', 'children.pop', 'pid)', 'os.WIFSIGNALED', 'status', '\"child', '%d', '(pid', '%d)', 'killed', 'by', 'signal', '%d,', 'id,', 'pid,', 'os.WTERMSIG', 'status', 'os.WEXITSTATUS', 'status)', '!=', '0:', '\"child', '%d', '(pid', '%d)', 'exited', 'status', '%d,', 'id,', 'pid,', 'os.WEXITSTATUS', 'status', '\"child', '%d', '(pid', '%d)', 'exited', 'id,', 'pid)', 'num_restarts', '+=', '1', 'num_restarts', '>', 'max_restarts:', '\"Too', 'many', 'child', 'restarts,', 'up\")', 'new_id', '=', 'start_child', 'id)', 'new_id', 'new_id', 'sys.exit', '0)', '->', 'Optional', 'Subprocess', 'object', 'STREAM', '=', 'object', '=', '=', '{}', 'self,', '*args:', 'Any,', '*', '*', 'kwargs:', 'Any)', '->', 'self.io_loop', '=', 'ioloop.IOLoop.current', 'pipe_fds', '=', '[]', 'to_close', '=', '[]', 'kwargs.get', 'Subprocess.STREAM:', '=', 'os.pipe', 'kwargs', '=', 'pipe_fds.extend', 'to_close.append', '=', 'PipeIOStream', 'kwargs.get', '\"stdout\")', 'Subprocess.STREAM:', 'out_r,', 'out_w', '=', 'os.pipe', 'kwargs', '\"stdout\"]', '=', 'out_w', 'pipe_fds.extend', 'out_r,', 'out_w', 'to_close.append', 'out_w)', 'self.stdout', '=', 'PipeIOStream', 'out_r)', 'kwargs.get', '\"stderr\")', 'Subprocess.STREAM:', 'err_r,', 'err_w', '=', 'os.pipe', 'kwargs', '\"stderr\"]', '=', 'err_w', 'pipe_fds.extend', 'err_r,', 'err_w', 'to_close.append', 'err_w)', 'self.stderr', '=', 'PipeIOStream', 'err_r)', 'self.proc', '=', 'subprocess.Popen', '*', 'args,', '*', '*', 'kwargs)', 'fd', 'pipe_fds:', 'os.close', 'fd)', 'fd', 'to_close:', 'os.close', 'fd)', 'self.pid', '=', 'self.proc.pid', 'attr', '\"stdout\",', '\"stderr\"', 'self,', 'attr', 'setattr', 'self,', 'attr,', 'getattr', 'self.proc,', 'attr', 'self._exit_callback', '=', '=', 'set_exit_callback', 'self,', 'callback:', 'Callable', '->', 'self._exit_callback', '=', 'callback', 'self.pid]', '=', 'self', 'self.pid)', 'self,', 'bool', '=', '->', '\"Future', '\":', 'future', '=', 'Future', 'callback', 'ret:', '->', 'ret', '!=', '0', 'future,', 'ret,', '\"unknown\")', 'future_set_result_unless_cancelled', 'future,', 'ret)', 'self.set_exit_callback', 'callback)', 'future', 'cls)', '->', 'loop', '=', 'signal.SIGCHLD,', 'cls._cleanup)', '=', 'cls)', '->', 'loop', '=', 'signal.SIGCHLD)', '=', '_cleanup', 'cls)', '->', 'pid', 'pid)', 'cls,', 'pid:', '->', 'ret_pid,', 'status', '=', 'os.waitpid', 'pid,', 'os.WNOHANG)', 'ret_pid', '==', '0:', 'ret_pid', '==', 'pid', 'subproc', '=', 'pid)', 'subproc.io_loop.add_callback', 'status)', 'self,', 'status:', '->', '==', '=', '-1', 'os.WIFSIGNALED', 'status', '=', '-os.WTERMSIG', 'status)', 'os.WIFEXITED', 'status)', '=', 'os.WEXITSTATUS', 'status)', '=', 'self._exit_callback:', 'callback', '=', 'self._exit_callback', 'self._exit_callback', '=', 'callback']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/tornado/queues.py",
        "vector": "['collections', 'datetime', 'heapq', 'gen,', 'ioloop', 'Future,', 'future_set_result_unless_cancelled', 'Event', 'Union,', 'TypeVar,', 'Generic,', 'Awaitable,', 'Optional', 'Deque,', 'Tuple,', 'Any', '_T', '=', 'TypeVar', '\"_T\")', '__all__', '=', '[\"Queue\",', '\"QueueFull\",', '\"QueueEmpty\"]', 'QueueEmpty', 'Exception', 'QueueFull', 'Exception', '_set_timeout(', 'future:', 'Future,', 'timeout:', 'Union', 'float,', '->', 'timeout:', 'on_timeout', '->', 'future.done', 'io_loop', '=', 'ioloop.IOLoop.current', '=', 'io_loop.add_timeout', 'timeout,', 'on_timeout)', 'future.add_done_callback', '_:', 'io_loop.remove_timeout', 'Generic', '_T', 'self,', 'q:', '\"Queue', '_T', '\")', '->', 'self.q', '=', 'q', '__anext__', 'self)', '->', 'Awaitable', '_T', 'self.q.get', 'Queue', 'Generic', '_T', '_queue', '=', 'self,', 'maxsize:', '=', '0)', '->', 'maxsize', '\"maxsize', \"can't\", 'be', 'maxsize', '<', '0:', '\"maxsize', \"can't\", 'be', 'negative\")', 'self._maxsize', '=', 'maxsize', 'self._getters', '=', 'collections.deque', 'self._putters', '=', 'collections.deque', '=', '0', '=', 'Event', '@property', 'maxsize', 'self)', '->', 'self._maxsize', 'qsize', 'self)', '->', 'len', 'self._queue)', 'empty', 'self)', '->', 'bool:', 'self._queue', 'full', 'self)', '->', 'bool:', 'self.maxsize', '==', '0:', 'self.qsize', '>=', 'self.maxsize', 'put(', 'self,', 'item:', '_T,', 'timeout:', 'Optional', 'Union', 'float,', '=', '->', '\"Future', '\":', 'future', '=', 'Future', 'self.put_nowait', 'item)', 'QueueFull:', 'self._putters.append', 'item,', 'future', '_set_timeout', 'future,', 'timeout)', 'future.set_result', 'future', 'put_nowait', 'self,', 'item:', '_T)', '->', 'self._consume_expired', 'self._getters:', 'self.empty', '\"queue', 'non', '-', 'empty,', 'why', 'are', 'getters', 'getter', '=', 'self._getters.popleft', 'item)', 'future_set_result_unless_cancelled', 'getter,', 'self._get', 'self.full', 'QueueFull', 'item)', 'get(', 'self,', 'timeout:', 'Optional', 'Union', 'float,', '=', '->', 'Awaitable', '_T', 'future', '=', 'Future', 'future.set_result', 'self.get_nowait', 'QueueEmpty:', 'self._getters.append', 'future)', '_set_timeout', 'future,', 'timeout)', 'future', 'get_nowait', 'self)', '->', '_T:', 'self._consume_expired', 'self._putters:', 'self.full', '\"queue', 'full,', 'why', 'are', 'putters', 'item,', 'putter', '=', 'self._putters.popleft', 'item)', 'future_set_result_unless_cancelled', 'putter,', 'self._get', 'self.qsize', 'self._get', 'QueueEmpty', 'self)', '->', '<=', '0:', 'called', 'too', 'many', 'times\")', '-=', '1', '==', '0:', 'self,', 'timeout:', 'Optional', 'Union', 'float,', '=', '->', 'Awaitable', 'timeout)', '__aiter__', 'self)', '->', '_T', 'self)', 'self)', '->', 'self._queue', '=', 'collections.deque', '_get', 'self)', '->', '_T:', 'self._queue.popleft', '_put', 'self,', 'item:', '_T)', '->', 'self._queue.append', 'item)', 'self,', 'item:', '_T)', '->', '+=', '1', 'self._put', 'item)', '_consume_expired', 'self)', '->', 'self._putters', 'self._putters', '0', '1', '.done', 'self._putters.popleft', 'self._getters', 'self._getters', '0', '.done', 'self._getters.popleft', '__repr__', 'self)', '->', 'str:', '\"', '<', '%', 's', 'at', '%s', '%s', '>', '\"', '%', '(type', 'self', '.__name__,', 'hex', 'id', 'self', '__str__', 'self)', '->', 'str:', '\"', '<', '%', 's', '%s', '>', '\"', '%', '(type', 'self', '.__name__,', 'self)', '->', 'str:', 'result', '=', '\"maxsize', '=', '%', 'r\"', '%', '(self.maxsize', 'getattr', 'self,', '\"_queue\",', 'result', '+=', '\"', 'queue', '=', '%', 'r\"', '%', 'self._queue', 'self._getters:', 'result', '+=', '\"', 'getters', '%', 's', '\"', '%', 'len', 'self._getters)', 'self._putters:', 'result', '+=', '\"', 'putters', '%', 's', '\"', '%', 'len', 'self._putters)', 'result', '+=', '\"', '=', '%', 's\"', '%', 'result', 'Queue', 'self)', '->', 'self._queue', '=', '[]', '_put', 'self,', 'item:', '_T)', '->', 'heapq.heappush', 'self._queue,', 'item)', '_get', 'self)', '->', '_T:', 'heapq.heappop', 'self._queue)', 'Queue', 'self)', '->', 'self._queue', '=', '[]', '_put', 'self,', 'item:', '_T)', '->', 'self._queue.append', 'item)', '_get', 'self)', '->', '_T:', 'self._queue.pop']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/tornado/routing.py",
        "vector": "['re', 'functools', 'partial', 'httputil', '_CallableAdapter', 'url_escape,', 'url_unescape,', 'utf8', 'app_log', 're_unescape,', 'unicode_type', 'Any,', 'Union,', 'Optional,', 'Awaitable,', 'Dict,', 'Pattern,', 'Tuple,', 'overload', 'Router', 'httputil.HTTPServerConnectionDelegate', 'self,', 'request:', 'httputil.HTTPServerRequest,', '*', '*', 'kwargs:', 'Any', '->', 'Optional', 'httputil.HTTPMessageDelegate', 'start_request(', 'self,', 'server_conn:', 'object,', 'request_conn:', 'httputil.HTTPConnection', '->', 'httputil.HTTPMessageDelegate:', 'self,', 'server_conn,', 'request_conn)', 'ReversibleRouter', 'Router', 'reverse_url', 'self,', 'name:', 'str,', '*args:', 'Any)', '->', 'Optional', 'str', 'httputil.HTTPMessageDelegate', 'self,', 'router:', 'Router,', 'server_conn:', 'object,', 'request_conn:', 'httputil.HTTPConnection', '->', 'self.server_conn', '=', 'server_conn', 'self.request_conn', '=', 'request_conn', '=', 'self.router', '=', 'router', 'headers_received(', 'self,', 'Union', 'headers:', 'httputil.HTTPHeaders,', '->', 'Optional', 'Awaitable', 'request', '=', 'httputil.HTTPServerRequest(', 'connection', '=', 'self.request_conn,', 'server_connection', '=', 'self.server_conn,', '=', 'headers', '=', 'headers,', '=', 'request)', 'app_log.debug(', '\"Delegate', '%s', '%s', 'request', 'found\",', '=', '_DefaultMessageDelegate', 'self.request_conn)', 'headers)', 'data_received', 'self,', 'chunk:', 'bytes)', '->', 'Optional', 'Awaitable', 'chunk)', 'self)', '->', 'on_connection_close', 'self)', '->', '_DefaultMessageDelegate', 'httputil.HTTPMessageDelegate', 'self,', 'connection:', 'httputil.HTTPConnection)', '->', 'self.connection', '=', 'connection', 'self)', '->', 'self.connection.write_headers(', '\"HTTP', '/', '1.1\",', '404,', '\"Not', 'Found\"', 'httputil.HTTPHeaders', '=', 'Union[', '\"Rule\",', 'Any', 'Tuple', 'Union', 'str,', '\"Matcher\"', 'Any', 'Tuple', 'Union', 'str,', '\"Matcher\"', 'Any,', 'Dict', 'str,', 'Any', 'Tuple', 'Union', 'str,', '\"Matcher\"', 'Any,', 'Dict', 'str,', 'Any', 'str', 'RuleRouter', 'Router', 'self,', 'rules:', 'Optional', '=', '->', 'self.rules', '=', '[]', 'rules:', 'self.add_rules', 'rules)', 'add_rules', 'self,', 'rules:', '->', 'rule', 'rules:', 'rule,', '(tuple,', 'len', 'rule)', '(2,', '3,', '4)', 'rule', '0', 'rule', '=', 'Rule', 'PathMatches', 'rule', '0', '*rule', '1', 'rule', '=', 'Rule', '*', 'rule)', 'self.rules.append', 'self.process_rule', 'rule', 'process_rule', 'self,', 'rule:', '\"Rule\")', '->', '\"Rule\":', 'rule', 'self,', 'request:', 'httputil.HTTPServerRequest,', '*', '*', 'kwargs:', 'Any', '->', 'Optional', 'httputil.HTTPMessageDelegate', 'rule', 'self.rules:', 'target_params', '=', 'rule.matcher.match', 'request)', 'target_params', 'rule.target_kwargs:', 'target_params', '\"target_kwargs\"]', '=', 'rule.target_kwargs', '=', 'rule.target,', 'request,', '*', '*', 'target_params', 'self,', 'target:', 'Any,', 'request:', 'httputil.HTTPServerRequest,', '*', '*', 'target_params:', 'Any', '->', 'Optional', 'httputil.HTTPMessageDelegate', 'target,', 'Router', 'request,', '*', '*', 'target_params)', 'target,', 'httputil.HTTPServerConnectionDelegate', 'request.connection', 'target.start_request', 'request.server_connection,', 'request.connection)', 'callable', 'target', 'request.connection', '_CallableAdapter(', 'partial', 'target,', '*', '*', 'target_params', 'request.connection', 'ReversibleRuleRouter', 'ReversibleRouter,', 'RuleRouter', 'self,', 'rules:', 'Optional', '=', '->', 'self.named_rules', '=', '{}', 'super', 'rules)', 'process_rule', 'self,', 'rule:', '\"Rule\")', '->', '\"Rule\":', 'rule', '=', 'super', '.process_rule', 'rule)', 'rule.name:', 'rule.name', 'self.named_rules:', '\"Multiple', 'named', '%s;', 'previous', 'value\",', 'rule.name', 'self.named_rules', 'rule.name]', '=', 'rule', 'rule', 'reverse_url', 'self,', 'name:', 'str,', '*args:', 'Any)', '->', 'Optional', 'str', 'name', 'self.named_rules:', 'self.named_rules', 'name', '.matcher.reverse', '*', 'args)', 'rule', 'self.rules:', 'rule.target,', 'ReversibleRouter', 'reversed_url', '=', 'rule.target.reverse_url', 'name,', '*args)', 'reversed_url', 'reversed_url', 'Rule', 'object', 'self,', 'matcher:', '\"Matcher\",', 'target:', 'Any,', 'target_kwargs:', 'Optional', 'Dict', 'str,', 'Any', '=', 'name:', 'Optional', 'str]', '=', '->', 'target,', 'str', 'target', '=', 'target)', 'self.matcher', '=', 'matcher', 'self.target', '=', 'target', 'self.target_kwargs', '=', 'target_kwargs', 'target_kwargs', '{}', 'self.name', '=', 'name', 'reverse', 'self,', '*args:', 'Any)', '->', 'Optional', 'str', 'self.matcher.reverse', '*', 'args)', '__repr__', 'self)', '->', 'str:', '\"', '%', 's', '%', 'r,', '%s,', 'kwargs', '=', '%', 'r,', 'name', '=', '%', 'r', '\"', '%', 'self.matcher,', 'self.target,', 'self.target_kwargs,', 'self.name,', 'Matcher', 'object', 'match', 'self,', 'request:', 'httputil.HTTPServerRequest)', '->', 'Optional', 'Dict', 'str,', 'Any', 'reverse', 'self,', '*args:', 'Any)', '->', 'Optional', 'str', 'AnyMatches', 'Matcher', 'match', 'self,', 'request:', 'httputil.HTTPServerRequest)', '->', 'Optional', 'Dict', 'str,', 'Any', '{}', 'HostMatches', 'Matcher', 'self,', 'host_pattern:', 'Union', 'str,', 'Pattern', '->', 'host_pattern,', '\"$\"', 'host_pattern', '+=', '\"$\"', 'self.host_pattern', '=', 're.compile', 'host_pattern)', 'self.host_pattern', '=', 'host_pattern', 'match', 'self,', 'request:', 'httputil.HTTPServerRequest)', '->', 'Optional', 'Dict', 'str,', 'Any', 'self.host_pattern.match', 'request.host_name', '{}', 'DefaultHostMatches', 'Matcher', 'self,', 'application:', 'Any,', 'host_pattern:', 'Pattern)', '->', 'self.application', '=', 'application', 'self.host_pattern', '=', 'host_pattern', 'match', 'self,', 'request:', 'httputil.HTTPServerRequest)', '->', 'Optional', 'Dict', 'str,', 'Any', '\"X', '-', 'Real', '-', 'Ip\"', 'request.headers:', 'self.host_pattern.match', '{}', 'PathMatches', 'Matcher', 'self,', 'path_pattern:', 'Union', 'str,', 'Pattern', '->', 'path_pattern,', '\"$\"', 'path_pattern', '+=', '\"$\"', 'self.regex', '=', 're.compile', 'path_pattern)', 'self.regex', '=', 'path_pattern', 'len', '(0,', 'self.regex.groups', '\"groups', 'url', 'regexes', 'must', 'either', 'be', 'all', 'named', 'all', '\"', '\"positional:', '%r\"', '%', 'self.regex.pattern', 'self._path,', 'self._group_count', '=', 'match', 'self,', 'request:', 'httputil.HTTPServerRequest)', '->', 'Optional', 'Dict', 'str,', 'Any', 'match', '=', 'self.regex.match', 'request.path)', 'match', 'self.regex.groups:', '{}', 'path_args', '=', '[]', 'path_kwargs', '=', '{}', 'path_kwargs', '=', 'dict(', '(str', 'k', 'v', '(k,', 'v)', 'match.groupdict', '.items', 'path_args', '=', 's)', 's', 'match.groups', 'dict', 'path_args', '=', 'path_args,', 'path_kwargs', '=', 'path_kwargs)', 'reverse', 'self,', '*args:', 'Any)', '->', 'Optional', 'str', 'self._path', 'reverse', 'url', 'regex', '\"', '+', 'self.regex.pattern)', 'len', 'args)', '==', 'self._group_count,', '\"required', 'number', 'of', 'arguments', '\"', 'found\"', 'len', 'args', 'self._path', 'converted_args', '=', '[]', 'a', 'args:', 'a,', '(unicode_type,', 'bytes', 'a', '=', 'str', 'a)', 'converted_args.append', 'url_escape', 'utf8', 'a', 'plus', '=', 'self._path', '%', 'tuple', 'converted_args)', 'self)', '->', 'Tuple', 'Optional', 'str', 'Optional', 'pattern', '=', 'self.regex.pattern', '\"', '^', '\"', 'pattern', '=', 'pattern', '1', '\"$\"', 'pattern', '=', 'pattern', '-', '1]', 'self.regex.groups', '!=', 'pattern.count', '\"', '\"', 'pieces', '=', '[]', 'fragment', 'pattern.split', '\"', '\"', '\"', '\"', 'fragment:', 'paren_loc', '=', '\"', '\")', 'paren_loc', '>=', '0:', 'unescaped_fragment', '=', 're_unescape', 'fragment', 'paren_loc', '+', '1', 'pieces.append', '\"', '%', 's\"', '+', 'unescaped_fragment)', 'unescaped_fragment', '=', 're_unescape', 'fragment)', 'pieces.append', 'unescaped_fragment)', 'pieces', 'self.regex.groups', 'URLSpec', 'Rule', 'self,', 'pattern:', 'Union', 'str,', 'Pattern', 'Any,', 'kwargs:', 'Optional', 'Dict', 'str,', 'Any', '=', 'name:', 'Optional', 'str]', '=', '->', 'matcher', '=', 'PathMatches', 'pattern)', 'super', 'matcher,', 'kwargs,', 'name)', 'self.regex', '=', 'matcher.regex', '=', 'self.target', 'self.kwargs', '=', 'kwargs', '__repr__', 'self)', '->', 'str:', '\"', '%', 's', '%', 'r,', '%s,', 'kwargs', '=', '%', 'r,', 'name', '=', '%', 'r', '\"', '%', 'self.regex.pattern,', 'self.kwargs,', 'self.name,', '@overload', 's:', 'str)', '->', 'bytes:', '@overload', 's:', '->', 's:', 'Optional', 'str', '->', 'Optional', 'bytes', 's', 's', 'url_unescape', 's,', '=', 'plus', '=']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/tornado/simple_httpclient.py",
        "vector": "['_unicode', 'gen,', 'version', 'HTTPResponse,', 'AsyncHTTPClient,', '_RequestProxy,', 'HTTPRequest,', 'httputil', 'HTTP1Connection,', 'HTTP1ConnectionParameters', 'IOLoop', 'IOStream', 'Resolver,', 'OverrideResolver,', 'gen_log', 'TCPClient', 'collections', 'copy', 'functools', 're', 'socket', 'ssl', 'sys', 'time', 'io', 'BytesIO', 'urllib.parse', 'Dict,', 'Any,', 'Callable,', 'Optional,', 'Type,', 'Union', 'types', 'TracebackType', 'Deque,', 'Tuple,', 'self,', 'message:', 'str)', '->', 'super', '599,', 'message', '=', 'message)', '__str__', 'self)', '->', 'str:', 'self.message', '\"Timeout\"', 'self,', 'message:', 'str)', '->', 'super', '599,', 'message', '=', 'message)', '__str__', 'self)', '->', 'str:', 'self.message', '\"Stream', 'closed\"', 'SimpleAsyncHTTPClient', 'AsyncHTTPClient', 'self,', 'max_clients:', '=', '10,', 'Optional', 'Dict', 'str,', 'str', '=', 'max_buffer_size:', '=', '104857600,', 'resolver:', 'Optional', 'Resolver]', '=', 'Optional', 'Dict', 'str,', 'Any', '=', 'max_header_size:', 'Optional', '=', 'max_body_size:', 'Optional', '=', '->', 'super', '=', 'self.max_clients', '=', 'max_clients', 'self.queue', '=', 'collections.deque', 'self.active', '=', '{}', '=', '{}', 'self.max_buffer_size', '=', 'max_buffer_size', 'self.max_header_size', '=', 'max_header_size', 'self.max_body_size', '=', 'max_body_size', 'resolver:', 'self.resolver', '=', 'resolver', 'self.own_resolver', '=', 'self.resolver', '=', 'Resolver', 'self.own_resolver', '=', 'self.resolver', '=', 'OverrideResolver(', 'resolver', '=', 'self.resolver,', '=', 'self.tcp_client', '=', 'TCPClient', 'resolver', '=', 'self.resolver)', 'close', 'self)', '->', 'super', '.close', 'self.own_resolver:', 'self.resolver.close', 'self.tcp_client.close', 'fetch_impl(', 'self,', 'request:', 'HTTPRequest,', 'callback:', 'Callable', 'HTTPResponse', '->', 'key', '=', 'object', 'self.queue.append', 'key,', 'request,', 'callback', 'request.connect_timeout', 'request.request_timeout', '=', 'len', 'self.active)', '>=', 'self.max_clients:', 'timeout', '=', 'request.connect_timeout,', 'request.request_timeout)', 'request.connect_timeout', 'request.request_timeout', 'timeout:', '=', 'self.io_loop.add_timeout(', 'self.io_loop.time', '+', 'timeout,', 'functools.partial', 'self._on_timeout,', 'key,', 'request', 'queue\"', 'key]', '=', '(request,', 'callback,', 'self._process_queue', 'self.queue:', 'gen_log.debug(', '\"max_clients', 'limit', 'reached,', 'request', 'queued.', '\"', '\"', '%', 'd', 'active,', '%d', 'queued', 'requests.\"', '%', '(len', 'self.active', 'len', 'self.queue', '_process_queue', 'self)', '->', 'self.queue', 'len', 'self.active)', '<', 'self.max_clients:', 'key,', 'request,', 'callback', '=', 'self.queue.popleft', 'key', 'self._remove_timeout', 'key)', 'self.active', 'key]', '=', '(request,', 'callback)', '=', 'functools.partial', 'key)', 'request,', 'callback)', 'self)', '->', 'type:', '_HTTPConnection', 'self,', 'request:', 'HTTPRequest,', 'Callable', 'Callable', 'HTTPResponse', '->', 'self,', 'request,', 'self.max_buffer_size,', 'self.tcp_client,', 'self.max_header_size,', 'self.max_body_size,', 'self,', 'key:', 'object)', '->', 'self.active', 'key]', 'self._process_queue', '_remove_timeout', 'self,', 'key:', 'object)', '->', 'key', 'request,', 'callback,', '=', 'key]', 'self.io_loop.remove_timeout', 'key]', '_on_timeout', 'self,', 'key:', 'object,', 'Optional', 'str]', '=', '->', 'request,', 'callback,', '=', 'key]', 'self.queue.remove', 'key,', 'request,', 'callback', '=', '\"Timeout', '{0', '\"Timeout\"', 'timeout_response', '=', 'HTTPResponse(', 'request,', '599,', '=', 'request_time', '=', 'self.io_loop.time', '-', 'request.start_time,', 'self.io_loop.add_callback', 'callback,', 'timeout_response)', 'key]', '_HTTPConnection', 'httputil.HTTPMessageDelegate', '_SUPPORTED_METHODS', '=', 'set(', '[\"GET\",', '\"HEAD\",', '\"POST\",', '\"PUT\",', '\"DELETE\",', '\"PATCH\",', '\"OPTIONS\"]', 'self,', 'client:', 'Optional', 'SimpleAsyncHTTPClient', 'request:', 'HTTPRequest,', 'Callable', 'Callable', 'HTTPResponse', 'max_buffer_size:', 'tcp_client:', 'TCPClient,', 'max_header_size:', 'max_body_size:', '->', 'self.io_loop', '=', 'IOLoop.current', 'self.start_time', '=', 'self.io_loop.time', 'self.start_wall_time', '=', 'time.time', 'self.client', '=', 'client', 'self.request', '=', 'request', '=', '=', 'self.max_buffer_size', '=', 'max_buffer_size', 'self.tcp_client', '=', 'tcp_client', 'self.max_header_size', '=', 'max_header_size', 'self.max_body_size', '=', 'max_body_size', 'self.code', '=', 'self.headers', '=', 'self.chunks', '=', '[]', '=', 'self._timeout', '=', 'self._sockaddr', '=', 'IOLoop.current', '.add_future(', 'self.run', 'f:', 'f.result', 'run', 'self)', '->', 'self.parsed', '=', 'urllib.parse.urlsplit', '_unicode', 'self.request.url', 'self.parsed.scheme', '(\"http\",', '\"https\"', 'url', 'scheme:', '%s\"', '%', 'self.request.url)', 'netloc', '=', 'self.parsed.netloc', '\"', '@', '\"', 'netloc:', '_,', 'netloc', '=', 'netloc.rpartition', '\"', '@', '\")', 'host,', '=', 'netloc)', '=', '443', 'self.parsed.scheme', '==', '\"https\"', '80', 're.match', 'r\"', '^', '\\\\', '.', '*', '\\\\', '$\",', 'host', 'host', '=', 'host', '1', '-', '1]', 'self.parsed_hostname', '=', 'host', 'self.request.allow_ipv6', 'af', '=', 'socket.AF_INET', 'af', '=', 'socket.AF_UNSPEC', 'ssl_options', '=', 'self._get_ssl_options', 'self.parsed.scheme)', 'source_ip', '=', 'source_ip', '=', '\"Unrecognized', 'IPv4', 'IPv6', 'address', 'got', '%r\"', '%', 'self.request.connect_timeout', 'self.request.request_timeout:', 'timeout', '=', 'self.request.connect_timeout,', 'self.request.request_timeout', 'self.request.connect_timeout:', 'timeout', '=', 'self.request.connect_timeout', 'self.request.request_timeout:', 'timeout', '=', 'self.request.request_timeout', 'timeout', '=', '0', 'timeout:', 'self._timeout', '=', 'self.io_loop.add_timeout(', 'self.start_time', '+', 'timeout,', 'functools.partial', 'self._on_timeout,', 'stream', '=', 'self.tcp_client.connect(', 'host,', 'af', '=', 'af,', 'ssl_options', '=', 'ssl_options,', 'max_buffer_size', '=', 'self.max_buffer_size,', 'source_ip', '=', 'source_ip,', 'stream.close', 'self.stream', '=', 'stream', 'self.stream.set_close_callback', 'self.on_connection_close)', 'self._remove_timeout', 'self.request.request_timeout:', 'self._timeout', '=', 'self.io_loop.add_timeout(', 'self.start_time', '+', 'self.request.request_timeout,', 'functools.partial', 'self._on_timeout,', 'request\"', 'self.request.method', 'self._SUPPORTED_METHODS', '):', '\"unknown', 'method', '%s\"', '%', 'self.request.method)', 'key', '\"proxy_host\",', '\"proxy_username\",', '\"proxy_auth_mode\",', '):', 'getattr', 'self.request,', 'key,', '\"', '%', 's', '%', 'key)', '\"Connection\"', 'self.request.headers:', 'self.request.headers', '\"Connection\"]', '=', '\"close\"', '\"Host\"', 'self.request.headers:', '\"', '@', '\"', 'self.parsed.netloc:', 'self.request.headers', '\"Host\"]', '=', 'self.parsed.netloc.rpartition', '\"', '@', '\"', '-1', 'self.request.headers', '\"Host\"]', '=', 'self.parsed.netloc', 'username,', '=', 'self.parsed.username', 'username,', '=', 'self.parsed.username,', 'self.request.auth_username', 'username', '=', 'self.request.auth_username', '=', '\"\"', 'username', 'self.request.auth_mode', 'auth_mode', '%s\",', 'self.request.auth_mode)', 'self.request.headers', '=', '\"', '+', '_unicode(', 'username,', 'self.request.user_agent:', 'self.request.headers', '\"User', '-', 'Agent\"]', '=', 'self.request.user_agent', 'self.request.headers.get', '\"User', '-', 'Agent\")', 'self.request.headers', '\"User', '-', 'Agent\"]', '=', '/', 'version)', 'body_expected', '=', 'self.request.method', '(\"POST\",', '\"PATCH\",', '\"PUT\")', 'body_present', '=', 'self.request.body', 'self.request.body_producer', '(body_expected', 'body_present)', 'body_present', 'body_expected', '):', '\"Body', 'must', '%sbe', 'method', '%s', '(unless', '\"', 'true', '\"', '%', '\"', 'body_expected', '\"\",', 'self.request.method)', 'self.request.headers', '\"Expect\"]', '=', '\"100', '-', 'self.request.body', 'self.request.headers', '\"Content', '-', 'Length\"]', '=', 'str', 'len', 'self.request.body', 'self.request.method', '==', '\"POST\"', '\"Content', '-', 'Type\"', 'self.request.headers', '):', 'self.request.headers[', '\"Content', '-', 'Type\"', '=', '\"application', '/', 'x', '-', 'www', '-', '-', 'urlencoded\"', 'self.request.decompress_response:', 'self.request.headers', '\"Accept', '-', '=', '\"gzip\"', 'req_path', '=', '(self.parsed.path', '\"', '/', '\")', '+', '(\"?\"', '+', 'self.parsed.query)', 'self.parsed.query', '\"\"', 'self.connection', '=', 'self._create_connection', 'stream)', '=', 'self.request.method,', 'req_path,', '\"\")', 'self.connection.write_headers', 'self.request.headers)', 'self.connection.read_response', 'self)', 'self._write_body', 'Exception:', '*', '_get_ssl_options(', 'self,', 'scheme:', 'str', '->', 'Union', 'Dict', 'str,', 'Any', 'ssl.SSLContext', 'scheme', '==', '\"https\":', 'self.request.ssl_options', 'self.request.ssl_options', 'self.request.validate_cert', 'self.request.ca_certs', 'self.request.client_cert', 'self.request.client_key', '):', 'ssl_ctx', '=', 'ssl.Purpose.SERVER_AUTH,', 'cafile', '=', 'self.request.ca_certs', 'self.request.validate_cert:', 'ssl_ctx.check_hostname', '=', '=', 'ssl.CERT_NONE', 'self.request.client_cert', 'self.request.client_cert,', 'self.request.client_key', 'ssl,', '\"OP_NO_COMPRESSION\"', 'ssl_ctx.options', '|=', 'ssl.OP_NO_COMPRESSION', 'ssl_ctx', '_on_timeout', 'self,', 'Optional', 'str]', '=', '->', 'self._timeout', '=', '=', '\"Timeout', '{0', '\"Timeout\"', '_remove_timeout', 'self)', '->', 'self._timeout', 'self.io_loop.remove_timeout', 'self._timeout)', 'self._timeout', '=', '_create_connection', 'self,', 'stream:', 'IOStream)', '->', 'HTTP1Connection:', 'connection', '=', 'HTTP1Connection(', 'stream,', 'HTTP1ConnectionParameters(', 'no_keep_alive', '=', 'max_header_size', '=', 'self.max_header_size,', 'max_body_size', '=', 'self.max_body_size,', 'decompress', '=', 'bool', 'self.request.decompress_response', '),', 'self._sockaddr,', 'connection', '_write_body', 'self,', 'start_read:', 'bool)', '->', 'self.request.body', 'self.connection.write', 'self.request.body)', 'self.request.body_producer', 'fut', '=', 'self.request.body_producer', 'self.connection.write)', 'fut', 'fut', 'start_read:', 'self.connection.read_response', 'self)', '*', 'self)', '->', '=', '=', '_run_callback', 'self,', 'response:', 'HTTPResponse)', '->', '=', '=', 'self.io_loop.add_callback', 'response)', 'self,', 'typ:', '\"Optional', 'Type', '\",', 'value:', 'Optional', 'tb:', 'Optional', 'TracebackType', '->', 'bool:', 'self._remove_timeout', 'value,', 'value', '=', '\"Stream', 'closed\")', 'value', '=', 'self._run_callback(', 'HTTPResponse(', 'self.request,', '599,', '=', 'value,', 'request_time', '=', 'self.io_loop.time', '-', 'self.start_time,', 'start_time', '=', 'self.start_wall_time,', 'self,', '\"stream\"', 'self.stream.close', 'value,', 'on_connection_close', 'self)', '->', 'message', '=', '\"Connection', 'closed\"', 'message)', '*', 'headers_received(', 'self,', 'Union', 'headers:', 'httputil.HTTPHeaders,', '->', '==', '100:', 'self._write_body', 'self.code', '=', '=', 'self.headers', '=', 'headers', 'self._should_follow_redirect', 'self.request.header_callback', 'self.request.header_callback', '\"', '%', 's', '%s', '%s\\\\r\\\\n\"', '%', 'k,', 'v', 'self.headers.get_all', 'self.request.header_callback', '\"', '%', 's:', '%s\\\\r\\\\n\"', '%', '(k,', 'v', 'self.request.header_callback', '\"\\\\r\\\\n\")', '_should_follow_redirect', 'self)', '->', 'bool:', 'self.request.follow_redirects:', 'self.request.max_redirects', 'self.code', '(301,', '302,', '303,', '307,', '308)', 'self.request.max_redirects', '>', '0', 'self.headers', 'self.headers.get', '\"Location\")', 'self)', '->', 'self.code', 'data', '=', 'self.chunks)', 'self._remove_timeout', '=', 'getattr', 'self.request,', 'self.request)', 'self._should_follow_redirect', 'self.request,', '_RequestProxy)', 'self.headers', 'new_request', '=', 'copy.copy', 'self.request.request)', 'new_request.url', '=', 'self.request.url,', 'self.headers', '\"Location\"]', 'self.request.max_redirects', 'new_request.max_redirects', '=', 'self.request.max_redirects', '-', '1', 'new_request.headers', '\"Host\"]', '(self.code', '==', '303', 'self.request.method', '!=', '\"HEAD\")', 'self.code', '(301,', '302)', 'self.request.method', '==', '\"POST\"', '):', 'new_request.method', '=', '\"GET\"', 'new_request.body', '=', 'h', '\"Content', '-', 'Length\",', '\"Content', '-', 'Type\",', '\"Content', '-', '\"Transfer', '-', ']:', 'self.request.headers', 'h]', '=', '=', '=', 'self.client', 'fut', '=', 'self.client.fetch', 'new_request,', '=', 'fut.add_done_callback', 'f:', 'f.result', 'self._on_end_request', 'buffer', '=', 'BytesIO', 'buffer', '=', 'BytesIO', 'data)', 'response', '=', 'HTTPResponse(', 'self.code,', '=', 'getattr', 'self,', 'headers', '=', 'self.headers,', 'request_time', '=', 'self.io_loop.time', '-', 'self.start_time,', 'start_time', '=', 'self.start_wall_time,', 'buffer', '=', 'buffer,', 'effective_url', '=', 'self.request.url,', 'self._run_callback', 'response)', 'self._on_end_request', '_on_end_request', 'self)', '->', 'self.stream.close', 'data_received', 'self,', 'chunk:', 'bytes)', '->', 'self._should_follow_redirect', 'chunk)', 'self.chunks.append', 'chunk)', '__name__', '==', 'AsyncHTTPClient.configure', 'SimpleAsyncHTTPClient)']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/tornado/tcpclient.py",
        "vector": "['functools', 'socket', 'numbers', 'datetime', 'ssl', 'Future,', 'future_add_done_callback', 'IOLoop', 'IOStream', 'gen', 'Resolver', 'Any,', 'Union,', 'Dict,', 'Tuple,', 'Callable,', 'Optional', 'Set', '_INITIAL_CONNECT_TIMEOUT', '=', '0.3', 'object', 'self,', 'Tuple', 'connect:', 'Callable[', '[socket.AddressFamily,', 'Tuple', 'Tuple', 'IOStream,', '\"Future', 'IOStream', '\"]', '],', '->', 'self.io_loop', '=', 'IOLoop.current', 'self.connect', '=', 'connect', 'self.future', '=', 'Future', 'self.timeout', '=', 'self.connect_timeout', '=', '=', '=', 'len', 'self.primary_addrs,', 'self.secondary_addrs', '=', 'self.split', 'self.streams', '=', 'set', '@staticmethod', 'split(', 'Tuple', '->', 'Tuple[', 'Tuple', 'socket.AddressFamily,', 'Tuple', 'Tuple', 'socket.AddressFamily,', 'Tuple', ']:', 'primary', '=', '[]', 'secondary', '=', '[]', 'primary_af', '=', '0', '0]', 'af,', 'addr', 'af', '==', 'primary_af:', 'primary.append', 'af,', 'addr', 'secondary.append', 'af,', 'addr', 'primary,', 'secondary', 'start(', 'self,', 'timeout:', 'float', '=', '_INITIAL_CONNECT_TIMEOUT,', 'connect_timeout:', 'Optional', 'Union', 'float,', '=', '->', '\"Future', 'Tuple', 'socket.AddressFamily,', 'Any,', 'IOStream', '\":', 'iter', 'self.primary_addrs', 'self.set_timeout', 'timeout)', 'connect_timeout', 'self.set_connect_timeout', 'connect_timeout)', 'self.future', 'self,', 'addrs:', 'Tuple', 'socket.AddressFamily,', 'Tuple', '->', 'af,', 'addr', '=', 'next', 'addrs)', 'StopIteration:', '==', '0', 'self.future.done', '\"connection', 'failed\")', 'stream,', 'future', '=', 'self.connect', 'af,', 'addr)', 'self.streams.add', 'stream)', 'future_add_done_callback(', 'future,', 'functools.partial', 'self.on_connect_done,', 'addrs,', 'af,', 'addr)', 'on_connect_done(', 'self,', 'addrs:', 'Tuple', 'socket.AddressFamily,', 'Tuple', 'af:', 'socket.AddressFamily,', 'addr:', 'Tuple,', 'future:', '\"Future', 'IOStream', '\",', '->', '-=', '1', 'stream', '=', 'future.result', 'Exception', 'e:', 'self.future.done', '=', 'e', 'addrs)', 'self.timeout', 'self.io_loop.remove_timeout', 'self.timeout)', 'self.on_timeout', 'self.clear_timeouts', 'self.future.done', 'stream.close', 'stream)', 'self.future.set_result', 'af,', 'addr,', 'stream', 'self.close_streams', 'set_timeout', 'self,', 'timeout:', 'float)', '->', 'self.timeout', '=', 'self.io_loop.add_timeout(', 'self.io_loop.time', '+', 'timeout,', 'self.on_timeout', 'on_timeout', 'self)', '->', 'self.timeout', '=', 'self.future.done', 'iter', 'self.secondary_addrs', 'clear_timeout', 'self)', '->', 'self.timeout', 'self.io_loop.remove_timeout', 'self.timeout)', 'set_connect_timeout(', 'self,', 'connect_timeout:', 'Union', 'float,', '->', 'self.connect_timeout', '=', 'self.io_loop.add_timeout(', 'connect_timeout,', 'self.on_connect_timeout', 'on_connect_timeout', 'self)', '->', 'self.future.done', 'self.close_streams', 'clear_timeouts', 'self)', '->', 'self.timeout', 'self.io_loop.remove_timeout', 'self.timeout)', 'self.connect_timeout', 'self.io_loop.remove_timeout', 'self.connect_timeout)', 'close_streams', 'self)', '->', 'stream', 'self.streams:', 'stream.close', 'TCPClient', 'object', 'self,', 'resolver:', 'Optional', 'Resolver]', '=', '->', 'resolver', 'self.resolver', '=', 'resolver', 'self._own_resolver', '=', 'self.resolver', '=', 'Resolver', 'self._own_resolver', '=', 'close', 'self)', '->', 'self._own_resolver:', 'self.resolver.close', 'connect(', 'self,', 'host:', 'str,', 'af:', 'socket.AddressFamily', '=', 'socket.AF_UNSPEC,', 'ssl_options:', 'Optional', 'Union', 'Dict', 'str,', 'Any', 'ssl.SSLContext', '=', 'max_buffer_size:', 'Optional', '=', 'source_ip:', 'Optional', 'str]', '=', 'Optional', '=', 'timeout:', 'Optional', 'Union', 'float,', '=', '->', 'IOStream:', 'timeout', 'timeout,', 'numbers.Real', 'timeout', '=', 'IOLoop.current', '.time', '+', 'timeout', 'timeout,', 'timeout', '=', 'IOLoop.current', '.time', '+', 'timeout.total_seconds', 'timeout', '%r\"', '%', 'timeout)', 'timeout', '=', 'timeout,', 'self.resolver.resolve', 'host,', 'af)', '=', 'self.resolver.resolve', 'host,', 'af)', '=', 'functools.partial(', 'self._create_stream,', 'max_buffer_size,', 'source_ip', '=', 'source_ip,', '=', '),', 'af,', 'addr,', 'stream', '=', 'connect_timeout', '=', 'timeout)', 'ssl_options', 'timeout', 'stream', '=', 'timeout,', 'stream.start_tls(', 'ssl_options', '=', 'ssl_options,', 'server_hostname', '=', 'host', '),', 'stream', '=', 'stream.start_tls(', 'ssl_options', '=', 'ssl_options,', 'server_hostname', '=', 'host', 'stream', '_create_stream(', 'self,', 'max_buffer_size:', 'af:', 'socket.AddressFamily,', 'addr:', 'Tuple,', 'source_ip:', 'Optional', 'str]', '=', 'Optional', '=', '->', 'Tuple', 'IOStream,', '\"Future', 'IOStream', '\"', '=', '0', '=', 'source_ip', 'source_ip:', '=', '\"', '1\"', 'af', '==', 'socket.AF_INET6', '\"127.0.0.1\"', 'socket_obj', '=', 'socket.socket', 'af)', 'socket_obj.close', 'stream', '=', 'IOStream', 'socket_obj,', 'max_buffer_size', '=', 'max_buffer_size)', 'e:', 'fu', '=', 'Future', 'e)', 'stream,', 'fu', 'stream,', 'stream.connect', 'addr)']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/tornado/tcpserver.py",
        "vector": "['errno', 'os', 'socket', 'ssl', 'gen', 'app_log', 'IOLoop', 'IOStream,', 'SSLIOStream', 'ssl_wrap_socket,', '_DEFAULT_BACKLOG,', 'process', 'Union,', 'Dict,', 'Any,', 'Iterable,', 'Optional,', 'Awaitable', 'Callable,', 'TCPServer', 'object', 'r', 'self,', 'ssl_options:', 'Optional', 'Union', 'Dict', 'str,', 'Any', 'ssl.SSLContext', '=', 'max_buffer_size:', 'Optional', '=', 'read_chunk_size:', 'Optional', '=', '->', 'self.ssl_options', '=', 'ssl_options', 'self._sockets', '=', '{}', '=', '{}', '=', '[]', 'self._started', '=', 'self._stopped', '=', 'self.max_buffer_size', '=', 'max_buffer_size', 'self.read_chunk_size', '=', 'read_chunk_size', 'self.ssl_options', 'self.ssl_options,', 'dict', '\"certfile\"', 'self.ssl_options:', 'key', '\"certfile\"', \"ssl_options')\", 'self.ssl_options', '\"certfile\"', \"'certfile\", '\"', '%', 's\"', 'does', '%', 'self.ssl_options', '\"certfile\"]', '\"keyfile\"', 'self.ssl_options', 'self.ssl_options', '\"keyfile\"]', '):', \"'keyfile\", '\"', '%', 's\"', 'does', '%', 'self.ssl_options', '\"keyfile\"]', 'self,', 'address:', 'Optional', 'str]', '=', 'family:', 'socket.AddressFamily', '=', 'socket.AF_UNSPEC,', 'backlog:', '=', '_DEFAULT_BACKLOG,', 'flags:', 'Optional', '=', 'bool', '=', '->', 'sockets', '=', 'address', '=', 'address,', 'family', '=', 'family,', 'backlog', '=', 'backlog,', 'flags', '=', 'flags,', '=', 'self.add_sockets', 'sockets)', 'add_sockets', 'self,', 'sockets:', 'Iterable', 'socket.socket', '->', 'sock', 'sockets:', 'self._sockets', 'sock.fileno', '=', 'sock', 'sock.fileno', '=', 'sock,', 'add_socket', 'self,', 'socket:', 'socket.socket)', '->', 'self.add_sockets', 'socket', 'self,', 'address:', 'Optional', 'str]', '=', 'family:', 'socket.AddressFamily', '=', 'socket.AF_UNSPEC,', 'backlog:', '=', '_DEFAULT_BACKLOG,', 'flags:', 'Optional', '=', 'bool', '=', '->', 'sockets', '=', 'address', '=', 'address,', 'family', '=', 'family,', 'backlog', '=', 'backlog,', 'flags', '=', 'flags,', '=', 'self._started:', 'self.add_sockets', 'sockets)', 'sockets)', 'start(', 'self,', 'num_processes:', 'Optional', '=', '1,', 'max_restarts:', 'Optional', '=', '->', 'self._started', 'self._started', '=', 'num_processes', '!=', '1:', 'num_processes,', 'max_restarts)', 'sockets', '=', '=', '[]', 'self.add_sockets', 'sockets)', 'stop', 'self)', '->', 'self._stopped:', 'self._stopped', '=', 'fd,', 'sock', 'self._sockets.items', 'sock.fileno', '==', 'fd', 'fd', 'sock.close', 'self,', 'stream:', 'IOStream,', 'address:', 'tuple', '->', 'Optional', 'Awaitable', 'self,', 'connection:', 'socket.socket,', 'address:', 'Any)', '->', 'self.ssl_options', 'ssl,', '\"Python', '2.6+', 'OpenSSL', 'required', 'SSL\"', 'connection', '=', 'ssl_wrap_socket(', 'connection,', 'self.ssl_options,', 'server_side', '=', '=', 'err:', 'err.args', '0]', '==', 'ssl.SSL_ERROR_EOF:', 'connection.close', 'err:', 'err)', '(errno.ECONNABORTED,', 'errno.EINVAL', 'connection.close', 'self.ssl_options', 'stream', '=', 'SSLIOStream(', 'connection,', 'max_buffer_size', '=', 'self.max_buffer_size,', 'read_chunk_size', '=', 'self.read_chunk_size,', 'stream', '=', 'IOStream(', 'connection,', 'max_buffer_size', '=', 'self.max_buffer_size,', 'read_chunk_size', '=', 'self.read_chunk_size,', 'future', '=', 'stream,', 'address)', 'future', 'IOLoop.current', '.add_future(', 'future', 'f:', 'f.result', 'Exception:', 'connection', 'callback\",', '=']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/tornado/template.py",
        "vector": "['datetime', 'io', 'os.path', 'posixpath', 're', 'escape', 'app_log', 'ObjectDict,', 'unicode_type', 'Any,', 'Union,', 'Callable,', 'Dict,', 'Iterable,', 'Optional,', 'TextIO', 'Tuple,', 'ContextManager', '_DEFAULT_AUTOESCAPE', '=', '\"xhtml_escape\"', '_UnsetMarker:', '_UNSET', '=', '_UnsetMarker', 'filter_whitespace', 'mode:', 'str,', 'text:', 'str)', '->', 'str:', 'mode', '==', '\"all\":', 'text', 'mode', '==', 'text', '=', 're.sub', 'r\"', '\\\\t', '+', '\",', '\"', '\",', 'text)', 'text', '=', 're.sub', 'r\"', '\\\\s', '*', '\\\\n\\\\s', '*', '\",', '\"\\\\n\",', 'text)', 'text', 'mode', '==', 're.sub', 'r\"', '\\\\s', '+', '\",', '\"', '\",', 'text)', 'Exception', 'whitespace', 'mode', '%s\"', '%', 'mode)', 'Template', 'object', 'self,', 'Union', 'str,', 'bytes', 'name:', 'str', '=', '\"', '<', '>', '\",', 'loader:', 'Optional', '=', 'compress_whitespace:', 'Union', 'bool,', '_UnsetMarker]', '=', '_UNSET,', 'autoescape:', 'Optional', 'Union', 'str,', '_UnsetMarker', '=', '_UNSET,', 'whitespace:', 'Optional', 'str]', '=', '->', 'self.name', '=', 'escape.native_str', 'name)', 'compress_whitespace', '_UNSET:', 'whitespace', 'Exception', 'set', 'both', 'whitespace', 'compress_whitespace\")', 'whitespace', '=', 'compress_whitespace', '\"all\"', 'whitespace', 'loader', 'loader.whitespace:', 'whitespace', '=', 'loader.whitespace', '\".html\")', '\".js\"', 'whitespace', '=', 'whitespace', '=', '\"all\"', 'whitespace', 'filter_whitespace', 'whitespace,', '\"\")', 'autoescape,', '_UnsetMarker', 'self.autoescape', '=', 'autoescape', 'loader:', 'self.autoescape', '=', 'loader.autoescape', 'self.autoescape', '=', '_DEFAULT_AUTOESCAPE', 'self.namespace', '=', 'loader.namespace', 'loader', '{}', 'reader', '=', '_TemplateReader', 'name,', 'escape.native_str', 'whitespace)', 'self.file', '=', '_File', 'self,', '_parse', 'reader,', 'self', 'self.code', '=', 'self._generate_python', 'loader)', 'self.loader', '=', 'loader', 'self.compiled', '=', 'compile(', 'escape.to_unicode', 'self.code', '\"', '%', 's.generated.py\"', '%', 'self.name.replace', '\".\",', '\"_\"', '\"exec\",', '=', 'Exception:', '=', 'self.code', '.rstrip', '\"', '%', 's', 'code', '\\\\n', '%', 's\",', 'self.name,', 'generate', 'self,', '*', '*', 'kwargs:', 'Any)', '->', 'bytes:', 'namespace', '=', '\"escape\":', 'escape.xhtml_escape,', '\"xhtml_escape\":', 'escape.xhtml_escape,', '\"url_escape\":', 'escape.url_escape,', '\"json_encode\":', 'escape.json_encode,', '\"squeeze\":', 'escape.squeeze,', '\"datetime\":', 'datetime,', '\"_tt_utf8\":', 'escape.utf8,', '(unicode_type,', 'bytes', '\"__name__\":', 'self.name.replace', '\".\",', '\"_\"', '\"__loader__\":', 'ObjectDict', 'get_source', '=', 'name:', 'self.code', 'namespace.update', 'self.namespace)', 'namespace.update', 'kwargs)', 'self.compiled,', 'namespace)', 'execute', '=', 'Callable', 'bytes', 'namespace', '\"_tt_execute\"', 'execute', '_generate_python', 'self,', 'loader:', 'Optional', '->', 'str:', 'buffer', '=', 'named_blocks', '=', '{}', '=', 'loader)', 'loader,', 'named_blocks)', 'writer', '=', '_CodeWriter', 'buffer,', 'named_blocks,', 'loader,', '0', '.template)', '0', '.generate', 'writer)', 'buffer.getvalue', 'buffer.close', 'self,', 'loader:', 'Optional', '->', '\"_File\"', '=', '[self.file]', 'chunk', 'self.file.body.chunks:', 'chunk,', '_ExtendsBlock', 'loader:', '\"', '%', 'extends', '%}', 'block', 'found,', 'but', 'no', '\"', '\"template', 'loader\"', 'template', '=', 'loader.load', 'chunk.name,', 'self.name)', 'loader', 'object', 'self,', 'autoescape:', 'str', '=', '_DEFAULT_AUTOESCAPE,', 'namespace:', 'Optional', 'Dict', 'str,', 'Any', '=', 'whitespace:', 'Optional', 'str]', '=', '->', 'self.autoescape', '=', 'autoescape', 'self.namespace', '=', 'namespace', '{}', 'self.whitespace', '=', 'whitespace', 'self.templates', '=', '{}', 'self.lock', '=', 'reset', 'self)', '->', 'self.lock:', 'self.templates', '=', '{}', 'resolve_path', 'self,', 'name:', 'str,', 'parent_path:', 'Optional', 'str]', '=', '->', 'str:', 'load', 'self,', 'name:', 'str,', 'parent_path:', 'Optional', 'str]', '=', '->', 'Template:', 'name', '=', 'self.resolve_path', 'name,', 'parent_path', '=', 'parent_path)', 'self.lock:', 'name', 'self.templates:', 'self.templates', 'name]', '=', 'self._create_template', 'name)', 'self.templates', 'name]', '_create_template', 'self,', 'name:', 'str)', '->', 'Template:', 'Loader', 'self,', 'str,', '*', '*', 'kwargs:', 'Any)', '->', 'super', '**', 'kwargs)', 'self.root', '=', 'os.path.abspath', 'resolve_path', 'self,', 'name:', 'str,', 'parent_path:', 'Optional', 'str]', '=', '->', 'str:', 'parent_path', '\"', '<', '\")', '\"', '/', '\")', '\"', '/', '\")', '):', 'current_path', '=', 'self.root,', 'parent_path)', 'file_dir', '=', 'os.path.dirname', 'os.path.abspath', 'current_path', 'relative_path', '=', 'os.path.abspath', 'file_dir,', 'name', 'self.root', 'name', '=', 'relative_path', 'len', 'self.root)', '+', '1', ':]', 'name', '_create_template', 'self,', 'name:', 'str)', '->', 'Template:', 'path', '=', 'self.root,', 'name)', 'open', 'path,', '\"rb\")', 'f:', 'template', '=', 'Template', 'f.read', 'name', '=', 'name,', 'loader', '=', 'self)', 'template', 'DictLoader', 'self,', 'dict:', 'Dict', 'str,', 'str', '*', '*', 'kwargs:', 'Any)', '->', 'super', '**', 'kwargs)', 'self.dict', '=', 'dict', 'resolve_path', 'self,', 'name:', 'str,', 'parent_path:', 'Optional', 'str]', '=', '->', 'str:', 'parent_path', '\"', '<', '\")', '\"', '/', '\")', '\"', '/', '\")', '):', 'file_dir', '=', 'posixpath.dirname', 'parent_path)', 'name', '=', 'file_dir,', 'name', 'name', '_create_template', 'self,', 'name:', 'str)', '->', 'Template:', 'Template', 'self.dict', 'name', 'name', '=', 'name,', 'loader', '=', 'self)', '_Node', 'object', 'each_child', 'self)', '->', 'Iterable', '\"_Node\"', '()', 'generate', 'self,', 'writer:', '\"_CodeWriter\")', '->', 'self,', 'loader:', 'Optional', 'named_blocks:', 'Dict', 'str,', '\"_NamedBlock\"]', '->', 'child', 'self.each_child', 'loader,', 'named_blocks)', '_File', '_Node', 'self,', 'template:', 'Template,', 'body:', '->', 'self.template', '=', 'template', 'self.body', '=', 'body', '=', '0', 'generate', 'self,', 'writer:', '\"_CodeWriter\")', '->', '_tt_execute', '\",', '\"_tt_buffer', '=', '\",', '\"_tt_append', '=', '_tt_buffer.append\",', 'self.body.generate', 'writer)', '_tt_utf8', \"''\", '_tt_buffer', '\",', 'each_child', 'self)', '->', 'Iterable', '\"_Node\"', '(self.body', '_Node', 'self,', 'chunks:', '_Node', '->', 'self.chunks', '=', 'chunks', 'generate', 'self,', 'writer:', '\"_CodeWriter\")', '->', 'chunk', 'self.chunks:', 'chunk.generate', 'writer)', 'each_child', 'self)', '->', 'Iterable', '\"_Node\"', 'self.chunks', '_NamedBlock', '_Node', 'self,', 'name:', 'str,', 'body:', '_Node,', 'template:', 'Template,', '->', 'self.name', '=', 'name', 'self.body', '=', 'body', 'self.template', '=', 'template', '=', 'each_child', 'self)', '->', 'Iterable', '\"_Node\"', '(self.body', 'generate', 'self,', 'writer:', '\"_CodeWriter\")', '->', 'block', '=', 'writer.named_blocks', 'self.name]', 'block.template,', 'block.body.generate', 'writer)', 'self,', 'loader:', 'Optional', 'named_blocks:', 'Dict', 'str,', '\"_NamedBlock\"]', '->', 'named_blocks', 'self.name]', '=', 'self', 'self,', 'loader,', 'named_blocks)', '_ExtendsBlock', '_Node', 'self,', 'name:', 'str)', '->', 'self.name', '=', 'name', '_IncludeBlock', '_Node', 'self,', 'name:', 'str,', 'reader:', '\"_TemplateReader\",', '->', 'self.name', '=', 'name', 'self.template_name', '=', 'reader.name', '=', 'self,', 'loader:', 'Optional', 'named_blocks:', 'Dict', 'str,', '_NamedBlock]', '->', 'loader', '=', 'loader.load', 'self.name,', 'self.template_name)', 'loader,', 'named_blocks)', 'generate', 'self,', 'writer:', '\"_CodeWriter\")', '->', 'writer.loader', '=', 'writer.loader.load', 'self.name,', 'self.template_name)', 'writer)', '_ApplyBlock', '_Node', 'self,', 'method:', 'str,', 'body:', '_Node)', '->', 'self.method', '=', 'method', '=', 'self.body', '=', 'body', 'each_child', 'self)', '->', 'Iterable', '\"_Node\"', '(self.body', 'generate', 'self,', 'writer:', '\"_CodeWriter\")', '->', 'method_name', '=', '\"_tt_apply', '%', 'd\"', '%', 'writer.apply_counter', 'writer.apply_counter', '+=', '1', '%s', '\"', '%', 'method_name,', '\"_tt_buffer', '=', '\",', '\"_tt_append', '=', '_tt_buffer.append\",', 'self.body.generate', 'writer)', '_tt_utf8', \"''\", '_tt_buffer', '\",', '\"_tt_append', '_tt_utf8', '%', 's', '%', 's', '\"', '%', '(self.method,', 'method_name', '_ControlBlock', '_Node', 'self,', 'statement:', 'str,', 'body:', '_Node)', '->', 'self.statement', '=', 'statement', '=', 'self.body', '=', 'body', 'each_child', 'self)', '->', 'Iterable', '_Node', '(self.body', 'generate', 'self,', 'writer:', '\"_CodeWriter\")', '->', '\"', '%', 's', '\"', '%', 'self.statement,', 'self.body.generate', 'writer)', '_IntermediateControlBlock', '_Node', 'self,', 'statement:', 'str,', '->', 'self.statement', '=', 'statement', '=', 'generate', 'self,', 'writer:', '\"_CodeWriter\")', '->', '\"', '%', 's', '\"', '%', 'self.statement,', '-', '1)', '_Statement', '_Node', 'self,', 'statement:', 'str,', '->', 'self.statement', '=', 'statement', '=', 'generate', 'self,', 'writer:', '\"_CodeWriter\")', '->', 'self.statement,', '_Expression', '_Node', 'self,', 'expression:', 'str,', 'raw:', 'bool', '=', '->', 'self.expression', '=', 'expression', '=', 'self.raw', '=', 'raw', 'generate', 'self,', 'writer:', '\"_CodeWriter\")', '->', '\"_tt_tmp', '=', '%s\"', '%', 'self.expression,', '_tt_tmp,', '\"', '\"', '_tt_tmp', '=', '_tt_utf8', '_tt_tmp', '\",', '_tt_tmp', '=', '_tt_utf8', 'str', '_tt_tmp', '\",', 'self.raw', 'writer.current_template.autoescape', '\"_tt_tmp', '=', '_tt_utf8', '%', 's', '_tt_tmp', '\"', '%', 'writer.current_template.autoescape,', '\"_tt_append', '_tt_tmp', '\",', '_Module', '_Expression', 'self,', 'expression:', 'str,', '->', 'super', '\"_tt_modules.\"', '+', 'expression,', 'raw', '=', '_Text', '_Node', 'self,', 'value:', 'str,', 'whitespace:', 'str)', '->', 'self.value', '=', 'value', '=', 'self.whitespace', '=', 'whitespace', 'generate', 'self,', 'writer:', '\"_CodeWriter\")', '->', 'value', '=', 'self.value', '\"', '<', 'pre', '>', '\"', 'value:', 'value', '=', 'filter_whitespace', 'self.whitespace,', 'value)', 'value:', '\"_tt_append', '%', 'r', '\"', '%', 'escape.utf8', 'value', 'Exception', 'self,', 'message:', 'str,', 'filename:', 'Optional', 'str]', '=', '=', '0', '->', 'self.message', '=', 'message', 'self.filename', '=', 'filename', '=', '__str__', 'self)', '->', 'str:', '\"', '%', 's', 'at', '%s', '%', 'd\"', '%', '(self.message,', 'self.filename,', '_CodeWriter', 'object', 'self,', 'file:', 'TextIO,', 'named_blocks:', 'Dict', 'str,', '_NamedBlock', 'loader:', 'Optional', 'current_template:', 'Template,', '->', 'self.file', '=', 'file', 'self.named_blocks', '=', 'named_blocks', 'self.loader', '=', 'loader', 'self.current_template', '=', 'current_template', 'self.apply_counter', '=', '0', '=', '[]', '=', '0', 'self)', '->', 'self)', '->', '\"ContextManager\":', 'Indenter', 'object', '__enter__', '_)', '->', '\"_CodeWriter\":', '+=', '1', 'self', '__exit__', '_,', '*args:', 'Any)', '->', '>', '0', '-=', '1', 'Indenter', 'self,', 'template:', 'Template,', '->', '\"ContextManager\":', 'self.current_template,', 'self.current_template', '=', 'template', 'IncludeTemplate', 'object', '__enter__', '_)', '->', '\"_CodeWriter\":', 'self', '__exit__', '_,', '*args:', 'Any)', '->', 'self.current_template', '=', '0]', 'IncludeTemplate', 'self,', 'str,', 'Optional', '=', '->', '=', '=', '\"', '=', '\"', '%', 's', '%', 'd\"', '%', '(tmpl.name,', '(tmpl,', '+=', '\"', '(via', '%s', '\"', '%', '\",', 'reversed', '\"', '\"', '*', '+', '+', 'file', '=', 'self.file)', '_TemplateReader', 'object', 'self,', 'name:', 'str,', 'text:', 'str,', 'whitespace:', 'str)', '->', 'self.name', '=', 'name', 'self.text', '=', 'text', 'self.whitespace', '=', 'whitespace', '=', '1', 'self.pos', '=', '0', 'self,', 'needle:', 'str,', 'start:', '=', '0,', 'end:', 'Optional', '=', '->', 'start', '>=', '0,', 'start', 'pos', '=', 'self.pos', 'start', '+=', 'pos', 'end', '=', 'needle,', 'start)', 'end', '+=', 'pos', 'end', '>=', 'start', '=', 'needle,', 'start,', 'end)', '!=', '-1:', '-=', 'pos', 'consume', 'self,', 'count:', 'Optional', '=', '->', 'str:', 'count', 'count', '=', 'len', 'self.text)', '-', 'self.pos', 'newpos', '=', 'self.pos', '+', 'count', '+=', 'self.text.count', '\"\\\\n\",', 'self.pos,', 'newpos)', 's', '=', 'self.text', 'self.pos', 'newpos]', 'self.pos', '=', 'newpos', 's', 'self)', '->', 'len', 'self.text)', '-', 'self.pos', '__len__', 'self)', '->', '__getitem__', 'self,', 'key:', 'Union', 'slice', '->', 'str:', 'key,', 'slice', 'size', '=', 'len', 'self)', 'start,', 'stop,', 'step', '=', 'size)', 'start', 'start', '=', 'self.pos', 'start', '+=', 'self.pos', 'stop', 'stop', '+=', 'self.pos', 'self.text', 'slice', 'start,', 'stop,', 'step', 'key', '<', '0:', 'self.text', 'key]', 'self.text', 'self.pos', '+', 'key]', '__str__', 'self)', '->', 'str:', 'self.text', 'self.pos', ':]', 'self,', 'msg:', 'str)', '->', 'msg,', 'self.name,', 'code:', 'str)', '->', 'str:', '=', '=', '\"', '%', '%', '%', 'dd', '%', '%', 's\\\\n\"', '%', 'len', 'repr', 'len', '+', '1', '%', '(i', '+', '1,', '(i,', 'enumerate', '_parse(', 'reader:', '_TemplateReader,', 'template:', 'Template,', 'Optional', 'str]', '=', 'Optional', 'str]', '=', '->', 'body', '=', 'curly', '=', '0', 'curly', '=', '\"', '\",', 'curly)', 'curly', '==', '-1', 'curly', '+', '1', '==', '%', '%', 'end', '%', '%', 'block', '%s\"', '%', 'body.chunks.append(', '_Text', 'reader.consume', 'reader.whitespace)', 'body', 'reader', 'curly', '+', '1]', '(\"', '\",', '\"', '%', '\",', '\"', 'curly', '+=', '1', 'curly', '+', '2', '<', 'reader', 'curly', '+', '1]', '==', '\"', '\"', 'reader', 'curly', '+', '2]', '==', '\"', '\"', '):', 'curly', '+=', '1', 'curly', '>', '0:', 'cons', '=', 'reader.consume', 'curly)', 'body.chunks.append', '_Text', 'cons,', 'reader.whitespace', 'start_brace', '=', 'reader.consume', '2)', '=', 'reader', '0]', '==', '\"!\":', 'reader.consume', '1)', 'body.chunks.append', '_Text', 'start_brace,', 'reader.whitespace', 'start_brace', '==', '\"{', 'end', '=', '\"', 'end', '==', '-1:', 'end', 'comment', 'contents', '=', 'reader.consume', 'end', '.strip', 'reader.consume', '2)', 'start_brace', '==', '\"', '\":', 'end', '=', '\"', '\")', 'end', '==', '-1:', 'end', 'expression', '\")', 'contents', '=', 'reader.consume', 'end', '.strip', 'reader.consume', '2)', 'contents:', '\"Empty', 'expression\")', 'body.chunks.append', '_Expression', 'contents,', 'start_brace', '==', '\"', '%', '\",', 'start_brace', 'end', '=', '\"', '%', '\")', 'end', '==', '-1:', 'end', 'block', '%', '\")', 'contents', '=', 'reader.consume', 'end', '.strip', 'reader.consume', '2)', 'contents:', '\"Empty', 'block', 'tag', '%', '%', '\")', 'space,', 'suffix', '=', 'contents.partition', '\"', '\")', 'suffix', '=', 'suffix.strip', '=', 'set', 'set', 'set', 'set', 'allowed_parents', '=', 'allowed_parents', '\"', '%', 's', 'outside', '%s', 'block\"', '%', 'allowed_parents)', 'allowed_parents:', '\"', '%', 's', 'block', 'be', 'attached', 'to', '%s', 'block\"', '%', 'body.chunks.append', '_IntermediateControlBlock', 'contents,', '==', '\"end\":', '\"Extra', '{%', 'end', '%}', 'block\")', 'body', '\"extends\",', '\"set\",', '\"comment\",', '\"autoescape\",', '\"whitespace\",', '\"raw\",', '\"module\",', '):', '==', '\"comment\":', '==', '\"extends\":', 'suffix', '=', 'suffix.strip', '\\'\"\\'', '.strip', '\"\\'\")', 'suffix:', '\"extends', 'file', 'path\")', 'block', '=', '_ExtendsBlock', 'suffix)', 'suffix:', 'statement\")', 'block', '=', '_Statement', 'contents,', '==', 'suffix', '=', 'suffix.strip', '\\'\"\\'', '.strip', '\"\\'\")', 'suffix:', 'file', 'path\")', 'block', '=', '_IncludeBlock', 'suffix,', 'reader,', '==', '\"set\":', 'suffix:', '\"set', 'statement\")', 'block', '=', '_Statement', 'suffix,', '==', '\"autoescape\":', 'fn', '=', 'suffix.strip', 'fn', '==', 'fn', '=', 'template.autoescape', '=', 'fn', '==', '\"whitespace\":', 'mode', '=', 'suffix.strip', 'filter_whitespace', 'mode,', '\"\")', 'reader.whitespace', '=', 'mode', '==', '\"raw\":', 'block', '=', '_Expression', 'suffix,', 'raw', '=', '==', '\"module\":', 'block', '=', '_Module', 'suffix,', 'body.chunks.append', 'block)', '(\"apply\",', '\"block\",', 'block_body', '=', '_parse', 'reader,', 'template,', '==', '\"apply\":', 'block_body', '=', '_parse', 'reader,', 'template,', 'block_body', '=', '_parse', 'reader,', 'template,', '==', '\"apply\":', 'suffix:', '\"apply', 'method', 'name\")', 'block', '=', '_ApplyBlock', 'suffix,', 'block_body)', '==', '\"block\":', 'suffix:', '\"block', 'name\")', 'block', '=', '_NamedBlock', 'suffix,', 'block_body,', 'template,', 'block', '=', '_ControlBlock', 'contents,', 'block_body)', 'body.chunks.append', 'block)', '\"', '%', 's', 'outside', '%s', 'block\"', '%', 'set', 'body.chunks.append', '_Statement', 'contents,', '\"unknown', '%r\"', '%']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/tornado/test/__init__.py",
        "vector": "[]"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/tornado/test/__main__.py",
        "vector": "['all,', 'all', '=', 'all']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/tornado/test/asyncio_test.py",
        "vector": "['time', 'unittest', 'concurrent.futures', 'gen', 'IOLoop', 'AsyncIOLoop,', 'AnyThreadEventLoopPolicy,', 'gen_test', 'AsyncIOLoopTest', '@property', 'self', 'self', 'add_callback', '.call_soon', 'self.stop)', 'add_callback', 'self.wait', '@gen_test', 'self', 'x', '=', '42)', 'x,', '42)', '@gen_test', 'self', 'f', 'event_loop', '=', 'x', '=', '42)', 'x', 'result', '=', 'f', 'result,', '42)', 'self', 'gen.moment', 'gen.Return', '42)', 'self.io_loop.run_sync', '42)', 'self.io_loop.run_sync', '42)', 'self.io_loop.run_sync', '42)', '42,', '42,', '42,', 'test_add_thread_close_idempotent', 'self', 'loop', '=', 'loop.close', 'loop.close', 'LeakTest', 'setUp', 'self', 'AsyncIOLoop', 'make_current', '=', '.close', '=', 'tearDown', 'self', 'loop', '=', '.get_event_loop', 'Exception:', 'loop.close', 'test_ioloop_close_leak', 'self', '=', 'len', 'i', 'range', '10', 'loop', '=', 'AsyncIOLoop', 'loop.close', 'new_count', '=', 'len', '-', 'new_count,', '0)', 'self', '=', 'len', 'i', 'range', '10', 'loop', '=', 'loop.call_soon', 'IOLoop.current)', 'loop.call_soon', 'loop.stop)', 'loop.close', 'new_count', '=', 'len', '-', 'new_count,', '1)', 'setUp', 'self', '=', 'self', '=', 'time.time', '+', '1', 'time.time', '<', 'threads', '=', 'len', 'threads)', '<=', 'time.sleep', '0.1)', 'len', 'threads', 'threads)', 'self', 'IOLoop.current', 'self', 'i', 'range', '10', 'self', 'i', 'range', '10', 'loop', '=', 'loop.run_until_complete', 'loop.run_until_complete', 'loop.close', 'self', 'i', 'range', '10', 'loop', '=', 'IOLoop', 'make_current', '=', 'loop.run_sync', 'loop.close', 'AnyThreadEventLoopPolicyTest', 'setUp', 'self', '=', '=', '1)', 'tearDown', 'self', 'get_event_loop_on_thread', 'self', 'loop', '=', 'loop.close', 'loop', 'future', '=', 'future.result', 'self', '.result', 'AnyThreadEventLoopPolicy', '.result', '.close', '.result', 'self', 'IOLoop.current', '.result', 'IOLoop)', '.close', '.result', 'AnyThreadEventLoopPolicy', 'IOLoop.current', '.result', 'IOLoop)', '.close', '.result']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/tornado/test/auth_test.py",
        "vector": "['unittest', 'json_decode', 'gen', 'url_concat', 'app_log', 'ExpectLog', 'Application,', 'unittest', 'mock', 'mock', '=', 'self,', 'test', 'self._OPENID_ENDPOINT', '=', 'test.get_url', '\"', '/', 'openid', '/', 'server', '/', 'authenticate\")', 'get', 'self', 'self.get_argument', '\"openid.mode\",', 'user', '=', 'self.get_authenticated_user(', 'http_client', '=', '\"http_client\"]', 'user', 'Exception', '\"user', 'user)', 'res', '=', 'self.authenticate_redirect', 'res', 'post', 'self', 'self.get_argument', '\"openid.mode\")', '!=', '\"check_authentication\":', 'Exception', 'openid.mode', '%r\")', 'self.write', 'true\")', 'self,', 'test,', 'version', 'self._OAUTH_VERSION', '=', 'version', 'self._OAUTH_REQUEST_TOKEN_URL', '=', 'test.get_url', '\"', '/', 'oauth1', '/', 'server', '/', 'request_token\")', 'self._OAUTH_AUTHORIZE_URL', '=', 'test.get_url', '\"', '/', 'oauth1', '/', 'server', '/', 'self._OAUTH_ACCESS_TOKEN_URL', '=', 'test.get_url', '\"', '/', 'oauth1', '/', 'server', '/', 'access_token\")', '_oauth_consumer_token', 'self', 'dict', 'key', '=', 'secret', '=', '\"qwer\")', 'get', 'self', 'self.get_argument', '\"oauth_token\",', 'user', '=', 'self.get_authenticated_user(', 'http_client', '=', '\"http_client\"]', 'user', 'Exception', '\"user', 'user)', 'http_client', '=', '\"http_client\"', '_oauth_get_user_future', 'self,', 'access_token', 'self.get_argument', 'Exception', 'get_user\")', 'access_token', '!=', 'dict', 'key', '=', '\"uiop\",', 'secret', '=', '\"5678\"', 'Exception', 'access', 'token', '%r\"', '%', 'access_token)', 'dict', 'email', '=', '\"foo', '@', 'example.com\")', 'get', 'self', 'self.get_argument', '\"oauth_token\",', 'self.get_authenticated_user', 'Exception', 'e:', 'self.set_status', '503)', 'self.write', '\"got', '%s\"', '%', 'e)', 'self,', 'version', 'self._OAUTH_VERSION', '=', 'version', '_oauth_consumer_token', 'self', 'dict', 'key', '=', 'secret', '=', '\"qwer\")', 'get', 'self', 'params', '=', 'self._oauth_request_parameters(', '\"http', '/', '/', 'www.example.com', '/', 'api', '/', 'dict', 'key', '=', '\"uiop\",', 'secret', '=', '\"5678\"', 'parameters', '=', 'dict', 'foo', '=', '\"bar\"', 'self.write', 'params)', 'get', 'self', 'self.write', '\"oauth_token', '=', 'zxcv', '&', 'oauth_token_secret', '=', '1234\")', 'get', 'self', 'self.write', '\"oauth_token', '=', 'uiop', '&', 'oauth_token_secret', '=', '5678\")', 'self,', 'test', 'self._OAUTH_AUTHORIZE_URL', '=', 'test.get_url', '\"', '/', 'oauth2', '/', 'server', '/', 'get', 'self', 'res', '=', 'res', 'self,', 'test', 'self._OAUTH_AUTHORIZE_URL', '=', 'test.get_url', '\"', '/', 'facebook', '/', 'server', '/', 'self._OAUTH_ACCESS_TOKEN_URL', '=', 'test.get_url', '\"', '/', 'facebook', '/', 'server', '/', 'access_token\")', 'self._FACEBOOK_BASE_URL', '=', 'test.get_url', '\"', '/', 'facebook', '/', 'server\")', 'get', 'self', 'self.get_argument', '\"code\",', 'user', '=', 'self.get_authenticated_user(', 'redirect_uri', '=', 'self.request.full_url', 'client_id', '=', '\"facebook_api_key\"', 'client_secret', '=', '\"facebook_secret\"', 'code', '=', 'self.get_argument', '\"code\"', 'self.write', 'user)', 'redirect_uri', '=', 'self.request.full_url', 'client_id', '=', '\"facebook_api_key\"', 'extra_params', '=', '\"scope\":', '\"read_stream', 'get', 'self', 'self.write', 'dict', 'access_token', '=', '=', '3600', 'get', 'self', 'self.write', '\"', '\")', 'self,', 'test', 'self._OAUTH_REQUEST_TOKEN_URL', '=', 'test.get_url', '\"', '/', 'oauth1', '/', 'server', '/', 'request_token\")', 'self._OAUTH_ACCESS_TOKEN_URL', '=', 'test.get_url', '\"', '/', 'twitter', '/', 'server', '/', 'access_token\")', 'self._OAUTH_AUTHORIZE_URL', '=', 'test.get_url', '\"', '/', 'oauth1', '/', 'server', '/', 'self._OAUTH_AUTHENTICATE_URL', '=', 'test.get_url', '\"', '/', 'twitter', '/', 'server', '/', 'authenticate\")', 'self._TWITTER_BASE_URL', '=', 'test.get_url', '\"', '/', 'twitter', '/', 'api\")', 'get_auth_http_client', 'self', '\"http_client\"]', 'get', 'self', 'self.get_argument', '\"oauth_token\",', 'user', '=', 'self.get_authenticated_user', 'user', 'Exception', '\"user', 'user)', 'get', 'self', 'self.get_argument', '\"oauth_token\",', 'user', '=', 'self.get_authenticated_user', 'user', 'Exception', '\"user', 'user)', 'self.authenticate_redirect', 'get', 'self', 'self.get_argument', '\"oauth_token\",', 'user', '=', 'self.get_authenticated_user', 'user)', 'get', 'self', 'response', '=', 'self.twitter_request(', '\"', '/', 'users', '/', 'show', '/', '%', 's\"', '%', 'self.get_argument', '\"name\"', 'access_token', '=', 'dict', 'key', '=', '\"hjkl\",', 'secret', '=', '\"vbnm\"', 'self.set_status', '500)', 'twitter', 'request\")', 'response)', 'get', 'self', 'self.write', '\"oauth_token', '=', 'hjkl', '&', 'oauth_token_secret', '=', 'vbnm', '&', 'screen_name', '=', 'foo\")', 'get', 'self,', 'screen_name', 'screen_name', '==', '500)', '\"oauth_nonce\"', 'self.request.arguments', '\"oauth_timestamp\"', 'self.request.arguments', '\"oauth_signature\"', 'self.request.arguments', 'self.get_argument', '\"oauth_consumer_key\")', '==', '\"test_twitter_consumer_key\"', 'self.get_argument', '\"oauth_signature_method\")', '==', '\"HMAC', '-', 'SHA1\"', 'self.get_argument', '\"oauth_version\")', '==', '\"1.0\"', 'self.get_argument', '\"oauth_token\")', '==', '\"hjkl\"', 'self.write', 'dict', 'screen_name', '=', 'screen_name,', 'name', '=', 'screen_name.capitalize', 'get', 'self', '\"oauth_nonce\"', 'self.request.arguments', '\"oauth_timestamp\"', 'self.request.arguments', '\"oauth_signature\"', 'self.request.arguments', 'self.get_argument', '\"oauth_consumer_key\")', '==', '\"test_twitter_consumer_key\"', 'self.get_argument', '\"oauth_signature_method\")', '==', '\"HMAC', '-', 'SHA1\"', 'self.get_argument', '\"oauth_version\")', '==', '\"1.0\"', 'self.get_argument', '\"oauth_token\")', '==', '\"hjkl\"', 'self.write', 'dict', 'screen_name', '=', '\"foo\",', 'name', '=', '\"Foo\"', 'AuthTest', 'get_app', 'self', 'Application(', '(\"', '/', 'openid', '/', 'client', '/', 'dict', 'test', '=', 'self', '\"', '/', 'oauth10', '/', 'client', '/', 'dict', 'test', '=', 'self,', 'version', '=', '\"1.0\"', '),', '\"', '/', 'oauth10', '/', 'client', '/', 'request_params\",', 'dict', 'version', '=', '\"1.0\"', '),', '\"', '/', 'oauth10a', '/', 'client', '/', 'dict', 'test', '=', 'self,', 'version', '=', '\"1.0a\"', '),', '\"', '/', 'oauth10a', '/', 'client', '/', 'dict', 'test', '=', 'self,', 'version', '=', '\"1.0a\"', '),', '\"', '/', 'oauth10a', '/', 'client', '/', 'request_params\",', 'dict', 'version', '=', '\"1.0a\"', '),', '(\"', '/', 'oauth2', '/', 'client', '/', 'dict', 'test', '=', 'self', '(\"', '/', 'facebook', '/', 'client', '/', 'dict', 'test', '=', 'self', '(\"', '/', 'twitter', '/', 'client', '/', 'dict', 'test', '=', 'self', '\"', '/', 'twitter', '/', 'client', '/', 'authenticate\",', 'dict', 'test', '=', 'self', '),', '\"', '/', 'twitter', '/', 'client', '/', 'dict', 'test', '=', 'self', '),', '\"', '/', 'twitter', '/', 'client', '/', 'show_user\",', 'dict', 'test', '=', 'self', '),', '(\"', '/', 'openid', '/', 'server', '/', 'authenticate\",', '(\"', '/', 'oauth1', '/', 'server', '/', 'request_token\",', '(\"', '/', 'oauth1', '/', 'server', '/', 'access_token\",', '(\"', '/', 'facebook', '/', 'server', '/', 'access_token\",', '(\"', '/', 'facebook', '/', 'server', '/', 'me\",', '(\"', '/', 'twitter', '/', 'server', '/', 'access_token\",', '(r\"', '/', 'twitter', '/', 'api', '/', 'users', '/', 'show', '/', '.', '*', '\\\\.json\",', 'r\"', '/', 'twitter', '/', 'api', '/', 'account', '/', '),', '],', 'http_client', '=', 'self.http_client,', 'twitter_consumer_key', '=', '\"test_twitter_consumer_key\",', 'twitter_consumer_secret', '=', '\"test_twitter_consumer_secret\",', 'facebook_api_key', '=', '\"test_facebook_api_key\",', 'facebook_secret', '=', '\"test_facebook_secret\",', 'test_openid_redirect', 'self', 'response', '=', 'self.fetch', '\"', '/', 'openid', '/', 'client', '/', 'follow_redirects', '=', 'response.code,', '302)', '\"', '/', 'openid', '/', 'server', '/', 'authenticate?\"', 'response.headers', '\"Location\"', 'test_openid_get_user', 'self', 'response', '=', 'self.fetch(', '\"', '/', 'openid', '/', 'client', '/', '=', 'blah\"', '\"', '&', 'openid.ns.ax', '=', 'http', '/', '/', 'openid.net', '/', 'srv', '/', 'ax', '/', '1.0\"', '\"', '&', 'openid.ax.type.email', '=', 'http', '/', '/', '/', 'contact', '/', 'email\"', '\"', '&', 'openid.ax.value.email', '=', 'foo', '@', 'example.com\"', 'response.rethrow', 'parsed', '=', 'json_decode', 'response.body)', 'parsed', '\"email\"', '\"foo', '@', 'example.com\")', 'test_oauth10_redirect', 'self', 'response', '=', 'self.fetch', '\"', '/', 'oauth10', '/', 'client', '/', 'follow_redirects', '=', 'response.code,', '302)', 'response.headers', '\"Location\"', '\"', '/', 'oauth1', '/', 'server', '/', '=', 'zxcv\"', \"'_oauth_request_token\", '=', '\"enhjdg', '==', '|', 'MTIzNA', '==', '\"\\'', 'response.headers', '\"Set', '-', 'Cookie\"', 'response.headers', '\"Set', '-', 'Cookie\"', 'test_oauth10_get_user', 'self', 'response', '=', 'self.fetch(', '\"', '/', 'oauth10', '/', 'client', '/', '=', 'zxcv\",', 'headers', '=', '\"Cookie\":', '\"_oauth_request_token', '=', 'enhjdg', '==', '|', 'MTIzNA', '==', '\"', 'response.rethrow', 'parsed', '=', 'json_decode', 'response.body)', 'parsed', '\"email\"', '\"foo', '@', 'example.com\")', 'parsed', '\"access_token\"', 'dict', 'key', '=', '\"uiop\",', 'secret', '=', '\"5678\"', 'test_oauth10_request_parameters', 'self', 'response', '=', 'self.fetch', '\"', '/', 'oauth10', '/', 'client', '/', 'request_params\")', 'response.rethrow', 'parsed', '=', 'json_decode', 'response.body)', 'parsed', '\"oauth_consumer_key\"', 'parsed', '\"oauth_token\"', '\"uiop\")', '\"oauth_nonce\"', 'parsed)', '\"oauth_signature\"', 'parsed)', 'test_oauth10a_redirect', 'self', 'response', '=', 'self.fetch', '\"', '/', 'oauth10a', '/', 'client', '/', 'follow_redirects', '=', 'response.code,', '302)', 'response.headers', '\"Location\"', '\"', '/', 'oauth1', '/', 'server', '/', '=', 'zxcv\"', \"'_oauth_request_token\", '=', '\"enhjdg', '==', '|', 'MTIzNA', '==', '\"\\'', 'response.headers', '\"Set', '-', 'Cookie\"', 'response.headers', '\"Set', '-', 'Cookie\"', '@unittest.skipIf', 'mock', '\"mock', 'package', 'present\")', 'self', 'mock.patch.object', '\"get\")', 'get:', 'get.side_effect', '=', 'Exception', '\"boom\")', 'ExpectLog', 'app_log,', '\"Uncaught', 'response', '=', 'self.fetch', '\"', '/', 'oauth10a', '/', 'client', '/', 'follow_redirects', '=', 'response.code,', '500)', 'test_oauth10a_get_user', 'self', 'response', '=', 'self.fetch(', '\"', '/', 'oauth10a', '/', 'client', '/', '=', 'zxcv\",', 'headers', '=', '\"Cookie\":', '\"_oauth_request_token', '=', 'enhjdg', '==', '|', 'MTIzNA', '==', '\"', 'response.rethrow', 'parsed', '=', 'json_decode', 'response.body)', 'parsed', '\"email\"', '\"foo', '@', 'example.com\")', 'parsed', '\"access_token\"', 'dict', 'key', '=', '\"uiop\",', 'secret', '=', '\"5678\"', 'test_oauth10a_request_parameters', 'self', 'response', '=', 'self.fetch', '\"', '/', 'oauth10a', '/', 'client', '/', 'request_params\")', 'response.rethrow', 'parsed', '=', 'json_decode', 'response.body)', 'parsed', '\"oauth_consumer_key\"', 'parsed', '\"oauth_token\"', '\"uiop\")', '\"oauth_nonce\"', 'parsed)', '\"oauth_signature\"', 'parsed)', 'self', 'response', '=', 'self.fetch(', '\"', '/', 'oauth10a', '/', 'client', '/', '=', 'zxcv', '&', '=', 'true\",', 'headers', '=', '\"Cookie\":', '\"_oauth_request_token', '=', 'enhjdg', '==', '|', 'MTIzNA', '==', '\"', 'response.code,', '503)', 'test_oauth2_redirect', 'self', 'response', '=', 'self.fetch', '\"', '/', 'oauth2', '/', 'client', '/', 'follow_redirects', '=', 'response.code,', '302)', '\"', '/', 'oauth2', '/', 'server', '/', 'response.headers', '\"Location\"', 'self', 'response', '=', 'self.fetch', '\"', '/', 'facebook', '/', 'client', '/', 'follow_redirects', '=', 'response.code,', '302)', '\"', '/', 'facebook', '/', 'server', '/', 'response.headers', '\"Location\"', 'response', '=', 'self.fetch(', '\"', '/', 'facebook', '/', 'client', '/', '=', '1234\",', 'follow_redirects', '=', 'response.code,', '200)', 'user', '=', 'json_decode', 'response.body)', 'user', '\"access_token\"', 'user', '\"session_expires\"', '\"3600\")', 'self,', 'url', 'response', '=', 'self.fetch', 'url,', 'follow_redirects', '=', 'response.code,', '302)', 'response.headers', '\"Location\"', '\"', '/', 'oauth1', '/', 'server', '/', '=', 'zxcv\"', \"'_oauth_request_token\", '=', '\"enhjdg', '==', '|', 'MTIzNA', '==', '\"\\'', 'response.headers', '\"Set', '-', 'Cookie\"', 'response.headers', '\"Set', '-', 'Cookie\"', 'test_twitter_redirect', 'self', '\"', '/', 'twitter', '/', 'client', '/', 'self', '\"', '/', 'twitter', '/', 'client', '/', 'test_twitter_authenticate_redirect', 'self', 'response', '=', 'self.fetch', '\"', '/', 'twitter', '/', 'client', '/', 'authenticate\",', 'follow_redirects', '=', 'response.code,', '302)', 'response.headers', '\"Location\"', '\"', '/', 'twitter', '/', 'server', '/', 'authenticate?oauth_token', '=', 'zxcv\"', '),', 'response.headers', '\"Location\"', \"'_oauth_request_token\", '=', '\"enhjdg', '==', '|', 'MTIzNA', '==', '\"\\'', 'response.headers', '\"Set', '-', 'Cookie\"', 'response.headers', '\"Set', '-', 'Cookie\"', 'test_twitter_get_user', 'self', 'response', '=', 'self.fetch(', '\"', '/', 'twitter', '/', 'client', '/', '=', 'zxcv\",', 'headers', '=', '\"Cookie\":', '\"_oauth_request_token', '=', 'enhjdg', '==', '|', 'MTIzNA', '==', '\"', 'response.rethrow', 'parsed', '=', 'json_decode', 'response.body)', 'parsed,', '\"access_token\":', '\"key\":', '\"hjkl\",', '\"screen_name\":', '\"foo\",', '\"secret\":', '\"vbnm\",', '},', '\"name\":', '\"Foo\",', '\"screen_name\":', '\"foo\",', '\"username\":', '\"foo\",', '},', 'test_twitter_show_user', 'self', 'response', '=', 'self.fetch', '\"', '/', 'twitter', '/', 'client', '/', 'show_user?name', '=', 'somebody\")', 'response.rethrow', 'json_decode', 'response.body', '{\"name\":', '\"Somebody\",', '\"screen_name\":', '\"somebody\"}', 'self', 'response', '=', 'self.fetch', '\"', '/', 'twitter', '/', 'client', '/', 'show_user?name', '=', 'response.code,', '500)', 'response.body,', 'twitter', 'request\")', 'self,', 'test', 'self.test', '=', 'test', 'self._OAUTH_REDIRECT_URI', '=', 'test.get_url', '\"', '/', 'client', '/', 'self._OAUTH_AUTHORIZE_URL', '=', 'test.get_url', '\"', '/', 'google', '/', 'oauth2', '/', 'self._OAUTH_ACCESS_TOKEN_URL', '=', 'test.get_url', '\"', '/', 'google', '/', 'oauth2', '/', 'token\")', 'get', 'self', 'code', '=', 'self.get_argument', '\"code\",', 'code', 'access', '=', 'self.get_authenticated_user', 'self._OAUTH_REDIRECT_URI,', 'code)', 'user', '=', 'self.oauth2_request(', 'self.test.get_url', '\"', '/', 'google', '/', 'oauth2', '/', 'access_token', '=', 'access', '\"access_token\"', 'user', '\"access_token\"]', '=', 'access', '\"access_token\"]', 'self.write', 'user)', 'redirect_uri', '=', 'self._OAUTH_REDIRECT_URI,', 'client_id', '=', '\"google_oauth\"', '\"key\"', 'scope', '=', '\"profile\",', '\"email\"', 'response_type', '=', '\"code\",', 'extra_params', '=', '\"prompt\":', '\"select_account\"', 'get', 'self', 'code', '=', '\"fake', '-', '-', 'code\"', 'self.redirect', 'url_concat', 'self.get_argument', '\"redirect_uri\"', 'dict', 'code', '=', 'code', 'post', 'self', 'self.get_argument', '\"code\")', '==', '\"fake', '-', '-', 'code\"', '{\"access_token\":', '\"fake', '-', 'access', '-', 'token\",', '\"never', '-', 'expires\"}', 'get', 'self', 'self.get_argument', '\"access_token\")', '==', '\"fake', '-', 'access', '-', 'token\"', '\"name\":', '\"Foo\",', '\"email\":', '\"foo', '@', 'example.com\"', 'GoogleOAuth2Test', 'get_app', 'self', 'Application(', '(\"', '/', 'client', '/', 'dict', 'test', '=', 'self', '(\"', '/', 'google', '/', 'oauth2', '/', '(\"', '/', 'google', '/', 'oauth2', '/', 'token\",', '(\"', '/', 'google', '/', 'oauth2', '/', '],', 'google_oauth', '=', '\"key\":', '\"fake_google_client_id\",', '\"secret\":', '\"fake_google_client_secret\",', '},', 'self', 'response', '=', 'self.fetch', '\"', '/', 'client', '/', '\"name\":', '\"Foo\",', '\"email\":', '\"foo', '@', 'example.com\",', '\"access_token\":', '\"fake', '-', 'access', '-', 'token\",', '},', 'json_decode', 'response.body']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/tornado/test/autoreload_test.py",
        "vector": "['os', 'shutil', 'subprocess', 'subprocess', 'Popen', 'sys', 'tempfile', 'mkdtemp', 'textwrap', 'time', 'unittest', 'setUp', 'self', '=', '1024', 'self.path', '=', 'mkdtemp', 'self.write_files(', '\"run_twice_magic.py\":', 'tearDown', 'self', 'shutil.rmtree', 'self.path)', 'time.sleep', '1)', 'shutil.rmtree', 'self.path)', 'write_files', 'self,', 'tree,', '=', '=', 'self.path', 'name,', 'contents', 'tree.items', 'contents,', 'dict', 'os.mkdir', 'name', 'self.write_files', 'contents,', 'name', 'open', 'name', '\"w\",', '=', '\"utf', '-', '8\")', 'f:', 'f.write', 'textwrap.dedent', 'contents', 'run_subprocess', 'self,', 'args', 'pythonpath', '=', 'os.getcwd', '\"PYTHONPATH\"', 'os.environ:', 'pythonpath', '+=', 'os.pathsep', '+', 'os.environ', '\"PYTHONPATH\"]', 'p', '=', 'Popen(', 'args,', 'stdout', '=', 'subprocess.PIPE,', 'env', '=', 'dict', 'os.environ,', 'PYTHONPATH', '=', 'pythonpath', 'cwd', '=', 'self.path,', '=', '=', '\"utf', '-', '8\",', 'i', 'range', '40', 'p.poll', 'time.sleep', '0.1)', 'p.kill', 'Exception', '\"subprocess', 'failed', 'to', 'out', '=', 'p.communicate', '0]', '0)', 'out', 'test_reload', 'self', '=', 'self.write_files(', '\"testapp\":', '\"\",', '},', 'wrapper', 'self.subTest', 'wrapper', '=', 'wrapper', 'self.subTest', 'mode', '=', '\"module\"', 'wrapper:', '=', '[sys.executable,', '\"', '-', 'm\",', '=', '[sys.executable]', 'out', '=', 'self.run_subprocess', '+', '[\"', '-', 'm\",', '\"testapp\"', 'out,', 'testapp', 'succeeded\\\\n\"', '+', '__name__', '=', '__spec__.name', '=', '*', '2,', 'self.subTest', 'mode', '=', '\"file\"', 'out', '=', 'self.run_subprocess', '+', '[\"testapp', '/', '=', 'testapp', 'succeeded\"', 'wrapper', 'testapp', 'failed\"', 'out,', 'f\"', '__name__', '=', '__spec__.name', '=', '*', '2,', 'self.subTest', 'mode', '=', 'out', '=', 'self.run_subprocess', '+', '[\"testapp\"', '=', 'testapp', 'succeeded\"', 'wrapper', 'testapp', 'failed\"', 'out,', 'f\"', '__name__', '=', '__spec__.name', '=', '*', '2,', 'test_reload_wrapper_preservation', 'self', '=', 'self.write_files(', '\"testapp\":', '\"\",', '},', 'out', '=', 'self.run_subprocess(', '[sys.executable,', '\"', '-', 'm\",', '\"', '-', 'm\",', '\"testapp\"]', 'out,', '*', '2)', 'test_reload_wrapper_args', 'self', '=', 'self.write_files', 'out', '=', 'self.run_subprocess(', 'sys.executable,', '\"', '-', 'm\",', '\"arg1\",', '\"', '--', 'arg2\",', '\"', '-', 'm\",', '\"arg3\",', '],', 'out,', '=', \"'arg1',\", \"'\", '--', \"arg2',\", \"'\", '-', \"m',\", \"'arg3'\", '\\\\n\"', '*', '2)', 'test_reload_wrapper_until_success', 'self', '=', 'self.write_files', 'out', '=', 'self.run_subprocess(', '[sys.executable,', '\"', '-', 'm\",', '\"', '--', 'until', '-', 'success\",', 'out,', 'cleanly\\\\n\")']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/tornado/test/circlerefs_test.py",
        "vector": "['contextlib', 'gc', 'io', 'sys', 'traceback', 'types', 'unittest', 'web,', 'gen,', 'httpclient', 'skipNotCPython', 'garbage', 'level', 'item', 'level:', 'item_id', '=', 'id', 'item)', 'item_id', 'garbage_ids:', 'item_id', 'item_id', 'stack_ids:', '=', 'stack', 'item)', ':]', 'item)', 'found.append', 'stack.append', 'item)', 'stack_ids.add', 'item_id)', 'gc.get_referents', 'item', 'stack.pop', 'stack_ids.remove', 'item_id)', 'item_id)', 'found:', 'object]', '=', '[]', 'stack', '=', '[]', 'stack_ids', '=', 'set', 'garbage_ids', '=', 'set', 'map', 'id,', 'garbage', '=', 'set', 'garbage)', 'found', '@contextlib.contextmanager', 'gc.collect', 'gc.set_debug', 'gc.DEBUG_STATS', '|', 'gc.DEBUG_SAVEALL)', 'f', '=', 'old_stderr', '=', 'sys.stderr', 'sys.stderr', '=', 'f', 'gc.collect', 'sys.stderr', '=', 'old_stderr', 'garbage', '=', 'gc.garbage', 'gc.garbage', '=', '[]', 'len', 'garbage)', '==', '0:', 'circular', 'garbage', 'f.write', '\"\\\\n', '==', '==', '==', '==', '==', '\\\\n', 'Circular', '\\\\n', '==', '==', '==', '==', '==', '\")', 'item', 'circular:', 'f.write', 'f\"\\\\n', '{repr', 'item', '\")', 'item', 'circular:', 'item,', 'types.FrameType', 'f.write', 'f\"\\\\nLocals:', '{item.f_locals', '\")', 'f.write', 'f\"\\\\nTraceback:', '{repr', 'item', '\")', 'item)', 'garbage', 'f.getvalue', 'gc.set_debug', '0)', 'gc.enable', '@skipNotCPython', 'CircleRefsTest', 'test_known_leak', 'self', 'C', 'object', 'self,', 'name', 'self.name', '=', 'name', 'self.a:', 'C]', '=', 'self.b:', 'C]', '=', 'self.c:', 'C]', '=', '__repr__', 'self', 'f\"name', '=', 'self.name', '\"', 'cm:', 'a', '=', 'C', '\"a\")', 'b', '=', 'C', '\"b\")', 'c', '=', 'C', '\"c\")', 'a.b', '=', 'b', 'a.c', '=', 'c', 'b.a', '=', 'a', 'b.c', '=', 'c', 'a,', 'b', '\"Circular\",', 'str', '\"', 'name', '=', 'a\",', 'str', '\"', 'name', '=', 'b\",', 'str', '\"', 'name', '=', 'c\",', 'str', 'self,', 'app', '=', 'web.Application(', '(r\"', '/', '\",', 'socket,', '=', 'server', '=', 'app)', 'server.add_socket', 'socket)', 'client', '=', 'httpclient.AsyncHTTPClient', 'client.fetch', 'f\"http', '/', '/', '127.0.0.1', '/', '\")', 'client.close', 'server.stop', 'socket.close', 'self', 'get', 'self', 'self.write', '\"ok\\\\n\")', 'self', 'get', 'self', '\"ok\\\\n\")', 'self', 'get', 'self', '0.01)', 'self.write', '\"ok\\\\n\")', 'self', 'get', 'self', '0.01)', 'self.write', '\"ok\\\\n\")', 'self', 'concurrent.futures', '1)', 'thread_pool:', 'object', '=', 'thread_pool', 'run', 'self', '=', 'i', 'range', '2']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/tornado/test/concurrent_test.py",
        "vector": "['concurrent', 'futures', 're', 'socket', 'unittest', 'Future,', 'future_set_result_unless_cancelled,', 'utf8,', 'to_unicode', 'gen', 'IOStream', 'TCPServer', 'gen_test', 'test_future_set_result_unless_cancelled', 'self', 'fut', '=', 'Future', 'future_set_result_unless_cancelled', 'fut,', '42)', 'fut.result', '42)', 'fut.cancelled', 'fut', '=', 'Future', 'fut.cancel', '=', 'fut.cancelled', 'future_set_result_unless_cancelled', 'fut,', '42)', 'fut.cancelled', 'fut.result', '42)', 'CapServer', 'TCPServer', 'self,', 'stream,', 'address', 'data', '=', 'stream.read_until', 'b\"\\\\n\")', 'data', '=', 'to_unicode', 'data)', 'data', '==', 'data.upper', 'stream.write', 'capitalized\\\\n\")', 'stream.write', 'utf8', '\"ok\\\\t', '%', 's\"', '%', 'data.upper', 'stream.close', 'Exception', 'object', 'self,', '=', 'process_response', 'self,', 'data', 'm', '=', 're.match', '\"', '.', '*', '\\\\t', '.', '*', '\\\\n\",', 'to_unicode', 'data', 'm', 'Exception', '\"did', 'match\")', 'status,', 'message', '=', 'm.groups', 'status', '==', '\"ok\":', 'message', 'message)', 'capitalize', 'self,', 'request_data', '\"capitalize\")', 'stream', '=', 'IOStream', 'socket.socket', 'stream.connect', '\"127.0.0.1\",', 'stream.write', 'utf8', 'request_data', '+', '\"\\\\n\"', 'data', '=', 'stream.read_until', 'b\"\\\\n\")', 'stream.close', 'gen.Return', 'self.process_response', 'data', 'object', '=', 'setUp', 'self', 'super', '.setUp', 'self.server', '=', 'CapServer', 'sock,', '=', 'self.server.add_sockets', 'sock', 'self.client', '=', '=', 'tearDown', 'self', 'self.server.stop', 'super', '.tearDown', 'test_future', 'self:', 'future', '=', 'self.client.capitalize', '\"hello\")', 'self.io_loop.add_future', 'future,', 'self.stop)', 'self.wait', 'future.result', '\"HELLO\")', 'self:', 'future', '=', 'self.client.capitalize', '\"HELLO\")', 'self.io_loop.add_future', 'future,', 'self.stop)', 'self.wait', '\"already', 'capitalized\",', 'future.result)', 'self:', 'f', 'result', '=', 'self.client.capitalize', '\"hello\")', 'result,', '\"HELLO\")', 'self.io_loop.run_sync', 'f)', 'self:', 'f', '\"already', 'capitalized\"', 'self.client.capitalize', '\"HELLO\")', 'self.io_loop.run_sync', 'f)', '=', '@gen_test', 'self', 'Object', 'object', 'self', '=', '1)', 'f', 'self', '42', 'o', '=', 'Object', 'answer', '=', 'o.f', 'answer,', '42)', '@gen_test', 'self', 'Object', 'object', 'self', '=', '1)', 'f', 'self', '42', 'o', '=', 'Object', 'answer', '=', 'o.f', 'answer,', '42)', '@gen_test', 'self', 'Object', 'object', 'self', '=', '1)', '=', 'f', 'self', '42', 'o', '=', 'Object', 'answer', '=', 'o.f', 'answer,', '42)', '@gen_test', 'self', 'Object', 'object', 'self', '=', '1)', 'f', 'self', '42', 'o', '=', 'Object', 'f', 'answer', '=', 'o.f', 'answer', 'result', '=', 'f', 'result,', '42)', '__name__', '==']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/tornado/test/curl_httpclient_test.py",
        "vector": "['md5', 'unittest', 'utf8', 'httpclient_test', 'Application,', 'pycurl', 'pycurl', '=', 'pycurl', 'CurlAsyncHTTPClient', '@unittest.skipIf', 'pycurl', '\"pycurl', 'module', 'present\")', 'get_http_client', 'self', 'client', '=', 'CurlAsyncHTTPClient', '=', 'dict', 'allow_ipv6', '=', 'client,', 'CurlAsyncHTTPClient', 'client', 'self,', 'username,', 'self.username', '=', 'username', '=', 'get', 'self', 'realm', '=', '\"test\"', 'opaque', '=', 'nonce', '=', '\"1234\"', 'auth_header', '=', 'self.request.headers.get', 'auth_header', 'auth_mode,', 'params', '=', 'auth_header.split', '\"', '\",', '1)', 'auth_mode', '==', '\"Digest\"', 'param_dict', '=', '{}', 'pair', 'params.split', '\"', '\"', 'k,', 'v', '=', 'pair.strip', '.split', '\"', '=', '\",', '1)', 'v', '0]', '==', '\\'\"\\'', 'v', '-', '1]', '==', '\\'\"\\':', 'v', '=', 'v', '1', '-', '1]', 'param_dict', 'k]', '=', 'v', 'param_dict', '\"realm\"]', '==', 'realm', 'param_dict', '\"opaque\"]', '==', 'opaque', 'param_dict', '\"nonce\"]', '==', 'nonce', 'param_dict', '\"username\"]', '==', 'self.username', 'param_dict', '\"uri\"]', '==', 'self.request.path', 'h1', '=', 'md5(', 'utf8', '\"', '%', 's', '%', 's', '%', 's\"', '%', '(self.username,', 'realm,', ').hexdigest', 'h2', '=', 'md5(', 'utf8', '\"', '%', 's', '%', 's\"', '%', '(self.request.method,', 'self.request.path', ').hexdigest', 'digest', '=', 'md5', 'utf8', '\"', '%', 's', '%', 's', '%', 's\"', '%', '(h1,', 'nonce,', 'h2', '.hexdigest', 'digest', '==', 'param_dict', '\"response\"', 'self.write', '\"ok\")', 'self.write', '\"fail\")', 'self.set_status', '401)', 'self.set_header(', '\"WWW', '-', 'Authenticate\",', \"'Digest\", 'realm', '=', '\"', '%', 's\",', 'nonce', '=', '\"', '%', 's\",', 'opaque', '=', '\"', '%', 's\"\\'', '%', '(realm,', 'nonce,', 'opaque', 'get', 'self', 'self.set_status', '200,', '\"Custom', 'get', 'self', 'self.set_status', '400,', '\"Custom', '@unittest.skipIf', 'pycurl', '\"pycurl', 'module', 'present\")', 'setUp', 'self', 'super', '.setUp', 'self.http_client', '=', 'self.create_client', 'get_app', 'self', 'Application(', '(\"', '/', 'digest\",', '{\"username\":', '\"foo\",', '\"bar\"', '\"', '/', '{\"username\":', '\"foo\",', '\"bar\u30e6\u00a3\"', '),', '(\"', '/', '(\"', '/', 'create_client', 'self,', '*', '*', 'kwargs', 'CurlAsyncHTTPClient(', '=', '=', 'dict', 'allow_ipv6', '=', '*', '*', 'kwargs', 'test_digest_auth', 'self', 'response', '=', 'self.fetch(', '\"', '/', 'digest\",', 'auth_mode', '=', '\"digest\",', 'auth_username', '=', '\"foo\",', '=', '\"bar\"', 'response.body,', 'b\"ok\")', 'self', 'response', '=', 'self.fetch', '\"', '/', '\"Custom', 'self', 'response', '=', 'self.fetch', '\"', '/', 'str', '\"HTTP', '400:', 'Custom', 'self', 'response', '=', 'self.fetch(', '\"', '/', 'auth_mode', '=', '\"digest\",', 'auth_username', '=', '\"foo\",', '=', '\"bar\u30e6\u00a3\",', 'response.body,', 'b\"ok\")']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/tornado/test/escape_test.py",
        "vector": "['unittest', 'utf8,', 'xhtml_escape,', 'xhtml_unescape,', 'url_escape,', 'url_unescape,', 'to_unicode,', 'json_decode,', 'json_encode,', 'squeeze,', 'recursive_unicode,', 'unicode_type', 'Tuple,', 'Union,', 'Dict,', 'Any', '=', '\"hello', 'http', '/', '/', '/', '!\",', \"'hello\", '<a', 'href', '=', '\"http', '/', '/', '/', '\"', '>', 'http', '/', '/', '/', '<', '/', 'a', '>', \"!',\", '),', '\"hello', 'http', '/', '/', '/', '=', 'true', '&', 'stuff', '=', 'yes\",', \"'hello\", '<a', 'href', '=', '\"http', '/', '/', '/', '=', 'true', '&', 'amp', 'stuff', '=', 'yes\"', '>', 'http', '/', '/', '/', '=', 'true', '&', 'amp', 'stuff', '=', 'yes', '<', '/', 'a', '>', \"',\", '),', '\"http', '/', '/', 'url.com', '/', 'w', 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",', \"'\", '<', 'a', 'href', '=', '\"http', '/', '/', 'url.com', '/', 'w\"', '>', 'http', '/', '/', 'url.com', '/', 'w', '<', '/', 'a', '>', \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa',\", '),', '\"http', '/', '/', 'url.com', '/', \"'\", '<', 'a', 'href', '=', '\"http', '/', '/', 'url.com', '/', '>', 'http', '/', '/', 'url.com', '/', '<', '/', 'a', '>', \".......................................',\", '),', '\"http', '/', '/', 'url.com', '/', 'a', '\",', \"'\", '<', 'a', 'href', '=', '\"http', '/', '/', 'url.com', '/', '>', 'http', '/', '/', 'url.com', '/', '<', '/', 'a', '>', 'a', \"',\", '),', '\"http', '/', '/', 'foo.com', '/', 'blah_blah\",', \"'\", '<', 'a', 'href', '=', '\"http', '/', '/', 'foo.com', '/', 'blah_blah\"', '>', 'http', '/', '/', 'foo.com', '/', 'blah_blah', '<', '/', 'a', '>', \"',\", '),', '\"http', '/', '/', 'foo.com', '/', 'blah_blah', '/', '\",', \"'\", '<', 'a', 'href', '=', '\"http', '/', '/', 'foo.com', '/', 'blah_blah', '/', '\"', '>', 'http', '/', '/', 'foo.com', '/', 'blah_blah', '/', '<', '/', 'a', '>', \"',\", '),', '\"', 'like', 'http', '/', '/', 'foo.com', '/', 'blah_blah', '\",', \"'\", 'like', '<a', 'href', '=', '\"http', '/', '/', 'foo.com', '/', 'blah_blah\"', '>', 'http', '/', '/', 'foo.com', '/', 'blah_blah', '<', '/', 'a', '>', \"',\", '),', '\"http', '/', '/', 'foo.com', '/', 'blah_blah_', 'wikipedia', '\",', \"'\", '<', 'a', 'href', '=', '\"http', '/', '/', 'foo.com', '/', 'blah_blah_', 'wikipedia', '\"', '>', 'http', '/', '/', 'foo.com', '/', 'blah_blah_', 'wikipedia', '<', '/', 'a', '>', \"',\", '),', '\"http', '/', '/', 'foo.com', '/', 'blah_', 'blah', '_', 'wikipedia', '_blah\",', \"'\", '<', 'a', 'href', '=', '\"http', '/', '/', 'foo.com', '/', 'blah_', 'blah', '_', 'wikipedia', '_blah\"', '>', 'http', '/', '/', 'foo.com', '/', 'blah_', 'blah', '_', 'wikipedia', '_blah', '<', '/', 'a', '>', \"',\", '),', '\"', 'like', 'http', '/', '/', 'foo.com', '/', 'blah_blah_', 'wikipedia', '\",', \"'\", 'like', '<a', 'href', '=', '\"http', '/', '/', 'foo.com', '/', 'blah_blah_', 'wikipedia', '\"', '>', 'http', '/', '/', 'foo.com', '/', 'blah_blah_', 'wikipedia', '<', '/', 'a', '>', \"',\", '),', '\"http', '/', '/', 'foo.com', '/', 'blah_blah.\",', \"'\", '<', 'a', 'href', '=', '\"http', '/', '/', 'foo.com', '/', 'blah_blah\"', '>', 'http', '/', '/', 'foo.com', '/', 'blah_blah', '<', '/', 'a', '>', \".',\", '),', '\"http', '/', '/', 'foo.com', '/', 'blah_blah', '/', '.\",', \"'\", '<', 'a', 'href', '=', '\"http', '/', '/', 'foo.com', '/', 'blah_blah', '/', '\"', '>', 'http', '/', '/', 'foo.com', '/', 'blah_blah', '/', '<', '/', 'a', '>', \".',\", '),', '\"', '<', 'http', '/', '/', 'foo.com', '/', 'blah_blah', '>', '\",', \"'\", '&', 'lt', '<', 'a', 'href', '=', '\"http', '/', '/', 'foo.com', '/', 'blah_blah\"', '>', 'http', '/', '/', 'foo.com', '/', 'blah_blah', '<', '/', 'a', '>', '&', 'gt', \"',\", '),', '\"', '<', 'http', '/', '/', 'foo.com', '/', 'blah_blah', '/', '>', '\",', \"'\", '&', 'lt', '<', 'a', 'href', '=', '\"http', '/', '/', 'foo.com', '/', 'blah_blah', '/', '\"', '>', 'http', '/', '/', 'foo.com', '/', 'blah_blah', '/', '<', '/', 'a', '>', '&', 'gt', \"',\", '),', '\"http', '/', '/', 'foo.com', '/', 'blah_blah', '\",', \"'\", '<', 'a', 'href', '=', '\"http', '/', '/', 'foo.com', '/', 'blah_blah\"', '>', 'http', '/', '/', 'foo.com', '/', 'blah_blah', '<', '/', 'a', '>', \"',\", '),', '\"http', '/', '/', 'www.example.com', '/', 'wpstyle', '/', '?p', '=', '364.\",', \"'\", '<', 'a', 'href', '=', '\"http', '/', '/', 'www.example.com', '/', 'wpstyle', '/', '?p', '=', '364\"', '>', 'http', '/', '/', 'www.example.com', '/', 'wpstyle', '/', '?p', '=', '364', '<', '/', 'a', '>', \".',\", '),', '\"rdar', '/', '/', '1234\",', '{\"permitted_protocols\":', '[\"http\",', '\"rdar\"', \"'\", '<', 'a', 'href', '=', '\"rdar', '/', '/', '1234\"', '>', 'rdar', '/', '/', '1234', '<', '/', 'a', '>', \"',\", '),', '\"rdar', '/', '1234\",', '{\"permitted_protocols\":', '[\"rdar\"', \"'\", '<', 'a', 'href', '=', '\"rdar', '/', '1234\"', '>', 'rdar', '/', '1234', '<', '/', 'a', '>', \"',\", '),', '\"http', '/', '/', 'userid', '@', 'example.com', '8080\",', \"'\", '<', 'a', 'href', '=', '\"http', '/', '/', 'userid', '@', 'example.com', '8080\"', '>', 'http', '/', '/', 'userid', '@', 'example.com', '8080', '<', '/', 'a', '>', \"',\", '),', '\"http', '/', '/', 'userid', '@', 'example.com\",', \"'\", '<', 'a', 'href', '=', '\"http', '/', '/', 'userid', '@', 'example.com\"', '>', 'http', '/', '/', 'userid', '@', 'example.com', '<', '/', 'a', '>', \"',\", '),', '\"http', '/', '/', 'userid', '@', 'example.com', '8080\",', \"'\", '<', 'a', 'href', '=', '\"http', '/', '/', 'userid', '@', 'example.com', '8080\"', '>', 'http', '/', '/', 'userid', '@', 'example.com', '8080', '<', '/', 'a', '>', \"',\", '),', '\"http', '/', '/', 'userid', '@', 'example.com\",', \"'\", '<', 'a', 'href', '=', '\"http', '/', '/', 'userid', '@', 'example.com\"', '>', 'http', '/', '/', 'userid', '@', 'example.com', '<', '/', 'a', '>', \"',\", '),', '\"message', '/', '/', '%', '3c330e7f8409726r6a4ba78dkf1fd71420c1bf6ff', '@', 'mail.gmail.com', '%', '3e\",', '{\"permitted_protocols\":', '[\"http\",', '\"message\"', \"'\", '<', 'a', 'href', '=', '\"message', '/', '/', '%', '3c330e7f8409726r6a4ba78dkf1fd71420c1bf6ff', '@', 'mail.gmail.com', '%', '3e\"', '>', \"'\", '\"message', '/', '/', '%', '3c330e7f8409726r6a4ba78dkf1fd71420c1bf6ff', '@', 'mail.gmail.com', '%', '3e', '<', '/', 'a', '>', '\",', '),', '\"http', '/', '/', '\\\\u27a1.ws', '/', '\\\\u4a39\",', \"'\", '<', 'a', 'href', '=', '\"http', '/', '/', '\\\\u27a1.ws', '/', '\\\\u4a39\"', '>', 'http', '/', '/', '\\\\u27a1.ws', '/', '\\\\u4a39', '<', '/', 'a', '>', \"',\", '),', '\"', '<', 'tag', '>', 'http', '/', '/', 'example.com', '<', '/', 'tag', '>', '\",', \"'\", '&', 'lt', 'tag', '&', 'gt', '<', 'a', 'href', '=', '\"http', '/', '/', 'example.com\"', '>', 'http', '/', '/', 'example.com', '<', '/', 'a', '>', '&', 'lt', '/', 'tag', '&', 'gt', \"',\", '),', '\"Just', 'a', 'www.example.com', \"'Just\", 'a', '<a', 'href', '=', '\"http', '/', '/', 'www.example.com\"', '>', 'www.example.com', '<', '/', 'a>', '),', '\"Just', 'a', 'www.example.com', '{\"require_protocol\":', '\"Just', 'a', 'www.example.com', '),', '\"A', 'http', '/', '/', 'reallylong.com', '/', '/', 'that', '/', 'exceedsthelenglimit.html\",', '{\"require_protocol\":', \"'A\", '<a', 'href', '=', '\"http', '/', '/', 'reallylong.com', '/', '/', 'that', '/', 'exceedsthelenglimit.html\"\\'', \"'\", 'title', '=', '\"http', '/', '/', 'reallylong.com', '/', '/', 'that', '/', 'exceedsthelenglimit.html\"', '>', 'http', '/', '/', 'reallylong.com', '/', '<', '/', 'a', '>', \"',\", '),', '\"A', 'http', '/', '/', '/', 'hi!\",', \"'A\", '<a', 'href', '=', '\"http', '/', '/', '/', 'hi\"\\'', \"'\", 'title', '=', '\"http', '/', '/', '/', 'hi\"', '>', 'http', '/', '/', '<', '/', 'a', '>', \"!',\", '),', '\"A', 'file', '/', '/', '/', 'http', '/', '/', 'web.com', \"'A\", 'file', '/', '/', '/', '<a', 'href', '=', '\"http', '/', '/', 'web.com\"', '>', 'http', '/', '/', 'web.com', '<', '/', 'a>', '),', '\"A', 'file', '/', '/', '/', 'http', '/', '/', 'web.com', '{\"permitted_protocols\":', '[\"file\"', \"'A\", '<a', 'href', '=', '\"file', '/', '/', '/', '>', 'file', '/', '/', '/', '<', '/', 'a>', 'http', '/', '/', 'web.com', '),', '\"www.external', '-', '{\"extra_params\":', \"'rel\", '=', '\"nofollow\"', '=', '\"external\"\\'', \"'\", '<', 'a', 'href', '=', '\"http', '/', '/', 'www.external', '-', 'rel', '=', '\"nofollow\"', '=', '\"external\"', '>', 'www.external', '-', '<', '/', 'a', '>', \"',\", '),', '\"www.external', '-', '-', '/', 'blogs', 'extra\",', '\"extra_params\":', 'href:', '=', '\"http', '/', '/', '-', \"'rel\", '=', '\"nofollow\"', '=', '\"external\"\\'', '},', \"'\", '<', 'a', 'href', '=', '\"http', '/', '/', 'www.external', '-', 'rel', '=', '\"nofollow\"', '=', '\"external\"', '>', 'www.external', '-', '<', '/', 'a', '>', \"'\", \"'\", '<a', 'href', '=', '\"http', '/', '/', '-', '/', 'blogs\"', '=', '>', '-', '/', 'blogs', '<', '/', 'a>', \"extra',\", '),', '\"www.external', '-', '{\"extra_params\":', 'href:', \"'\", 'rel', '=', '\"nofollow\"', '=', '\"external\"', \"'\", \"'\", '<', 'a', 'href', '=', '\"http', '/', '/', 'www.external', '-', 'rel', '=', '\"nofollow\"', '=', '\"external\"', '>', 'www.external', '-', '<', '/', 'a', '>', \"',\", '),', 'self', 'text,', 'kwargs,', 'html', '=', 'text,', '*', '*', 'kwargs)', 'html)', 'test_xhtml_escape', 'self', 'tests', '=', '(\"', '<', 'foo', '>', '\",', '\"', '&', 'lt', 'foo', '&', 'gt', '\"', '(\"', '<', 'foo', '>', '\",', '\"', '&', 'lt', 'foo', '&', 'gt', '\"', '(b\"', '<', 'foo', '>', '\",', 'b\"', '&', 'lt', 'foo', '&', 'gt', '\"', '(\"', '<', '>', '&', '\\\\\"\\'\",', '\"', '&', 'lt', '&', 'gt', '&', 'amp', '&', 'quot', '&', '(\"', '&', 'amp', '\",', '\"', '&', 'amp', 'amp', '\"', '(\"', '<', '\\\\u00e9', '>', '\",', '\"', '&', 'lt', '\\\\u00e9', '&', 'gt', '\"', '(b\"', '<', '\\\\xc3\\\\xa9', '>', '\",', 'b\"', '&', 'lt', '\\\\xc3\\\\xa9', '&', 'gt', '\"', 'unescaped,', 'escaped', 'tests:', 'utf8', 'xhtml_escape', 'unescaped', 'utf8', 'escaped', 'utf8', 'unescaped', 'utf8', 'xhtml_unescape', 'escaped', 'test_xhtml_unescape_numeric', 'self', 'tests', '=', '(\"foo&', '(\"foo&', '(\"foo&', '(\"foo&', '(\"foo&', '(\"foo&', '(\"foo&', 'escaped,', 'unescaped', 'tests:', 'unescaped,', 'xhtml_unescape', 'escaped', 'test_url_escape_unicode', 'self', 'tests', '=', '(\"\\\\u00e9\".encode', '\"utf8\"', '\"', '%', 'C3', '%', 'A9\"', '(\"\\\\u00e9\".encode', '\"', '%', 'E9\"', '(\"\\\\u00e9\",', '\"', '%', 'C3', '%', 'A9\"', 'unescaped,', 'escaped', 'tests:', 'url_escape', 'unescaped', 'escaped)', 'test_url_unescape_unicode', 'self', 'tests', '=', '(\"', '%', 'C3', '%', 'A9\",', '\"\\\\u00e9\",', '\"utf8\"', '(\"', '%', 'C3', '%', 'A9\",', '\"\\\\u00c3\\\\u00a9\",', '(\"', '%', 'C3', '%', 'A9\",', 'utf8', '\"\\\\u00e9\"', 'escaped,', 'unescaped,', 'tests:', 'url_unescape', 'to_unicode', 'escaped', 'unescaped)', 'url_unescape', 'utf8', 'escaped', 'unescaped)', 'test_url_escape_quote_plus', 'self', 'unescaped', '=', '\"+', 'plus_escaped', '=', '\"', '%', '2B', '+', '%', '23', '%', '25\"', 'escaped', '=', '\"', '%', '2B', '%', '20', '%', '23', '%', '25\"', 'url_escape', 'unescaped', 'plus_escaped)', 'url_escape', 'unescaped,', 'plus', '=', 'escaped)', 'url_unescape', 'plus_escaped', 'unescaped)', 'url_unescape', 'escaped,', 'plus', '=', 'unescaped)', 'url_unescape', 'plus_escaped,', '=', 'utf8', 'unescaped', 'url_unescape', 'escaped,', '=', 'plus', '=', 'utf8', 'unescaped)', 'self', 'type', 'xhtml_escape', '\"foo\"', 'str)', 'type', 'xhtml_escape', '\"foo\"', 'unicode_type)', 'test_json_decode', 'self', 'json_decode', 'b\\'\"foo\"\\'', '\"foo\")', 'json_decode', '\\'\"foo\"\\'', '\"foo\")', 'json_decode', 'utf8', '\\'\"\\\\u00e9\"\\'', '\"\\\\u00e9\")', 'test_json_encode', 'self', 'json_decode', 'json_encode', '\"\\\\u00e9\"', '\"\\\\u00e9\")', 'bytes', 'str:', 'json_decode', 'json_encode', 'utf8', '\"\\\\u00e9\"', '\"\\\\u00e9\")', 'json_encode,', 'b\"\\\\xe9\")', 'test_squeeze', 'self', 'squeeze', '\"sequences', 'of', 'whitespace', 'chars\"', '\"sequences', 'of', 'whitespace', 'chars\",', 'test_recursive_unicode', 'self', 'tests', '=', '\"dict\":', '{b\"foo\":', 'b\"bar\"', '[b\"foo\",', 'b\"bar\"', '\"tuple\":', '(b\"foo\",', 'b\"bar\"', '\"bytes\":', 'b\"foo\",', 'recursive_unicode', 'tests', '\"dict\"', '{\"foo\":', '\"bar\"', 'recursive_unicode', 'tests', '[\"foo\",', '\"bar\"', 'recursive_unicode', 'tests', '\"tuple\"', '(\"foo\",', '\"bar\"', 'recursive_unicode', 'tests', '\"bytes\"', '\"foo\")']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/tornado/test/gen_test.py",
        "vector": "['concurrent', 'futures', 'gc', 'datetime', 'sys', 'time', 'weakref', 'unittest', 'Future', 'app_log', 'ExpectLog,', 'gen_test', 'skipNotCPython', 'Application,', 'gen', 'contextvars', 'contextvars', '=', 'Optional', 'self,', 'iterations,', 'arg', 'i', 'range', 'iterations', 'gen.moment', 'gen.Return', 'arg)', 'self,', 'result', 'gen.moment', 'result', 'self,', 'e', 'gen.moment', 'e', 'self,', 'x', 'gen.moment', 'gen.Return', 'x', '+', '1)', 'self', 'f', 'self.io_loop.run_sync', 'f)', 'self', 'f', '1', '/', '0', 'self.io_loop.run_sync,', 'f)', 'self', 'f', 'gen.moment', '1', '/', '0', 'self.io_loop.run_sync,', 'f)', 'self', 'f', '42', 'self.io_loop.run_sync,', 'f)', 'self', 'f', '(1,', '2)', 'self.io_loop.run_sync,', 'f)', 'test_reuse', 'self', 'f', 'gen.moment', 'self.io_loop.run_sync', 'f)', 'self.io_loop.run_sync', 'f)', 'test_none', 'self', 'f', 'self.io_loop.run_sync', 'f)', 'test_multi', 'self', 'f', 'results', '=', '1', '2', 'results,', '[2,', '3', 'self.io_loop.run_sync', 'f)', 'test_multi_dict', 'self', 'f', 'results', '=', 'dict', 'foo', '=', '1', 'bar', '=', '2', 'results,', 'dict', 'foo', '=', '2,', 'bar', '=', '3', 'self.io_loop.run_sync', 'f)', 'self', 'f', 'responses', '=', 'gen.multi_future(', '3,', '\"v1\"', '1,', '\"v2\"', 'responses,', '[\"v1\",', '\"v2\"', 'self.io_loop.run_sync', 'f)', 'self', 'f', 'responses', '=', 'gen.multi_future(', 'dict', 'foo', '=', '3,', '\"v1\"', 'bar', '=', '1,', '\"v2\"', 'responses,', 'dict', 'foo', '=', '\"v1\",', 'bar', '=', '\"v2\"', 'self.io_loop.run_sync', 'f)', '@gen_test', 'self', 'start', '=', 'time.time', '[gen.moment', 'i', 'range', '2000', 'end', '=', 'time.time', 'end', '-', 'start,', '1.0)', '@gen_test', 'test_multi_empty', 'self', 'x', '=', '[]', 'x,', 'y', '=', '{}', 'y,', 'dict', '@gen_test', 'test_future', 'self', 'result', '=', '1)', 'result,', '1)', '@gen_test', 'test_multi_future', 'self', 'results', '=', '1', '2', 'results,', '[1,', '2', '@gen_test', 'test_multi_future_duplicate', 'self', 'f', '=', '2)', 'results', '=', '1', 'f,', '3', 'f]', 'results,', '[1,', '2,', '3,', '2', '@gen_test', 'test_multi_dict_future', 'self', 'results', '=', 'dict', 'foo', '=', '1', 'bar', '=', '2', 'results,', 'dict', 'foo', '=', '1,', 'bar', '=', '2', '@gen_test', 'self', 'ExpectLog', 'app_log,', '\"Multiple', 'cm:', 'gen.Multi(', '1\"', '2\"', 'str', '1\")', 'gen.Multi(', '1\"', '2', 'gen.Multi(', '1\"', '2\"', '],', '=', '@gen_test', 'self', 'ExpectLog', 'app_log,', '\"Multiple', 'cm:', '1\"', '2\"', 'str', '1\")', '1\"', '2', 'gen.multi_future(', '1\"', '2\"', '],', '=', 'self', 'f', 'gen.Return', 'self.io_loop.run_sync', 'f)', 'self', 'f', 'gen.moment', 'gen.Return', 'self.io_loop.run_sync', 'f)', 'self', 'f', 'gen.Return', '42)', '42,', 'self.io_loop.run_sync', 'f', 'self', 'f', 'gen.Return', '1,', '2', '1,', '2', 'self.io_loop.run_sync', 'f', 'self', 'f', 'gen.moment', 'gen.Return', '42)', '42,', 'self.io_loop.run_sync', 'f', 'self', 'f', 'gen.moment', 'gen.Return', '1,', '2', '1,', '2', 'self.io_loop.run_sync', 'f', 'setUp', 'self', '=', 'super', '.setUp', 'tearDown', 'self', 'super', '.tearDown', 'test_attributes', 'self', '=', 'f', 'gen.moment', '=', 'f)', 'f.__name__)', 'f.__module__)', 'f)', 'self', '=', 'f', 'gen.moment', '=', 'f)', 'f', '@gen_test', 'self', 'f', 'gen.Return', '42)', 'result', '=', 'f', 'result,', '42)', '=', '@gen_test', 'self', 'f', 'gen.moment', 'gen.Return', '42)', 'result', '=', 'f', 'result,', '42)', '=', '@gen_test', 'self', 'f', '42', 'result', '=', 'f', 'result,', '42)', '=', '@gen_test', 'self', 'f', 'gen.moment', '42', 'result', '=', 'f', 'result,', '42)', '=', '@gen_test', 'self', 'f', '42', 'self.io_loop.add_callback)', 'result', '=', 'f', 'result,', '42)', '=', '@gen_test', 'self', 'f1', 'gen.moment', 'gen.Return', '42)', 'f2', 'result', '=', 'f1', 'result', 'result', '=', 'f2', 'result,', '42)', '=', '@gen_test', 'self', 'f', '0)', '42', 'result', '=', 'f', 'result,', '42)', '=', '@gen_test', 'self', 'f1', 'gen.moment', 'f2', 'f1', '42', 'f3', 'gen.moment', 'gen.Return', '43)', 'results', '=', '[f2', 'f3', 'results,', '[42,', '43', '=', '@gen_test', 'self', 'f1', '42', 'result', '=', 'hours', '=', '1', 'f1', 'result,', '42)', '=', '@gen_test', 'self', 'f', 'result', '=', 'f', 'result,', '=', '@gen_test', 'self', 'f', 'gen.moment', 'result', '=', 'f', 'result,', '=', '@gen_test', 'self', 'f', '1', '/', '0', 'future', '=', 'f', 'future', '=', '@gen_test', 'self', 'f', 'gen.moment', '1', '/', '0', 'future', '=', 'f', 'future', '=', '@gen_test', 'self', 'f1', '1', '/', '0', 'f2', 'f1', 'future', '=', 'f2', 'future', '=', '@gen_test', 'self', 'f1', '1', '/', '0', 'f2', 'f1', 'gen.Return', '42)', 'result', '=', 'f2', 'result,', '42)', '=', '@gen_test', 'test_moment', 'self', 'calls', '=', '[]', 'f', 'name,', 'i', 'range', '5', 'calls.append', 'name)', 'immediate', '=', 'Future', 'immediate.set_result', '[f', '\"a\",', 'immediate', 'f', '\"b\",', 'immediate', 'calls', '\"aaaaabbbbb\")', 'calls', '=', '[]', '[f', '\"a\",', 'gen.moment', 'f', '\"b\",', 'gen.moment', 'calls', '\"ababababab\")', '=', 'calls', '=', '[]', '[f', '\"a\",', 'gen.moment', 'f', '\"b\",', 'immediate', 'calls', '\"abbbbbaaaa\")', '@gen_test', 'test_sleep', 'self', 'gen.sleep', '0.01)', '=', '@gen_test', 'self', 'LeakedException', 'Exception', 'iteration', 'LeakedException', 'iteration)', '1)', 'LeakedException', 'e:', 'str', 'e', '\"1\")', 'e.__context__)', '2)', 'LeakedException', 'e:', 'str', 'e', '\"2\")', 'e.__context__)', '=', '@skipNotCPython', '@unittest.skipIf(', '(3', '<', '<', '(3,', '6', 'reference', 'cycles\"', 'self', 'Foo', 'object', 'local_var', '=', 'Foo', 'self.local_ref', '=', 'weakref.ref', 'local_var)', 'dummy', 'dummy', '\"Some', 'self.io_loop.run_sync', 'timeout', '=', '3)', 'self.local_ref', '=', 'self', '=', '=', 'self.addCleanup', 'f', 'gen.moment', '=', 'f', 'expected', '=', '\"created', 'at', '%s', '%', 'd\"', '%', '(__file__,', '+', '3)', 'actual', '=', 'repr', 'expected,', 'actual)', '@gen_test', 'self', 'f', 'gen.moment', 'gen.Return', '1)', 'ret', '=', 'f', 'f', 'ret,', '[1,', '1', '=', 'get', 'self', 'gen.moment', 'self.write', '\"1\")', 'gen.moment', 'self.write', '\"2\")', 'gen.moment', '\"3\")', 'get', 'self', 'gen.moment', 'self.write', '\"1\")', 'gen.moment', 'self.write', '\"2\")', 'gen.moment', 'self.write', '\"3\")', 'prepare', 'self', 'self.chunks', '=', '[]', 'gen.moment', 'self.chunks.append', '\"1\")', 'get', 'self', 'self.chunks.append', '\"2\")', 'gen.moment', 'self.chunks.append', '\"3\")', 'gen.moment', 'self.write', 'self.chunks', 'prepare', 'self', 'gen.moment', '403)', 'get', 'self', '\"ok\")', 'get', 'self', '0)', 'self.write', '\"ok\")', 'GenWebTest', 'get_app', 'self', 'Application(', '(\"', '/', '\"', '/', '),', '(\"', '/', '(\"', '/', '(\"', '/', 'self', 'response', '=', 'self.fetch', '\"', '/', 'response.body,', 'b\"123\")', 'self', 'response', '=', 'self.fetch', '\"', '/', 'response.body,', 'b\"123\")', 'self', 'response', '=', 'self.fetch', '\"', '/', 'response.body,', 'b\"123\")', 'self', 'response', '=', 'self.fetch', '\"', '/', 'response.code,', '403)', 'self', 'response', '=', 'self.fetch', '\"', '/', 'response.code,', '200)', 'response.body,', 'b\"ok\")', 'WithTimeoutTest', '@gen_test', 'test_timeout', 'self', 'seconds', '=', '0.1', 'Future', '@gen_test', 'self', 'future', '=', 'Future', 'self.io_loop.add_timeout(', 'seconds', '=', '0.1', 'future.set_result', 'result', '=', 'seconds', '=', '3600', 'future)', 'result,', '@gen_test', 'self', 'future', '=', 'Future', 'self.io_loop.add_timeout(', 'seconds', '=', '0.1', 'seconds', '=', '3600', 'future)', '@gen_test', 'test_already_resolved', 'self', 'future', '=', 'Future', 'future.set_result', 'result', '=', 'seconds', '=', '3600', 'future)', 'result,', '@gen_test', 'test_timeout_concurrent_future', 'self', '1)', 'self.io_loop.time', 'time.sleep,', '0.1)', '@gen_test', 'test_completed_concurrent_future', 'self', '1)', 'dummy', 'f', '=', 'dummy)', 'f.result', 'seconds', '=', '3600', 'f)', '@gen_test', 'self', '1)', 'seconds', '=', '3600', 'time.sleep', '0.01', '@gen_test', 'self', 'g', '=', 'g.done', '\"empty', 'iterated\")', 'g', '=', 'Future', 'bar', '=', 'Future', '\"bad', 'nil', 'current', 'g.current_future,', '\"bad', 'nil', 'current', 'future\")', '@gen_test', 'test_already_done', 'self', 'f1', '=', 'Future', 'f2', '=', 'Future', 'f3', '=', 'Future', 'f1.set_result', '24)', 'f2.set_result', '42)', 'f3.set_result', '84)', 'g', '=', 'f1,', 'f2,', 'f3)', 'i', '=', '0', 'g.done', 'r', '=', 'g.next', 'i', '==', '0:', '0)', 'g.current_future,', 'f1)', 'r,', '24)', 'i', '==', '1:', '1)', 'g.current_future,', 'f2)', 'r,', '42)', 'i', '==', '2:', '2)', 'g.current_future,', 'f3)', 'r,', '84)', 'i', '+=', '1', '\"bad', 'nil', 'current', 'g.current_future,', '\"bad', 'nil', 'current', 'future\")', 'dg', '=', 'f1', '=', 'f1,', 'f2', '=', 'f2)', 'dg.done', 'dr', '=', 'dg.next', '==', '\"f1\":', 'dg.current_future', '==', 'f1', 'dr', '==', '24,', 'dict', 'status', '==', '\"f2\":', 'dg.current_future', '==', 'f2', 'dr', '==', '42,', 'dict', 'status', 'self.fail', '\"got', 'bad', 'i', '+=', '1', '\"bad', 'nil', 'current', 'dg.current_future,', '\"bad', 'nil', 'current', 'future\")', 'self,', 'iteration,', 'futures', 'iteration', '==', '3:', 'futures', '2', '.set_result', '24)', 'iteration', '==', '5:', 'futures', '0', 'iteration', '==', '8:', 'futures', '1', '.set_result', '42)', 'futures', '3', '.set_result', '84)', 'iteration', '<', '8:', 'self.io_loop.add_callback', 'iteration', '+', '1,', 'futures)', '@gen_test', 'self', 'futures', '=', '[Future', 'Future', 'Future', 'Future', '0,', 'futures)', 'g', '=', '*', 'futures)', 'i', '=', '0', 'g.done', 'r', '=', 'g.next', 'g.current_future,', 'futures', '0', 'future', 'i', '==', '0:', 'r,', '24,', 'value', '2,', '\"wrong', 'i', '==', '2:', 'r,', '42,', 'value', '1,', '\"wrong', 'i', '==', '3:', 'r,', '84,', 'value', '3,', '\"wrong', 'i', '+=', '1', '@gen_test', 'self', 'futures', '=', '[Future', 'Future', 'Future', 'Future', '0,', 'futures)', '=', 'f', 'i', '=', '0', 'g', '=', '*', 'futures)', 'r', 'g:', 'i', '==', '0:', 'r,', '24,', 'value', '2,', '\"wrong', 'Exception', '\"expected', 'on', 'iteration', '1\")', 'i', '+=', '1', 'i', '+=', '1', 'r', 'g:', 'i', '==', '2:', 'r,', '42,', 'value', '1,', '\"wrong', 'i', '==', '3:', 'r,', '84,', 'value', '3,', '\"wrong', 'Exception', '\"didn\\'t', 'expect', 'iteration', '%d\"', '%', 'i)', 'i', '+=', '1', '=', 'f', '@gen_test', 'test_no_ref', 'self', 'seconds', '=', '0.1', 'gen.sleep', '0', '.next', 'RunnerGCTest', 'self', '==', '\"PyPy\"', '>', '(3', '@gen_test', 'test_gc', 'self', 'weakref_scope', '=', 'callback', 'gc.collect', '2)', 'weakref_scope', '0', '.set_result', '123)', 'tester', 'fut', '=', 'Future', 'weakref_scope', '0]', '=', 'weakref.ref', 'fut)', 'self.io_loop.add_callback', 'callback)', 'fut', 'seconds', '=', '0.2', 'tester', 'self', 'loop', '=', 'self.get_new_ioloop', 'result', '=', '[]', 'wfut', '=', '[]', 'gen.sleep', '1e', '-', '3)', 'result.append', 'result.append', 'fut', '=', 'fut._refcycle', '=', 'fut', 'wfut.append', 'weakref.ref', 'fut', 'gen.sleep', '0.2)', 'loop.run_sync', 'loop.close', 'gc.collect', 'wfut', '0', 'len', 'result', '2)', 'result', '-', '1', 'self', 'result', 'gen.sleep', '1e', '-', '3)', 'result.append', 'result.append', 'loop', '=', 'self.get_new_ioloop', 'result', '=', '[]', 'wfut', '=', '[]', 'fut', '=', 'result', 'fut._refcycle', '=', 'fut', 'wfut.append', 'weakref.ref', 'fut', 'gen.sleep', '0.2)', 'loop.run_sync', 'ExpectLog', 'destroyed', 'but', 'it', 'loop.close', 'gc.collect', 'wfut', '0', 'len', 'result', '2)', 'result', '-', '1', 'test_multi_moment', 'self', 'wait_a_moment', 'result', '=', 'gen.multi', 'gen.moment,', 'gen.moment', 'gen.Return', 'result)', 'loop', '=', 'self.get_new_ioloop', 'result', '=', 'loop.run_sync', 'wait_a_moment)', 'result,', 'contextvars', 'ctx_var', '=', 'contextvars.ContextVar', '\"ctx_var\")', '@unittest.skipIf', 'contextvars', '\"contextvars', 'module', 'present\")', 'ContextVarsTest', 'native_root', 'self,', 'x', 'ctx_var.set', 'x)', 'x)', 'gen_root', 'self,', 'x', 'ctx_var.set', 'x)', 'x)', 'self,', 'x', 'ctx_var.get', 'x)', 'x)', 'ctx_var.get', 'x)', 'ctx', '=', 'contextvars.copy_context', 'ctx.run', 'x', 'ctx_var.get', 'x)', 'ctx.run', 'x)', 'ctx_var.get', 'x)', 'self,', 'x', 'ctx_var.get', 'x)', 'ctx_var.get', 'x)', 'self,', 'x', 'ctx_var.get', 'x)', '@gen_test', 'test_propagate', 'self', 'self.native_root', '1', 'self.native_root', '2', 'self.gen_root', '3', 'self.gen_root', '4', '@gen_test', 'test_reset', 'self', 'token', '=', 'ctx_var.set', '1)', 'ctx_var.reset', 'token)', '@gen_test', 'self', 'x', '=', '10', 'ctx_var.get', 'x)', 'ctx_var.set', 'x)', '__name__', '==']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/tornado/test/gettext_translations/extract_me.py",
        "vector": "['_', '\"school\")', 'pgettext', '\"law\",', '\"right\")', 'pgettext', '\"good\",', '\"right\")', 'pgettext', '\"club\",', '\"clubs\",', '1)', 'pgettext', '\"stick\",', '\"club\",', '\"clubs\",', '1)']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/tornado/test/http1connection_test.py",
        "vector": "['socket', 'HTTP1Connection', 'HTTPMessageDelegate', 'IOStream', 'Event', 'gen_test', 'HTTP1ConnectionTest', 'code', '=', 'setUp', 'self', 'super', '.setUp', '@gen_test', 'self', '=', 'event', '=', 'Event', 'accept_callback', 'conn,', 'addr', 'self.server_stream', '=', 'IOStream', 'conn)', 'self.addCleanup', 'self.server_stream.close)', 'event.set', 'accept_callback)', 'self.client_stream', '=', 'IOStream', 'socket.socket', 'self.addCleanup', 'self.client_stream.close)', '[self.client_stream.connect', '\"127.0.0.1\",', 'event.wait', '@gen_test', 'test_http10_no_content_length', 'self', 'conn', '=', 'HTTP1Connection', 'self.client_stream,', 'self.server_stream.write', 'b\"HTTP', '/', '1.0', '200', 'Not', 'self.server_stream.close', 'event', '=', 'Event', 'test', '=', 'self', 'body', '=', '[]', 'Delegate', 'HTTPMessageDelegate', 'headers_received', 'self,', 'headers', 'test.code', '=', 'data_received', 'self,', 'data', 'body.append', 'data)', 'self', 'event.set', 'conn.read_response', 'Delegate', 'event.wait', 'self.code,', '200)', 'body', 'b\"hello\")']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/tornado/test/httpclient_test.py",
        "vector": "['contextlib', 'copy', 'gzip', 'datetime', 'io', 'BytesIO', 'subprocess', 'sys', 'time', 'unicodedata', 'unittest', 'utf8,', 'native_str,', 'to_unicode', 'gen', 'HTTPRequest,', 'HTTPResponse,', '_RequestProxy,', 'HTTPClient,', 'HTTPServer', 'IOLoop', 'IOStream', 'gen_log,', 'app_log', 'netutil', 'gen_test,', 'ExpectLog', 'Application,', 'url', 'HTTPHeaders', 'get', 'self', 'name', '=', 'self.get_argument', '\"name\",', 'self.set_header', '\"Content', '-', 'Type\",', '\"text', '/', '\"Hello', '%s!\"', '%', 'name)', 'post', 'self', '\"Post', 'arg1:', '%s,', 'arg2:', '%s\"', '%', '(self.get_argument', '\"arg1\"', 'self.get_argument', '\"arg2\"', 'put', 'self', 'self.write', '\"Put', 'body:', '\")', 'self.write', 'self.request.body)', 'prepare', 'self', 'self.write', '\"redirects', 'can', 'have', 'bodies', 'too\")', 'self.redirect(', 'self.get_argument', '\"url\"', 'status', '=', 'self.get_argument', '\"status\",', '\"302\"', 'prepare', 'self', 'self.set_status', '301)', 'get', 'self', 'self.write', 'self.flush', 'gen.sleep', '0.01)', 'self.write', '\"qwer\")', 'get', 'self', 'self.request.headers', 'get', 'self,', 'count', 'count', '=', 'count)', 'count', '>', '0:', 'self.redirect', 'self.reverse_url', '\"countdown\",', 'count', '-', '1', 'self.write', '\"Zero\")', 'post', 'self', 'self.write', 'self.request.body)', 'get', 'self', 'self.write', 'self.request.headers.get', '\"User', '-', 'Agent\",', '\"User', 'agent', 'set\"', 'get', 'self', 'self.set_status', '304)', 'self.set_header', '\"Content', '-', 'Length\",', '42)', '_clear_representation_headers', 'self', 'patch', 'self', '\"Return', 'the', 'request', 'payload', '-', 'so', 'we', 'can', 'check', 'it', 'kept\"', 'self.write', 'self.request.body)', 'SUPPORTED_METHODS', '=', '+', '(\"OTHER\"', 'method', 'self', 'self.request.method', 'self.write', 'self.request.method)', 'get', '=', 'head', '=', 'post', '=', 'put', '=', '=', 'options', '=', 'patch', '=', 'other', '=', 'method', 'get', 'self', 'k,', 'v', 'zip', 'self.get_arguments', '\"k\"', 'self.request.arguments', '\"v\"', 'self.set_header', 'k,', 'v)', 'get', 'self)', '->', 'self.set_header', '\"Content', '-', 'Type\",', '\"text', '/', 'self.set_header', '\"Content', '-', '\"gzip\")', 'text', '=', '\"Hello', 'i)', 'i', 'range', '9000', '149051]', 'body', '=', 'gzip.compress', 'text.encode', 'compresslevel', '=', '6)', '+', 'b\"\\\\00\"', 'self.write', 'body)', 'get', 'self', 'self.request.headers', '\"Foo\"', '.encode', '\"ISO8859', '-', '1\"', 'get_app', 'self', 'Application(', 'url', '\"', '/', 'hello\",', 'url', '\"', '/', 'post\",', 'url', '\"', '/', 'put\",', 'url', '\"', '/', 'redirect\",', 'url', '\"', '/', 'url', '\"', '/', 'chunk\",', 'url', '\"', '/', 'auth\",', 'url', '\"', '/', 'countdown', '/', '0', '-', '9', '+', '\",', 'name', '=', '\"countdown\"', 'url', '\"', '/', 'echopost\",', 'url', '\"', '/', 'user_agent\",', 'url', '\"', '/', 'url', '\"', '/', 'all_methods\",', 'url', '\"', '/', 'patch\",', 'url', '\"', '/', 'set_header\",', 'url', '\"', '/', 'url', '\"', '/', 'header', '-', '],', 'gzip', '=', 'test_patch_receives_payload', 'self', 'body', '=', 'b\"some', 'patch', 'data\"', 'response', '=', 'self.fetch', '\"', '/', 'patch\",', 'method', '=', '\"PATCH\",', 'body', '=', 'body)', 'response.code,', '200)', 'response.body,', 'body)', 'self', 'response', '=', 'self.fetch', '\"', '/', 'hello\")', 'response.code,', '200)', 'response.headers', '\"Content', '-', 'Type\"', '\"text', '/', 'response.body,', 'b\"Hello', 'response.request_time', 'response.request_time', '0)', 'response', '=', 'self.fetch', '\"', '/', 'hello?name', '=', 'Ben\")', 'response.body,', 'b\"Hello', 'Ben!\")', 'self', 'chunks', '=', '[]', 'response', '=', 'self.fetch', '\"', '/', 'hello\",', '=', 'chunks.append)', 'chunks,', '[b\"Hello', 'response.body)', 'test_post', 'self', 'response', '=', 'self.fetch', '\"', '/', 'post\",', 'method', '=', '\"POST\",', 'body', '=', '\"arg1', '=', 'foo', '&', 'arg2', '=', 'bar\")', 'response.code,', '200)', 'response.body,', 'b\"Post', 'arg1:', 'foo,', 'arg2:', 'bar\")', 'test_chunked', 'self', 'response', '=', 'self.fetch', '\"', '/', 'chunk\")', 'response.body,', 'chunks', '=', '[]', 'response', '=', 'self.fetch', '\"', '/', 'chunk\",', '=', 'chunks.append)', 'chunks,', 'b\"qwer\"', 'response.body)', 'test_chunked_close', 'self', 'sock,', '=', 'sock', 'accept_callback', 'conn,', 'address', 'stream', '=', 'IOStream', 'conn)', 'request_data', '=', 'stream.read_until', 'b\"\\\\r\\\\n\\\\r\\\\n\")', 'b\"HTTP', '/', '1.\"', 'request_data:', 'self.skipTest', '\"requires', 'HTTP', '/', '1.x\")', 'stream.write(', 'b.replace(', 'b\"\\\\n\",', 'b\"\\\\r\\\\n\"', 'stream.close', 'sock,', 'accept_callback)', 'resp', '=', 'self.fetch', '\"http', '/', '/', '127.0.0.1', '%', 'd', '/', '\"', '%', 'resp.rethrow', 'resp.body,', 'b\"12\")', 'sock.fileno', 'self', 'self.fetch(', '\"', '/', 'auth\",', 'auth_username', '=', '=', '\"open', 'sesame\"', ').body,', 'QWxhZGRpbjpvcGVuIHNlc2FtZQ', '==', '\",', 'self', 'self.fetch(', '\"', '/', 'auth\",', 'auth_username', '=', '=', '\"open', 'sesame\",', 'auth_mode', '=', ').body,', 'QWxhZGRpbjpvcGVuIHNlc2FtZQ', '==', '\",', 'self', 'self.fetch', '\"', '/', 'auth\",', 'auth_username', '=', '\"test\",', '=', '\"123\u00a3\"', '.body,', 'dGVzdDoxMjPCow', '==', '\",', 'username', '=', '\"NFD\",', '\"jos\u00e9\")', 'self.fetch', '\"', '/', 'auth\",', 'auth_username', '=', 'username,', '=', '\"s\u0259cr\u0259t\"', '.body,', 'am9zw6k6c8mZY3LJmXQ', '=', '\",', 'self', 'ExpectLog', 'gen_log,', '\"uncaught', 'required', '=', 'self.fetch(', '\"', '/', 'auth\",', 'auth_username', '=', '=', '\"open', 'sesame\",', 'auth_mode', '=', '=', 'test_follow_redirect', 'self', 'response', '=', 'self.fetch', '\"', '/', 'countdown', '/', '2\",', 'follow_redirects', '=', '302,', 'response.code)', 'response.headers', '\"Location\"', '\"', '/', 'countdown', '/', '1\"', 'response', '=', 'self.fetch', '\"', '/', 'countdown', '/', '2\")', '200,', 'response.code)', '\"', '/', 'countdown', '/', '0\"', 'b\"Zero\",', 'response.body)', 'self', 'response', '=', 'self.fetch', '\"', '/', 'follow_redirects', '=', '301,', 'response.code)', 'self', 'response', '=', 'self.fetch(', '\"', '/', 'redirect?url', '=', '/', 'put', '&', 'status', '=', '307\",', 'method', '=', '\"PUT\",', 'body', '=', '\"hello\"', 'response.body,', 'b\"Put', 'body:', 'hello\")', 'self', 'response', '=', 'self.fetch(', '\"', '/', 'redirect?url', '=', '/', 'put', '&', 'status', '=', '307\",', 'method', '=', '\"PUT\",', '=', 'response.body,', 'b\"Put', 'body:', '\")', 'test_method_after_redirect', 'self', 'status', '[301,', '302,', '303', 'url', '=', '\"', '/', 'redirect?url', '=', '/', 'all_methods', '&', 'status', '=', '%', 'd\"', '%', 'status', 'resp', '=', 'self.fetch', 'url,', 'method', '=', '\"POST\",', 'body', '=', 'b\"\")', 'b\"GET\",', 'resp.body)', 'method', '[\"GET\",', '\"OPTIONS\",', '\"PUT\",', '\"DELETE\"', 'resp', '=', 'self.fetch', 'url,', 'method', '=', 'method,', '=', 'status', '[301,', '302', 'utf8', 'method', 'resp.body)', 'resp.body,', '[utf8', 'method', 'b\"GET\"', 'resp', '=', 'self.fetch', 'url,', 'method', '=', '\"HEAD\")', '200,', 'resp.code)', 'b\"\",', 'resp.body)', 'status', '[307,', '308', 'url', '=', '\"', '/', 'redirect?url', '=', '/', 'all_methods', '&', 'status', '=', '307\"', 'method', '[\"GET\",', '\"OPTIONS\",', '\"POST\",', '\"PUT\",', '\"DELETE\"', 'resp', '=', 'self.fetch', 'url,', 'method', '=', 'method,', '=', 'method,', 'to_unicode', 'resp.body', 'resp', '=', 'self.fetch', 'url,', 'method', '=', '\"HEAD\")', '200,', 'resp.code)', 'b\"\",', 'resp.body)', 'self', 'url', '=', 'self.get_url', '\"', '/', 'auth\"', '.replace', '\"http', '/', '/', '\",', '\"http', '/', '/', 'me', 'secret', '@', '\")', 'response', '=', 'self.fetch', 'url)', '\"', '+', 'b\"me', 'secret\"', 'response.body)', 'self', 'unicode_body', '=', '\"\\\\xe9\"', 'byte_body', '=', 'b\"e9\")', 'response', '=', 'self.fetch(', '\"', '/', 'echopost\",', 'method', '=', '\"POST\",', 'body', '=', 'unicode_body,', 'headers', '=', '\"Content', '-', 'Type\":', '\"application', '/', 'blah\"', 'response.headers', '\"Content', '-', 'Length\"', '\"2\")', 'response.body,', 'utf8', 'unicode_body', 'response', '=', 'self.fetch(', '\"', '/', 'echopost\",', 'method', '=', '\"POST\",', 'body', '=', 'byte_body,', 'headers', '=', '\"Content', '-', 'Type\":', '\"application', '/', 'blah\"', 'response.headers', '\"Content', '-', 'Length\"', '\"1\")', 'response.body,', 'byte_body)', 'response', '=', 'self.fetch(', '\"', '/', 'echopost\",', 'method', '=', '\"POST\",', 'body', '=', 'byte_body,', 'headers', '=', '\"Content', '-', 'Type\":', '\"application', '/', 'blah\"', 'user_agent', '=', '\"foo\",', 'response.headers', '\"Content', '-', 'Length\"', '\"1\")', 'response.body,', 'byte_body)', 'test_types', 'self', 'response', '=', 'self.fetch', '\"', '/', 'hello\")', 'type', 'response.body', 'bytes)', 'type', 'response.headers', '\"Content', '-', 'Type\"', 'str)', 'type', 'response.code', 'type', 'response.effective_url', 'str)', 'test_gzip', 'self', 'response', '=', 'self.fetch(', '\"', '/', 'chunk\",', 'decompress_response', '=', 'headers', '=', '\"Accept', '-', '\"gzip\"}', 'response.headers', '\"Content', '-', '\"gzip\")', 'response.body,', 'len', 'response.body', '34)', 'f', '=', 'gzip.GzipFile', 'mode', '=', '\"r\",', 'fileobj', '=', 'response.buffer)', 'f.read', 'self', 'ExpectLog(', 'app_log,', '\"', 'Uncaught', '|', 'Exception', 'callback', '\",', 'required', '=', '):', 'response', '=', 'self.fetch', '\"', '/', 'response.code,', '200)', 'response.body', '14', 'b\"Hello', '0\\\\n\")', 'test_header_callback', 'self', '=', '[]', 'headers', '=', '{}', 'chunks', '=', '[]', 'header_callback', '\"HTTP', '/', '1.1', '101\"', '\"HTTP', '/', '\"', '!=', '\"\\\\r\\\\n\":', 'k,', 'v', '=', '\"', '\",', '1)', 'headers', 'k.lower', '=', 'v.strip', 'chunk', 'headers', '\"content', '-', 'type\"', '\"text', '/', 'html;', 'charset', '=', 'UTF', '-', '8\")', 'chunks.append', 'chunk)', 'self.fetch(', '\"', '/', 'chunk\",', 'header_callback', '=', 'header_callback,', '=', 'len', '1,', '0', '\"HTTP', '/', '0', '-', '9', '\\\\\\\\.', '0', '-', '9]', '200.', '*', '\\\\r\\\\n\")', 'chunks,', 'b\"qwer\"', '@gen_test', 'self', '=', 'dict', 'user_agent', '=', '\"TestDefaultUserAgent\",', 'allow_ipv6', '=', 'client', '=', '=', '=', 'response', '=', 'client.fetch', 'self.get_url', '\"', '/', 'user_agent\"', 'response.body,', 'b\"TestDefaultUserAgent\")', 'client.close', 'test_header_types', 'self', 'value', '[\"MyUserAgent\",', 'b\"MyUserAgent\"', '[dict,', 'HTTPHeaders', 'headers', '=', 'headers', '\"User', '-', 'Agent\"]', '=', 'value', 'resp', '=', 'self.fetch', '\"', '/', 'user_agent\",', 'headers', '=', 'headers)', 'resp.body,', 'b\"MyUserAgent\",', '\"response', '=', '%', 'r,', 'value', '=', '%', 'r,', '=', '%', 'r\"', '%', '(resp.body,', 'value,', 'self', 'sock,', '=', 'sock', 'accept_callback', 'conn,', 'address', 'stream', '=', 'IOStream', 'conn)', 'request_data', '=', 'stream.read_until', 'b\"\\\\r\\\\n\\\\r\\\\n\")', 'b\"HTTP', '/', '1.\"', 'request_data:', 'self.skipTest', '\"requires', 'HTTP', '/', '1.x\")', 'stream.write(', 'b.replace(', 'b\"\\\\n\",', 'b\"\\\\r\\\\n\"', 'stream.close', 'sock,', 'accept_callback)', 'resp', '=', 'self.fetch', '\"http', '/', '/', '127.0.0.1', '%', 'd', '/', '\"', '%', 'resp.rethrow', 'resp.headers', '\"X', '-', 'XSS', '-', 'Protection\"', '\"1;', 'mode', '=', 'block\")', 'sock.fileno', '@gen_test', 'self', 'response', '=', 'self.http_client.fetch(', 'self.get_url', '\"', '/', 'header', '-', 'headers', '=', '\"Foo\":', '\"b\\\\xe4r\",', '},', 'response.body,', '\"b\\\\xe4r\".encode', '\"ISO8859', '-', '1\"', 'self', 'response', '=', 'self.fetch', '\"', '/', 'response.code,', '304)', 'response.headers', '\"Content', '-', 'Length\"', '\"42\")', '@gen_test', 'self', 'response', '=', 'self.http_client.fetch', 'self.get_url', '\"', '/', 'hello\"', 'response.body,', 'b\"Hello', '@gen_test', 'self', 'context:', 'self.http_client.fetch', 'self.get_url', '\"', '/', '404)', '404)', '@gen_test', 'self', 'response', '=', 'self.http_client.fetch(', 'self.get_url', '\"', '/', '=', 'response.code,', '404)', '@gen_test', 'self', 'url', '=', 'self.get_url', '\"', '/', 'hello\")', 'response', '=', 'self.http_client.fetch', 'url)', 'response.request.url,', 'url)', 'response.request,', 'HTTPRequest', 'response2', '=', 'self.http_client.fetch', 'response.request)', 'response2.body,', 'b\"Hello', '@gen_test', 'self', 'url', '=', 'self.get_url', '\"', '/', 'hello\")', 'request', '=', 'HTTPRequest', 'url,', '=', '\"127.0.0.1\")', 'response', '=', 'self.http_client.fetch', 'request)', 'response.code,', '200)', 'context:', 'request', '=', 'HTTPRequest', 'url,', '=', '-', '-', '-', 'ip\")', 'self.http_client.fetch', 'request)', '-', '-', '-', 'ip\",', 'str', 'test_all_methods', 'self', 'method', '[\"GET\",', '\"DELETE\",', '\"OPTIONS\"', 'response', '=', 'self.fetch', '\"', '/', 'all_methods\",', 'method', '=', 'method)', 'response.body,', 'utf8', 'method', 'method', '[\"POST\",', '\"PUT\",', '\"PATCH\"', 'response', '=', 'self.fetch', '\"', '/', 'all_methods\",', 'method', '=', 'method,', 'body', '=', 'b\"\")', 'response.body,', 'utf8', 'method', 'response', '=', 'self.fetch', '\"', '/', 'all_methods\",', 'method', '=', '\"HEAD\")', 'response.body,', 'b\"\")', 'response', '=', 'self.fetch(', '\"', '/', 'all_methods\",', 'method', '=', '\"OTHER\",', '=', 'response.body,', 'b\"OTHER\")', 'test_body_sanity_checks', 'self', 'method', '(\"POST\",', '\"PUT\",', '\"PATCH\"', 'context:', 'self.fetch', '\"', '/', 'all_methods\",', 'method', '=', 'method,', '=', '\"must', 'be', 'str', 'resp', '=', 'self.fetch(', '\"', '/', 'all_methods\",', 'method', '=', 'method,', '=', 'resp.code,', '200)', 'method', '(\"GET\",', '\"DELETE\",', '\"OPTIONS\"', 'context:', 'self.fetch(', '\"', '/', 'all_methods\",', 'method', '=', 'method,', 'body', '=', '=', '\"must', 'be', 'str', 'method', '!=', '\"GET\":', 'self.fetch(', '\"', '/', 'all_methods\",', 'method', '=', 'method,', 'body', '=', '=', '=', 'resp.code,', '200)', 'test_put_307', 'self', 'response', '=', 'self.fetch(', '\"', '/', 'redirect?status', '=', '307', '&', 'url', '=', '/', 'put\",', 'method', '=', '\"PUT\",', 'body', '=', 'b\"hello\"', 'response.rethrow', 'response.body,', 'b\"Put', 'body:', 'hello\")', 'self', 'response', '=', 'self.fetch', '\"', '/', 'set_header?k', '=', 'foo', '&', 'v', '=', '%', 'E9\")', 'response.rethrow', 'response.headers', '\"Foo\"', 'native_str', '\"\\\\u00e9\"', 'test_response_times', 'self', 'start_time', '=', 'time.time', 'response', '=', 'self.fetch', '\"', '/', 'hello\")', 'response.rethrow', 'response.request_time', 'response.request_time,', '0)', 'response.request_time,', '1.0)', 'response.start_time', 'abs', 'response.start_time', '-', 'start_time', '1.0)', 'k,', 'v', '0', '<=', 'v', '<', '1.0,', '%', 's]', 'out', 'of', 'bounds:', '%s\"', '%', '(k,', 'v', 'test_zero_timeout', 'self', 'response', '=', 'self.fetch', '\"', '/', 'hello\",', 'connect_timeout', '=', '0)', 'response.code,', '200)', 'response', '=', 'self.fetch', '\"', '/', 'hello\",', 'request_timeout', '=', '0)', 'response.code,', '200)', 'response', '=', 'self.fetch', '\"', '/', 'hello\",', 'connect_timeout', '=', '0,', 'request_timeout', '=', '0)', 'response.code,', '200)', '@gen_test', 'self', 'fut', '=', 'self.http_client.fetch', 'self.get_url', '\"', '/', '404\"', 'fut.cancel', 'ExpectLog', 'app_log,', '\"Exception', 'after', 'Future', 'cancelled\")', 'el:', 'i', 'range', '100', 'gen.sleep', '0.01)', 'el.logged_stack:', 'RequestProxyTest', 'test_request_set', 'self', 'proxy', '=', '_RequestProxy(', 'HTTPRequest', '\"http', '/', '/', 'example.com', '/', '\",', 'user_agent', '=', '\"foo\"', 'dict', 'proxy.user_agent,', '\"foo\")', 'self', 'proxy', '=', '_RequestProxy(', 'HTTPRequest', '\"http', '/', '/', 'example.com', '/', '\"', 'dict', '=', '\"foo\")', '\"foo\")', 'test_both_set', 'self', 'proxy', '=', '_RequestProxy(', 'HTTPRequest', '\"http', '/', '/', 'example.com', '/', '\",', 'proxy_host', '=', '\"foo\"', 'dict', 'proxy_host', '=', '\"bar\")', 'proxy.proxy_host,', '\"foo\")', 'test_neither_set', 'self', 'proxy', '=', '_RequestProxy', 'HTTPRequest', '\"http', '/', '/', 'example.com', '/', '\"', 'dict', 'proxy.auth_username,', 'test_bad_attribute', 'self', 'proxy', '=', '_RequestProxy', 'HTTPRequest', '\"http', '/', '/', 'example.com', '/', '\"', 'dict', 'proxy.foo', 'self', 'proxy', '=', '_RequestProxy', 'HTTPRequest', '\"http', '/', '/', 'example.com', '/', '\"', 'proxy.auth_username,', 'test_str', 'self', 'response', '=', 'HTTPResponse(', 'HTTPRequest', '\"http', '/', '/', 'example.com\"', '200,', 'buffer', '=', 'BytesIO', 's', '=', 'str', 'response)', '\"HTTPResponse', '\"', '\"code', '=', '200\",', 's)', 'SyncHTTPClientTest', 'setUp', 'self', 'self.server_ioloop', '=', 'IOLoop', 'make_current', '=', 'event', '=', 'sock,', '=', 'app', '=', 'Application', '\"', '/', '\",', 'self.server', '=', 'HTTPServer', 'app)', 'self.server.add_socket', 'sock)', 'event.set', 'start', 'self.server_ioloop.run_sync', 'self.server_ioloop.start', 'self.server_thread', '=', 'target', '=', 'start)', 'self.server_thread.start', 'event.wait', 'self.http_client', '=', 'HTTPClient', 'tearDown', 'self', 'stop_server', 'self.server.stop', 'slow_stop', 'self.server.close_all_connections', 'i', 'range', '5', 'self.server_ioloop.stop', 'self.server_ioloop.add_callback', 'slow_stop)', 'self.server_ioloop.add_callback', 'stop_server)', 'self.http_client.close', 'self.server_ioloop.close', 'all_fds', '=', 'get_url', 'self,', 'path', '\"http', '/', '/', '127.0.0.1', '%', 'd', '%', 's\"', '%', 'path)', 'test_sync_client', 'self', 'response', '=', 'self.http_client.fetch', 'self.get_url', '\"', '/', '\"', 'b\"Hello', 'response.body)', 'self', 'self.http_client.fetch', 'self.get_url', '\"', '/', '404)', 'SyncHTTPClientSubprocessTest', 'self', 'proc', '=', 'subprocess.run(', 'sys.executable,', '\"', '-', 'c\",', 'HTTPClient;', 'f', '=', 'c', '=', 'HTTPClient', '\",', '],', 'stdout', '=', 'subprocess.PIPE,', 'stderr', '=', 'subprocess.STDOUT,', 'check', '=', 'timeout', '=', '15,', 'proc.stdout:', '\"STDOUT', '\")', 'to_unicode', 'proc.stdout', 'proc.stdout:', 'self.fail', '\"subprocess', 'produced', 'unexpected', 'output\")', 'test_headers', 'self', 'request', '=', 'HTTPRequest', '\"http', '/', '/', 'example.com\",', 'headers', '=', '\"foo\":', '\"bar\"', 'request.headers,', '{\"foo\":', '\"bar\"', 'test_headers_setter', 'self', 'request', '=', 'HTTPRequest', '\"http', '/', '/', 'example.com\")', 'request.headers', '=', '{\"bar\":', '\"baz\"}', 'request.headers,', '{\"bar\":', '\"baz\"', 'test_null_headers_setter', 'self', 'request', '=', 'HTTPRequest', '\"http', '/', '/', 'example.com\")', 'request.headers', '=', 'request.headers,', 'test_body', 'self', 'request', '=', 'HTTPRequest', '\"http', '/', '/', 'example.com\",', 'body', '=', '\"foo\")', 'request.body,', 'utf8', '\"foo\"', 'test_body_setter', 'self', 'request', '=', 'HTTPRequest', '\"http', '/', '/', 'example.com\")', 'request.body', '=', '\"foo\"', 'request.body,', 'utf8', '\"foo\"', 'self', 'http_date', '=', 'datetime.datetime.now', 'datetime.timezone.utc)', 'request', '=', 'HTTPRequest', '\"http', '/', '/', 'example.com\",', '=', 'http_date)', 'request.headers,', '{\"If', '-', '-', 'http_date', 'self', 'http_date', '=', 'datetime.datetime.utcnow', 'request', '=', 'HTTPRequest', '\"http', '/', '/', 'example.com\",', '=', 'http_date)', 'request.headers,', '{\"If', '-', '-', 'http_date', 'test_copy', 'self', 'e', '=', '403)', 'e2', '=', 'copy.copy', 'e)', 'e,', 'e2)', 'e.code,', 'e2.code)', 'self', 'e', '=', '403)', 'str', 'e', '\"HTTP', '403:', 'repr', 'e', '\"HTTP', '403:', 'self', 'resp', '=', 'HTTPResponse', 'HTTPRequest', '\"http', '/', '/', 'example.com', '/', '\"', '403)', 'cm:', 'resp.rethrow', 'e', '=', 'str', 'e', '\"HTTP', '403:', 'repr', 'e', '\"HTTP', '403:']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/tornado/test/httpserver_test.py",
        "vector": "['gen,', 'netutil', 'json_decode,', 'json_encode,', 'utf8,', '_unicode,', 'recursive_unicode,', 'native_str,', 'HTTP1Connection', 'HTTPServer', 'HTTPHeaders,', 'HTTPMessageDelegate,', 'HTTPServerConnectionDelegate,', 'IOStream', 'Event', 'gen_log,', 'app_log', 'ssl_options_to_context', 'SimpleAsyncHTTPClient', 'ExpectLog,', 'gen_test,', 'Application,', 'stream_request_body', 'contextlib', 'datetime', 'gzip', 'os', 'shutil', 'socket', 'ssl', 'sys', 'tempfile', 'textwrap', 'unittest', 'urllib.parse', 'io', 'BytesIO', 'Dict,', 'read_stream_body', 'stream', 'chunks', '=', '[]', 'Delegate', 'HTTPMessageDelegate', 'headers_received', 'self,', 'headers', 'self.headers', '=', 'headers', '=', 'data_received', 'self,', 'chunk', 'chunks.append', 'chunk)', 'self', 'conn.detach', 'conn', '=', 'HTTP1Connection', 'stream,', '=', 'Delegate', 'conn.read_response', 'chunks)', '=', 'get_app', 'self', 'Application', '\"', '/', '\",', 'fetch_json', 'self,', '*args,', '*', '*', 'kwargs', 'response', '=', 'self.fetch', '*', 'args,', '*', '*', 'kwargs)', 'response.rethrow', 'json_decode', 'response.body)', 'self,', 'protocol', '=', '\"http\"', 'self.expected_protocol', '=', 'protocol', 'get', 'self', 'self.request.protocol', '!=', 'self.expected_protocol:', 'Exception', '\"unexpected', 'protocol\")', '\"Hello', 'post', 'self', '\"Got', '%d', 'bytes', 'POST\"', '%', 'len', 'self.request.body', 'skipIfOldSSL', '=', 'unittest.skipIf(', 'getattr', 'ssl,', '\"OPENSSL_VERSION_INFO\",', '(0,', '0', '<', '(1,', '0', '\"old', 'version', 'of', 'ssl', 'module', '/', 'openssl\",', 'get_app', 'self', 'Application', '\"', '/', '\",', 'dict', 'protocol', '=', '\"https\"', 'object', 'get_ssl_options', 'self', 'dict(', 'ssl_version', '=', 'self.get_ssl_version', '*', '*', 'get_ssl_version', 'self', 'test_ssl', 'self:', 'response', '=', 'self.fetch', '\"', '/', '\")', 'response.body,', 'b\"Hello', 'test_large_post', 'self:', 'response', '=', 'self.fetch', '\"', '/', '\",', 'method', '=', '\"POST\",', 'body', '=', '\"A\"', '*', '5000)', 'response.body,', 'b\"Got', '5000', 'bytes', 'POST\")', 'test_non_ssl_request', 'self:', 'ExpectLog', 'gen_log,', '\"', 'SSL', '|', 'uncaught', '\"', 'ExpectLog', 'gen_log,', '\"Uncaught', 'required', '=', 'self.fetch(', 'self.get_url', '\"', '/', '\"', '.replace', '\"https', '\",', '\"http', '\"', 'request_timeout', '=', '3600,', 'connect_timeout', '=', '3600,', '=', 'self:', 'ExpectLog', 'gen_log,', '\"SSL', 'expect_log:', 'self.fetch(', 'self.get_url', '\"', '/', '\"', '.replace', '\"https', '\",', '\"http', '\"', '=', 'expect_log.logged_stack)', 'SSLv23Test', 'get_ssl_version', 'self', 'ssl.PROTOCOL_SSLv23', '@skipIfOldSSL', 'SSLv3Test', 'get_ssl_version', 'self', 'ssl.PROTOCOL_SSLv3', '@skipIfOldSSL', 'TLSv1Test', 'get_ssl_version', 'self', 'ssl.PROTOCOL_TLSv1', 'SSLContextTest', 'get_ssl_options', 'self', 'context', '=', 'ssl_options_to_context(', 'self', 'server_side', '=', 'context,', 'ssl.SSLContext)', 'context', 'BadSSLOptionsTest', 'self', 'application', '=', 'Application', 'HTTPServer,', 'application,', 'ssl_options', '=', '\"keyfile\":', '\"', '/', 'self', 'application', '=', 'Application', 'module_dir', '=', 'os.path.dirname', '__file__)', '=', 'module_dir,', '\"test.crt\")', '=', 'module_dir,', '\"test.key\")', 'HTTPServer,', 'application,', 'ssl_options', '=', '\"certfile\":', '\"', '/', 'HTTPServer,', 'application,', 'ssl_options', '=', '\"certfile\":', '\"keyfile\":', '\"', '/', '},', 'HTTPServer(', 'application,', 'ssl_options', '=', '\"certfile\":', '\"keyfile\":', 'post', 'self', '\"header\":', 'self.request.headers', '\"X', '-', 'Header', '-', '-', 'Test\"', '\"argument\":', 'self.get_argument', '\"argument\"', '\"filename\":', 'self.request.files', '\"files\"', '0', '.filename,', '\"filebody\":', '_unicode', 'self.request.files', '\"files\"', '0', '\"body\"', 'HTTPConnectionTest', 'self', '(\"', '/', 'multipart\",', '(\"', '/', 'hello\",', 'get_app', 'self', 'Application', 'raw_fetch', 'self,', 'headers,', 'body,', '=', 'b\"\\\\r\\\\n\"', 'IOStream', 'socket.socket', 'stream:', 'self.io_loop.run_sync(', 'stream.connect', '\"127.0.0.1\",', 'stream.write(', 'headers', '+', '[utf8', '\"Content', '-', 'Length:', '%d\"', '%', 'len', 'body', '+', '+', '+', 'body', 'headers,', 'body', '=', 'self.io_loop.run_sync(', 'read_stream_body', 'stream)', 'body', 'self', 'response', '=', 'self.raw_fetch(', 'b\"POST', '/multipart', 'HTTP', '/', '1.0\",', 'b\"Content', '-', 'Type:', 'multipart', '/', '-', 'data;', 'boundary', '=', '1234567890\",', 'b\"X', '-', 'Header', '-', '-', 'test:', '\\\\xe9\",', '],', 'b\"Content', '-', '-', 'data;', 'name', '=', 'argument\",', 'b\"\",', '\"\\\\u00e1\".encode', '\"utf', '-', '8\"', 'b\"', '--', '1234567890\",', \"'Content\", '-', '-', 'data;', 'name', '=', '\"files\";', 'filename', '=', '\"\\\\u00f3\"\\'.encode(', '\"utf8\"', '),', 'b\"\",', '\"\\\\u00fa\".encode', '\"utf', '-', '8\"', 'b\"', '--', '1234567890', '--', '\",', 'b\"\",', '),', 'data', '=', 'json_decode', 'response)', '\"\\\\u00e9\",', 'data', '\"header\"', '\"\\\\u00e1\",', 'data', '\"argument\"', '\"\\\\u00f3\",', 'data', '\"filename\"', '\"\\\\u00fa\",', 'data', '\"filebody\"', 'self', '(b\"\\\\r\\\\n\",', 'b\"\\\\n\"', 'response', '=', 'self.raw_fetch', 'b\"GET', '/hello', 'HTTP', '/', '1.0\"', 'b\"\",', '=', 'response,', 'b\"Hello', '@gen_test', 'self', 'stream', '=', 'IOStream', 'socket.socket', 'stream.connect', '\"127.0.0.1\",', 'stream.write(', 'b\"POST', '/hello', 'HTTP', '/', '1.1\",', 'b\"Content', '-', 'Length:', '1024\",', 'b\"Expect:', '100', '-', 'b\"Connection:', 'close\",', 'b\"\\\\r\\\\n\",', 'data', '=', 'stream.read_until', 'b\"\\\\r\\\\n\\\\r\\\\n\")', 'b\"HTTP', '/', '1.1', '100', '\"', 'data)', 'stream.write', 'b\"a\"', '*', '1024)', '=', 'stream.read_until', 'b\"\\\\r\\\\n\")', 'b\"HTTP', '/', '1.1', '200\"', 'header_data', '=', 'stream.read_until', 'b\"\\\\r\\\\n\\\\r\\\\n\")', 'headers', '=', 'HTTPHeaders.parse', 'native_str', 'header_data.decode', 'body', '=', 'stream.read_bytes', 'headers', '\"Content', '-', 'Length\"', 'body,', 'b\"Got', '1024', 'bytes', 'POST\")', 'stream.close', 'get', 'self', 'self.write', 'recursive_unicode', 'self.request.arguments', 'post', 'self', 'self.write', 'recursive_unicode', 'self.request.arguments', 'prepare', 'self', '=', '{}', 'fields', '=', '(\"method\",', 'str', '(\"uri\",', 'str', '(\"version\",', 'str', '(\"remote_ip\",', 'str', '(\"protocol\",', 'str', '(\"host\",', 'str', '(\"path\",', 'str', '(\"query\",', 'str', 'field,', 'expected_type', 'fields:', 'self.check_type', 'field,', 'getattr', 'self.request,', 'field', 'expected_type)', 'self.check_type', '\"header_key\",', 'self.request.headers.keys', '0', 'str)', 'self.check_type', '\"header_value\",', 'self.request.headers.values', '0', 'str)', 'self.check_type', '\"cookie_key\",', 'self.request.cookies.keys', '0', 'str)', 'self.check_type(', '\"cookie_value\",', 'self.request.cookies.values', '0', '.value,', 'str', 'self.check_type', '\"arg_key\",', 'self.request.arguments.keys', '0', 'str)', 'self.check_type', '\"arg_value\",', 'self.request.arguments.values', '0', '0', 'bytes)', 'post', 'self', 'self.check_type', '\"body\",', 'self.request.body,', 'bytes)', 'self.write', 'get', 'self', 'self.write', 'check_type', 'self,', 'name,', 'obj,', 'expected_type', 'actual_type', '=', 'type', 'obj)', 'expected_type', '!=', 'actual_type:', 'name]', '=', '\"expected', '%s,', 'got', '%s\"', '%', '(expected_type,', 'actual_type)', 'post', 'self,', '*path_args', 'self.write', 'dict', 'echo', '=', 'self.get_argument', '\"data\"', 'decode_argument', 'self,', 'value,', 'name', '=', 'value.decode', '\"gbk\")', 'Exception:', '400,', 'gbk', 'bytes:', '%r\"', '%', 'value)', 'HTTPServerTest', 'get_app', 'self', 'Application(', '(\"', '/', 'echo\",', '(\"', '/', 'typecheck\",', '(\"', '/', '/', '(\"', '/', 'post_utf8\",', '(\"', '/', 'post_gbk\",', 'self', 'response', '=', 'self.fetch', '\"', '/', 'echo?foo', '=', '%', 'C3', '%', 'A9\")', 'data', '=', 'json_decode', 'response.body)', 'data,', '{\"foo\":', '[\"\\\\u00e9\"', 'self', 'response', '=', 'self.fetch', '\"', '/', 'echo?foo', '=', '&', 'foo', '=', '\")', 'data', '=', 'json_decode', 'response.body)', 'data,', '{\"foo\":', '[\"\",', '\"\"', 'test_empty_post_parameters', 'self', 'response', '=', 'self.fetch', '\"', '/', 'echo\",', 'method', '=', '\"POST\",', 'body', '=', '\"foo', '=', '&', 'bar', '=', '\")', 'data', '=', 'json_decode', 'response.body)', 'data,', '{\"foo\":', '[\"\"', '\"bar\":', '[\"\"', 'test_types', 'self', 'headers', '=', '{\"Cookie\":', '\"foo', '=', 'bar\"}', 'response', '=', 'self.fetch', '\"', '/', 'typecheck?foo', '=', 'bar\",', 'headers', '=', 'headers)', 'data', '=', 'json_decode', 'response.body)', 'data,', 'response', '=', 'self.fetch(', '\"', '/', 'typecheck\",', 'method', '=', '\"POST\",', 'body', '=', '\"foo', '=', 'bar\",', 'headers', '=', 'headers', 'data', '=', 'json_decode', 'response.body)', 'data,', 'self', 'response', '=', 'self.fetch', '\"', '/', '/', '200,', 'response.code)', 'json_decode', 'response.body', 'self', 'headers', '=', '{\"Content', '-', 'Type\":', '\"application', '/', 'x', '-', 'www', '-', '-', 'urlencoded\"}', 'uni_text', '=', '\\\\u5f20\\\\u4e09\"', 'enc', '(\"utf8\",', '\"gbk\"', 'quote', 'self.subTest', 'enc', '=', 'enc,', 'quote', '=', 'quote', '=', 'uni_text.encode', 'enc)', 'quote:', '=', 'urllib.parse.quote', '.encode', 'response', '=', 'self.fetch(', '\"', '/', 'post_\"', '+', 'enc,', 'method', '=', '\"POST\",', 'headers', '=', 'headers,', 'body', '=', 'b\"data', '=', '\"', '+', 'json_decode', 'response.body', '{\"echo\":', 'uni_text', 'HTTPServerRawTest', 'get_app', 'self', 'Application', '\"', '/', 'echo\",', 'setUp', 'self', 'super', '.setUp', 'self.stream', '=', 'IOStream', 'socket.socket', 'self.io_loop.run_sync(', 'self.stream.connect', '\"127.0.0.1\",', 'tearDown', 'self', 'self.stream.close', 'super', '.tearDown', 'test_empty_request', 'self', 'self.stream.close', 'self.io_loop.add_timeout', 'seconds', '=', '0.001', 'self.stop)', 'self.wait', 'self', 'ExpectLog', 'gen_log,', '\".', '*', 'HTTP', 'request', 'level', '=', 'self.stream.write', 'headers,', 'response', '=', 'self.io_loop.run_sync(', 'read_stream_body', 'self.stream)', '\"HTTP', '/', '1.1\",', '400,', '\"Bad', 'Request\",', 'self', 'ExpectLog', 'gen_log,', '\".', '*', 'HTTP', 'request', 'level', '=', 'self.stream.write', 'self.io_loop.add_timeout', 'seconds', '=', '0.05', 'self.stop)', 'self.wait', 'self', 'ExpectLog(', 'gen_log,', '\".', '*', 'HTTP', 'message.', '*', 'no', 'colon', 'header', 'level', '=', '):', 'self.stream.write', 'b\"GET', '/', 'HTTP', '/', 'self.io_loop.add_timeout', 'seconds', '=', '0.05', 'self.stop)', 'self.wait', 'test_chunked_request_body', 'self', 'self.stream.write(', 'b.replace(', 'b\"\\\\n\",', 'b\"\\\\r\\\\n\"', 'headers,', 'response', '=', 'self.io_loop.run_sync(', 'read_stream_body', 'self.stream)', 'json_decode', 'response', '{\"foo\":', '[\"bar\"', 'self', 'self.stream.write(', 'b.replace(', 'b\"\\\\n\",', 'b\"\\\\r\\\\n\"', 'headers,', 'response', '=', 'self.io_loop.run_sync(', 'read_stream_body', 'self.stream)', 'json_decode', 'response', '{\"foo\":', '[\"bar\"', 'self', 'self.stream.write(', 'b.replace(', 'b\"\\\\n\",', 'b\"\\\\r\\\\n\"', 'ExpectLog', 'gen_log,', '\".', '*', 'chunk', 'size\",', 'level', '=', 'headers,', 'response', '=', 'self.io_loop.run_sync(', 'read_stream_body', 'self.stream)', '400,', '@gen_test', 'self', '=', '(\"alphabetic\",', '\"foo\"', 'plus\",', '\"', '+', '10\"', '\"1_0\"', 'name,', 'value', 'self.subTest', 'name', '=', 'name', 'IOStream', 'socket.socket', 'stream:', 'ExpectLog(', 'gen_log,', '\".', '*', 'Only', 'Content', '-', 'Length', 'allowed\",', 'level', '=', '):', 'stream.connect', '\"127.0.0.1\",', 'stream.write(', 'utf8(', 'textwrap.dedent(', 'f', ').replace', '\"\\\\n\",', '\"\\\\r\\\\n\")', 'stream.read_until_close', 'XHeaderTest', 'get', 'self', 'self.set_header', '\"request', '-', 'version\",', 'self.request.version)', 'self.write(', 'dict(', 'remote_ip', '=', 'self.request.remote_ip,', 'remote_protocol', '=', 'self.request.protocol,', 'get_httpserver_options', 'self', 'dict', 'xheaders', '=', 'trusted_downstream', '=', '\"5.5.5.5\"', 'test_ip_headers', 'self', 'self.fetch_json', '\"', '/', '\"', '\"remote_ip\"', '\"127.0.0.1\")', 'valid_ipv4', '=', '{\"X', '-', 'Real', '-', 'IP\":', '\"4.4.4.4\"}', 'self.fetch_json', '\"', '/', '\",', 'headers', '=', 'valid_ipv4', '\"remote_ip\"', '\"4.4.4.4\"', '=', '{\"X', '-', '-', '\"127.0.0.1,', '4.4.4.4\"}', 'self.fetch_json', '\"', '/', '\",', 'headers', '=', '\"remote_ip\"', '\"4.4.4.4\"', 'valid_ipv6', '=', '{\"X', '-', 'Real', '-', 'IP\":', '\"2620', '0', '1cfe', 'face', 'b00c', '3\"}', 'self.fetch_json', '\"', '/', '\",', 'headers', '=', 'valid_ipv6', '\"remote_ip\"', '\"2620', '0', '1cfe', 'face', 'b00c', '3\",', '=', '{\"X', '-', '-', '\"', '1,', '2620', '0', '1cfe', 'face', 'b00c', '3\"}', 'self.fetch_json', '\"', '/', '\",', 'headers', '=', '\"remote_ip\"', '\"2620', '0', '1cfe', 'face', 'b00c', '3\",', '=', '{\"X', '-', 'Real', '-', 'IP\":', '\"4.4.4.4', '<', 'script', '>', '\"}', 'self.fetch_json', '\"', '/', '\",', 'headers', '=', '\"remote_ip\"', '\"127.0.0.1\"', '=', '{\"X', '-', '-', '\"4.4.4.4,', '5.5.5.5', '<', 'script', '>', '\"}', 'self.fetch_json', '\"', '/', '\",', 'headers', '=', '\"remote_ip\"', '\"127.0.0.1\"', '=', '{\"X', '-', 'Real', '-', 'IP\":', '\"www.google.com\"}', 'self.fetch_json', '\"', '/', '\",', 'headers', '=', '\"remote_ip\"', '\"127.0.0.1\"', 'test_trusted_downstream', 'self', '=', '{\"X', '-', '-', '\"127.0.0.1,', '4.4.4.4,', '5.5.5.5\"}', 'resp', '=', 'self.fetch', '\"', '/', '\",', 'headers', '=', 'resp.headers', '\"request', '-', 'version\"', '\"HTTP', '/', '2\"', 'self.skipTest', '\"requires', 'HTTP', '/', '1.x\")', 'result', '=', 'json_decode', 'resp.body)', 'result', '\"remote_ip\"', '\"4.4.4.4\")', 'test_scheme_headers', 'self', 'self.fetch_json', '\"', '/', '\"', '\"remote_protocol\"', '\"http\")', 'https_scheme', '=', '{\"X', '-', 'Scheme\":', '\"https\"}', 'self.fetch_json', '\"', '/', '\",', 'headers', '=', 'https_scheme', '\"remote_protocol\"', '\"https\"', '=', '{\"X', '-', '-', 'Proto\":', '\"https\"}', 'self.fetch_json', '\"', '/', '\",', 'headers', '=', '\"remote_protocol\"', '\"https\"', '=', '{\"X', '-', '-', 'Proto\":', '\"https', 'http\"}', 'self.fetch_json', '\"', '/', '\",', 'headers', '=', '\"remote_protocol\"', '\"http\",', '=', '{\"X', '-', '-', 'Proto\":', '\"http', 'https\"}', 'self.fetch_json', '\"', '/', '\",', 'headers', '=', '\"remote_protocol\"', '\"https\",', '=', '{\"X', '-', '-', 'Proto\":', '\"unknown\"}', 'self.fetch_json', '\"', '/', '\",', 'headers', '=', '\"remote_protocol\"', '\"http\"', 'SSLXHeaderTest', 'get_app', 'self', 'Application', '\"', '/', '\",', 'get_httpserver_options', 'self', 'output', '=', 'super', '.get_httpserver_options', 'output', '\"xheaders\"]', '=', 'output', 'self', 'self.fetch_json', '\"', '/', '\"', '\"remote_protocol\"', '\"https\")', 'http_scheme', '=', '{\"X', '-', 'Scheme\":', '\"http\"}', 'self.fetch_json', '\"', '/', '\",', 'headers', '=', 'http_scheme', '\"remote_protocol\"', '\"http\"', 'bad_scheme', '=', '{\"X', '-', 'Scheme\":', '\"unknown\"}', 'self.fetch_json', '\"', '/', '\",', 'headers', '=', 'bad_scheme', '\"remote_protocol\"', '\"https\"', 'ManualProtocolTest', 'get', 'self', 'self.write', 'dict', 'protocol', '=', 'self.request.protocol', 'get_httpserver_options', 'self', 'dict', 'protocol', '=', '\"https\")', 'test_manual_protocol', 'self', 'self.fetch_json', '\"', '/', '\"', '\"protocol\"', '\"https\")', '@unittest.skipIf(', 'socket,', '\"AF_UNIX\")', '==', '\"unix', 'sockets', 'on', 'UnixSocketTest', 'setUp', 'self', 'super', '.setUp', 'self.tmpdir', '=', 'tempfile.mkdtemp', 'self.sockfile', '=', 'self.tmpdir,', '\"test.sock\")', 'sock', '=', 'self.sockfile)', 'app', '=', 'Application', '\"', '/', 'hello\",', 'self.server', '=', 'HTTPServer', 'app)', 'self.server.add_socket', 'sock)', 'self.stream', '=', 'IOStream', 'socket.socket', 'socket.AF_UNIX', 'self.io_loop.run_sync', 'self.stream.connect', 'self.sockfile', 'tearDown', 'self', 'self.stream.close', 'self.io_loop.run_sync', 'self.server.close_all_connections)', 'self.server.stop', 'shutil.rmtree', 'self.tmpdir)', 'super', '.tearDown', '@gen_test', 'test_unix_socket', 'self', 'self.stream.write', 'b\"GET', '/hello', 'HTTP', '/', '1.0\\\\r\\\\n\\\\r\\\\n\")', 'response', '=', 'self.stream.read_until', 'b\"\\\\r\\\\n\")', 'response,', 'b\"HTTP', '/', '1.1', '200', 'OK\\\\r\\\\n\")', 'header_data', '=', 'self.stream.read_until', 'b\"\\\\r\\\\n\\\\r\\\\n\")', 'headers', '=', 'HTTPHeaders.parse', 'header_data.decode', 'body', '=', 'self.stream.read_bytes', 'headers', '\"Content', '-', 'Length\"', 'body,', 'b\"Hello', '@gen_test', 'test_unix_socket_bad_request', 'self', 'ExpectLog', 'gen_log,', 'HTTP', 'message', 'level', '=', 'self.stream.write', 'b\"garbage\\\\r\\\\n\\\\r\\\\n\")', 'response', '=', 'self.stream.read_until_close', 'response,', 'b\"HTTP', '/', '1.1', '400', 'Bad', 'Request\\\\r\\\\n\\\\r\\\\n\")', 'KeepAliveTest', 'get_app', 'self', 'get', 'self', '\"Hello', 'post', 'self', '\"Hello', 'get', 'self', 'self.write', 'chr', 'i', '%', '256)', '*', '1024', 'i', 'range', '512', 'head', 'self', 'self.write', '\"Hello', 'self.flush', 'self,', 'cleanup_event', 'self.cleanup_event', '=', 'cleanup_event', 'get', 'self', 'self.flush', 'self.cleanup_event.wait', 'on_connection_close', 'self', '\"closed\")', 'self.cleanup_event', '=', 'Event', 'Application(', '(\"', '/', '\",', '(\"', '/', 'large\",', '(\"', '/', 'chunked\",', '\"', '/', 'dict', 'cleanup_event', '=', 'self.cleanup_event', '),', 'setUp', 'self', 'super', '.setUp', 'self.http_version', '=', 'b\"HTTP', '/', '1.1\"', 'tearDown', 'self', 'self.io_loop.add_timeout', 'seconds', '=', '0.001', 'self.stop)', 'self.wait', 'self,', '\"stream\"', 'self.stream.close', 'super', '.tearDown', 'connect', 'self', 'self.stream', '=', 'IOStream', 'socket.socket', 'self.stream.connect', '\"127.0.0.1\",', 'read_headers', 'self', '=', 'self.stream.read_until', 'b\"\\\\r\\\\n\")', 'b\"HTTP', '/', '1.1', '200\"', 'header_bytes', '=', 'self.stream.read_until', 'b\"\\\\r\\\\n\\\\r\\\\n\")', 'headers', '=', 'HTTPHeaders.parse', 'header_bytes.decode', 'gen.Return', 'headers)', 'read_response', 'self', 'self.headers', '=', 'self.read_headers', 'body', '=', 'self.stream.read_bytes', 'self.headers', '\"Content', '-', 'Length\"', 'b\"Hello', 'body)', 'close', 'self', 'self.stream.close', 'self.stream', '@gen_test', 'test_two_requests', 'self', 'self.connect', 'self.stream.write', 'b\"GET', '/', 'HTTP', '/', '1.1\\\\r\\\\n\\\\r\\\\n\")', 'self.read_response', 'self.stream.write', 'b\"GET', '/', 'HTTP', '/', '1.1\\\\r\\\\n\\\\r\\\\n\")', 'self.read_response', 'self.close', '@gen_test', 'test_request_close', 'self', 'self.connect', 'self.stream.write', 'b\"GET', '/', 'HTTP', '/', '1.1\\\\r\\\\nConnection:', 'close\\\\r\\\\n\\\\r\\\\n\")', 'self.read_response', 'data', '=', 'self.stream.read_until_close', 'data)', 'self.headers', '\"Connection\"', '\"close\")', 'self.close', '@gen_test', 'test_http10', 'self', 'self.http_version', '=', 'b\"HTTP', '/', '1.0\"', 'self.connect', 'self.stream.write', 'b\"GET', '/', 'HTTP', '/', '1.0\\\\r\\\\n\\\\r\\\\n\")', 'self.read_response', 'data', '=', 'self.stream.read_until_close', 'data)', '\"Connection\"', 'self.headers)', 'self.close', '@gen_test', 'test_http10_keepalive', 'self', 'self.http_version', '=', 'b\"HTTP', '/', '1.0\"', 'self.connect', 'self.stream.write', 'b\"GET', '/', 'HTTP', '/', '1.0\\\\r\\\\nConnection:', 'keep', '-', 'alive\\\\r\\\\n\\\\r\\\\n\")', 'self.read_response', 'self.headers', '\"Connection\"', '\"Keep', '-', 'Alive\")', 'self.stream.write', 'b\"GET', '/', 'HTTP', '/', '1.0\\\\r\\\\nConnection:', 'keep', '-', 'alive\\\\r\\\\n\\\\r\\\\n\")', 'self.read_response', 'self.headers', '\"Connection\"', '\"Keep', '-', 'Alive\")', 'self.close', '@gen_test', 'test_http10_keepalive_extra_crlf', 'self', 'self.http_version', '=', 'b\"HTTP', '/', '1.0\"', 'self.connect', 'self.stream.write', 'b\"GET', '/', 'HTTP', '/', '1.0\\\\r\\\\nConnection:', 'keep', '-', 'alive\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n\")', 'self.read_response', 'self.headers', '\"Connection\"', '\"Keep', '-', 'Alive\")', 'self.stream.write', 'b\"GET', '/', 'HTTP', '/', '1.0\\\\r\\\\nConnection:', 'keep', '-', 'alive\\\\r\\\\n\\\\r\\\\n\")', 'self.read_response', 'self.headers', '\"Connection\"', '\"Keep', '-', 'Alive\")', 'self.close', '@gen_test', 'self', 'self.connect', 'self.stream.write', 'b\"GET', '/', 'HTTP', '/', '1.1\\\\r\\\\n\\\\r\\\\nGET', '/', 'HTTP', '/', '1.1\\\\r\\\\n\\\\r\\\\n\")', 'self.read_response', 'self.read_response', 'self.close', '@gen_test', 'self', 'self.connect', 'self.stream.write', 'b\"GET', '/', 'HTTP', '/', '1.1\\\\r\\\\n\\\\r\\\\nGET', '/', 'HTTP', '/', '1.1\\\\r\\\\n\\\\r\\\\n\")', 'self.read_response', 'self.close', '@gen_test', 'self', 'self.connect', 'self.stream.write', 'b\"GET', '/large', 'HTTP', '/', '1.1\\\\r\\\\n\\\\r\\\\n\")', 'self.read_headers', 'self.stream.read_bytes', '1024)', 'self.close', '@gen_test', 'self', 'self.connect', 'self.stream.write', 'b\"GET', 'HTTP', '/', '1.1\\\\r\\\\n\\\\r\\\\n\")', 'self.read_headers', 'self.close', 'self.cleanup_event.set', '@gen_test', 'test_keepalive_chunked', 'self', 'self.http_version', '=', 'b\"HTTP', '/', '1.0\"', 'self.connect', 'self.stream.write(', 'b\"POST', '/', 'HTTP', '/', '1.0\\\\r\\\\n\"', 'b\"Connection:', 'keep', '-', 'alive\\\\r\\\\n\"', 'b\"Transfer', '-', 'chunked\\\\r\\\\n\"', 'b\"\\\\r\\\\n\"', 'b\"0\\\\r\\\\n\"', 'b\"\\\\r\\\\n\"', 'self.read_response', 'self.headers', '\"Connection\"', '\"Keep', '-', 'Alive\")', 'self.stream.write', 'b\"GET', '/', 'HTTP', '/', '1.0\\\\r\\\\nConnection:', 'keep', '-', 'alive\\\\r\\\\n\\\\r\\\\n\")', 'self.read_response', 'self.headers', '\"Connection\"', '\"Keep', '-', 'Alive\")', 'self.close', '@gen_test', 'test_keepalive_chunked_head_no_body', 'self', 'self.connect', 'self.stream.write', 'b\"HEAD', '/chunked', 'HTTP', '/', '1.1\\\\r\\\\n\\\\r\\\\n\")', 'self.read_headers', 'self.stream.write', 'b\"HEAD', '/chunked', 'HTTP', '/', '1.1\\\\r\\\\n\\\\r\\\\n\")', 'self.read_headers', 'self.close', 'get_app', 'self', 'Application', '\"', '/', '\",', 'post_gzip', 'self,', 'body', 'bytesio', '=', 'BytesIO', 'gzip_file', '=', 'gzip.GzipFile', 'mode', '=', '\"w\",', 'fileobj', '=', 'bytesio)', 'gzip_file.write', 'utf8', 'body', 'gzip_file.close', 'compressed_body', '=', 'bytesio.getvalue', 'self.fetch(', '\"', '/', '\",', 'method', '=', '\"POST\",', 'body', '=', 'compressed_body,', 'headers', '=', '\"Content', '-', '\"gzip\"', 'test_uncompressed', 'self', 'response', '=', 'self.fetch', '\"', '/', '\",', 'method', '=', '\"POST\",', 'body', '=', '\"foo', '=', 'bar\")', 'json_decode', 'response.body', '{\"foo\":', '[\"bar\"', 'GzipTest', 'get_httpserver_options', 'self', 'dict', 'decompress_request', '=', 'test_gzip', 'self', 'response', '=', 'self.post_gzip', '\"foo', '=', 'bar\")', 'json_decode', 'response.body', '{\"foo\":', '[\"bar\"', 'self', 'bytesio', '=', 'BytesIO', 'gzip_file', '=', 'gzip.GzipFile', 'mode', '=', '\"w\",', 'fileobj', '=', 'bytesio)', 'gzip_file.write', 'utf8', '\"foo', '=', 'bar\"', 'gzip_file.close', 'compressed_body', '=', 'bytesio.getvalue', 'response', '=', 'self.fetch(', '\"', '/', '\",', 'method', '=', '\"POST\",', 'body', '=', 'compressed_body,', 'headers', '=', '\"Content', '-', '\"GZIP\"', 'json_decode', 'response.body', '{\"foo\":', '[\"bar\"', 'self', 'ExpectLog', 'gen_log,', 'Content', '-', 'response', '=', 'self.post_gzip', '\"foo', '=', 'bar\")', 'json_decode', 'response.body', 'BODY', '=', 'b\"01234567890123456789012345678901234567890123456789\"', 'CHUNK_SIZE', '=', '16', 'get_http_client', 'self', 'SimpleAsyncHTTPClient', 'get_httpserver_options', 'self', 'dict', 'chunk_size', '=', 'self.CHUNK_SIZE,', 'decompress_request', '=', 'MessageDelegate', 'HTTPMessageDelegate', 'self,', 'connection', 'self.connection', '=', 'connection', 'headers_received', 'self,', 'headers', 'self.chunk_lengths', '=', '[]', 'data_received', 'self,', 'chunk', 'self.chunk_lengths.append', 'len', 'chunk', 'self', 'response_body', '=', 'utf8', 'json_encode', 'self.chunk_lengths', 'self.connection.write_headers(', '\"HTTP', '/', '1.1\",', '200,', '\"OK\"', 'HTTPHeaders', '\"Content', '-', 'Length\":', 'str', 'len', 'response_body', 'self.connection.write', 'response_body)', 'get_app', 'self', 'App', 'HTTPServerConnectionDelegate', 'start_request', 'self,', 'server_conn,', 'request_conn', 'request_conn)', 'App', 'fetch_chunk_sizes', 'self,', '*', '*', 'kwargs', 'response', '=', 'self.fetch', '\"', '/', '\",', 'method', '=', '\"POST\",', '*', '*', 'kwargs)', 'response.rethrow', 'chunks', '=', 'json_decode', 'response.body)', 'len', 'self.BODY', 'sum', 'chunks', 'chunk_size', 'chunks:', 'chunk_size,', 'self.CHUNK_SIZE,', '\"oversized', 'chunk:', '\"', '+', 'str', 'chunks)', 'chunk_size,', '0,', '\"empty', 'chunk:', '\"', '+', 'str', 'chunks', 'chunks', 'compress', 'self,', 'body', 'bytesio', '=', 'BytesIO', 'gzfile', '=', 'gzip.GzipFile', 'mode', '=', '\"w\",', 'fileobj', '=', 'bytesio)', 'gzfile.write', 'body)', 'gzfile.close', 'compressed', '=', 'bytesio.getvalue', 'len', 'compressed)', '>=', 'len', 'body', 'Exception', '\"body', 'did', 'when', 'compressed\")', 'compressed', 'test_regular_body', 'self', 'chunks', '=', 'self.fetch_chunk_sizes', 'body', '=', 'self.BODY)', '16,', '16,', '16,', '2', 'chunks)', 'test_compressed_body', 'self', 'self.fetch_chunk_sizes(', 'body', '=', 'self.compress', 'self.BODY', 'headers', '=', '\"Content', '-', '\"gzip\"}', 'test_chunked_body', 'self', 'body_producer', 'write', 'write', 'self.BODY', '20', 'write', 'self.BODY', '20', 'chunks', '=', 'self.fetch_chunk_sizes', 'body_producer', '=', 'body_producer)', '16,', '4,', '16,', '14', 'chunks)', 'test_chunked_compressed', 'self', 'compressed', '=', 'self.compress', 'self.BODY)', 'len', 'compressed', '20)', 'body_producer', 'write', 'write', 'compressed', '20', 'write', 'compressed', '20', 'self.fetch_chunk_sizes(', 'body_producer', '=', 'body_producer,', 'headers', '=', '\"Content', '-', '\"gzip\"}', 'InvalidOutputContentLengthTest', 'MessageDelegate', 'HTTPMessageDelegate', 'self,', 'connection', 'self.connection', '=', 'connection', 'headers_received', 'self,', 'headers', 'content_lengths', '=', '\"10\",', '\"alphabetic\":', '\"foo\",', 'plus\":', '\"', '+', '10\",', '\"1_0\",', 'self.connection.write_headers(', '\"HTTP', '/', '1.1\",', '200,', '\"OK\"', 'HTTPHeaders', '\"Content', '-', 'Length\":', 'content_lengths', 'headers', '\"x', '-', 'test\"', 'self.connection.write', 'b\"1234567890\")', 'get_app', 'self', 'App', 'HTTPServerConnectionDelegate', 'start_request', 'self,', 'server_conn,', 'request_conn', 'InvalidOutputContentLengthTest.MessageDelegate', 'request_conn)', 'App', 'self', 'self.subTest', 'response', '=', 'self.fetch', '\"', '/', '\",', 'method', '=', '\"GET\",', 'headers', '=', '\"x', '-', 'test\":', 'response.rethrow', 'response.body,', 'b\"1234567890\")', 'test', '[\"alphabetic\",', 'plus\",', 'self.subTest', 'test', 'ExpectLog', 'app_log,', '\"Uncaught', 'self.fetch', '\"', '/', '\",', 'method', '=', '\"GET\",', 'headers', '=', '\"x', '-', 'test\":', 'test', 'MaxHeaderSizeTest', 'get_app', 'self', 'Application', '\"', '/', '\",', 'get_httpserver_options', 'self', 'dict', 'max_header_size', '=', '1024)', 'test_small_headers', 'self', 'response', '=', 'self.fetch', '\"', '/', '\",', 'headers', '=', '\"X', '-', 'Filler\":', '\"a\"', '*', '100', 'response.rethrow', 'response.body,', 'b\"Hello', 'test_large_headers', 'self', 'ExpectLog', 'gen_log,', 'read\",', 'required', '=', 'self.fetch', '\"', '/', '\",', 'headers', '=', '\"X', '-', 'Filler\":', '\"a\"', '*', '1000', '=', 'self.fail', '\"did', 'expected', 'e:', 'e.response', 'e.response.code,', '(431,', '599', 'IdleTimeoutTest', 'get_app', 'self', 'Application', '\"', '/', '\",', 'get_httpserver_options', 'self', 'dict', 'idle_connection_timeout', '=', '0.1)', 'setUp', 'self', 'super', '.setUp', 'self.streams', '=', '[]', 'tearDown', 'self', 'super', '.tearDown', 'stream', 'self.streams:', 'stream.close', 'connect', 'self', 'stream', '=', 'IOStream', 'socket.socket', 'stream.connect', '\"127.0.0.1\",', 'self.streams.append', 'stream)', 'gen.Return', 'stream)', '@gen_test', 'test_unused_connection', 'self', 'stream', '=', 'self.connect', 'event', '=', 'Event', 'stream.set_close_callback', 'event.set)', 'event.wait', '@gen_test', 'test_idle_after_use', 'self', 'stream', '=', 'self.connect', 'event', '=', 'Event', 'stream.set_close_callback', 'event.set)', 'i', 'range', '2', 'stream.write', 'b\"GET', '/', 'HTTP', '/', '1.1\\\\r\\\\n\\\\r\\\\n\")', 'stream.read_until', 'b\"\\\\r\\\\n\\\\r\\\\n\")', 'data', '=', 'stream.read_bytes', '11)', 'data,', 'b\"Hello', 'event.wait', 'BodyLimitsTest', 'get_app', 'self', 'put', 'self', 'self.write', 'str', 'len', 'self.request.body', '@stream_request_body', 'self', 'self.bytes_read', '=', '0', 'prepare', 'self', 'conn', '=', 'HTTP1Connection,', 'self.request.connection)', '\"expected_size\"', 'self.request.arguments:', 'conn.set_max_body_size', 'self.get_argument', '\"expected_size\"', '\"body_timeout\"', 'self.request.arguments:', 'conn.set_body_timeout', 'float', 'self.get_argument', '\"body_timeout\"', 'data_received', 'self,', 'data', 'self.bytes_read', '+=', 'len', 'data)', 'put', 'self', 'self.write', 'str', 'self.bytes_read', 'Application(', '\"', '/', 'buffered\",', '(\"', '/', 'get_httpserver_options', 'self', 'dict', 'body_timeout', '=', '3600,', 'max_body_size', '=', '4096)', 'get_http_client', 'self', 'SimpleAsyncHTTPClient', 'test_small_body', 'self', 'response', '=', 'self.fetch', '\"', '/', 'buffered\",', 'method', '=', '\"PUT\",', 'body', '=', 'b\"a\"', '*', '4096)', 'response.body,', 'b\"4096\")', 'response', '=', 'self.fetch', '\"', '/', 'method', '=', '\"PUT\",', 'body', '=', 'b\"a\"', '*', '4096)', 'response.body,', 'b\"4096\")', 'test_large_body_buffered', 'self', 'ExpectLog', 'gen_log,', '\".', '*', 'Content', '-', 'Length', 'too', 'long\",', 'level', '=', 'response', '=', 'self.fetch', '\"', '/', 'buffered\",', 'method', '=', '\"PUT\",', 'body', '=', 'b\"a\"', '*', '10240)', 'response.code,', '400)', '@unittest.skipIf', 'os.name', '==', '\"nt\",', '\"flaky', 'on', 'test_large_body_buffered_chunked', 'self', 'ExpectLog', 'gen_log,', '\".', '*', 'chunked', 'body', 'too', 'large\",', 'level', '=', 'response', '=', 'self.fetch(', '\"', '/', 'buffered\",', 'method', '=', '\"PUT\",', 'body_producer', '=', 'write:', 'write', 'b\"a\"', '*', '10240', 'response.code,', '400)', 'self', 'ExpectLog', 'gen_log,', '\".', '*', 'Content', '-', 'Length', 'too', 'long\",', 'level', '=', 'response', '=', 'self.fetch', '\"', '/', 'method', '=', '\"PUT\",', 'body', '=', 'b\"a\"', '*', '10240)', 'response.code,', '400)', '@unittest.skipIf', 'os.name', '==', '\"nt\",', '\"flaky', 'on', 'self', 'ExpectLog', 'gen_log,', '\".', '*', 'chunked', 'body', 'too', 'large\",', 'level', '=', 'response', '=', 'self.fetch(', '\"', '/', 'method', '=', '\"PUT\",', 'body_producer', '=', 'write:', 'write', 'b\"a\"', '*', '10240', 'response.code,', '400)', 'self', 'response', '=', 'self.fetch(', '\"', '/', '=', '10240\",', 'method', '=', '\"PUT\",', 'body', '=', 'b\"a\"', '*', '10240', 'response.body,', 'b\"10240\")', 'self', 'response', '=', 'self.fetch(', '\"', '/', '=', '10240\",', 'method', '=', '\"PUT\",', 'body_producer', '=', 'write:', 'write', 'b\"a\"', '*', '10240', 'response.body,', 'b\"10240\")', '@gen_test', 'test_timeout', 'self', 'stream', '=', 'IOStream', 'socket.socket', 'stream.connect', '\"127.0.0.1\",', 'stream.write(', 'b\"PUT', '=', '0.1', 'HTTP', '/', '1.0\\\\r\\\\n\"', 'b\"Content', '-', 'Length:', '42\\\\r\\\\n\\\\r\\\\n\"', 'ExpectLog', 'gen_log,', '\"Timeout', 'body\",', 'level', '=', 'response', '=', 'stream.read_until_close', 'response,', 'b\"\")', 'stream.close', '@gen_test', 'test_body_size_override_reset', 'self', 'stream', '=', 'IOStream', 'socket.socket', 'stream.connect', '\"127.0.0.1\",', 'stream.write(', 'b\"PUT', '=', '10240', 'HTTP', '/', '1.1\\\\r\\\\n\"', 'b\"Content', '-', 'Length:', '10240\\\\r\\\\n\\\\r\\\\n\"', 'stream.write', 'b\"a\"', '*', '10240)', 'headers,', 'response', '=', 'read_stream_body', 'stream)', 'response,', 'b\"10240\")', 'stream.write(', 'b\"PUT', 'HTTP', '/', '1.1\\\\r\\\\n\"', 'b\"Content', '-', 'Length:', '10240\\\\r\\\\n\\\\r\\\\n\"', 'ExpectLog', 'gen_log,', '\".', '*', 'Content', '-', 'Length', 'too', 'long\",', 'level', '=', 'data', '=', 'stream.read_until_close', 'data,', 'b\"HTTP', '/', '1.1', '400', 'Bad', 'Request\\\\r\\\\n\\\\r\\\\n\")', 'stream.close', 'LegacyInterfaceTest', 'get_app', 'self', 'request', 'self.http1', '=', '\"HTTP', '/', '1.\")', 'self.http1:', 'request.connection.write_headers(', '\"\",', '200,', '\"OK\"', 'HTTPHeaders', 'message', '=', 'b\"Hello', 'request.connection.write(', 'utf8', '\"HTTP', '/', '1.1', '200', 'OK\\\\r\\\\n\"', '\"Content', '-', 'Length:', '%d\\\\r\\\\n\\\\r\\\\n\"', '%', 'len', 'message', 'request.connection.write', 'message)', 'self', 'response', '=', 'self.fetch', '\"', '/', '\")', 'self.http1:', 'self.skipTest', '\"requires', 'HTTP', '/', '1.x\")', 'response.body,', 'b\"Hello']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/tornado/test/httputil_test.py",
        "vector": "['url_concat,', 'HTTPHeaders,', 'HTTPServerRequest,', 'parse_cookie,', 'qs_to_qsl,', 'HTTPFile,', 'utf8,', 'native_str', 'gen_log', 'ExpectLog', 'copy', 'datetime', 'pickle', 'time', 'urllib.parse', 'unittest', 'Tuple,', 'Dict,', '->', 'Tuple', 'Dict', 'str,', 'bytes', 'Dict', 'str,', 'HTTPFile', '{}', 'TestUrlConcat', 'test_url_concat_no_query_params', 'self', 'url', '=', 'url_concat', '\"https', '/', '/', 'localhost', '/', 'path\",', '\"y\",', '\"y\"', '(\"z\",', '\"z\"', 'url,', '\"https', '/', '/', 'localhost', '/', 'path?y', '=', 'y', '&', 'z', '=', 'z\")', 'test_url_concat_encode_args', 'self', 'url', '=', 'url_concat', '\"https', '/', '/', 'localhost', '/', 'path\",', '\"y\",', '\"', '/', 'y\"', '(\"z\",', '\"z\"', 'url,', '\"https', '/', '/', 'localhost', '/', 'path?y', '=', '%', '2Fy', '&', 'z', '=', 'z\")', 'self', 'url', '=', 'url_concat', '\"https', '/', '/', 'localhost', '/', 'path?\",', '\"y\",', '\"y\"', '(\"z\",', '\"z\"', 'url,', '\"https', '/', '/', 'localhost', '/', 'path?y', '=', 'y', '&', 'z', '=', 'z\")', 'self', 'url', '=', 'url_concat', '\"https', '/', '/', 'localhost', '/', 'path?x\",', '\"y\",', '\"y\"', '(\"z\",', '\"z\"', 'url,', '\"https', '/', '/', 'localhost', '/', 'path?x', '=', '&', 'y', '=', 'y', '&', 'z', '=', 'z\")', 'self', 'url', '=', 'url_concat', '\"https', '/', '/', 'localhost', '/', 'path?x', '&', '\",', '\"y\",', '\"y\"', '(\"z\",', '\"z\"', 'url,', '\"https', '/', '/', 'localhost', '/', 'path?x', '=', '&', 'y', '=', 'y', '&', 'z', '=', 'z\")', 'test_url_concat_mult_params', 'self', 'url', '=', 'url_concat', '\"https', '/', '/', 'localhost', '/', 'path?a', '=', '1', '&', 'b', '=', '2\",', '\"y\",', '\"y\"', '(\"z\",', '\"z\"', 'url,', '\"https', '/', '/', 'localhost', '/', 'path?a', '=', '1', '&', 'b', '=', '2', '&', 'y', '=', 'y', '&', 'z', '=', 'z\")', 'test_url_concat_no_params', 'self', 'url', '=', 'url_concat', '\"https', '/', '/', 'localhost', '/', 'path?r', '=', '1', '&', 't', '=', '2\",', 'url,', '\"https', '/', '/', 'localhost', '/', 'path?r', '=', '1', '&', 't', '=', '2\")', 'test_url_concat_none_params', 'self', 'url', '=', 'url_concat', '\"https', '/', '/', 'localhost', '/', 'path?r', '=', '1', '&', 't', '=', '2\",', 'url,', '\"https', '/', '/', 'localhost', '/', 'path?r', '=', '1', '&', 't', '=', '2\")', 'self', 'url', '=', 'url_concat', '\"https', '/', '/', 'localhost', '/', 'path', 'url,', '\"https', '/', '/', 'localhost', '/', 'path?y', '=', 'y', 'test_url_concat_multi_same_params', 'self', 'url', '=', 'url_concat', '\"https', '/', '/', 'localhost', '/', 'path\",', '\"y\",', '\"y1\"', '(\"y\",', '\"y2\"', 'url,', '\"https', '/', '/', 'localhost', '/', 'path?y', '=', 'y1', '&', 'y', '=', 'y2\")', 'test_url_concat_multi_same_query_params', 'self', 'url', '=', 'url_concat', '\"https', '/', '/', 'localhost', '/', 'path?r', '=', '1', '&', 'r', '=', '2\",', '\"y\",', '\"y\"', 'url,', '\"https', '/', '/', 'localhost', '/', 'path?r', '=', '1', '&', 'r', '=', '2', '&', 'y', '=', 'y\")', 'test_url_concat_dict_params', 'self', 'url', '=', 'url_concat', '\"https', '/', '/', 'localhost', '/', 'path\",', 'dict', 'y', '=', '\"y\"', 'url,', '\"https', '/', '/', 'localhost', '/', 'path?y', '=', 'y\")', 'QsParseTest', 'self', '=', '\"a', '=', '1', '&', 'b', '=', '2', '&', 'a', '=', '3\"', 'qs', '=', 'urllib.parse.parse_qs', 'qsl', '=', 'qs_to_qsl', 'qs', '\"a\",', '\"1\"', 'qsl)', '\"a\",', '\"3\"', 'qsl)', '\"b\",', '\"2\"', 'qsl)', 'test_file_upload', 'self', 'data', '=', 'b.replace(', 'b\"\\\\n\",', 'b\"\\\\r\\\\n\"', 'args,', 'files', '=', 'b\"1234\",', 'data,', 'args,', 'files)', 'file', '=', 'files', '\"files\"', '0]', 'file', '\"filename\"', '\"ab.txt\")', 'file', '\"body\"', 'b\"Foo\")', 'test_unquoted_names', 'self', 'data', '=', 'b.replace(', 'b\"\\\\n\",', 'b\"\\\\r\\\\n\"', 'args,', 'files', '=', 'b\"1234\",', 'data,', 'args,', 'files)', 'file', '=', 'files', '\"files\"', '0]', 'file', '\"filename\"', '\"ab.txt\")', 'file', '\"body\"', 'b\"Foo\")', 'test_special_filenames', 'self', 'filenames', '=', '\"a', 'b.txt\",', '\\'a\"b.txt\\',', '\\'a\"', \"b.txt',\", \"'a\", '\"b.txt\\',', '\\'a\"', '\"', \".txt',\", '\\'a\\\\\\\\\"b.txt\\',', '\"a\\\\\\\\b.txt\",', 'filename', 'filenames:', 'filename', '%r\",', 'filename)', 'str_data', '=', '%', 'filename.replace(', '\"\\\\\\\\\",', '\"\\\\\\\\\\\\\\\\\"', ').replace(', '\\'\"\\',', '\\'\\\\\\\\\"\\'', 'data', '=', 'utf8', 'str_data.replace', '\"\\\\n\",', '\"\\\\r\\\\n\"', 'args,', 'files', '=', 'b\"1234\",', 'data,', 'args,', 'files)', 'file', '=', 'files', '\"files\"', '0]', 'file', '\"filename\"', 'filename)', 'file', '\"body\"', 'b\"Foo\")', 'self', 'data', '=', 'b.replace(', 'b\"\\\\n\",', 'b\"\\\\r\\\\n\"', 'args,', 'files', '=', 'b\"1234\",', 'data,', 'args,', 'files)', 'file', '=', 'files', '\"files\"', '0]', 'file', '\"filename\"', '\"\u00e1b.txt\")', 'file', '\"body\"', 'b\"Foo\")', 'self', 'data', '=', 'b.replace(', 'b\"\\\\n\",', 'b\"\\\\r\\\\n\"', 'args,', 'files', '=', 'b\\'\"1234\"\\',', 'data,', 'args,', 'files)', 'file', '=', 'files', '\"files\"', '0]', 'file', '\"filename\"', '\"ab.txt\")', 'file', '\"body\"', 'b\"Foo\")', 'self', 'data', '=', 'b.replace(', 'b\"\\\\n\",', 'b\"\\\\r\\\\n\"', 'args,', 'files', '=', 'ExpectLog', 'gen_log,', '\"multipart', '/', '-', 'data', 'headers\"', 'b\"1234\",', 'data,', 'args,', 'files)', 'files,', 'self', 'data', '=', 'b.replace(', 'b\"\\\\n\",', 'b\"\\\\r\\\\n\"', 'args,', 'files', '=', 'ExpectLog', 'gen_log,', '\"Invalid', 'multipart', '/', '-', 'data\"', 'b\"1234\",', 'data,', 'args,', 'files)', 'files,', 'self', 'data', '=', 'b.replace(', 'b\"\\\\n\",', 'b\"\\\\r\\\\n\"', 'args,', 'files', '=', 'ExpectLog', 'gen_log,', '\"Invalid', 'multipart', '/', '-', 'data\"', 'b\"1234\",', 'data,', 'args,', 'files)', 'files,', 'self', 'data', '=', 'b.replace(', 'b\"\\\\n\",', 'b\"\\\\r\\\\n\"', 'args,', 'files', '=', 'ExpectLog', 'gen_log,', '\"multipart', '/', '-', 'data', 'value', 'name\"', 'b\"1234\",', 'data,', 'args,', 'files)', 'files,', 'self', 'data', '=', 'b.replace(', 'b\"\\\\n\",', 'b\"\\\\r\\\\n\"', 'args,', 'files', '=', 'b\"1234\",', 'data,', 'args,', 'files)', 'file', '=', 'files', '\"files\"', '0]', 'file', '\"filename\"', '\"ab.txt\")', 'file', '\"body\"', 'b\"Foo\")', 'HTTPHeadersTest', 'self', 'data', '=', '.replace(', '\"\\\\n\",', '\"\\\\r\\\\n\"', 'headers', '=', 'HTTPHeaders.parse', 'data)', 'headers', '\"qwer', 'zxcv\")', '[\"qwer', 'zxcv\"', 'headers', '\"Foo\"', '\"bar', 'baz', 'even', '\"foo\"', '[\"bar', 'baz\",', '\"even', 'headers.get_all', '\"Asdf\",', '\"qwer', 'zxcv\"', '(\"Foo\",', '\"bar', 'baz\"', '(\"Foo\",', '\"even', 'self', 'data', '=', '\"', 'Foo:', 'bar\"', 'HTTPHeaders.parse,', 'data)', 'self', '=', '\"\\\\u001b\",', '\"\\\\u001c\",', '\"\\\\u001d\",', '\"\\\\u001e\",', '\"\\\\u0085\",', '\"\\\\u2028\",', '\"\\\\u2029\",', '[\"utf8\",', 'encoded', '=', 'data', '=', 'b\"Cookie:', 'foo', '=', '\"', '+', 'encoded', '+', 'b\"bar\"', 'headers', '=', 'HTTPHeaders.parse', 'native_str', 'data.decode', 'expected', '=', '\"Cookie\",', '\"foo', '=', '\"', '+', 'native_str', 'encoded.decode', '+', '\"bar\",', 'expected,', 'headers.get_all', 'Exception:', '\"failed', '%r', '%s\",', 'test_optional_cr', 'self', 'headers', '=', 'HTTPHeaders.parse', '\"CRLF:', 'crlf\\\\r\\\\nLF:', 'lf\\\\nCR:', 'headers.get_all', '\"Cr\",', '(\"Crlf\",', '\"crlf\"', '(\"Lf\",', '\"lf\"', 'test_copy', 'self', 'all_pairs', '=', '\"A\",', '\"1\"', '(\"A\",', '\"2\"', '(\"B\",', '\"c\"', 'h1', '=', 'HTTPHeaders', 'k,', 'v', 'all_pairs:', 'h1.add', 'k,', 'v)', 'h2', '=', 'h1.copy', 'h3', '=', 'copy.copy', 'h1)', 'h4', '=', 'copy.deepcopy', 'h1)', 'headers', '[h1,', 'h2,', 'h3,', 'h4', 'headers.get_all', 'all_pairs)', 'headers', '[h2,', 'h3,', 'h4', 'headers,', 'h1)', '\"A\"', '\"A\"', 'test_pickle_roundtrip', 'self', 'headers', '=', 'HTTPHeaders', 'headers.add', '\"Set', '-', 'Cookie\",', '\"a', '=', 'b\")', 'headers.add', '\"Set', '-', 'Cookie\",', '\"c', '=', 'd\")', 'headers.add', '\"Content', '-', 'Type\",', '\"text', '/', 'html\")', 'pickled', '=', 'pickle.dumps', 'headers)', 'unpickled', '=', 'pickle.loads', 'pickled)', 'headers.get_all', 'unpickled.get_all', 'headers.items', 'unpickled.items', 'self', 'headers', '=', 'HTTPHeaders', 'headers', '\"foo\"]', '=', '\"bar\"', '\"foo\",', '\"baz\"', '\"bar\")', 'headers', '\"foo\"', '\"bar\")', '\"quux\",', '\"xyzzy\"', '\"xyzzy\")', 'headers', '\"quux\"', '\"xyzzy\")', 'headers.get_all', '\"Foo\",', '\"bar\"', '(\"Quux\",', '\"xyzzy\"', 'self', 'headers', '=', 'HTTPHeaders', 'headers.add', '\"Foo\",', '\"1\")', 'headers.add', '\"Foo\",', '\"2\")', 'headers.add', '\"Foo\",', '\"3\")', 'headers2', '=', 'HTTPHeaders.parse', 'str', 'headers', 'headers,', 'headers2)', 'TIMESTAMP', '=', '1359312200.503611', 'EXPECTED', '=', '\"Sun,', '27', 'Jan', '2013', '18', '43', '20', 'GMT\"', 'check', 'self,', 'value', 'value', 'self.EXPECTED)', 'test_unix_time_float', 'self', 'self.check', 'self.TIMESTAMP)', 'self', 'self.check', 'self.TIMESTAMP', 'test_struct_time', 'self', 'self.check', 'time.gmtime', 'self.TIMESTAMP', 'test_time_tuple', 'self', 'tup', '=', 'tuple', 'time.gmtime', 'self.TIMESTAMP', '9,', 'len', 'tup', 'self.check', 'tup)', 'test_utc_naive_datetime', 'self', 'self.check(', 'self.TIMESTAMP,', 'datetime.timezone.utc', ').replace', '=', 'test_utc_naive_datetime_deprecated', 'self', 'self.check', 'self.TIMESTAMP', 'test_utc_aware_datetime', 'self', 'self.check(', 'self.TIMESTAMP,', 'datetime.timezone.utc)', 'test_other_aware_datetime', 'self', 'self.check(', 'self.TIMESTAMP,', 'datetime.timezone', 'hours', '=', '-', '4', 'HTTPServerRequestTest', 'self', 'HTTPServerRequest', 'uri', '=', '\"', '/', '\")', 'self', 'requets', '=', 'HTTPServerRequest', 'uri', '=', '\"', '/', '\")', 'requets.body,', 'bytes)', 'self', 'request', '=', 'HTTPServerRequest(', 'uri', '=', '\"', '/', '\",', 'headers', '=', 'HTTPHeaders', '\"Canary\":', '[\"Coal', '\"Canary\"', 'repr', 'request', 'METHOD', '=', '\"GET\"', 'PATH', '=', '\"', '/', 'foo\"', 'VERSION', '=', '\"HTTP', '/', '1.1\"', 'self', '=', '\"', 'self.METHOD,', 'self.PATH,', 'self.VERSION', '=', 'self.METHOD)', 'self.PATH)', 'self.VERSION)', 'ParseCookieTest', 'test_python_cookies', 'self', 'parse_cookie', '\"chips', '=', 'ahoy;', 'vienna', '=', '{\"chips\":', '\"ahoy\",', '\"vienna\":', 'parse_cookie', \"'keebler\", '=', '\"E', '=', 'mc2;', 'L', '=', '\\\\\\\\\"Loves\\\\\\\\\";', 'fudge', '=', '\\\\\\\\012', '\"\\'', '{\"keebler\":', '\\'\"E', '=', \"mc2',\", '\"L\":', '\\'\\\\\\\\\"Loves\\\\\\\\\"\\',', '\"fudge\":', '\"\\\\\\\\012\",', '\"\":', '\\'\"\\'', 'parse_cookie', '\"keebler', '=', 'E', '=', 'mc2\"', '{\"keebler\":', '\"E', '=', 'mc2\"', 'parse_cookie', '\"key', 'term', '=', 'value', 'term\"', '{\"key', 'term\":', '\"value', 'term\"}', 'parse_cookie', '\"a', '=', 'b;', 'c', '=', 'd', '=', 'r;', 'f', '=', 'h\"', '{\"a\":', '\"b\",', '\"c\":', '\"', '\",', '\"d\":', '\"r\",', '\"f\":', '\"h\"}', 'self', 'parse_cookie', '\"a', '=', 'b;', '=', 'example.com\"', '{\"a\":', '\"b\",', '\"example.com\"}', 'parse_cookie', '\"a', '=', 'b;', 'h', '=', 'i;', 'a', '=', 'c\"', '{\"a\":', '\"c\",', '\"h\":', '\"i\"', 'self', '\"django_language\",', 'parse_cookie', '\"abc', '=', 'unnamed;', 'django_language', '=', 'en\"', '.keys', 'parse_cookie', \"'a\", '=', 'b;', '\";', 'c', '=', \"d'\", '{\"a\":', '\"b\",', '\"\":', '\\'\"\\',', '\"c\":', '\"d\"', 'parse_cookie', '\"a', 'b', 'c', '=', 'd', 'e', '=', 'f;', 'gh', '=', 'i\"', '{\"a', 'b', 'c\":', '\"d', 'e', '=', 'f\",', '\"gh\":', '\"i\"}', 'parse_cookie', \"'a\", 'b', 'c', '<', '>', '@', '/', '?', '=', 'd', '\"', '=e', 'f', \"g'\", '{\"a', 'b', 'c', '<', '>', '@', '/', '?', '\":', \"'d\", '\"', '=e', 'f', \"g'\", 'parse_cookie', '=', 'Andr\u00e9', 'Bessette\"', 'native_str', '\"Andr\u00e9', 'Bessette\"', 'parse_cookie', '\"', '=', 'b', '=', 'c', '=', '\"', '{\"\":', '\"b\",', '\"c\":', '\"\"}']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/tornado/test/import_test.py",
        "vector": "['subprocess', 'sys', 'unittest', '=', 'b', '=', 'b', 'self', 'proc', '=', 'subprocess.Popen', 'sys.executable', '=', 'subprocess.PIPE)', 'proc.communicate', '0)', 'self', 'proc', '=', 'subprocess.Popen', 'sys.executable', '=', 'subprocess.PIPE)', 'proc.communicate', '0)', 'self']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/tornado/test/ioloop_test.py",
        "vector": "['concurrent.futures', 'concurrent', 'futures', 'collections.abc', 'contextlib', 'datetime', 'functools', 'socket', 'subprocess', 'sys', 'time', 'types', 'unittest', 'mock', 'unittest', 'native_str', 'gen', 'IOLoop,', 'PeriodicCallback', 'app_log', 'ExpectLog,', 'gen_test,', 'skipIfNonUnix,', 'Future', 'TestIOLoop', 'self', 'self.calls', '=', '0', 'loop', '=', 'self.io_loop', 'test', '=', 'self', 'old_add_callback', '=', 'loop.add_callback', 'add_callback', 'self,', 'callback,', '*args,', '*', '*', 'kwargs', 'test.calls', '+=', '1', 'old_add_callback', 'callback,', '*args,', '*', '*', 'kwargs)', 'loop.add_callback', '=', 'types.MethodType', 'add_callback,', 'loop)', 'loop.add_callback', 'loop.add_callback', 'loop.add_timeout', '=', '50', 'loop.stop)', 'loop.start', 'self.calls,', '10)', 'test_add_callback_wakeup', 'self', 'callback', 'self.called', '=', 'self.stop', 'schedule_callback', 'self.called', '=', 'self.io_loop.add_callback', 'callback)', 'self.start_time', '=', 'time.time', 'self.io_loop.add_timeout', 'self.io_loop.time', 'schedule_callback)', 'self.wait', 'time.time', 'self.start_time,', 'places', '=', '2)', 'self.called)', 'test_add_callback_wakeup_other_thread', 'self', 'target', 'time.sleep', '0.01)', 'self.stop_time', '=', 'time.time', 'self.io_loop.add_callback', 'self.stop)', 'thread', '=', 'target', '=', 'target)', 'self.io_loop.add_callback', 'thread.start)', 'self.wait', '=', 'time.time', '-', 'self.stop_time', '0.1)', 'self', 'self.io_loop.add_timeout', 'microseconds', '=', '1', 'self.stop)', 'self.wait', 'test_multiple_add', 'self', 'sock,', '=', 'sock.fileno', 'fd,', 'events:', 'IOLoop.READ', 'Exception,', 'sock.fileno', 'fd,', 'events:', 'IOLoop.READ,', 'sock.fileno', 'sock.close', 'self', 'sock,', '=', 'sock.fileno', 'sock.close', 'self', 'self.stop)', 'self.wait', 'self', 'other_ioloop', '=', 'IOLoop', 'thread', '=', 'target', '=', 'other_ioloop.start)', 'thread.start', 'other_ioloop.stop)', 'other_ioloop.close', 'self', '=', 'target', 'other_ioloop.add_callback', 'other_ioloop.stop)', 'other_ioloop.start', 'other_ioloop.close', 'all_fds', '=', 'other_ioloop', '=', 'IOLoop', 'thread', '=', 'target', '=', 'target)', 'thread.start', 'i', 'range', '1000', 'other_ioloop.add_callback', '@skipIfNonUnix', 'self', 'client,', 'server', '=', 'socket.socketpair', 'fd,', 'events', 'events,', 'IOLoop.READ)', 'self.stop', 'client.fileno', 'IOLoop.READ)', 'self.io_loop.add_timeout(', 'self.io_loop.time', '+', '0.01,', 'functools.partial', 'server.send,', 'self.wait', 'client.fileno', 'client.close', 'server.close', 'test_remove_timeout_after_fire', 'self', '=', 'self.io_loop.add_timeout', 'self.io_loop.time', 'self.stop)', 'self.wait', 'self.io_loop.remove_timeout', 'test_remove_timeout_cleanup', 'self', 'i', 'range', '2000', 'timeout', '=', 'self.io_loop.add_timeout', 'self.io_loop.time', '+', '3600,', 'self.io_loop.remove_timeout', 'timeout)', 'self.io_loop.add_callback', 'self.io_loop.add_callback', 'self.stop', 'self.wait', 'self', 'calls', '=', 'now', '=', 'self.io_loop.time', 't1', 'calls', '0]', '=', 'self.io_loop.remove_timeout', 'self.io_loop.add_timeout', 'now', '+', '0.01,', 't1)', 't2', 'calls', '1]', '=', '=', 'self.io_loop.add_timeout', 'now', '+', '0.02,', 't2)', 'self.io_loop.add_timeout', 'now', '+', '0.03,', 'self.stop)', 'time.sleep', '0.03)', 'self.wait', 'calls,', 'self', 'results', '=', '[]', 'self.io_loop.add_timeout', 'self.io_loop.time', 'results.append,', '1)', 'self.io_loop.add_timeout', 'seconds', '=', '0', 'results.append,', '2)', 'self.io_loop.call_at', 'self.io_loop.time', 'results.append,', '3)', 'self.io_loop.call_later', '0,', 'results.append,', '4)', 'self.io_loop.call_later', '0,', 'self.stop)', 'self.wait', 'results', '[1,', '2,', '3,', '4', 'self', '=', 'self.io_loop.add_timeout', 'self.io_loop.time', 'self.io_loop.remove_timeout', 'self', '=', 'self.io_loop.call_at', 'self.io_loop.time', 'self.io_loop.remove_timeout', 'self', '=', 'self.io_loop.call_later', '0,', 'self.io_loop.remove_timeout', 'test_close_file_object', 'self', 'SocketWrapper', 'object', 'self,', 'sockobj', 'self.sockobj', '=', 'sockobj', 'self.closed', '=', 'fileno', 'self', 'self.sockobj.fileno', 'close', 'self', 'self.closed', '=', 'self.sockobj.close', 'sockobj,', '=', 'socket_wrapper', '=', 'SocketWrapper', 'sockobj)', 'io_loop', '=', 'IOLoop', 'socket_wrapper,', 'fd,', 'events:', 'IOLoop.READ)', 'io_loop.close', 'all_fds', '=', 'socket_wrapper.closed)', 'self', 'server_sock,', '=', 'fds', '=', '[]', 'fd,', 'events', 'fds.append', 'fd)', 'conn,', 'addr', '=', 'server_sock.accept', 'conn.close', 'self.stop', 'server_sock,', 'IOLoop.READ)', 'socket.socket', 'client_sock:', 'client_sock.connect', '\"127.0.0.1\",', 'self.wait', 'server_sock)', 'server_sock.fileno', 'IOLoop.READ)', 'socket.socket', 'client_sock:', 'client_sock.connect', '\"127.0.0.1\",', 'self.wait', 'fds', '0', 'server_sock)', 'fds', '1', 'server_sock.fileno', 'server_sock.fileno', 'server_sock.close', 'test_mixed_fd_fileobj', 'self', 'server_sock,', '=', 'f', 'fd,', 'events', 'server_sock,', 'f,', 'IOLoop.READ)', 'Exception', 'server_sock.fileno', 'f,', 'IOLoop.READ)', 'server_sock.fileno', 'server_sock.close', 'test_reentrant', 'self', '=', '=', 'callback', 'self.io_loop.start', '0]', '=', 'Exception:', '0]', '=', 'self.stop', 'self.io_loop.add_callback', 'callback)', 'self.wait', '0', '0', 'self', 'self.io_loop.add_callback', '1', '/', '0)', 'self.io_loop.add_callback', 'self.stop)', 'ExpectLog', 'app_log,', '\"Exception', 'callback\"', 'self.wait', 'self', 'callback', 'self.io_loop.add_callback', 'self.stop)', '1', '/', '0', 'self.io_loop.add_callback', 'callback)', 'ExpectLog', 'app_log,', '\"Exception', 'callback\"', 'self.wait', 'self', 'callback', 'self.io_loop.add_callback', 'self.io_loop.add_callback,', 'self.stop)', '1', '/', '0', 'self.io_loop.add_callback', 'callback)', 'ExpectLog', 'app_log,', '\"Exception', 'callback\"', 'self.wait', 'test_spawn_callback', 'self', 'self.io_loop.add_callback', '1', '/', '0)', 'self.io_loop.add_callback', 'self.stop)', 'ExpectLog', 'app_log,', '\"Exception', 'callback\"', 'self.wait', 'self.io_loop.spawn_callback', '1', '/', '0)', 'self.io_loop.add_callback', 'self.stop)', 'ExpectLog', 'app_log,', '\"Exception', 'callback\"', 'self.wait', '@skipIfNonUnix', 'self', 'client,', 'server', '=', 'socket.socketpair', 'client.send', 'b\"abc\")', 'server.send', 'b\"abc\")', 'chunks', '=', '[]', 'fd,', 'events', 'chunks.append', 'fd.recv', '1024', 'fd', 'client:', 'server)', 'client)', 'client,', 'self.io_loop.READ)', 'server,', 'self.io_loop.READ)', 'self.io_loop.call_later', '0.1,', 'self.stop)', 'self.wait', 'chunks,', '[b\"abc\"', 'client.close', 'server.close', '@skipIfNonUnix', '@gen_test', 'self', 'f', 'i', 'range', '10', 'loop', '=', 'IOLoop', 'make_current', '=', 'loop.close', 'gen.multi', 'f)', 'i', 'range', '2', 'self', '=', 'loop', '=', 'IOLoop', '=', 'make_current', '=', 'IOLoop', '=', 'make_current', '=', 'loop.close', 'TestIOLoopCurrent', 'setUp', 'self', 'self,', 'self.io_loop', '=', 'IOLoop.clear_current', 'tearDown', 'self', 'self.io_loop', 'self.io_loop.close', 'test_non_current', 'self', 'self.io_loop', '=', 'IOLoop', 'make_current', '=', 'IOLoop.current', '=', 'i', 'range', '3', 'f', 'self.current_io_loop', '=', 'IOLoop.current', 'self.io_loop', 'self.io_loop.stop', 'self.io_loop.add_callback', 'f)', 'self.io_loop.start', 'self.current_io_loop,', 'self.io_loop)', 'IOLoop.current', '=', 'self', 'self.io_loop', '=', 'IOLoop', 'make_current', '=', 'self.io_loop,', 'IOLoop.current', 'TestIOLoopCurrentAsync', 'setUp', 'self', 'super', '.setUp', 'self,', '@gen_test', 'self', '1)', 'e:', 'e.submit', 'IOLoop.clear_current)', 'TestIOLoopFutures', 'test_add_future_threads', 'self', '1)', 'pool:', 'dummy', 'self.io_loop.add_future(', 'pool.submit', 'dummy', 'future:', 'self.stop', 'future)', 'future', '=', 'self.wait', 'future.done', 'future.result', '@gen_test', 'self', 'event1', '=', 'event2', '=', 'sync_func', 'self_event,', 'other_event', 'self_event.set', 'other_event.wait', 'self_event', 'res', '=', 'IOLoop.current', 'sync_func,', 'event1,', 'event2', 'IOLoop.current', 'sync_func,', 'event2,', 'event1', 'event1,', 'event2', 'res)', '@gen_test', 'self', 'event1', '=', 'event2', '=', 'sync_func', 'self_event,', 'other_event', 'self_event.set', 'other_event.wait', 'self_event', 'self_event,', 'other_event', 'IOLoop.current', 'sync_func,', 'self_event,', 'other_event', 'res', '=', 'event1,', 'event2', 'event2,', 'event1', 'event1,', 'event2', 'res)', '@gen_test', 'self', 'count', '=', '[0]', 'submit', 'self,', 'func,', '*args', 'count', '0]', '+=', '1', 'super', '.submit', 'func,', '*args)', 'event', '=', 'sync_func', 'event.set', '=', '1)', 'loop', '=', 'IOLoop.current', 'sync_func)', '1,', 'count', '0', 'TestIOLoopRunSync', 'setUp', 'self', 'self.io_loop', '=', 'IOLoop', 'make_current', '=', 'tearDown', 'self', 'self.io_loop.close', 'test_sync_result', 'self', 'self.io_loop.run_sync', '42)', 'self', 'self.io_loop.run_sync', '1', '/', '0)', 'self', 'f', 'gen.moment', 'gen.Return', '42)', 'self.io_loop.run_sync', 'f', '42)', 'self', 'f', 'gen.moment', '1', '/', '0', 'self.io_loop.run_sync', 'f)', 'test_current', 'self', 'f', 'IOLoop.current', 'self.io_loop)', 'self.io_loop.run_sync', 'f)', 'test_timeout', 'self', 'f', 'gen.sleep', '1)', 'self.io_loop.run_sync,', 'f,', 'timeout', '=', '0.01)', 'self', 'f1', 'gen.moment', 'f2', 'f1', 'self.io_loop.run_sync', 'f2)', 'TestPeriodicCallbackMath', 'simulate_calls', 'self,', 'pc,', 'durations', 'calls', '=', '[]', 'now', '=', '1000', 'pc._next_timeout', '=', 'now', 'd', 'durations:', 'pc._update_next', 'now)', 'calls.append', 'pc._next_timeout)', 'now', '=', 'pc._next_timeout', '+', 'd', 'calls', 'dummy', 'self', 'self', 'pc', '=', 'PeriodicCallback', 'self.dummy,', '10000)', 'self.simulate_calls', 'pc,', '[0]', '*', '5', '[1010,', '1020,', '1030,', '1040,', '1050]', 'test_overrun', 'self', 'call_durations', '=', '[9,', '9,', '10,', '11,', '20,', '20,', '35,', '35,', '0,', '0,', '0]', 'expected', '=', '1010,', '1020,', '1030,', '1050,', '1070,', '1100,', '1130,', '1170,', '1210,', '1220,', '1230,', 'pc', '=', 'PeriodicCallback', 'self.dummy,', '10000)', 'self.simulate_calls', 'pc,', 'call_durations', 'expected)', 'test_clock_backwards', 'self', 'pc', '=', 'PeriodicCallback', 'self.dummy,', '10000)', 'self.simulate_calls', 'pc,', '-', '2,', '-1,', '-3,', '-2,', '0', '[1010,', '1020,', '1030,', '1040,', '1050]', 'self.simulate_calls', 'pc,', '-', '100,', '0,', '0', '[1010,', '1020,', '1030', 'test_jitter', 'self', '=', '[0.5,', '1,', '0,', '0.75]', 'expected', '=', '[1010,', '1022.5,', '1030,', '1041.25]', 'call_durations', '=', '[0]', '*', 'len', 'pc', '=', 'PeriodicCallback', 'self.dummy,', '10000,', 'jitter', '=', '0.5)', '0)', 'mock.patch', 'self.simulate_calls', 'pc,', 'call_durations', 'expected)', 'self', 'pc', '=', 'PeriodicCallback', '=', '1,', 'seconds', '=', '23', 'expected_callback_time', '=', '83000', 'pc.callback_time,', 'expected_callback_time)', 'TestPeriodicCallbackAsync', 'self', 'count', '=', '0', 'callback', '->', 'count', 'count', '+=', '1', 'count', '==', '3:', 'self.stop', 'pc', '=', 'PeriodicCallback', 'callback,', '10)', 'pc.start', 'self.wait', 'pc.stop', 'count,', '3)', 'self)', '->', 'counts', '=', '[0,', '0]', 'callback', '->', 'Future', 'object,', '\":', 'counts', '0]', '+=', '1', 'gen.sleep', '0.025)', 'counts', '1]', '+=', '1', 'counts', '1]', '==', '3:', 'pc.stop', 'self.io_loop.add_callback', 'self.stop)', 'pc', '=', 'PeriodicCallback', 'callback,', '10)', 'pc.start', 'self.wait', 'counts', '0', '3)', 'counts', '1', '3)', 'self)', '->', 'counts', '=', '[0,', '0]', 'callback', '->', 'counts', '0]', '+=', '1', 'gen.sleep', '0.025)', 'counts', '1]', '+=', '1', 'counts', '1]', '==', '3:', 'pc.stop', 'self.io_loop.add_callback', 'self.stop)', 'pc', '=', 'PeriodicCallback', 'callback,', '10)', 'pc.start', 'self.wait', 'counts', '0', '3)', 'counts', '1', '3)', 'TestIOLoopConfiguration', 'run_python', 'self,', '*statements', '=', 'IOLoop\",', '=', 'x:', '+', 'statements)', 'args', '=', '[sys.executable,', '\"', '-', 'c\",', '\";', 'native_str', 'subprocess.check_output', 'args', '.strip', 'self', 'cls', '=', 'self.run_python', 'IOLoop.current', '\")', 'cls,', 'cls', '=', 'self.run_python', 'IOLoop', '\")', 'cls,', '\"AsyncIOLoop\")', 'self', 'cls', '=', 'self.run_python(', \"'IOLoop.configure\", \"',\", 'IOLoop.current', '\",', 'cls,', 'self', 'cls', '=', 'self.run_python(', '\",', 'IOLoop.current', '\",', 'cls,', '__name__', '==']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/tornado/test/iostream_test.py",
        "vector": "['Future', 'gen', 'netutil', 'IOLoop', 'IOStream,', 'SSLIOStream,', 'PipeIOStream,', '_StreamBuffer,', 'HTTPHeaders', 'Condition,', 'Event', 'gen_log', 'ssl_options_to_context,', 'ssl_wrap_socket', 'TCPServer', 'ExpectLog,', 'gen_test,', 'skipIfNonUnix,', 'skipPypy3V58,', 'Application', 'errno', 'os', 'socket', 'ssl', 'unittest', 'mock', 'unittest', '_server_ssl_options', 'dict(', 'certfile', '=', 'os.path.dirname', '__file__', '\"test.crt\"', 'keyfile', '=', 'os.path.dirname', '__file__', '\"test.key\"', 'get', 'self', 'self.write', '\"Hello\")', 'object', '_make_client_iostream', 'self', 'get_app', 'self', 'Application', '\"', '/', '\",', 'test_connection_closed', 'self:', 'response', '=', 'self.fetch', '\"', '/', '\",', 'headers', '=', '\"Connection\":', '\"close\"', 'response.rethrow', '@gen_test', 'test_read_until_close', 'self:', 'stream', '=', 'self._make_client_iostream', 'stream.connect', '\"127.0.0.1\",', 'stream.write', 'b\"GET', '/', 'HTTP', '/', '1.0\\\\r\\\\n\\\\r\\\\n\")', 'data', '=', 'stream.read_until_close', 'b\"HTTP', '/', '1.1', '200\"', 'b\"Hello\"', '@gen_test', 'test_read_zero_bytes', 'self:', 'self.stream', '=', 'self._make_client_iostream', 'self.stream.connect', '\"127.0.0.1\",', 'self.stream.write', 'b\"GET', '/', 'HTTP', '/', '1.0\\\\r\\\\n\\\\r\\\\n\")', 'data', '=', 'self.stream.read_bytes', '9)', 'data,', 'b\"HTTP', '/', '1.1', '\")', 'data', '=', 'self.stream.read_bytes', '0)', 'data,', 'b\"\")', 'data', '=', 'self.stream.read_bytes', '3)', 'data,', 'b\"200\")', 'self.stream.close', '@gen_test', 'self:', 'stream', '=', 'self._make_client_iostream', 'connect_fut', '=', 'stream.connect', '\"127.0.0.1\",', 'write_fut', '=', 'stream.write', 'b\"GET', '/', 'HTTP', '/', '1.0\\\\r\\\\nConnection:', 'close\\\\r\\\\n\\\\r\\\\n\")', 'connect_fut.done', 'it', '=', 'connect_fut,', 'write_fut)', '=', '[]', 'it.done', 'it.next', 'it.current_future)', '[connect_fut,', 'write_fut', 'data', '=', 'stream.read_until_close', 'b\"Hello\"', 'stream.close', '@gen_test', 'self:', 'stream', '=', 'self._make_client_iostream', 'connect_result', '=', 'stream.connect', '\"127.0.0.1\",', 'connect_result,', 'stream)', 'stream.write', 'b\"GET', '/', 'HTTP', '/', '1.0\\\\r\\\\n\\\\r\\\\n\")', '=', 'stream.read_until', 'b\"\\\\r\\\\n\")', 'b\"HTTP', '/', '1.1', '200', 'OK\\\\r\\\\n\")', 'header_data', '=', 'stream.read_until', 'b\"\\\\r\\\\n\\\\r\\\\n\")', 'headers', '=', 'HTTPHeaders.parse', 'header_data.decode', 'content_length', '=', 'headers', '\"Content', '-', 'Length\"', 'body', '=', 'stream.read_bytes', 'content_length)', 'body,', 'b\"Hello\")', 'stream.close', '@gen_test', 'self:', 'stream', '=', 'self._make_client_iostream', 'stream.connect', '\"127.0.0.1\",', 'stream.write', 'b\"GET', '/', 'HTTP', '/', '1.0\\\\r\\\\n\\\\r\\\\n\")', 'stream.read_bytes', '1024', '*', '1024)', 'stream.close', '@gen_test', 'test_future_read_until_close', 'self:', 'stream', '=', 'self._make_client_iostream', 'stream.connect', '\"127.0.0.1\",', 'stream.write', 'b\"GET', '/', 'HTTP', '/', '1.0\\\\r\\\\nConnection:', 'close\\\\r\\\\n\\\\r\\\\n\")', 'stream.read_until', 'b\"\\\\r\\\\n\\\\r\\\\n\")', 'body', '=', 'stream.read_until_close', 'body,', 'b\"Hello\")', 'stream.read_bytes', '1)', 'object', 'make_iostream_pair', 'self,', '*', '*', 'kwargs', 'iostream_pair', 'self,', '*', '*', 'kwargs', 'IOStreamPairContext:', 'self,', 'test,', 'kwargs', 'self.test', '=', 'test', 'self.kwargs', '=', 'kwargs', '__aenter__', 'self', 'self.pair', '=', 'self.test.make_iostream_pair', '**', 'self.kwargs)', 'self.pair', '__aexit__', 'self,', 'typ,', 'value,', 'tb', 's', 'self.pair:', 's.close', 'IOStreamPairContext', 'self,', 'kwargs)', '@gen_test', 'test_write_zero_bytes', 'self', 'rs,', 'ws', '=', 'self.make_iostream_pair', 'ws.write', 'b\"\")', 'ws.close', 'rs.close', '@gen_test', 'self:', 'rs,', 'ws', '=', 'self.make_iostream_pair', 'ws.write', 'b\"12\")', 'chunks', '=', '[]', 'chunks.append', 'rs.read_bytes', '1', 'ws.close', 'chunks.append', 'rs.read_bytes', '1', 'chunks,', '[b\"1\",', 'b\"2\"', 'ws.close', 'rs.close', '@gen_test', 'test_close_buffered_data', 'self:', 'rs,', 'ws', '=', 'self.make_iostream_pair', 'read_chunk_size', '=', '256)', 'ws.write', 'b\"A\"', '*', '512)', 'data', '=', 'rs.read_bytes', '256)', 'b\"A\"', '*', '256,', 'data)', 'ws.close', 'gen.sleep', '0.01)', 'data', '=', 'rs.read_bytes', '256)', 'b\"A\"', '*', '256,', 'data)', 'ws.close', 'rs.close', '@gen_test', 'test_read_until_close_after_close', 'self:', 'rs,', 'ws', '=', 'self.make_iostream_pair', 'ws.write', 'b\"1234\")', 'data', '=', 'rs.read_bytes', '1)', 'ws.close', 'data,', 'b\"1\")', 'data', '=', 'rs.read_until_close', 'data,', 'b\"234\")', 'ws.close', 'rs.close', '@gen_test', 'test_large_read_until', 'self:', 'rs,', 'ws', '=', 'self.make_iostream_pair', 'rs,', 'SSLIOStream)', '==', '\"PyPy\"', '):', 'unittest.SkipTest', '\"pypy', 'gc', 'causes', 'problems', 'openssl\")', 'NUM_KB', '=', '4096', 'i', 'range', 'NUM_KB', 'ws.write', 'b\"A\"', '*', '1024)', 'ws.write', 'b\"\\\\r\\\\n\")', 'data', '=', 'rs.read_until', 'b\"\\\\r\\\\n\")', 'len', 'data', 'NUM_KB', '*', '1024', '+', '2)', 'ws.close', 'rs.close', '@gen_test', 'self', 'self.iostream_pair', '(rs,', 'ws', 'rf', '=', 'rs.read_until', 'b\"done\"', '0.1)', 'ws.write', 'b\"x\"', '*', '2048)', 'ws.write', 'b\"done\")', 'ws.close', 'rf', '@gen_test', 'self:', 'self.iostream_pair', '(rs,', 'ws', 'rf', '=', 'rs.read_until', 'b\"done\"', 'ws.write', 'b\"x\"', '*', '2048)', 'ws.write', 'b\"foo\")', 'ws.close', 'rf', '@gen_test', 'self:', 'OK', '=', 'b\"OK\\\\r\\\\n\"', 'rs,', 'ws', '=', 'self.make_iostream_pair', 'event', '=', 'Event', 'rs.set_close_callback', 'event.set)', 'ws.write', 'OK)', 'res', '=', 'rs.read_until', 'b\"\\\\r\\\\n\")', 'res,', 'OK)', 'ws.close', 'rs.read_until', 'b\"\\\\r\\\\n\")', 'event.wait', 'ws.close', 'rs.close', '@gen_test', 'test_future_close_callback', 'self:', 'rs,', 'ws', '=', 'self.make_iostream_pair', 'closed', '=', 'cond', '=', 'Condition', 'close_callback', 'closed', '0]', '=', 'rs.set_close_callback', 'close_callback)', 'ws.write', 'b\"a\")', 'res', '=', 'rs.read_bytes', '1)', 'res,', 'b\"a\")', 'closed', '0', 'ws.close', 'cond.wait', 'closed', '0', 'rs.close', 'ws.close', '@gen_test', 'self:', 'rs,', 'ws', '=', 'self.make_iostream_pair', 'fut', '=', 'rs.read_bytes', '4)', 'ws.write', 'b\"hello\"', 'data', '=', 'fut', 'data,', 'b\"hell\")', 'ws.close', 'rs.close', '@gen_test', 'test_read_bytes_partial', 'self:', 'rs,', 'ws', '=', 'self.make_iostream_pair', 'fut', '=', 'rs.read_bytes', '50,', 'partial', '=', 'ws.write', 'b\"hello\")', 'data', '=', 'fut', 'data,', 'b\"hello\")', 'fut', '=', 'rs.read_bytes', '3,', 'partial', '=', 'ws.write', 'data', '=', 'fut', 'data,', 'data', '=', 'rs.read_bytes', '0,', 'partial', '=', 'data,', 'b\"\")', 'ws.close', 'rs.close', '@gen_test', 'test_read_until_max_bytes', 'self:', 'rs,', 'ws', '=', 'self.make_iostream_pair', 'closed', '=', 'Event', 'rs.set_close_callback', 'closed.set)', 'fut', '=', 'rs.read_until', 'max_bytes', '=', '50)', 'ws.write', 'data', '=', 'fut', 'data,', 'fut', '=', 'rs.read_until', 'max_bytes', '=', '6)', 'ws.write', 'data', '=', 'fut', 'data,', 'ExpectLog', 'gen_log,', 'read\",', 'level', '=', 'fut', '=', 'rs.read_until', 'max_bytes', '=', '5)', 'ws.write', 'b\"123456\")', 'closed.wait', 'ws.close', 'rs.close', '@gen_test', 'self:', 'rs,', 'ws', '=', 'self.make_iostream_pair', 'closed', '=', 'Event', 'rs.set_close_callback', 'closed.set)', 'ws.write', 'b\"123456\")', 'ExpectLog', 'gen_log,', 'read\",', 'level', '=', 'rs.read_until', 'max_bytes', '=', '5)', 'closed.wait', 'ws.close', 'rs.close', '@gen_test', 'self:', 'rs,', 'ws', '=', 'self.make_iostream_pair', 'closed', '=', 'Event', 'rs.set_close_callback', 'closed.set)', 'ws.write', 'ExpectLog', 'gen_log,', 'read\",', 'level', '=', 'rs.read_until', 'max_bytes', '=', '5)', 'closed.wait', 'ws.close', 'rs.close', '@gen_test', 'test_read_until_regex_max_bytes', 'self:', 'rs,', 'ws', '=', 'self.make_iostream_pair', 'closed', '=', 'Event', 'rs.set_close_callback', 'closed.set)', 'fut', '=', 'rs.read_until_regex', 'max_bytes', '=', '50)', 'ws.write', 'data', '=', 'fut', 'data,', 'fut', '=', 'rs.read_until_regex', 'max_bytes', '=', '6)', 'ws.write', 'data', '=', 'fut', 'data,', 'ExpectLog', 'gen_log,', 'read\",', 'level', '=', 'rs.read_until_regex', 'max_bytes', '=', '5)', 'ws.write', 'b\"123456\")', 'closed.wait', 'ws.close', 'rs.close', '@gen_test', 'self:', 'rs,', 'ws', '=', 'self.make_iostream_pair', 'closed', '=', 'Event', 'rs.set_close_callback', 'closed.set)', 'ws.write', 'b\"123456\")', 'ExpectLog', 'gen_log,', 'read\",', 'level', '=', 'rs.read_until_regex', 'max_bytes', '=', '5)', 'closed.wait', 'ws.close', 'rs.close', '@gen_test', 'self', 'rs,', 'ws', '=', 'self.make_iostream_pair', 'closed', '=', 'Event', 'rs.set_close_callback', 'closed.set)', 'ws.write', 'ExpectLog', 'gen_log,', 'read\",', 'level', '=', 'rs.read_until_regex', 'max_bytes', '=', '5)', 'closed.wait', 'ws.close', 'rs.close', '@gen_test', 'self:', 'rs,', 'ws', '=', 'self.make_iostream_pair', 'max_buffer_size', '=', '10', '*', '1024)', 'ws.write', 'b\"a\"', '*', '1024', '*', '100)', 'i', 'range', '100', 'data', '=', 'rs.read_bytes', '1024)', 'data,', 'b\"a\"', '*', '1024)', 'ws.close', 'rs.close', '@gen_test', 'self:', 'rs,', 'ws', '=', 'self.make_iostream_pair', 'max_buffer_size', '=', '10', '*', '1024)', 'ws.write', 'b\"a\"', '*', '1023', '+', 'b\"\\\\n\")', '*', '100)', 'i', 'range', '100', 'data', '=', 'rs.read_until', 'b\"\\\\n\",', 'max_bytes', '=', '4096)', 'data,', 'b\"a\"', '*', '1023', '+', 'b\"\\\\n\")', 'ws.close', 'rs.close', '@gen_test', 'test_flow_control', 'self', 'MB', '=', '1024', '*', '1024', 'rs,', 'ws', '=', 'self.make_iostream_pair', 'max_buffer_size', '=', '5', '*', 'MB)', 'ws.write', 'b\"a\"', '*', '10', '*', 'MB)', 'rs.read_bytes', 'MB)', 'gen.sleep', '0.1)', 'i', 'range', '9', 'rs.read_bytes', 'MB)', 'rs.close', 'ws.close', '@gen_test', 'self:', 'rs,', 'ws', '=', 'self.make_iostream_pair', 'sleep_some', 'self.io_loop.run_sync', 'gen.sleep', '0.05', 'buf', '=', 'bytearray', '10)', 'fut', '=', 'buf)', 'ws.write', 'b\"hello\")', 'gen.sleep', '0.05)', 'ws.write', 'data', '=', 'fut', 'data,', '10)', 'bytes', 'buf', 'fut', '=', 'buf)', 'gen.sleep', '0.05)', 'ws.write', 'b\"1234567890\")', 'data', '=', 'fut', 'data,', '10)', 'bytes', 'buf', 'b\"!!12345678\")', 'buf', '=', 'bytearray', '4)', 'ws.write', 'data', '=', 'buf)', 'data,', '4)', 'bytes', 'buf', 'b\"90ab\")', 'data', '=', 'rs.read_bytes', '7)', 'data,', 'ws.close', 'rs.close', '@gen_test', 'self:', 'rs,', 'ws', '=', 'self.make_iostream_pair', 'buf', '=', 'bytearray', '10)', 'fut', '=', 'buf,', 'partial', '=', 'ws.write', 'b\"hello\")', 'data', '=', 'fut', 'data,', '5)', 'bytes', 'buf', 'b\"hello\\\\0\\\\0\\\\0\\\\0\\\\0\")', 'ws.write', 'data', '=', 'buf,', 'partial', '=', 'data,', '10)', 'bytes', 'buf', 'data', '=', 'buf,', 'partial', '=', 'data,', '6)', 'bytes', 'buf', 'b\"5678901234\")', 'ws.close', 'rs.close', '@gen_test', 'self:', 'rs,', 'ws', '=', 'self.make_iostream_pair', 'buf', '=', 'bytearray', 'fut', '=', 'buf)', 'fut.result', '0)', 'ws.close', 'rs.close', '@gen_test', 'test_many_mixed_reads', 'self', 'r', '=', '42)', 'nbytes', '=', '1000000', 'rs,', 'ws', '=', 'self.make_iostream_pair', '=', '=', 'produce', '=', 'nbytes', '>', '0:', 'size', '=', '1,', '1000,', 'data', '=', 'size)', 'data)', 'ws.write', 'data)', '-=', 'size', '==', '0', 'consume', '=', 'nbytes', '>', '0:', '>', '0.5:', 'size', '=', '1,', '1000,', 'data', '=', 'rs.read_bytes', 'size)', 'data)', '-=', 'size', 'size', '=', '1,', '1000,', 'buf', '=', 'bytearray', 'size)', 'n', '=', 'buf)', 'n', '==', 'size', 'buf)', '-=', 'size', '==', '0', '[produce', 'consume', '==', 'ws.close', 'rs.close', '_make_server_iostream', 'self,', 'connection,', '*', '*', 'kwargs', '_make_client_iostream', 'self,', 'connection,', '*', '*', 'kwargs', 'make_iostream_pair', 'self:', '*', '*', 'kwargs', '=', 'server_stream_fut', '=', 'Future', 'accept_callback', 'connection,', 'address', 'server_stream_fut.set_result(', 'self._make_server_iostream', 'connection,', '*', '*', 'kwargs)', 'accept_callback)', 'client_stream', '=', 'self._make_client_iostream', 'socket.socket', '*', '*', 'kwargs)', 'connect_fut', '=', 'client_stream.connect', '\"127.0.0.1\",', 'server_stream,', 'client_stream', '=', '[server_stream_fut,', 'connect_fut]', 'gen.Return', 'server_stream,', 'client_stream', '@gen_test', 'test_connection_refused', 'self:', 'cleanup_func,', '=', 'self.addCleanup', 'cleanup_func)', 'stream', '=', 'IOStream', 'socket.socket', 'stream.set_close_callback', 'self.stop)', 'ExpectLog', 'gen_log,', '\".', '*', '\",', 'required', '=', 'stream.connect', '\"127.0.0.1\",', '@gen_test', 'self:', 's', '=', 'socket.socket', 'socket.AF_INET,', 'socket.SOCK_STREAM,', '0)', 'stream', '=', 'IOStream', 's)', 'stream.set_close_callback', 'self.stop)', 'mock.patch(', '\"socket.socket.connect\",', 'side_effect', '=', 'errno.EIO,', '\"boom\")', '):', 'stream.connect', '\"localhost\",', '80', '@gen_test', 'self:', 'server,', 'client', '=', 'self.make_iostream_pair', 'mock.patch(', 'side_effect', '=', '\"boom\"', '):', '\"boom\"', 'client.read_until_close', 'server.close', 'client.close', '@skipIfNonUnix', '@skipPypy3V58', '@gen_test', 'self:', 'io_loop', '=', 'IOLoop.current', '):', 'self.skipTest', 'server,', 'client', '=', 'self.make_iostream_pair', 'os.close', 'server.socket.fileno', 'server.read_bytes', '1)', 'server.close', 'client.close', '@skipPypy3V58', '@gen_test', 'self', 'server,', 'client', '=', 'self.make_iostream_pair', 'closed', '=', 'Event', 'server.set_close_callback', 'closed.set)', 'server.read_bytes', '1)', 'client.write', 'b\"a\")', 'os.close', 'server.socket.fileno', 'server)', '=', 'ExpectLog', 'gen_log,', 'on', 'read\"', 'closed.wait', 'server.close', 'client.close', '@gen_test', 'test_future_write', 'self', 'm,', 'n', '=', '5000,', '1000', 'nproducers', '=', '10', 'total_bytes', '=', 'm', '*', 'n', '*', 'nproducers', 'server,', 'client', '=', 'self.make_iostream_pair', 'max_buffer_size', '=', 'total_bytes)', 'produce', 'data', '=', 'b\"x\"', '*', 'm', 'i', 'range', 'n', 'server.write', 'data)', 'consume', 'nread', '=', '0', 'nread', '<', 'total_bytes:', 'res', '=', 'client.read_bytes', 'm)', 'nread', '+=', 'len', 'res)', '[produce', 'i', 'range', 'nproducers', '+', '[consume', 'server.close', 'client.close', 'TestIOStreamWebHTTP', '_make_client_iostream', 'self', 'IOStream', 'socket.socket', 'TestIOStreamWebHTTPS', '_make_client_iostream', 'self', 'SSLIOStream', 'socket.socket', 'ssl_options', '=', 'dict', 'cert_reqs', '=', 'ssl.CERT_NONE', 'TestIOStream', '_make_server_iostream', 'self,', 'connection,', '*', '*', 'kwargs', 'IOStream', 'connection,', '*', '*', 'kwargs)', '_make_client_iostream', 'self,', 'connection,', '*', '*', 'kwargs', 'IOStream', 'connection,', '*', '*', 'kwargs)', 'TestIOStreamSSL', '_make_server_iostream', 'self,', 'connection,', '*', '*', 'kwargs', 'ssl_ctx', '=', 'ssl_options_to_context', '_server_ssl_options', 'server_side', '=', 'connection', '=', 'ssl_ctx.wrap_socket(', 'connection,', 'server_side', '=', '=', 'SSLIOStream', 'connection,', '*', '*', 'kwargs)', '_make_client_iostream', 'self,', 'connection,', '*', '*', 'kwargs', 'SSLIOStream(', 'connection,', 'ssl_options', '=', 'dict', 'cert_reqs', '=', 'ssl.CERT_NONE', '*', '*', 'kwargs', 'TestIOStreamSSLContext', '_make_server_iostream', 'self,', 'connection,', '*', '*', 'kwargs', 'context', '=', 'ssl.Purpose.CLIENT_AUTH)', 'os.path.dirname', '__file__', '\"test.crt\"', 'os.path.dirname', '__file__', '\"test.key\"', 'connection', '=', 'ssl_wrap_socket(', 'connection,', 'context,', 'server_side', '=', '=', 'SSLIOStream', 'connection,', '*', '*', 'kwargs)', '_make_client_iostream', 'self,', 'connection,', '*', '*', 'kwargs', 'context', '=', 'ssl.Purpose.SERVER_AUTH)', 'context.check_hostname', '=', '=', 'ssl.CERT_NONE', 'SSLIOStream', 'connection,', 'ssl_options', '=', 'context,', '*', '*', 'kwargs)', 'TestIOStreamStartTLS', 'setUp', 'self', 'super', '.setUp', '=', 'self.server_stream', '=', 'self.server_accepted', '=', 'Future', 'self.accept)', 'self.client_stream', '=', 'IOStream(', 'socket.socket', 'self.io_loop.add_future(', 'self.client_stream.connect', '\"127.0.0.1\",', 'self.stop', 'self.wait', 'self.io_loop.add_future', 'self.server_accepted,', 'self.stop)', 'self.wait', 'Exception', 'e:', 'e)', 'tearDown', 'self', 'self.server_stream', 'self.server_stream.close', 'self.client_stream', 'self.client_stream.close', 'super', '.tearDown', 'accept', 'self,', 'connection,', 'address', 'self.server_stream', 'self.fail', '\"should', 'only', 'get', 'one', 'connection\")', 'self.server_stream', '=', 'IOStream', 'connection)', 'self.server_accepted.set_result', 'self,', 'self.client_stream', 'self.client_stream.write', 'self.server_stream', '=', 'self.server_stream.read_until', 'b\"\\\\r\\\\n\")', 'self,', 'self.server_stream', 'self.server_stream.write', 'self.client_stream', '=', 'self.client_stream.read_until', 'b\"\\\\r\\\\n\")', 'client_start_tls', 'self,', 'ssl_options', '=', 'server_hostname', '=', 'self.client_stream', 'client_stream', '=', 'self.client_stream', 'self.client_stream', '=', 'client_stream.start_tls', 'ssl_options,', 'server_hostname)', 'server_start_tls', 'self,', 'ssl_options', '=', 'self.server_stream', 'server_stream', '=', 'self.server_stream', 'self.server_stream', '=', 'server_stream.start_tls', 'ssl_options)', '@gen_test', 'test_start_tls_smtp', 'self', 'b\"220', 'mail.example.com', 'ready\\\\r\\\\n\")', 'b\"EHLO', 'mail.example.com\\\\r\\\\n\")', 'b\"250', '-', 'mail.example.com', 'welcome\\\\r\\\\n\")', 'b\"250', 'STARTTLS\\\\r\\\\n\")', 'b\"STARTTLS\\\\r\\\\n\")', 'b\"220', 'Go', 'ahead\\\\r\\\\n\")', 'client_future', '=', 'self.client_start_tls', 'dict', 'cert_reqs', '=', 'ssl.CERT_NONE', 'server_future', '=', 'self.server_start_tls', '_server_ssl_options', 'self.client_stream', '=', 'client_future', 'self.server_stream', '=', 'server_future', 'self.client_stream,', 'SSLIOStream', 'self.server_stream,', 'SSLIOStream', 'b\"EHLO', 'mail.example.com\\\\r\\\\n\")', 'b\"250', 'mail.example.com', 'welcome\\\\r\\\\n\")', '@gen_test', 'self', 'server_future', '=', 'self.server_start_tls', '_server_ssl_options', 'ExpectLog', 'gen_log,', '\"SSL', 'client_future', '=', 'self.client_start_tls', 'server_hostname', '=', '\"localhost\")', 'client_future', 'server_future', '@gen_test', 'test_check_hostname', 'self', 'server_future', '=', 'self.server_start_tls', '_server_ssl_options', 'ExpectLog', 'gen_log,', '\"SSL', 'client_future', '=', 'self.client_start_tls(', 'server_hostname', '=', '\"127.0.0.1\"', 'client_future', 'Exception', 'server_future', '@gen_test', 'self', 'buf', '=', 'bytes', '80', '\"L\")', 'self.server_stream', 'self.server_stream.write', 'buf)', 'self.client_stream', 'recv', '=', 'self.client_stream.read_bytes', 'buf.nbytes)', 'bytes', 'recv', 'bytes', 'buf', 'connect_to_server', 'self,', 'server_cls', 'server', '=', 'client', '=', 'sock,', '=', 'server', '=', 'server_cls', 'ssl_options', '=', '_server_ssl_options', 'server.add_socket', 'sock)', 'ssl_ctx', '=', 'ssl.Purpose.SERVER_AUTH)', 'ssl_ctx.check_hostname', '=', '=', 'ssl.CERT_NONE', 'ssl_ctx.options', '|=', 'getattr', 'ssl,', '\"OP_NO_TLSv1_3\",', '0)', 'client', '=', 'SSLIOStream', 'socket.socket', 'ssl_options', '=', 'ssl_ctx)', 'client.connect', '\"127.0.0.1\",', 'client.socket.cipher', 'server', 'server.stop', 'client', 'client.close', '@gen_test', 'self', 'test', '=', 'self', '=', 'Future', 'TestServer', 'TCPServer', 'self,', 'stream,', 'address', 'stream.socket.cipher', 'test.io_loop.spawn_callback', 'stream)', 'self,', 'stream', 'self.connect_to_server', 'TestServer)', '@gen_test', 'self', 'test', '=', 'self', '=', 'Future', 'TestServer', 'TCPServer', 'self,', 'stream,', 'address', 'fut', '=', 'fut', 'self.connect_to_server', 'TestServer)', '@gen_test', 'self', '=', 'Future', 'TestServer', 'TCPServer', 'self,', 'stream,', 'address', 'self.connect_to_server', 'TestServer)', 'TestIOStreamCheckHostname', 'setUp', 'self', 'super', '.setUp', '=', 'accept_callback', 'connection,', 'address', 'ssl_ctx', '=', 'ssl.Purpose.CLIENT_AUTH)', 'os.path.dirname', '__file__', '\"test.crt\"', 'os.path.dirname', '__file__', '\"test.key\"', 'connection', '=', 'ssl_ctx.wrap_socket(', 'connection,', 'server_side', '=', '=', 'SSLIOStream', 'connection)', 'accept_callback)', 'self.client_ssl_ctx', '=', 'ssl.Purpose.SERVER_AUTH)', 'os.path.dirname', '__file__', '\"test.crt\")', 'tearDown', 'self', 'super', '.tearDown', '@gen_test', 'test_match', 'self', 'stream', '=', 'SSLIOStream', 'socket.socket', 'ssl_options', '=', 'self.client_ssl_ctx)', 'stream.connect(', '(\"127.0.0.1\",', 'server_hostname', '=', '\"foo.example.com\",', 'stream.close', '@gen_test', 'test_no_match', 'self', 'stream', '=', 'SSLIOStream', 'socket.socket', 'ssl_options', '=', 'self.client_ssl_ctx)', 'ExpectLog(', 'gen_log,', '\".', '*', 'alert', 'bad', 'level', '=', 'required', '=', '!=', '):', 'ExpectLog(', 'gen_log,', '\".', '*', 'failed:', 'Hostname', '\",', 'level', '=', '):', 'stream.connect(', '(\"127.0.0.1\",', 'server_hostname', '=', '\"bar.example.com\",', '!=', '0.1)', '@gen_test', 'self', 'self.client_ssl_ctx.check_hostname', '=', 'stream', '=', 'SSLIOStream', 'socket.socket', 'ssl_options', '=', 'self.client_ssl_ctx)', 'stream.connect(', '(\"127.0.0.1\",', 'server_hostname', '=', '\"bar.example.com\",', '@skipIfNonUnix', 'TestPipeIOStream', 'make_iostream_pair', 'self,', '*', '*', 'kwargs', 'r,', 'w', '=', 'os.pipe', 'PipeIOStream', 'r,', '*', '*', 'kwargs', 'PipeIOStream', 'w,', '*', '*', 'kwargs)', '@gen_test', 'test_pipe_iostream', 'self', 'rs,', 'ws', '=', 'self.make_iostream_pair', 'ws.write', 'b\"hel\")', 'ws.write', 'b\"lo', 'data', '=', 'rs.read_until', 'b\"', '\")', 'data,', 'b\"hello', '\")', 'data', '=', 'rs.read_bytes', '3)', 'data,', 'ws.close', 'data', '=', 'rs.read_until_close', 'data,', 'b\"ld\")', 'rs.close', '@gen_test', 'test_pipe_iostream_big_write', 'self', 'rs,', 'ws', '=', 'self.make_iostream_pair', 'NUM_BYTES', '=', '1048576', 'ws.write', 'b\"1\"', '*', 'NUM_BYTES)', 'data', '=', 'rs.read_bytes', 'NUM_BYTES)', 'data,', 'b\"1\"', '*', 'NUM_BYTES)', 'ws.close', 'rs.close', 'TestStreamBuffer', 'setUp', 'self', '=', '42)', 'to_bytes', 'self,', 'b', 'b,', '(bytes,', 'bytearray', 'bytes', 'b)', 'b,', 'b.tobytes', 'b)', 'make_streambuffer', 'self,', 'large_buf_threshold', '=', '10', 'buf', '=', '_StreamBuffer', 'buf._large_buf_threshold', 'buf._large_buf_threshold', '=', 'large_buf_threshold', 'buf', 'check_peek', 'self,', 'buf,', 'expected', 'size', '=', '1', 'size', '<', '2', '*', 'len', 'expected', 'got', '=', 'self.to_bytes', 'buf.peek', 'size', 'got)', 'len', 'got', 'size)', 'got', '(expected,', 'got', 'size', '=', '(size', '*', '3', '+', '1)', '//', '2', 'check_append_all_then_skip_all', 'self,', 'buf,', 'objs,', 'len', 'buf', '0)', 'expected', '=', 'b\"\"', 'o', 'objs:', 'expected', '+=', 'o', 'buf.append', 'o', 'len', 'buf', 'len', 'expected', 'self.check_peek', 'buf,', 'expected)', 'expected:', 'n', '=', '1,', 'len', 'expected)', '+', '1)', 'expected', '=', 'expected', 'n', 'buf.advance', 'n)', 'len', 'buf', 'len', 'expected', 'self.check_peek', 'buf,', 'expected)', 'len', 'buf', '0)', 'test_small', 'self', 'objs', '=', '[b\"12\",', 'b\"345\",', 'b\"67\",', 'b\"89a\",', 'b\"bcde\",', 'b\"fgh\",', 'b\"ijklmn\"]', 'buf', '=', 'self.make_streambuffer', 'self.check_append_all_then_skip_all', 'buf,', 'objs,', 'bytes)', 'buf', '=', 'self.make_streambuffer', 'self.check_append_all_then_skip_all', 'buf,', 'objs,', 'bytearray)', 'buf', '=', 'self.make_streambuffer', 'self.check_append_all_then_skip_all', 'buf,', 'objs,', 'buf', '=', 'self.make_streambuffer', '10)', 'i', 'range', '9', 'buf.append', 'b\"x\")', 'len', 'buf._buffers', '1)', 'i', 'range', '9', 'buf.append', 'b\"x\")', 'len', 'buf._buffers', '2)', 'buf.advance', '10)', 'len', 'buf._buffers', '1)', 'buf.advance', '8)', 'len', 'buf._buffers', '0)', 'len', 'buf', '0)', 'test_large', 'self', 'objs', '=', 'b\"12\"', '*', '5,', 'b\"345\"', '*', '2,', 'b\"67\"', '*', '20,', 'b\"89a\"', '*', '12,', 'b\"bcde\"', '*', '1,', 'b\"fgh\"', '*', '7,', 'b\"ijklmn\"', '*', '2,', 'buf', '=', 'self.make_streambuffer', 'self.check_append_all_then_skip_all', 'buf,', 'objs,', 'bytes)', 'buf', '=', 'self.make_streambuffer', 'self.check_append_all_then_skip_all', 'buf,', 'objs,', 'bytearray)', 'buf', '=', 'self.make_streambuffer', 'self.check_append_all_then_skip_all', 'buf,', 'objs,', 'buf', '=', 'self.make_streambuffer', '10)', 'i', 'range', '3', 'buf.append', 'b\"x\"', '*', '11)', 'len', 'buf._buffers', '3)', 'buf.append', 'b\"y\")', 'len', 'buf._buffers', '4)', 'buf.append', 'b\"z\")', 'len', 'buf._buffers', '4)', 'buf.advance', '33)', 'len', 'buf._buffers', '1)', 'buf.advance', '2)', 'len', 'buf._buffers', '0)', 'len', 'buf', '0)']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/tornado/test/locale_test.py",
        "vector": "['datetime', 'os', 'shutil', 'tempfile', 'unittest', 'utf8,', 'to_unicode', 'unicode_type', 'TranslationLoaderTest', 'SAVE_VARS', '=', '[\"_translations\",', '\"_use_gettext\"]', 'clear_locale_cache', 'self', '=', '{}', 'setUp', 'self', 'self.saved', '=', '{}', 'var', 'TranslationLoaderTest.SAVE_VARS:', 'self.saved', 'var]', '=', 'getattr', 'var)', 'self.clear_locale_cache', 'tearDown', 'self', 'k,', 'v', 'self.saved.items', 'setattr', 'k,', 'v)', 'self.clear_locale_cache', 'test_csv', 'self', 'os.path.dirname', '__file__', '\"csv_translations\")', 'locale', '=', '\"fr_FR\")', 'locale,', 'locale.translate', '\"school\"', '\"\\\\u00e9cole\")', 'test_csv_bom', 'self', 'open(', 'os.path.dirname', '__file__', '\"csv_translations\",', '\"fr_FR.csv\"', '\"rb\",', 'f:', 'char_data', '=', 'to_unicode', 'f.read', '[\"utf', '-', '8', '-', 'sig\",', '\"utf', '-', '16\"', 'tmpdir', '=', 'tempfile.mkdtemp', 'open', 'tmpdir,', '\"fr_FR.csv\"', '\"wb\")', 'f:', 'f.write', 'char_data.encode', 'tmpdir)', 'locale', '=', '\"fr_FR\")', 'locale,', 'locale.translate', '\"school\"', '\"\\\\u00e9cole\")', 'shutil.rmtree', 'tmpdir)', 'test_gettext', 'self', 'os.path.dirname', '__file__', '\"gettext_translations\"', 'locale', '=', '\"fr_FR\")', 'locale,', 'locale.translate', '\"school\"', '\"\\\\u00e9cole\")', 'locale.pgettext', '\"law\",', '\"right\"', '\"le', 'droit\")', 'locale.pgettext', '\"good\",', '\"right\"', '\"le', 'bien\")', 'locale.pgettext', '\"club\",', '\"clubs\",', '1', '\"le', 'club\")', 'locale.pgettext', '\"club\",', '\"clubs\",', '2', '\"les', 'clubs\"', 'locale.pgettext', '\"stick\",', '\"club\",', '\"clubs\",', '1', '\"le', 'b\\\\xe2ton\")', 'locale.pgettext', '\"stick\",', '\"club\",', '\"clubs\",', '2', '\"les', 'b\\\\xe2tons\")', 'LocaleDataTest', 'self', 'name', '=', '\"es_LA\"', '\"name\"]', 'name,', 'unicode_type', 'name,', '\"Espa\\\\u00f1ol\")', 'utf8', 'name', 'b\"Espa\\\\xc3\\\\xb1ol\")', 'self', 'locale', '=', '\"en_US\")', 'date', '=', 'datetime.datetime', '2013,', '4,', '28,', '18,', '35)', 'date,', '=', '\"April', '28,', '2013', 'at', '6', '35', 'pm\"', 'aware_dt', '=', 'datetime.datetime.now', 'datetime.timezone.utc)', 'naive_dt', '=', 'aware_dt.replace', '=', 'name,', 'now', '{\"aware\":', 'aware_dt,', '\"naive\":', 'naive_dt', '.items', 'self.subTest', 'dt', '=', 'name', 'now', '-', 'seconds', '=', '2', '=', '),', '\"2', 'seconds', 'ago\",', 'now', '-', '=', '2', '=', '),', '\"2', 'ago\",', 'now', '-', 'hours', '=', '2', '=', '),', '\"2', 'hours', 'ago\",', 'now', '-', 'days', '=', '1', '=', '=', '),', '\"yesterday\",', 'date', '=', 'now', '-', 'days', '=', '2)', 'date,', '=', '=', 'locale._weekdays', 'date.weekday', 'date', '=', 'now', '-', 'days', '=', '300)', 'date,', '=', '=', '\"', '%', 's', '%d\"', '%', '(locale._months', 'date.month', '-', '1', 'date.day', 'date', '=', 'now', '-', 'days', '=', '500)', 'date,', '=', '=', '\"', '%', 's', '%d,', '%d\"', '%', '(locale._months', 'date.month', '-', '1', 'date.day,', 'date.year', 'test_friendly_number', 'self', 'locale', '=', '\"en_US\")', 'locale.friendly_number', '1000000', '\"1', '000', '000\")', 'self', 'locale', '=', '\"en_US\")', '\"\")', '\"A\"', '\"A\")', '\"A\",', '\"B\"', '\"A', 'B\")', '\"A\",', '\"B\",', '\"C\"', '\"A,', 'B', 'C\")', 'self', 'locale', '=', '\"en_US\")', 'date', '=', 'datetime.datetime', '2013,', '4,', '28,', '18,', '35)', 'date', '=', 'date,', 'dow', '=', '\"Sunday,', 'April', '28\")', 'date', '=', 'date,', 'dow', '=', '\"April', '28\")']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/tornado/test/locks_test.py",
        "vector": "['datetime', 'unittest', 'gen,', 'locks', 'gen_test,', 'ConditionTest', 'setUp', 'self', 'super', '.setUp', '=', '[]', 'self,', 'future,', 'key', 'callback', '_', 'future.result', '\"timeout\")', 'key)', 'future.add_done_callback', 'callback)', 'loop_briefly', 'self', 'self.io_loop.add_callback', 'self.stop)', 'self.wait', 'test_repr', 'self', 'c', '=', 'locks.Condition', '\"Condition\",', 'repr', 'c', '\"waiters\",', 'repr', 'c', 'c.wait', '\"waiters\",', 'repr', 'c', '@gen_test', 'self', 'c', '=', 'locks.Condition', 'self.io_loop.call_later', '0.01,', 'c.wait', 'self', 'c', '=', 'locks.Condition', 'c.wait', '\"wait1\")', 'c.wait', '\"wait2\")', '1)', 'self.loop_briefly', '1)', 'self.loop_briefly', '\"wait1\",', '\"wait2\",', 'self', 'c', '=', 'locks.Condition', 'i', 'range', '6', 'c.wait', 'i)', '3)', 'self.loop_briefly', 'range', '3', '1)', 'self.loop_briefly', 'range', '4', '2)', 'self.loop_briefly', 'range', '6', 'self', 'c', '=', 'locks.Condition', 'i', 'range', '4', 'c.wait', 'i)', 'self.loop_briefly', 'range', '4', '+', '@gen_test', 'test_wait_timeout', 'self', 'c', '=', 'locks.Condition', 'wait', '=', 'c.wait', 'seconds', '=', '0.01', 'self.io_loop.call_later', '0.02,', 'gen.sleep', '0.03)', 'wait', '@gen_test', 'test_wait_timeout_preempted', 'self', 'c', '=', 'locks.Condition', 'self.io_loop.call_later', '0.01,', 'wait', '=', 'c.wait', 'seconds', '=', '0.02', 'gen.sleep', '0.03)', 'wait', '@gen_test', 'self', 'c', '=', 'locks.Condition', 'c.wait', '0)', 'c.wait', 'seconds', '=', '0.01', '1)', 'c.wait', '2)', 'c.wait', '3)', 'gen.sleep', '0.02)', '\"timeout\"', '2)', 'gen.sleep', '0.01)', '\"timeout\",', '0,', '2', '\"timeout\",', '0,', '2', '\"timeout\",', '0,', '2,', '3', '@gen_test', 'self', 'c', '=', 'locks.Condition', 'c.wait', '0)', 'c.wait', 'seconds', '=', '0.01', '1)', 'c.wait', '2)', 'gen.sleep', '0.02)', '\"timeout\"', '\"timeout\",', '0,', '2', '@gen_test', 'self', 'c', '=', 'locks.Condition', 'futures', '=', 'c.wait', '_', 'range', '3', 'futures', '1', '.add_done_callback', '_:', '2)', 'all', 'f.done', 'f', 'futures', '@gen_test', 'test_garbage_collection', 'self', 'c', '=', 'locks.Condition', '_', 'range', '101', 'c.wait', 'seconds', '=', '0.01', 'future', '=', 'c.wait', '102,', 'len', 'c._waiters', 'gen.sleep', '0.02)', '1,', 'len', 'c._waiters', 'future.done', 'future.done', 'EventTest', 'test_repr', 'self', 'event', '=', 'locks.Event', '\"clear\"', 'str', 'event', '\"set\"', 'str', 'event', 'event.set', '\"clear\"', 'str', 'event', '\"set\"', 'str', 'event', 'test_event', 'self', 'e', '=', 'locks.Event', 'future_0', '=', 'e.wait', 'e.set', 'future_1', '=', 'e.wait', 'e.clear', 'future_2', '=', 'e.wait', 'future_0.done', 'future_1.done', 'future_2.done', '@gen_test', 'test_event_timeout', 'self', 'e', '=', 'locks.Event', 'e.wait', 'seconds', '=', '0.01', 'self.io_loop.add_timeout', 'seconds', '=', '0.01', 'e.set)', 'e.wait', 'seconds', '=', '1', 'test_event_set_multiple', 'self', 'e', '=', 'locks.Event', 'e.set', 'e.set', 'test_event_wait_clear', 'self', 'e', '=', 'locks.Event', 'f0', '=', 'e.wait', 'e.clear', 'f1', '=', 'e.wait', 'e.set', 'f0.done', 'f1.done', 'test_negative_value', 'self', 'value', '=', '-', '1)', 'test_repr', 'self', 'sem', '=', 'repr', 'sem', '\"unlocked', 'value', '1\",', 'repr', 'sem', 'sem.acquire', '\"locked\",', 'repr', 'sem', '\"waiters\",', 'repr', 'sem', 'sem.acquire', '\"waiters\",', 'repr', 'sem', 'test_acquire', 'self', 'sem', '=', 'f0', '=', 'sem.acquire', 'f0.done', 'f1', '=', 'sem.acquire', 'f1.done', 'f2', '=', 'sem.acquire', 'f1.done', 'f2.done', 'f2.done', 'sem.acquire', '.done', '0,', 'len', 'sem._waiters', '@gen_test', 'test_acquire_timeout', 'self', 'sem', '=', '2)', 'sem.acquire', 'sem.acquire', 'acquire', '=', 'sem.acquire', 'seconds', '=', '0.01', 'self.io_loop.call_later', '0.02,', 'gen.sleep', '0.3)', 'acquire', 'sem.acquire', 'f', '=', 'sem.acquire', 'f.done', 'f.done', '@gen_test', 'test_acquire_timeout_preempted', 'self', 'sem', '=', '1)', 'sem.acquire', 'self.io_loop.call_later', '0.01,', 'acquire', '=', 'sem.acquire', 'seconds', '=', '0.02', 'gen.sleep', '0.03)', 'acquire', 'self', 'sem', '=', 'sem.acquire', '.done', 'sem.acquire', '.done', 'sem.acquire', '.done', 'sem.acquire', '.done', '@gen_test', 'test_garbage_collection', 'self', 'sem', '=', 'value', '=', '0)', 'futures', '=', 'sem.acquire', 'seconds', '=', '0.01', '_', 'range', '101)', 'future', '=', 'sem.acquire', '102,', 'len', 'sem._waiters', 'gen.sleep', '0.02)', '1,', 'len', 'sem._waiters', 'future.done', 'future.done', 'future', 'futures:', 'future.result)', '@gen_test', 'test_context_manager', 'self', 'sem', '=', 'sem.acquire', 'sem.acquire', '.done', '@gen_test', 'self', 'sem', '=', 'f', 'sem', 'f', 'sem.acquire', '.done', '@gen_test', 'self', 'sem', '=', 'sem.acquire', '1', '/', '0', 'sem.acquire', '.done', '@gen_test', 'test_context_manager_timeout', 'self', 'sem', '=', 'sem.acquire', 'seconds', '=', '0.01', 'sem.acquire', '.done', '@gen_test', 'self', 'sem', '=', 'value', '=', '0)', 'sem.acquire', 'seconds', '=', '0.01', 'sem.acquire', '.done', '@gen_test', 'test_context_manager_contended', 'self', 'sem', '=', '=', '[]', 'f', 'sem.acquire', '\"acquired', '%d\"', '%', 'gen.sleep', '0.01)', '%d\"', '%', '[f', 'i)', 'i', 'range', '2', '=', '[]', 'i', 'range', '2', '\"acquired', '%d\"', '%', 'i,', '%d\"', '%', 'i', '@gen_test', 'self', 'self', 'self', 'sem', '=', 'sem.acquire', 'future', '=', 'sem.acquire', 'future.done', 'future.done', 'LockTests', 'test_repr', 'self', 'lock', '=', 'locks.Lock', 'repr', 'lock)', 'lock.acquire', 'repr', 'lock)', 'self', 'lock', '=', 'locks.Lock', 'lock.acquire', '.done', 'future', '=', 'lock.acquire', 'future.done', 'future.done', '@gen_test', 'self', 'lock', '=', 'locks.Lock', 'lock.acquire', '.done', 'N', '=', '5', '=', '[]', 'f', 'idx', 'lock.acquire', 'idx)', 'futures', '=', '[f', 'i)', 'i', 'range', 'N', 'any', 'future.done', 'future', 'futures', 'futures', 'range', 'N', '@gen_test', 'self', 'lock', '=', 'locks.Lock', 'lock.acquire', '.done', 'N', '=', '5', '=', '[]', 'f', 'idx', 'lock:', 'idx)', 'futures', '=', '[f', 'i)', 'i', 'range', 'N', 'futures', 'range', 'N', '@gen_test', 'test_acquire_timeout', 'self', 'lock', '=', 'locks.Lock', 'lock.acquire', 'lock.acquire', 'timeout', '=', 'seconds', '=', '0.01', 'lock.acquire', '.done', 'self', 'lock', '=', 'locks.Lock', 'lock.acquire', '@gen_test', 'self', 'locks.Lock', 'self', 'locks.Lock', '__name__', '==']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/tornado/test/log_test.py",
        "vector": "['contextlib', 'glob', 'os', 're', 'subprocess', 'sys', 'tempfile', 'unittest', 'utf8', 'OptionParser', '@contextlib.contextmanager', '=', 'LINE_RE', '=', 're.compile(', 'b\"', '?s', '\\\\x01\\\\\\\\', 'E', '[0', '-', '9', '6}', '[0', '-', '9', '2', '0', '-', '9', '2', '0', '-', '9', '2}', 'log_test', '0', '-', '9', '+', '\\\\\\\\', '\\\\x02', '(.', '*', '\"', 'setUp', 'self', '=', '=', '=', '\"\\\\u0001\"}', '=', '\"\\\\u0002\"', 'self.logger', '=', 'self.logger.propagate', '=', 'self.tempdir', '=', 'tempfile.mkdtemp', 'self.filename', '=', 'self.tempdir,', '\"log.out\")', '=', 'self.filename)', 'tearDown', 'self', 'self.filename)', 'os.rmdir', 'self.tempdir)', 'self,', 'filename', 'filename,', '=', '\"utf', '-', '8\")', 'get_output', 'self', 'open', 'self.filename,', '\"rb\")', 'f:', '=', 'f.read', '.strip', 'm', '=', 'm:', 'm.group', '1)', 'Exception', '\"output', \"didn't\", 'match', 'regex:', '%r\"', '%', 'self', '\"foo\")', 'self.get_output', 'b\"foo\")', 'self', 'b\"\\\\xe9\")', 'self.get_output', 'utf8', 'repr', 'b\"\\\\xe9\"', 'self', '\"\\\\u00e9\".encode', '\"utf8\"', 'bytes,', 'self.get_output', 'utf8', '\"\\\\u00e9\"', 'self.get_output', 'utf8', 'repr', 'utf8', '\"\\\\u00e9\"', 'self', 'Exception', 'b\"\\\\xe9\")', 'Exception:', '\"caught', 'output', '=', 'self.get_output', 'output,', 'rb\"Exception.', '*', '\\\\\\\\xe9\")', 'rb\"\\\\n\",', 'output)', 'self', '\"\\\\u00e9\")', 'self.get_output', 'utf8', '\"\\\\u00e9\"', 'setUp', 'self', 'super', '.setUp', 'self.options', '=', 'OptionParser', 'self.options)', 'self.logger', '=', 'self.logger.propagate', '=', 'test_log_file', 'self', 'tmpdir', '=', 'tempfile.mkdtemp', 'self.options.log_file_prefix', '=', 'tmpdir', '+', '\"', '/', 'test_log\"', 'options', '=', 'self.options,', 'logger', '=', 'self.logger)', '1,', 'len', '\"hello\")', '0', '.flush', 'filenames', '=', 'glob.glob', 'tmpdir', '+', '\"', '/', 'test_log', '*', '\")', '1,', 'len', 'filenames', 'open', 'filenames', '0', '=', '\"utf', '-', '8\")', 'f:', 'f.read', 'r\"', '^', '\\\\', 'E', '^', '*', '\\\\]', 'hello$\")', 'filename', 'glob.glob', 'tmpdir', '+', '\"', '/', 'test_log', '*', '\"', 'filename)', 'os.rmdir', 'tmpdir)', 'self', 'tmpdir', '=', 'tempfile.mkdtemp', 'self.options.log_file_prefix', '=', 'tmpdir', '+', '\"', '/', 'test_log\"', 'self.options.log_rotate_mode', '=', '\"time\"', 'options', '=', 'self.options,', 'logger', '=', 'self.logger)', '\"hello\")', '0', '.flush', 'filenames', '=', 'glob.glob', 'tmpdir', '+', '\"', '/', 'test_log', '*', '\")', '1,', 'len', 'filenames', 'open', 'filenames', '0', '=', '\"utf', '-', '8\")', 'f:', 'f.read', 'r\"', '^', '\\\\', 'E', '^', '*', '\\\\]', 'hello$\")', 'filename', 'glob.glob', 'tmpdir', '+', '\"', '/', 'test_log', '*', '\"', 'filename)', 'os.rmdir', 'tmpdir)', 'test_wrong_rotate_mode_value', 'self', 'self.options.log_file_prefix', '=', '\"some_path\"', 'self.options.log_rotate_mode', '=', '\"wrong_mode\"', 'options', '=', 'self.options,', 'logger', '=', 'self.logger,', 'logs_present', 'self,', 'statement,', 'args', '=', 'IMPORT', '=', 'options,', 'LOG_INFO', '=', '\"hello\"', \"'\", 'program', '=', '\"', 'IMPORT,', 'statement,', 'LOG_INFO', 'proc', '=', 'subprocess.Popen(', '[sys.executable,', '\"', '-', 'c\",', 'program]', '+', '(args', 'stdout', '=', 'subprocess.PIPE,', 'stderr', '=', 'subprocess.STDOUT,', 'stdout,', 'stderr', '=', 'proc.communicate', '0,', '\"process', 'failed:', '%r\"', '%', 'stdout)', 'b\"hello\"', 'stdout', 'self', 'self.logs_present', 'self', 'self.logs_present', '\"', 'self', 'self.logs_present', '\",', '[\"', '--', '=', 'none\"', 'self', 'self.logs_present', '\",', '[\"', '--', '=', 'self', 'self.logs_present', '=', '\"none\";', \"')\", 'self', 'self.logs_present', '=', '\")', 'self', 'self.logs_present(', '=', '\",', '[\"', '--', '=']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/tornado/test/netutil_test.py",
        "vector": "['errno', 'os', 'signal', 'socket', 'subprocess', 'Popen', 'sys', 'time', 'unittest', 'OverrideResolver,', 'ThreadedResolver,', 'gen_test,', 'pycares', 'pycares', '=', 'CaresResolver', '=', 'object', 'resolver', '=', '@gen_test', 'test_localhost', 'self:', '=', 'self.resolver.resolve', '\"localhost\",', '80,', 'socket.AF_UNSPEC)', 'socket.AF_INET,', '(\"127.0.0.1\",', '80', 'socket.AF_INET6,', '(\"', '1\",', '80', 'f\"loopback', 'address', 'found', '\",', 'object', 'resolver', '=', '@gen_test', 'test_bad_host', 'self:', 'self.resolver.resolve', '\"an', '80,', 'socket.AF_UNSPEC)', '*', 'args', 'errno.EIO,', '\"mock:', 'lookup', 'failed\")', 'setUp', 'self', 'super', '.setUp', 'self.resolver', '=', 'setUp', 'self', 'super', '.setUp', 'self.resolver', '=', '=', '=', 'tearDown', 'self', '=', 'super', '.tearDown', 'OverrideResolverTest', 'setUp', 'self', 'super', '.setUp', '=', '(\"google.com\",', '80', '(\"1.2.3.4\",', '80', '(\"google.com\",', '80,', 'socket.AF_INET', '(\"1.2.3.4\",', '80', '(\"google.com\",', '80,', 'socket.AF_INET6', '\"2a02', '6b8', '7c', '40c', 'c51e', '495f', 'e23a', '3\",', '80,', '),', 'self.resolver', '=', 'OverrideResolver', '@gen_test', 'test_resolve_multiaddr', 'self', 'result', '=', 'self.resolver.resolve', '\"google.com\",', '80,', 'socket.AF_INET)', 'socket.AF_INET,', '(\"1.2.3.4\",', '80', 'result)', 'result', '=', 'self.resolver.resolve', '\"google.com\",', '80,', 'socket.AF_INET6)', '(socket.AF_INET6,', '(\"2a02', '6b8', '7c', '40c', 'c51e', '495f', 'e23a', '3\",', '80,', '0,', '0', 'result', 'ThreadedResolverTest', 'setUp', 'self', 'super', '.setUp', 'self.resolver', '=', 'ThreadedResolver', 'tearDown', 'self', 'self.resolver.close', 'super', '.tearDown', 'setUp', 'self', 'super', '.setUp', 'self.resolver', '=', '=', '=', 'tearDown', 'self', '=', 'super', '.tearDown', '@unittest.skipIf', '==', '\"preexec_fn', 'available', 'on', 'self', 'TIMEOUT', '=', '5', '=', '[sys.executable,', '\"', '-', 'c\",', 'start', '=', 'time.time', 'popen', '=', 'Popen', 'preexec_fn', '=', 'signal.alarm', 'TIMEOUT', 'time.time', '-', 'start', '<', 'TIMEOUT:', '=', 'popen.poll', '0,', 'time.sleep', '0.05)', 'self.fail', 'timed', 'out\")', '@unittest.skipIf', 'pycares', '\"pycares', 'module', 'present\")', '@unittest.skipIf', '==', '\"pycares', \"doesn't\", 'loopback', 'on', '@unittest.skipIf', '==', '\"pycares', \"doesn't\", '127.0.0.1', 'on', 'CaresResolverTest', 'setUp', 'self', 'super', '.setUp', 'self.resolver', '=', 'CaresResolver', '@unittest.skipIf', 'module', 'present\")', '@unittest.skipIf(', 'getattr', '\"__version__\",', '\"0.0\")', '<', '\"12.1\",', '\"old', 'version', 'of', '@unittest.skipIf', '==', 'resolver', 'hangs', 'on', 'setUp', 'self', 'super', '.setUp', 'self.resolver', '=', 'IsValidIPTest', 'self', '\"127.0.0.1\"', '\"4.4.4.4\"', '\"', '1\"', '\"2620', '0', '1cfe', 'face', 'b00c', '3\"', '\"www.google.com\"', '\"localhost\"', '\"4.4.4.4', '<', '\"', '\"', '127.0.0.1\"', '\"\"', '\"', '\"', '\"\\\\n\"', '\"\\\\x00\"', '\"a\"', '*', '100', 'self', '\"TRAVIS\"', 'os.environ:', 'self.skipTest', '\"dual', '-', 'stack', 'servers', 'often', 'have', 'conflicts', 'on', 'sockets', '=', '0,', '\"localhost\")', '=', 'sockets', '0', '.getsockname', '1]', 'all', 's.getsockname', '1]', '==', 's', 'sockets', '1', 'sock', 'sockets:', 'sock.close', '@unittest.skipIf(', 'socket,', '\"SO_REUSEPORT\"', '\"SO_REUSEPORT', 'self', 'sockets', '=', '[]', 'socket,', '=', '=', 'sockets', '=', '\"127.0.0.1\",', '=', 'all', 's.getsockname', '1]', '==', 's', 'sockets', 'socket.close', 'sock', 'sockets:', 'sock.close']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/tornado/test/options_test.py",
        "vector": "['datetime', 'io', 'os', 'sys', 'unittest', 'mock', 'unittest', 'OptionParser,', 'subTest', 'Email', 'object', 'self,', 'value', 'value,', 'str)', '\"', '@', '\"', 'value:', 'self._value', '=', 'value', '@property', 'value', 'self', 'self._value', 'OptionsTest', 'self', 'options', '=', 'OptionParser', '=', '80)', '\"', '--', '=', '443\"', '443)', 'test_parse_config_file', 'self', 'options', '=', 'OptionParser', '=', '80)', '\"username\",', '=', '\"foo\")', '\"my_path\")', 'config_path', '=', 'os.path.dirname', 'os.path.abspath', '__file__', '\"options_test.cfg\"', 'options.parse_config_file', 'config_path)', '443)', 'options.username,', '\"\u674e\u5eb7\")', 'options.my_path,', 'config_path)', 'test_parse_callbacks', 'self', 'options', '=', 'OptionParser', 'self.called', '=', 'callback', 'self.called', '=', 'options.add_parse_callback', 'callback)', '=', 'self.called)', 'self.called)', 'self.called', '=', 'self.called)', 'test_help', 'self', 'options', '=', 'OptionParser', '=', 'sys.stderr', 'sys.stderr', '=', 'SystemExit', '\"', '--', 'help\"', 'usage', '=', 'sys.stderr.getvalue', 'sys.stderr', '=', '\"Usage', '\",', 'usage)', 'self', '=', 'OptionParser', '\"verbose\",', '=', 'sub_options', '=', 'OptionParser', '\"foo\",', 'type', '=', 'str)', 'rest', '=', '\"', '--', 'verbose\",', '\"', '--', 'foo', '=', 'bar\"]', 'rest,', '\"', '--', 'foo', '=', 'bar\"', 'rest2', '=', 'rest)', 'rest2,', 'sub_options.foo,', '\"bar\")', '=', 'sys.stderr', 'sys.stderr', '=', '\"', '--', 'verbose\"', 'sys.stderr', '=', 'test_setattr', 'self', 'options', '=', 'OptionParser', '\"foo\",', '=', '1,', 'type', '=', 'options.foo', '=', '2', 'options.foo,', '2)', 'test_setattr_type_check', 'self', 'options', '=', 'OptionParser', '\"foo\",', '=', '1,', 'type', '=', 'options.foo', '=', '\"2\"', 'self', 'values', '=', '[]', 'options', '=', 'OptionParser', '\"foo\",', '=', '1,', 'type', '=', 'callback', '=', 'values.append)', 'options.foo', '=', '2', 'values,', '[2', '_sample_options', 'self', 'options', '=', 'OptionParser', '\"a\",', '=', '1)', '\"b\",', '=', '2)', 'options', 'test_iter', 'self', 'options', '=', 'self._sample_options', 'set', '\"a\",', '\"b\",', '\"help\"', 'set', 'iter', 'options', 'test_getitem', 'self', 'options', '=', 'self._sample_options', '1,', 'options', '\"a\"', 'test_setitem', 'self', 'options', '=', 'OptionParser', '\"foo\",', '=', '1,', 'type', '=', 'options', '\"foo\"]', '=', '2', 'options', '\"foo\"', '2)', 'test_items', 'self', 'options', '=', 'self._sample_options', 'expected', '=', '\"a\",', '1', '(\"b\",', '2', '(\"help\",', 'options.help', 'actual', '=', 'options.items', 'expected,', 'actual)', 'self', 'options', '=', 'self._sample_options', 'expected', '=', '{\"a\":', '1,', '\"b\":', '2,', '\"help\":', 'options.help}', 'expected,', 'test_group_dict', 'self', 'options', '=', 'OptionParser', '\"a\",', '=', '1)', '\"b\",', 'group', '=', '\"b_group\",', '=', '2)', 'frame', '=', 'sys._getframe', '0)', '=', 'frame.f_code.co_filename', 'set', '\"b_group\",', '\"\",', 'options.groups', 'b_group_dict', '=', 'options.group_dict', '\"b_group\")', '\"b\":', '2', 'b_group_dict)', 'options.group_dict', 'test_mock_patch', 'self', 'options', '=', 'OptionParser', '\"foo\",', '=', '1)', '\"', '--', 'foo', '=', '2\"', 'options.foo,', '2)', 'mock.patch.object', 'options.mockable', '\"foo\",', '3', 'options.foo,', '3)', 'options.foo,', '2)', 'mock.patch.object', 'options.mockable', '\"foo\",', '4', 'options.foo,', '4)', 'options.foo', '=', '5', 'options.foo,', '5)', 'mock.patch.object', 'options.mockable', '\"foo\",', '6', 'options.foo,', '6)', 'options.foo,', '5)', 'options.foo,', '2)', 'self', 'options', '=', 'OptionParser', '\"str\",', 'type', '=', 'str)', 'type', '=', 'type', '=', '\"float\",', 'type', '=', 'float)', '\"datetime\",', 'type', '=', 'datetime.datetime)', 'type', '=', '\"email\",', 'type', '=', 'Email)', '-', 'of', '-', 'type', '=', 'multiple', '=', '-', 'of', '-', 'str\",', 'type', '=', 'str,', 'multiple', '=', 'options', '_check_options_values', 'self,', 'options', 'options.str,', '\"qwer\")', '42)', 'options.float,', '1.5)', 'options.datetime,', 'datetime.datetime', '2013,', '4,', '28,', '5,', '16', 'seconds', '=', '45', 'options.email.value,', '@', 'web.com\")', 'options.email,', 'Email', '[1,', '2,', '3', '[\"a\",', '\"b\",', '\"c\"', 'test_types', 'self', 'options', '=', '\"', '--', 'str', '=', '\"', '--', '=', 'qwer\",', '\"', '--', '=', '42\",', '\"', '--', 'float', '=', '1.5\",', '\"', '--', 'datetime', '=', '2013', '-', '04', '-', '28', '05', '16\",', '\"', '--', '=', '45s\",', '\"', '--', 'email', '=', '@', 'web.com\",', '\"', '--', '-', 'of', '-', '=', '1', '2', '3\",', '\"', '--', '-', 'of', '-', 'str', '=', 'a', 'b', 'c\",', 'self._check_options_values', 'options)', 'self', 'config_file_name', '\"options_test_types.cfg\",', '\"options_test_types_str.cfg\",', '):', 'options', '=', 'options.parse_config_file(', 'os.path.dirname', '__file__', 'config_file_name)', 'self._check_options_values', 'options)', 'self', 'options', '=', 'OptionParser', '\"foo\",', 'type', '=', 'str,', 'multiple', '=', '\"', '--', 'foo', '=', 'a', 'b', 'c\"', 'options.foo,', '[\"a\",', '\"b\",', '\"c\"', 'self', 'options', '=', 'OptionParser', '\"foo\",', 'type', '=', 'multiple', '=', '\"', '--', 'foo', '=', '1', '3', '5', '7\"', 'options.foo,', '[1,', '3,', '5,', '6,', '7', 'self', 'options', '=', 'OptionParser', '\"foo\")', 'cm:', '\"foo\")', 'str', '\"Option.', '*', 'foo.', '*', 'already', 'self', 'tests', '=', '(\"foo', '-', 'bar\",', '\"foo', '-', 'bar\"', '(\"foo_bar\",', '\"foo_bar\"', '(\"foo', '-', 'bar\",', '\"foo_bar\"', '(\"foo_bar\",', '\"foo', '-', 'bar\"', 'a,', 'b', 'tests:', 'subTest', 'self,', 'a', '=', 'a,', 'b', '=', 'b', 'options', '=', 'OptionParser', 'a)', 'cm:', 'b)', 'str', '\"Option.', '*', 'foo.bar.', '*', 'already', 'self', '[\"foo', '-', 'bar\",', '\"foo_bar\"', 'flag', '[\"', '--', 'foo', '-', 'bar', '=', 'a\",', '\"', '--', 'foo_bar', '=', 'a\"', 'options', '=', 'OptionParser', 'flag', 'options.foo_bar,', '\"a\")', 'options', '\"foo', '-', 'bar\"', '\"a\")', 'options', '\"foo_bar\"', '\"a\")', 'self', '[\"foo', '-', 'bar\",', '\"foo_bar\"', 'options', '=', 'OptionParser', 'options.parse_config_file(', 'os.path.dirname', '__file__', '\"options_test.cfg\")', 'options.foo_bar,', '\"a\")', 'self', 'options', '=', 'OptionParser', '-', 'group', '=', '\"g\")', 'group', '=', '\"g\")', 'all_options', '=', '[\"help\",', '-', 'options', 'all_options)', 'k', '(k,', 'v)', 'options.items', 'all_options)', '.keys', 'all_options)', 'options.group_dict', '\"g\"', '-', 'buf', '=', 'buf)', '\"', '--', '-', 'buf.getvalue', '\"', '--', '-', 'buf.getvalue']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/tornado/test/process_test.py",
        "vector": "['os', 'signal', 'subprocess', 'sys', 'time', 'unittest', 'HTTPClient,', 'HTTPServer', 'IOLoop', 'gen_log', 'Subprocess', 'SimpleAsyncHTTPClient', 'ExpectLog,', 'gen_test', 'skipIfNonUnix', 'Application', '@skipIfNonUnix', 'ProcessTest', 'get_app', 'self', 'get', 'self', 'self.get_argument', '\"exit\",', 'os._exit', 'self.get_argument', '\"exit\"', 'self.get_argument', '\"signal\",', 'os.kill', 'os.getpid', 'self.get_argument', '\"signal\"', 'self.write', 'str', 'os.getpid', 'Application', '\"', '/', '\",', 'tearDown', 'self', 'child', 'process', 'tearDown\")', 'os._exit', '1)', 'signal.alarm', '0)', 'super', '.tearDown', 'test_multi_process', 'self', 'ExpectLog(', 'gen_log,', '\"', '.*', 'processes', '|', 'child', '.*', 'exited', '|', 'uncaught', '\"', '):', 'sock,', '=', 'get_url', 'path', '\"http', '/', '/', '127.0.0.1', '%', 'd', '%', 's\"', '%', 'path)', 'signal.alarm', '5)', 'id', '=', '3,', 'max_restarts', '=', '3)', 'id', 'signal.alarm', '5)', 'SystemExit', 'e:', 'e.code,', '0)', 'sock.close', 'id', '(0,', '1', 'id,', 'f', 'server', '=', 'HTTPServer', 'self.get_app', 'server.add_sockets', 'sock', '.wait', 'f', 'id', '==', '2:', 'id,', 'sock.close', 'client', '=', 'HTTPClient', 'SimpleAsyncHTTPClient)', 'fetch', 'url,', 'fail_ok', '=', 'client.fetch', 'get_url', 'url', 'e:', '(fail_ok', 'e.code', '==', '599', 'fetch', '\"', '/', '?exit', '=', '2\",', 'fail_ok', '=', 'fetch', '\"', '/', '?exit', '=', '3\",', 'fail_ok', '=', 'fetch', '\"', '/', '\"', '.body)', 'fetch', '\"', '/', '?exit', '=', '0\",', 'fail_ok', '=', 'pid', '=', 'fetch', '\"', '/', '\"', '.body)', 'fetch', '\"', '/', '?exit', '=', '4\",', 'fail_ok', '=', 'pid2', '=', 'fetch', '\"', '/', '\"', '.body)', 'pid,', 'pid2)', 'fetch', '\"', '/', '?exit', '=', '0\",', 'fail_ok', '=', 'os._exit', '0)', 'Exception:', 'child', 'process', '%d\",', 'id,', '=', '@skipIfNonUnix', 'SubprocessTest', 'self,', 'subproc', 'subproc.proc.wait', '@gen_test', 'test_subprocess', 'self', 'unittest.SkipTest(', '\"Subprocess', 'tests', 'compatible', '\"', 'subproc', '=', 'Subprocess(', '[sys.executable,', '\"', '-', 'u\",', '\"', '-', 'i\"', '=', 'Subprocess.STREAM,', 'stdout', '=', 'Subprocess.STREAM,', 'stderr', '=', 'subprocess.STDOUT,', 'self.addCleanup', 'subproc', 'self.addCleanup', 'subproc.stdout.close)', 'self.addCleanup', 'subproc.stdout.read_until', 'b\"', '>', '>', '>', '\")', \"'hello'\", '\\\\n\")', 'data', '=', 'subproc.stdout.read_until', 'b\"\\\\n\")', 'data,', 'b\"hello\\\\n\")', 'subproc.stdout.read_until', 'b\"', '>', '>', '>', '\")', 'SystemExit\\\\n\")', 'data', '=', 'subproc.stdout.read_until_close', 'data,', 'b\"\")', '@gen_test', 'self', 'subproc', '=', 'Subprocess(', '[sys.executable,', '\"', '-', 'u\",', '\"', '-', 'i\"', '=', 'Subprocess.STREAM,', 'stdout', '=', 'Subprocess.STREAM,', 'stderr', '=', 'subprocess.STDOUT,', 'self.addCleanup', 'subproc', 'subproc.stdout.read_until', 'b\"', '>', '>', '>', '\")', 'data', '=', 'subproc.stdout.read_until_close', 'data,', 'b\"\\\\n\")', '@gen_test', 'test_stderr', 'self', 'subproc', '=', 'Subprocess(', '[sys.executable,', '\"', '-', 'u\",', '\"', '-', 'c\",', 'sys;', 'sys.stderr.write', \"'hello\\\\n'\", '\"', 'stderr', '=', 'Subprocess.STREAM,', 'self.addCleanup', 'subproc', 'data', '=', 'subproc.stderr.read_until', 'b\"\\\\n\")', 'data,', 'b\"hello\\\\n\")', 'subproc.stderr.close', 'test_sigchild', 'self', 'self.addCleanup', 'subproc', '=', 'Subprocess', 'sys.executable,', '\"', '-', 'c\",', 'subproc.set_exit_callback', 'self.stop)', 'ret', '=', 'self.wait', 'ret,', '0)', 'ret)', '@gen_test', 'test_sigchild_future', 'self', 'self.addCleanup', 'subproc', '=', 'Subprocess', 'sys.executable,', '\"', '-', 'c\",', 'ret', '=', 'ret,', '0)', 'ret)', 'test_sigchild_signal', 'self', 'self.addCleanup', 'subproc', '=', 'Subprocess(', '[sys.executable,', '\"', '-', 'c\",', 'time;', 'time.sleep', '30', '\"', 'stdout', '=', 'Subprocess.STREAM,', 'self.addCleanup', 'subproc.stdout.close)', 'subproc.set_exit_callback', 'self.stop)', 'time.sleep', '0.1)', 'os.kill', 'subproc.pid,', 'signal.SIGTERM)', 'ret', '=', 'self.wait', 'fut', '=', 'subproc.stdout.read_until_close', 'fut.add_done_callback', 'f:', 'self.stop', 'self.wait', '\"subprocess', 'failed', 'to', '\"subprocess', 'closed', 'stdout', 'but', 'failed', 'to', '\"', '\"get', 'signal\"', 'ret)', 'ret,', '-signal.SIGTERM)', '@gen_test', 'self', 'self.addCleanup', 'subproc', '=', 'Subprocess', 'sys.executable,', '\"', '-', 'c\",', 'sys;', 'sys.exit', '1', '\"', 'cm:', '1)', '@gen_test', 'self', 'self.addCleanup', 'subproc', '=', 'Subprocess', 'sys.executable,', '\"', '-', 'c\",', 'sys;', 'sys.exit', '1', '\"', 'ret', '=', '=', 'ret,', '1)']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/tornado/test/queues_test.py",
        "vector": "['datetime', 'unittest', 'gen,', 'queues', 'gen_test,', 'self', 'q', '=', 'queues.Queue', 'maxsize', '=', '1)', 'hex', 'id', 'q', 'repr', 'q', 'hex', 'id', 'q', 'str', 'q', 'q.get', 'q_str', 'repr', 'q', 'str', 'q', '\"', '<', 'Queue\"', '\"maxsize', '=', '1\",', 'q_str)', '\"getters', '1', '\",', 'q_str)', '\"putters\",', 'q_str)', 'q_str)', 'q.put', 'q.put', 'q.put', 'q_str', 'repr', 'q', 'str', 'q', '\"getters\",', 'q_str)', '\"putters', '1', '\",', 'q_str)', '=', '2\",', 'q_str)', 'self', 'q', '=', 'queues.Queue', 'i', '[1,', '3,', '2', 'q.put_nowait', 'i)', 'items', '=', '[q.get_nowait', '_', 'range', '3', '1,', '3,', '2', 'items)', '@gen_test', 'test_maxsize', 'self', 'queues.Queue,', 'maxsize', '=', 'queues.Queue,', 'maxsize', '=', '-', '1)', 'q', '=', 'queues.Queue', 'maxsize', '=', '2)', 'q.empty', 'q.full', '2,', 'q.maxsize)', 'q.put', '0', '.done', 'q.put', '1', '.done', 'q.empty', 'q.full', 'put2', '=', 'q.put', '2)', 'put2.done', '0,', 'q.get', 'put2.done', 'q.empty', 'q.full', 'QueueGetTest', '@gen_test', 'self', 'q', '=', 'queues.Queue', 'q.put_nowait', '0)', '0,', 'q.get', 'self', 'q', '=', 'queues.Queue', 'q.put_nowait', '0)', '0,', 'q.get_nowait', 'self', 'q', '=', 'queues.Queue', 'queues.QueueEmpty,', 'q.get_nowait)', '@gen_test', 'self', 'q', '=', 'queues.Queue', '1)', 'q.put_nowait', '0)', 'put', '=', 'q.put', '1)', '0,', 'q.get', 'put', '@gen_test', 'self', 'q', '=', 'queues.Queue', 'q.put', '0)', 'self.io_loop.call_later', '0.01,', 'q.put_nowait,', '1)', 'self.io_loop.call_later', '0.02,', 'q.put_nowait,', '2)', '0,', 'q.get', 'timeout', '=', 'seconds', '=', '1', '1,', 'q.get', 'timeout', '=', 'seconds', '=', '1', '@gen_test', 'test_get_timeout', 'self', 'q', '=', 'queues.Queue', 'get_timeout', '=', 'q.get', 'timeout', '=', 'seconds', '=', '0.01', 'get', '=', 'q.get', 'get_timeout', 'q.put_nowait', '0)', '0,', 'get', '@gen_test', 'test_get_timeout_preempted', 'self', 'q', '=', 'queues.Queue', 'get', '=', 'q.get', 'timeout', '=', 'seconds', '=', '0.01', 'q.put', '0)', 'gen.sleep', '0.02)', '0,', 'get', '@gen_test', 'test_get_clears_timed_out_putters', 'self', 'q', '=', 'queues.Queue', '1)', 'putters', '=', '[q.put', 'i,', 'seconds', '=', '0.01', 'i', 'range', '10', 'put', '=', 'q.put', '10)', '10,', 'len', 'q._putters', 'gen.sleep', '0.02)', '10,', 'len', 'q._putters', 'put.done', 'q.put', '11)', '0,', 'q.get', '1,', 'len', 'q._putters', 'putter', 'putters', '1', 'putter.result)', '@gen_test', 'test_get_clears_timed_out_getters', 'self', 'q', '=', 'queues.Queue', 'getters', '=', 'q.get', 'seconds', '=', '0.01', '_', 'range', '10)', 'get', '=', 'q.get', '11,', 'len', 'q._getters', 'gen.sleep', '0.02)', '11,', 'len', 'q._getters', 'get.done', 'q.get', '2,', 'len', 'q._getters', 'getter', 'getters:', 'getter.result)', '@gen_test', 'self', 'q', '=', 'queues.Queue', 'i', 'range', '5', 'q.put', 'i)', 'f', 'results', '=', '[]', 'i', 'q:', 'results.append', 'i)', 'i', '==', '4:', 'results', 'results', '=', 'f', 'results,', 'range', '5', 'QueuePutTest', '@gen_test', 'self', 'q', '=', 'queues.Queue', 'q.put', '0)', '0,', 'q.get_nowait', 'self', 'q', '=', 'queues.Queue', '1)', 'q.put', '0)', 'queues.QueueFull,', 'q.put_nowait,', '1)', '@gen_test', 'self', 'q', '=', 'queues.Queue', 'get0', '=', 'q.get', 'get1', '=', 'q.get', 'q.put', '0)', '0,', 'get0', 'q.put', '1)', '1,', 'get1', '@gen_test', 'self', 'q', '=', 'queues.Queue', 'get0', '=', 'q.get', 'get1', '=', 'q.get', 'q.put_nowait', '0)', 'gen.moment', '0,', 'get0', 'q.put_nowait', '1)', 'gen.moment', '1,', 'get1', '@gen_test', 'self', 'q', '=', 'queues.Queue', '1)', 'q.put_nowait', '0)', 'q.get', 'self.io_loop.call_later', '0.01,', 'self.io_loop.call_later', '0.02,', 'futures', '=', '[q.put', '0', 'q.put', '1', 'any', 'f.done', 'f', 'futures', 'futures', '@gen_test', 'test_put_timeout', 'self', 'q', '=', 'queues.Queue', '1)', 'q.put_nowait', '0)', 'put_timeout', '=', 'q.put', '1,', 'timeout', '=', 'seconds', '=', '0.01', 'put', '=', 'q.put', '2)', 'put_timeout', '0,', 'q.get_nowait', '2,', 'q.get', 'put', '@gen_test', 'test_put_timeout_preempted', 'self', 'q', '=', 'queues.Queue', '1)', 'q.put_nowait', '0)', 'put', '=', 'q.put', '1,', 'timeout', '=', 'seconds', '=', '0.01', 'q.get', 'gen.sleep', '0.02)', 'put', '@gen_test', 'test_put_clears_timed_out_putters', 'self', 'q', '=', 'queues.Queue', '1)', 'putters', '=', '[q.put', 'i,', 'seconds', '=', '0.01', 'i', 'range', '10', 'put', '=', 'q.put', '10)', '10,', 'len', 'q._putters', 'gen.sleep', '0.02)', '10,', 'len', 'q._putters', 'put.done', 'q.put', '11)', '2,', 'len', 'q._putters', 'putter', 'putters', '1', 'putter.result)', '@gen_test', 'test_put_clears_timed_out_getters', 'self', 'q', '=', 'queues.Queue', 'getters', '=', 'q.get', 'seconds', '=', '0.01', '_', 'range', '10)', 'get', '=', 'q.get', 'q.get', '12,', 'len', 'q._getters', 'gen.sleep', '0.02)', '12,', 'len', 'q._getters', 'get.done', 'q.put', '0)', '1,', 'len', 'q._getters', '0,', 'get', 'getter', 'getters:', 'getter.result)', '@gen_test', 'test_float_maxsize', 'self', 'q', '=', 'queues.Queue', 'maxsize', '=', '1.3)', 'q.empty', 'q.full', 'q.put_nowait', '0)', 'q.put_nowait', '1)', 'q.empty', 'q.full', 'queues.QueueFull,', 'q.put_nowait,', '2)', '0,', 'q.get_nowait', 'q.empty', 'q.full', 'q.put', '2)', 'put', '=', 'q.put', '3)', 'put.done', '1,', 'q.get', 'put', 'q.full', '=', 'queues.Queue', 'self', 'q', '=', '@gen_test', 'self', 'q', '=', 'i', 'range', '100', 'q.put_nowait', 'i)', '=', '0', 'item', '=', 'q.get', '+=', 'item', 'gen.sleep', '*', '0.01)', 'sum', 'range', '100', '@gen_test', 'self', 'q', '=', 'q.put_nowait', '0)', '=', 'q.get', 'gen.moment', '@gen_test', 'self', 'q', '=', '@gen_test', 'self', 'q', '=', 'q.put', '0)', 'timeout', '=', 'seconds', '=', '0.01', '=', '@gen_test', 'self', 'q', '=', 'maxsize', '=', '2)', 'q.put_nowait', '1,', '\"a\"', 'q.put_nowait', '0,', '\"b\"', 'q.full', 'q.put', '3,', '\"c\"', 'q.put', '2,', '\"d\"', '0,', '\"b\"', 'q.get_nowait', '1,', '\"a\"', 'q.get', '2,', '\"d\"', 'q.get_nowait', '3,', '\"c\"', 'q.get', 'q.empty', '=', '@gen_test', 'self', 'q', '=', 'maxsize', '=', '2)', 'q.put_nowait', '1)', 'q.put_nowait', '0)', 'q.full', 'q.put', '3)', 'q.put', '2)', '3,', 'q.get_nowait', '2,', 'q.get', '0,', 'q.get_nowait', '1,', 'q.get', 'q.empty', 'ProducerConsumerTest', '@gen_test', 'test_producer_consumer', 'self', 'q', '=', 'queues.Queue', 'maxsize', '=', '3)', '=', '[]', 'consumer', 'q.get', 'producer', 'item', 'range', '10', 'q.put', 'item)', 'consumer', 'producer', 'range', '10', '__name__', '==']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/tornado/test/resolve_test_helper.py",
        "vector": "['IOLoop', 'ThreadedResolver', 'resolver', '=', 'ThreadedResolver', 'IOLoop.current', '.run_sync', 'resolver.resolve', '\"localhost\",', '80']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/tornado/test/routing_test.py",
        "vector": "['HTTPHeaders,', 'HTTPMessageDelegate,', 'HTTPServerConnectionDelegate,', 'HostMatches,', 'PathMatches,', 'ReversibleRouter,', 'Router,', 'Rule,', 'RuleRouter,', 'Application,', 'Router', 'self,', 'request,', '*', '*', 'kwargs', 'MessageDelegate', 'HTTPMessageDelegate', 'self,', 'connection', 'self.connection', '=', 'connection', 'self', 'self.connection.write_headers(', '\"HTTP', '/', '1.1\",', '200,', '\"OK\"', 'HTTPHeaders', '\"Content', '-', 'Length\":', '\"2\"', 'b\"OK\",', 'MessageDelegate', 'request.connection)', 'get_app', 'self', 'self', 'response', '=', 'self.fetch', '\"', '/', 'any_request\")', 'response.body,', 'b\"OK\")', 'resources', '=', '{}', 'GetResource', 'get', 'self,', 'path', 'path', 'resources:', '404)', 'resources', 'path', 'PostResource', 'post', 'self,', 'path', 'resources', 'path]', '=', 'self.request.body', 'HTTPMethodRouter', 'Router', 'self,', 'app', 'self.app', '=', 'app', 'self,', 'request,', '*', '*', 'kwargs', '=', 'GetResource', 'request.method', '==', '\"GET\"', 'PostResource', 'request,', 'path_args', '=', 'request.path', 'get_app', 'self', 'HTTPMethodRouter', 'Application', 'test_http_method_router', 'self', 'response', '=', 'self.fetch', '\"', '/', 'post_resource\",', 'method', '=', '\"POST\",', 'body', '=', '\"data\")', 'response.code,', '200)', 'response', '=', 'self.fetch', '\"', '/', 'get_resource\")', 'response.code,', '404)', 'response', '=', 'self.fetch', '\"', '/', 'post_resource\")', 'response.code,', '200)', 'response.body,', 'b\"data\")', 'get', 'self,', '*args,', '*', '*', 'kwargs', '\"app_name\")', 'self.write', '\"app_name\"]', '+', '\":', '\")', '+', '\":', '\"', '+', 'self.reverse_url', '=', '=', 'CustomRouter', 'ReversibleRouter', 'self', 'super', 'self.routes', '=', '{}', 'add_routes', 'self,', 'routes', 'self.routes.update', 'routes)', 'self,', 'request,', '*', '*', 'kwargs', 'request.path', 'self.routes:', 'app,', '=', 'self.routes', 'request.path]', 'request,', 'reverse_url', 'self,', 'name,', '*args', '=', '\"', '/', '\"', '+', 'name', 'self.routes', 'get_app', 'self', 'router', '=', 'CustomRouter', 'CustomApplication', 'Application', 'reverse_url', 'self,', 'name,', '*args', 'router.reverse_url', 'name,', '*args)', 'app1', '=', 'CustomApplication', 'app_name', '=', '\"app1\")', 'app2', '=', 'CustomApplication', 'app_name', '=', '\"app2\")', 'router.add_routes(', '\"', '/', '(app1,', '\"', '/', '(app2,', '\"', '/', '(app2,', 'router', 'test_custom_router', 'self', 'response', '=', 'self.fetch', '\"', '/', 'response.body,', 'b\"app1:', 'response', '=', 'self.fetch', '\"', '/', 'response.body,', 'b\"app2:', 'response', '=', 'self.fetch', '\"', '/', 'response.body,', 'b\"app2:', 'ConnectionDelegate', 'HTTPServerConnectionDelegate', 'start_request', 'self,', 'server_conn,', 'request_conn', 'MessageDelegate', 'HTTPMessageDelegate', 'self,', 'connection', 'self.connection', '=', 'connection', 'self', 'response_body', '=', 'b\"OK\"', 'self.connection.write_headers(', '\"HTTP', '/', '1.1\",', '200,', '\"OK\"', 'HTTPHeaders', '\"Content', '-', 'Length\":', 'str', 'len', 'response_body', 'self.connection.write', 'response_body)', 'MessageDelegate', 'request_conn)', 'RuleRouterTest', 'get_app', 'self', 'app', '=', 'Application', 'request_callable', 'request', 'request.connection.write_headers(', '\"HTTP', '/', '1.1\",', '200,', '\"OK\"', 'HTTPHeaders', '\"Content', '-', 'Length\":', '\"2\"', 'request.connection.write', 'b\"OK\")', 'router', '=', 'CustomRouter', 'router.add_routes(', '{\"', '/', '(app,', '\".', '*', '\",', 'HostMatches', '\"www.example.com\"', 'PathMatches', '\"', '/', '],', '),', 'Rule', 'PathMatches', '\"', '/', '.', '*', 'router', 'Rule', 'PathMatches', '\"', '/', 'name', '=', 'Rule', 'PathMatches', '\"', '/', 'request_callable\"', 'request_callable', '(\"', '/', 'ConnectionDelegate', '],', 'app', 'self', 'response', '=', 'self.fetch', '\"', '/', 'response.body,', 'response', '=', 'self.fetch', '\"', '/', 'headers', '=', '\"Host\":', '\"www.example.com\"', 'response.body,', 'response', '=', 'self.fetch', '\"', '/', 'response.body,', 'response', '=', 'self.fetch', '\"', '/', 'response.code,', '404)', 'response', '=', 'self.fetch', '\"', '/', 'response.body,', 'b\"OK\")', 'response', '=', 'self.fetch', '\"', '/', 'request_callable\")', 'response.body,', 'b\"OK\")', 'response', '=', 'self.fetch', '\"', '/', '404\")', 'response.code,', '404)', 'get_app', 'self', 'wsgi_app', '=', 'self.wsgi_app)', 'get', 'self,', '*args,', '*', '*', 'kwargs', 'self.reverse_url', 'RuleRouter(', 'PathMatches', '\"', '/', '*', '\"', 'Application', 'r\"', '/', '/', 'test\",', '),', '(PathMatches', '\"', '/', 'wsgi\"', 'wsgi_app', 'wsgi_app', 'self,', 'environ,', 'start_response', 'start_response', '\"200', 'OK\",', '[b\"WSGI\"]', 'self', 'response', '=', 'self.fetch', '\"', '/', '/', 'test\")', 'response.body,', 'b\"', '/', '/', 'test\")', 'response', '=', 'self.fetch', '\"', '/', 'wsgi\")', 'response.body,', 'b\"WSGI\")', 'self', 'response', '=', 'self.fetch', '\"', '/', '404\")', 'response.code,', '404)']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/tornado/test/runtests.py",
        "vector": "['functools', 'reduce', 'gc', 'io', 'locale', 'textwrap', 'sys', 'unittest', 'AsyncHTTPClient', 'HTTPServer', 'Resolver', 'add_parse_callback,', 'options', 'TEST_MODULES', '=', 'all', 'TEST_MODULES)', 'stderr', 'unittest.TextTestRunner', 'self,', '*args,', '*', '*', 'kwargs', 'kwargs', '\"stream\"]', '=', 'stderr', 'super', '*', 'args,', '*', '*', 'kwargs)', 'run', 'self,', 'test', 'result', '=', 'super', '.run', 'test)', 'result.skipped:', '=', 'set', '(test,', 'result.skipped)', 'self.stream.write(', 'textwrap.fill(', '\"Some', 'tests', 'were', 'skipped', 'because:', '%s\"', '%', '\",', 'self.stream.write', '\"\\\\n\")', 'result', 'LogCounter', 'self,', '*args,', '*', '*', 'kwargs', 'super', '*', 'args,', '*', '*', 'kwargs)', '=', '=', '=', '0', 'filter', 'self,', '>=', '+=', '1', '>=', '+=', '1', '>=', '+=', '1', 'self,', 'real', 'self.real', '=', 'real', 'self.byte_count', '=', '0', 'write', 'self,', 'data', 'self.byte_count', '+=', 'len', 'data)', 'self.real.write', 'data)', 'flush', 'self', 'self.real.flush', '=', '=', '=', 'module', '=', '*', '\")', '=', '=', 'module', '=', '*', '\"', '.setLevel', '\"httpclient\",', 'type', '=', 'str,', '=', 'callback', '=', 's:', 'AsyncHTTPClient.configure(', 's,', '=', 'dict', 'allow_ipv6', '=', '),', '\"httpserver\",', 'type', '=', 'str,', '=', 'callback', '=', 'HTTPServer.configure)', '\"resolver\",', 'type', '=', 'str,', '=', 'callback', '=', 'Resolver.configure)', '\"debug_gc\",', 'type', '=', 'str,', 'multiple', '=', 'help', '=', '\"A', 'comma', '-', 'separated', 'of', 'gc', 'module', 'debug', 'constants,', '\"', '\"e.g.', 'DEBUG_STATS', 'DEBUG_COLLECTABLE', 'DEBUG_OBJECTS\",', 'callback', '=', 'values:', 'gc.set_debug(', 'reduce', '(getattr', 'gc,', 'v)', 'v', 'values', '),', '\"fail', '-', '-', 'logs\",', '=', 'help', '=', '\"If', 'true,', 'fail', 'the', 'tests', 'any', 'log', 'output', 'produced', '(unless', 'captured', 'by', 'ExpectLog', '\",', 'set_locale', 'x', 'locale.setlocale', 'locale.LC_ALL,', 'x)', '\"locale\",', 'type', '=', 'str,', '=', 'callback', '=', 'set_locale)', 'log_counter', '=', 'LogCounter', 'add_parse_callback', '0', '.addFilter', 'log_counter', '=', 'sys.stderr', '=', 'sys.stderr', '=', 'kwargs', '=', '{}', 'kwargs', '=', 'kwargs', '\"testRunner\"]', '=', '**', 'kwargs)', '>', '0', '>', '0', '>', '0', '>', '0', '):', '\"logged', '%d', '%d', '%d', '%d', 'bytes', 'to', 'stderr\",', 'sys.exit', '1)', '__name__', '==']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/tornado/test/simple_httpclient_test.py",
        "vector": "['collections', 'contextlib', 'errno', 'os', 're', 'socket', 'ssl', 'sys', 'to_unicode,', 'utf8', 'gen,', 'version', 'AsyncHTTPClient', 'HTTPHeaders,', 'IOLoop', 'Event', 'gen_log', 'Resolver,', 'SimpleAsyncHTTPClient,', 'httpclient_test', 'ExpectLog,', 'gen_test,', 'skipIfNoIPv6,', 'Application,', 'url,', 'stream_request_body', 'get_http_client', 'self', 'client', '=', 'SimpleAsyncHTTPClient', '=', 'client,', 'SimpleAsyncHTTPClient', 'client', 'self,', 'queue,', 'wake_callback', 'self.queue', '=', 'queue', 'self.wake_callback', '=', 'wake_callback', 'get', 'self', 'trigger\")', 'event', '=', 'Event', 'self.queue.append', 'event.set)', 'self.get_argument', '\"wake\",', '\"true\")', '==', '\"true\":', 'self.wake_callback', 'event.wait', 'get', 'self', 'self.stream', '=', 'self.detach', 'IOLoop.current', '.spawn_callback', 'self.write_response)', 'write_response', 'self', 'self.stream.write(', 'utf8(', '\"HTTP', '/', '1.0', '200', 'OK\\\\r\\\\nContent', '-', 'Length:', '%s\\\\r\\\\n\\\\r\\\\nok\"', '%', 'self.get_argument', '\"value\")', 'self.stream.close', 'head', 'self', 'self.set_header', '\"Content', '-', 'Length\",', '\"7\")', 'options', 'self', 'self.set_header', '\"Access', '-', 'Control', '-', 'Allow', '-', '\"', '*', '\")', 'self.write', '\"ok\")', 'get', 'self', 'self.set_status', '204)', 'post', 'self', 'redirect_code', '=', 'self.request.body)', 'redirect_code', '(302,', '303', '\"unexpected', 'body', '%r\"', '%', 'self.request.body', 'self.set_header', '\"Location\",', '\"', '/', 'see_other_get\")', 'self.set_status', 'redirect_code)', 'get', 'self', 'self.request.body:', 'Exception', '\"unexpected', 'body', '%r\"', '%', 'self.request.body)', 'self.write', '\"ok\")', 'get', 'self', 'self.write', 'self.request.headers', '\"Host\"', 'get', 'self', '\"HTTP', '/', '1\"', 'stream', '=', 'self.detach', 'stream.write', 'b\"HTTP', '/', '1.0', '200', 'OK\\\\r\\\\n\\\\r\\\\n\"', 'b\"hello\")', 'stream.close', '\"HTTP', '/', '1', 'required\")', 'post', 'self', 'self.write', 'self.request.body)', '@stream_request_body', 'prepare', 'self', 'self.set_status', '403)', 'object', 'create_client', 'self,', '*', '*', 'kwargs', 'get_app', 'self:', 'self.triggers', '=', 'collections.deque', 'Application(', 'url(', '\"', '/', 'trigger\",', 'dict', 'queue', '=', 'self.triggers,', 'wake_callback', '=', 'self.stop', '),', 'url', '\"', '/', 'chunk\",', 'url', '\"', '/', 'countdown', '/', '0', '-', '9', '+', '\",', 'name', '=', '\"countdown\"', 'url', '\"', '/', 'hello\",', 'url', '\"', '/', 'content_length\",', 'url', '\"', '/', 'head\",', 'url', '\"', '/', 'options\",', 'url', '\"', '/', 'no_content\",', 'url', '\"', '/', 'see_other_post\",', 'url', '\"', '/', 'see_other_get\",', 'url', '\"', '/', 'host_echo\",', 'url', '\"', '/', 'no_content_length\",', 'url', '\"', '/', 'echo_post\",', 'url', '\"', '/', 'url', '\"', '/', 'redirect\",', 'url', '\"', '/', 'user_agent\",', '],', 'gzip', '=', 'self:', 'SimpleAsyncHTTPClient', 'SimpleAsyncHTTPClient', 'SimpleAsyncHTTPClient', 'SimpleAsyncHTTPClient', '=', 'IOLoop', 'io_loop2:', 'make_client', 'gen.sleep', '0)', 'SimpleAsyncHTTPClient', 'client1', '=', 'self.io_loop.run_sync', 'make_client)', 'client2', '=', 'io_loop2.run_sync', 'make_client)', 'client1', 'client2)', 'test_connection_limit', 'self:', 'self.create_client', 'max_clients', '=', '2', 'client:', 'client.max_clients,', '2)', 'seen', '=', '[]', 'i', 'range', '4', 'cb', 'fut,', 'i', '=', 'i', 'seen.append', 'i)', 'self.stop', 'client.fetch', 'self.get_url', '\"', '/', 'trigger\"', '.add_done_callback', 'cb)', 'self.wait', 'condition', '=', 'len', 'self.triggers)', '==', '2)', 'len', 'client.queue', '2)', 'self.triggers.popleft', 'self.triggers.popleft', 'self.wait', 'condition', '=', '(len', 'self.triggers)', '==', '2', 'len', 'seen)', '==', '2', 'set', 'seen', 'set', '0,', '1', 'len', 'client.queue', '0)', 'self.triggers.popleft', 'self.triggers.popleft', 'self.wait', 'condition', '=', 'len', 'seen)', '==', '4)', 'set', 'seen', 'set', '0,', '1,', '2,', '3', 'len', 'self.triggers', '0)', '@gen_test', 'test_redirect_connection_limit', 'self:', 'self.create_client', 'max_clients', '=', '1', 'client:', 'response', '=', 'client.fetch', 'self.get_url', '\"', '/', 'countdown', '/', '3\"', 'max_redirects', '=', '3)', 'response.rethrow', 'test_max_redirects', 'self:', 'response', '=', 'self.fetch', '\"', '/', 'countdown', '/', '5\",', 'max_redirects', '=', '3)', '302,', 'response.code)', '\"', '/', 'countdown', '/', '5\"', '\"', '/', 'countdown', '/', '2\"', 'response.headers', '\"Location\"', '\"', '/', 'countdown', '/', '1\"', 'test_header_reuse', 'self:', 'headers', '=', 'HTTPHeaders', '\"User', '-', 'Agent\":', '\"Foo\"', 'self.fetch', '\"', '/', 'hello\",', 'headers', '=', 'headers)', 'headers.get_all', '\"User', '-', 'Agent\",', '\"Foo\"', 'self:', 'response', '=', 'self.fetch', '\"', '/', 'user_agent\",', 'method', '=', '\"GET\")', '200,', 'response.code)', 'response.body.decode', '/', 'version', 'test_see_other_redirect', 'self:', 'code', '(302,', '303', 'response', '=', 'self.fetch', '\"', '/', 'see_other_post\",', 'method', '=', '\"POST\",', 'body', '=', '\"', '%', 'd\"', '%', 'code)', '200,', 'response.code)', '\"', '/', 'see_other_post\"', '\"', '/', 'see_other_get\"', '\"POST\",', 'response.request.method)', '@gen_test', 'test_connect_timeout', 'self:', 'timeout', '=', '0.1', 'cleanup_event', '=', 'Event', 'test', '=', 'self', 'TimeoutResolver', 'Resolver', 'resolve', 'self,', '*args,', '*', '*', 'kwargs', 'cleanup_event.wait', 'socket.AF_INET,', '(\"127.0.0.1\",', 'self.create_client', 'resolver', '=', 'TimeoutResolver', 'client:', 'client.fetch(', 'self.get_url', '\"', '/', 'hello\"', 'connect_timeout', '=', 'timeout,', 'request_timeout', '=', '3600,', '=', 'cleanup_event.set', 'gen.sleep', '0.2)', 'test_request_timeout', 'self:', 'timeout', '=', '0.1', 'os.name', '==', '\"nt\":', 'timeout', '=', '0.5', 'self.fetch', '\"', '/', 'trigger?wake', '=', 'false\",', 'request_timeout', '=', 'timeout,', '=', 'self.triggers.popleft', 'self.io_loop.run_sync', 'gen.sleep', '0', '@skipIfNoIPv6', 'test_ipv6', 'self:', '[sock]', '=', '0,', '\"', '1\",', 'family', '=', 'socket.AF_INET6)', '=', 'sock.getsockname', '1]', 'self.http_server.add_socket', 'sock)', 'url', '=', '\"', '%', 's', '/', '/', '1', '%', 'd', '/', 'hello\"', '%', '(self.get_protocol', 'Exception', 'self.fetch', 'url,', 'allow_ipv6', '=', '=', 'response', '=', 'self.fetch', 'url)', 'response.body,', 'b\"Hello', 'test_multiple_content_length_accepted', 'self:', 'response', '=', 'self.fetch', '\"', '/', 'content_length?value', '=', '2', '2\")', 'response.body,', 'b\"ok\")', 'response', '=', 'self.fetch', '\"', '/', 'content_length?value', '=', '2', '%', '202', '2\")', 'response.body,', 'b\"ok\")', 'ExpectLog(', 'gen_log,', '\".', '*', 'Multiple', 'unequal', 'Content', '-', 'Lengths\",', 'level', '=', '):', 'self.fetch', '\"', '/', 'content_length?value', '=', '2', '4\",', '=', 'self.fetch', '\"', '/', 'content_length?value', '=', '2', '%', '202', '3\",', '=', 'test_head_request', 'self:', 'response', '=', 'self.fetch', '\"', '/', 'head\",', 'method', '=', '\"HEAD\")', 'response.code,', '200)', 'response.headers', '\"content', '-', 'length\"', '\"7\")', 'response.body)', 'test_options_request', 'self:', 'response', '=', 'self.fetch', '\"', '/', 'options\",', 'method', '=', '\"OPTIONS\")', 'response.code,', '200)', 'response.headers', '\"content', '-', 'length\"', '\"2\")', 'response.headers', '\"access', '-', 'control', '-', 'allow', '-', '\"', '*', '\")', 'response.body,', 'b\"ok\")', 'test_no_content', 'self:', 'response', '=', 'self.fetch', '\"', '/', 'no_content\")', 'response.code,', '204)', '\"Content', '-', 'Length\",', 'response.headers)', 'test_host_header', 'self:', 'host_re', '=', 're.compile', 'b\"', '^', '127.0.0.1', '0', '-', '9', '+', '$\")', 'response', '=', 'self.fetch', '\"', '/', 'host_echo\")', 'host_re.match', 'response.body', 'url', '=', 'self.get_url', '\"', '/', 'host_echo\"', '.replace', '\"http', '/', '/', '\",', '\"http', '/', '/', 'me', 'secret', '@', '\")', 'response', '=', 'self.fetch', 'url)', 'host_re.match', 'response.body', 'response.body)', 'test_connection_refused', 'self:', 'cleanup_func,', '=', 'self.addCleanup', 'cleanup_func)', 'ExpectLog', 'gen_log,', '\".', '*', '\",', 'required', '=', 'cm:', 'self.fetch', '\"http', '/', '/', '127.0.0.1', '%', 'd', '/', '\"', '%', '=', '!=', '=', 'str', 'errno.ECONNREFUSED)', 'str', 'errno,', '\"WSAECONNREFUSED\"', '=', 'str', 'errno.WSAECONNREFUSED)', 'str(', 'expected_message', '=', 'errno.ECONNREFUSED)', 'expected_message', 'str', 'test_queue_timeout', 'self:', 'self.create_client', 'max_clients', '=', '1', 'client:', 'fut1', '=', 'client.fetch', 'self.get_url', '\"', '/', 'trigger\"', 'request_timeout', '=', '10)', 'self.wait', 'cm:', 'self.io_loop.run_sync(', 'client.fetch(', 'self.get_url', '\"', '/', 'hello\"', 'connect_timeout', '=', '0.1,', '=', 'str', '\"Timeout', 'request', 'queue\")', 'self.triggers.popleft', 'self.io_loop.run_sync', 'fut1)', 'test_no_content_length', 'self:', 'response', '=', 'self.fetch', '\"', '/', 'no_content_length\")', 'response.body', '==', 'b\"HTTP', '/', '1', 'required\":', 'self.skipTest', '\"requires', 'HTTP', '/', '1.x\")', 'b\"hello\",', 'response.body)', 'sync_body_producer', 'self,', 'write', 'write', 'b\"1234\")', 'write', 'b\"5678\")', 'self,', 'write', 'write', 'b\"1234\")', 'gen.moment', 'write', 'b\"5678\")', 'test_sync_body_producer_chunked', 'self:', 'response', '=', 'self.fetch(', '\"', '/', 'echo_post\",', 'method', '=', '\"POST\",', 'body_producer', '=', 'self.sync_body_producer', 'response.rethrow', 'response.body,', 'b\"12345678\")', 'test_sync_body_producer_content_length', 'self:', 'response', '=', 'self.fetch(', '\"', '/', 'echo_post\",', 'method', '=', '\"POST\",', 'body_producer', '=', 'self.sync_body_producer,', 'headers', '=', '\"Content', '-', 'Length\":', '\"8\"', 'response.rethrow', 'response.body,', 'b\"12345678\")', 'self:', 'response', '=', 'self.fetch(', '\"', '/', 'echo_post\",', 'method', '=', '\"POST\",', 'body_producer', '=', 'response.rethrow', 'response.body,', 'b\"12345678\")', 'self:', 'response', '=', 'self.fetch(', '\"', '/', 'echo_post\",', 'method', '=', '\"POST\",', 'body_producer', '=', 'headers', '=', '\"Content', '-', 'Length\":', '\"8\"', 'response.rethrow', 'response.body,', 'b\"12345678\")', 'test_native_body_producer_chunked', 'self:', 'body_producer', 'write', 'write', 'b\"1234\")', '0)', 'write', 'b\"5678\")', 'response', '=', 'self.fetch', '\"', '/', 'echo_post\",', 'method', '=', '\"POST\",', 'body_producer', '=', 'body_producer)', 'response.rethrow', 'response.body,', 'b\"12345678\")', 'test_native_body_producer_content_length', 'self:', 'body_producer', 'write', 'write', 'b\"1234\")', '0)', 'write', 'b\"5678\")', 'response', '=', 'self.fetch(', '\"', '/', 'echo_post\",', 'method', '=', '\"POST\",', 'body_producer', '=', 'body_producer,', 'headers', '=', '\"Content', '-', 'Length\":', '\"8\"', 'response.rethrow', 'response.body,', 'b\"12345678\")', 'self:', 'response', '=', 'self.fetch(', '\"', '/', 'echo_post\",', 'method', '=', '\"POST\",', 'body', '=', 'b\"1234\",', '=', 'response.body,', 'b\"1234\")', 'self:', 'body_producer', 'write', 'Exception', '\"should', 'be', 'called\")', 'response', '=', 'self.fetch(', '\"', '/', 'method', '=', '\"POST\",', 'body_producer', '=', 'body_producer,', '=', 'response.code,', '403)', 'self:', 'headers', '=', '[]', 'chunk_bytes', '=', '[]', 'self.fetch(', '\"', '/', 'redirect?url', '=', '/', 'hello\",', 'header_callback', '=', 'headers.append,', '=', 'chunk_bytes.append,', 'chunks', '=', 'map', 'to_unicode,', 'chunk_bytes', 'chunks,', '[\"Hello', '=', 'len', 'h', 'h', 'headers', '\"HTTP', '/', '\"', '1)', 'setUp', 'self', 'super', '.setUp', 'self.http_client', '=', 'self.create_client', 'create_client', 'self,', '*', '*', 'kwargs', 'SimpleAsyncHTTPClient', '=', '*', '*', 'kwargs)', 'setUp', 'self', 'super', '.setUp', 'self.http_client', '=', 'self.create_client', 'create_client', 'self,', '*', '*', 'kwargs', 'SimpleAsyncHTTPClient(', '=', '=', 'dict', 'validate_cert', '=', '*', '*', 'kwargs', 'test_ssl_options', 'self', 'resp', '=', 'self.fetch', '\"', '/', 'hello\",', 'ssl_options', '=', '\"cert_reqs\":', 'ssl.CERT_NONE', 'resp.body,', 'b\"Hello', 'test_ssl_context', 'self', 'ssl_ctx', '=', 'ssl.Purpose.SERVER_AUTH)', 'ssl_ctx.check_hostname', '=', '=', 'ssl.CERT_NONE', 'resp', '=', 'self.fetch', '\"', '/', 'hello\",', 'ssl_options', '=', 'ssl_ctx)', 'resp.body,', 'b\"Hello', 'self', 'ExpectLog', 'gen_log,', '\"SSL', '|', 'Uncaught', 'required', '=', 'self.fetch(', '\"', '/', 'hello\",', 'ssl_options', '=', 'dict', 'cert_reqs', '=', 'ssl.CERT_REQUIRED', '=', 'self', 'ExpectLog', 'gen_log,', '\"SSL', '|', 'Uncaught', 'ctx', '=', 'ssl.Purpose.SERVER_AUTH)', 'self.fetch', '\"', '/', 'hello\",', 'ssl_options', '=', 'ctx,', '=', 'self', 'ExpectLog', 'gen_log,', '\".', '*', '\")', 'expect_log:', 'self.fetch', '\"', '/', '\",', 'validate_cert', '=', '=', 'expect_log.logged_stack)', 'setUp', 'self', 'super', '.setUp', 'self.saved', '=', 'AsyncHTTPClient._save_configuration', 'tearDown', 'self', 'self.saved)', 'super', '.tearDown', 'test_max_clients', 'self', 'AsyncHTTPClient.configure', 'SimpleAsyncHTTPClient)', 'AsyncHTTPClient', '=', 'client:', 'client.max_clients,', '10)', 'AsyncHTTPClient', 'max_clients', '=', '11,', '=', 'client:', 'client.max_clients,', '11)', 'AsyncHTTPClient.configure', 'SimpleAsyncHTTPClient,', 'max_clients', '=', '12)', 'AsyncHTTPClient', '=', 'client:', 'client.max_clients,', '12)', 'AsyncHTTPClient', 'max_clients', '=', '13,', '=', 'client:', 'client.max_clients,', '13)', 'AsyncHTTPClient', 'max_clients', '=', '14,', '=', 'client:', 'client.max_clients,', '14)', 'respond_100', 'self,', 'request', 'self.http1', '=', '\"HTTP', '/', '1.\")', 'self.http1:', 'request.connection.write_headers(', '\"\",', '200,', '\"OK\"', 'HTTPHeaders', 'self.request', '=', 'request', 'fut', '=', 'self.request.connection.stream.write', 'b\"HTTP', '/', '1.1', '100', 'CONTINUE\\\\r\\\\n\\\\r\\\\n\")', 'fut.add_done_callback', 'self.respond_200)', 'respond_200', 'self,', 'fut', 'fut.result', 'fut', '=', 'self.request.connection.stream.write(', 'b\"HTTP', '/', '1.1', '200', 'OK\\\\r\\\\nContent', '-', 'Length:', '1\\\\r\\\\n\\\\r\\\\nA\"', 'fut.add_done_callback', 'f:', 'self.request.connection.stream.close', 'get_app', 'self', 'self.respond_100', 'self', 'res', '=', 'self.fetch', '\"', '/', '\")', 'self.http1:', 'self.skipTest', '\"requires', 'HTTP', '/', '1.x\")', 'res.body,', 'b\"A\")', 'respond_204', 'self,', 'request', 'self.http1', '=', '\"HTTP', '/', '1.\")', 'self.http1:', 'request.connection.write_headers(', '\"\",', '200,', '\"OK\"', 'HTTPHeaders', 'stream', '=', 'request.connection.detach', 'stream.write', 'b\"HTTP', '/', '1.1', '204', 'No', 'content\\\\r\\\\n\")', 'request.arguments.get', '-', '1', 'stream.write', 'b\"Content', '-', 'Length:', '5\\\\r\\\\n\")', 'stream.write', 'b\"Content', '-', 'Length:', '0\\\\r\\\\n\")', 'stream.write', 'b\"\\\\r\\\\n\")', 'stream.close', 'get_app', 'self', 'self.respond_204', 'test_204_no_content', 'self', 'resp', '=', 'self.fetch', '\"', '/', '\")', 'self.http1:', 'self.skipTest', '\"requires', 'HTTP', '/', '1.x\")', 'resp.code,', '204)', 'resp.body,', 'b\"\")', 'self', 'ExpectLog(', 'gen_log,', '\".', '*', 'Response', 'code', '204', 'should', 'have', 'body\",', 'level', '=', '):', 'self.fetch', '\"', '/', '=', '1\",', '=', 'self.http1:', 'self.skipTest', '\"requires', 'HTTP', '/', '1.x\")', '!=', 'SimpleAsyncHTTPClient:', 'self.skipTest', '\"curl', 'client', 'accepts', 'headers\")', 'setUp', 'self', 'super', '.setUp', 'self.http_client', '=', 'SimpleAsyncHTTPClient(', '=', '\"www.example.com\":', '\"127.0.0.1\",', '(\"foo.example.com\",', '8000', '(\"127.0.0.1\",', 'get_app', 'self', 'Application', 'url', '\"', '/', 'hello\",', 'self', 'response', '=', 'self.fetch', '\"http', '/', '/', 'www.example.com', '%', 'd', '/', 'hello\"', '%', 'response.rethrow', 'response.body,', 'b\"Hello', 'self', 'response', '=', 'self.fetch', '\"http', '/', '/', 'foo.example.com', '8000', '/', 'hello\")', 'response.rethrow', 'response.body,', 'b\"Hello', 'setUp', 'self', 'self.cleanup_event', '=', 'Event', 'test', '=', 'self', 'BadResolver', 'Resolver', 'resolve', 'self,', '*args,', '*', '*', 'kwargs', 'test.cleanup_event.wait', 'socket.AF_INET,', '(\"127.0.0.1\",', 'super', '.setUp', 'self.http_client', '=', 'SimpleAsyncHTTPClient', 'resolver', '=', 'BadResolver', 'get_app', 'self', 'Application', 'url', '\"', '/', 'hello\",', 'test_resolve_timeout', 'self', 'self.fetch', '\"', '/', 'hello\",', 'connect_timeout', '=', '0.1,', '=', 'self.cleanup_event.set', 'self.io_loop.run_sync', 'gen.sleep', '0', 'MaxHeaderSizeTest', 'get_app', 'self', 'SmallHeaders', 'get', 'self', 'self.set_header', '\"X', '-', 'Filler\",', '\"a\"', '*', '100)', 'self.write', '\"ok\")', 'LargeHeaders', 'get', 'self', 'self.set_header', '\"X', '-', 'Filler\",', '\"a\"', '*', '1000)', 'self.write', '\"ok\")', 'Application', '\"', '/', 'small\",', 'SmallHeaders', '(\"', '/', 'large\",', 'LargeHeaders', 'get_http_client', 'self', 'SimpleAsyncHTTPClient', 'max_header_size', '=', '1024)', 'test_small_headers', 'self', 'response', '=', 'self.fetch', '\"', '/', 'small\")', 'response.rethrow', 'response.body,', 'b\"ok\")', 'test_large_headers', 'self', 'ExpectLog', 'gen_log,', 'read\",', 'level', '=', 'self.fetch', '\"', '/', 'large\",', '=', 'MaxBodySizeTest', 'get_app', 'self', 'SmallBody', 'get', 'self', 'self.write', '\"a\"', '*', '1024', '*', '64)', 'LargeBody', 'get', 'self', 'self.write', '\"a\"', '*', '1024', '*', '100)', 'Application', '\"', '/', 'small\",', 'SmallBody', '(\"', '/', 'large\",', 'LargeBody', 'get_http_client', 'self', 'SimpleAsyncHTTPClient', 'max_body_size', '=', '1024', '*', '64)', 'test_small_body', 'self', 'response', '=', 'self.fetch', '\"', '/', 'small\")', 'response.rethrow', 'response.body,', 'b\"a\"', '*', '1024', '*', '64)', 'test_large_body', 'self', 'ExpectLog(', 'gen_log,', 'HTTP', 'message', 'Content', '-', 'Length', 'too', 'long\",', 'level', '=', '):', 'self.fetch', '\"', '/', 'large\",', '=', 'MaxBufferSizeTest', 'get_app', 'self', 'LargeBody', 'get', 'self', 'self.write', '\"a\"', '*', '1024', '*', '100)', 'Application', '\"', '/', 'large\",', 'LargeBody', 'get_http_client', 'self', 'SimpleAsyncHTTPClient(', 'max_body_size', '=', '1024', '*', '100,', 'max_buffer_size', '=', '1024', '*', '64', 'test_large_body', 'self', 'response', '=', 'self.fetch', '\"', '/', 'large\")', 'response.rethrow', 'response.body,', 'b\"a\"', '*', '1024', '*', '100)', 'ChunkedWithContentLengthTest', 'get_app', 'self', 'ChunkedWithContentLength', 'get', 'self', 'self.set_header', '\"Transfer', '-', '\"chunked\")', 'self.write', '\"Hello', 'Application', '\"', '/', 'ChunkedWithContentLength', 'get_http_client', 'self', 'SimpleAsyncHTTPClient', 'self', 'ExpectLog(', 'gen_log,', 'HTTP', 'message', 'Response', '\"', 'both', 'Transfer', '-', 'Content', '-', 'Length\"', '),', 'level', '=', '):', 'self.fetch', '\"', '/', '=']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/tornado/test/tcpclient_test.py",
        "vector": "['contextlib', 'os', 'socket', 'unittest', 'Future', 'Resolver', 'Queue', 'TCPClient,', 'TCPServer', 'gen_test', 'skipIfNoIPv6,', 'skipIfNonUnix', 'IOStream', 'Dict,', 'Tuple', 'AF1,', 'AF2', '=', '1,', '2', 'TestTCPServer', 'TCPServer', 'self,', 'family', 'super', 'self.streams', '=', '[]', 'self.queue', '=', 'Queue', 'sockets', '=', '0,', '\"localhost\",', 'family)', 'self.add_sockets', 'sockets)', '=', 'sockets', '0', '.getsockname', '1]', 'self,', 'stream,', 'address', 'self.streams.append', 'stream)', 'self.queue.put', 'stream)', 'stop', 'self', 'super', '.stop', 'stream', 'self.streams:', 'stream.close', 'TCPClientTest', 'setUp', 'self', 'super', '.setUp', 'self.server', '=', 'self.client', '=', 'TCPClient', 'start_server', 'self,', 'family', 'family', '==', 'socket.AF_UNSPEC', '\"TRAVIS\"', 'os.environ:', 'self.skipTest', '\"dual', '-', 'stack', 'servers', 'often', 'have', 'conflicts', 'on', 'self.server', '=', 'TestTCPServer', 'family)', 'stop_server', 'self', 'self.server', 'self.server.stop', 'self.server', '=', 'tearDown', 'self', 'self.client.close', 'self.stop_server', 'super', '.tearDown', 'skipIfLocalhostV4', 'self', '=', 'self.io_loop.run_sync', 'Resolver', '.resolve', '\"localhost\",', '80', 'families', '=', 'set', 'addr', '0]', 'addr', 'socket.AF_INET6', 'families:', 'self.skipTest', '\"localhost', 'does', 'resolve', 'to', 'ipv6\")', '@gen_test', 'do_test_connect', 'self,', 'family,', 'host,', 'source_ip', '=', '=', '=', 'self.start_server', 'family)', 'stream', '=', 'self.client.connect(', 'host,', 'source_ip', '=', 'source_ip,', '=', 'af', '=', 'family,', 'self.server', 'server_stream', '=', 'self.server.queue.get', 'stream', 'stream.write', 'b\"hello\")', 'data', '=', 'server_stream.read_bytes', '5)', 'data,', 'b\"hello\")', 'test_connect_ipv4_ipv4', 'self', 'self.do_test_connect', 'socket.AF_INET,', '\"127.0.0.1\")', 'test_connect_ipv4_dual', 'self', 'self.do_test_connect', 'socket.AF_INET,', '\"localhost\")', '@skipIfNoIPv6', 'test_connect_ipv6_ipv6', 'self', 'self.skipIfLocalhostV4', 'self.do_test_connect', 'socket.AF_INET6,', '\"', '1\")', '@skipIfNoIPv6', 'test_connect_ipv6_dual', 'self', 'self.skipIfLocalhostV4', 'self.skipTest', 'does', 'multiple', 'addresses\")', 'self.do_test_connect', 'socket.AF_INET6,', '\"localhost\")', 'test_connect_unspec_ipv4', 'self', 'self.do_test_connect', 'socket.AF_UNSPEC,', '\"127.0.0.1\")', '@skipIfNoIPv6', 'test_connect_unspec_ipv6', 'self', 'self.skipIfLocalhostV4', 'self.do_test_connect', 'socket.AF_UNSPEC,', '\"', '1\")', 'test_connect_unspec_dual', 'self', 'self.do_test_connect', 'socket.AF_UNSPEC,', '\"localhost\")', '@gen_test', 'test_refused_ipv4', 'self', 'cleanup_func,', '=', 'self.addCleanup', 'cleanup_func)', 'self.client.connect', '\"127.0.0.1\",', 'test_source_ip_fail', 'self', 'self.do_test_connect,', 'socket.AF_INET,', '\"127.0.0.1\",', 'source_ip', '=', '\"8.8.8.8\",', 'test_source_ip_success', 'self', 'self.do_test_connect', 'socket.AF_INET,', '\"127.0.0.1\",', 'source_ip', '=', '\"127.0.0.1\")', '@skipIfNonUnix', 'self', '==', '\"root\":', 'self.skipTest', 'root\")', 'self.do_test_connect,', 'socket.AF_INET,', '\"127.0.0.1\",', '=', '1,', '@gen_test', 'test_connect_timeout', 'self', 'timeout', '=', '0.05', 'TimeoutResolver', 'Resolver', 'resolve', 'self,', '*args,', '*', '*', 'kwargs', 'Future', 'TCPClient', 'resolver', '=', 'TimeoutResolver', '.connect(', '\"1.2.3.4\",', '12345,', 'timeout', '=', 'timeout', 'test_one_family', 'self', 'primary,', 'secondary', '=', 'AF1,', '\"a\"', '(AF1,', '\"b\"', 'primary,', 'AF1,', '\"a\"', '(AF1,', '\"b\"', 'secondary,', 'test_mixed', 'self', 'primary,', 'secondary', '=', 'AF1,', '\"a\"', '(AF2,', '\"b\"', '(AF1,', '\"c\"', '(AF2,', '\"d\"', 'primary,', 'AF1,', '\"a\"', '(AF1,', '\"c\"', 'secondary,', 'AF2,', '\"b\"', '(AF2,', '\"d\"', 'FakeStream', 'object', 'self', 'self.closed', '=', 'close', 'self', 'self.closed', '=', 'setUp', 'self', 'super', '.setUp', 'self.connect_futures', '=', '{}', 'self.streams', '=', '{}', '=', 'AF1,', '\"a\"', '(AF1,', '\"b\"', '(AF2,', '\"c\"', '(AF2,', '\"d\"', 'tearDown', 'self', 'stream', 'self.streams.values', 'stream.closed)', 'super', '.tearDown', 'create_stream', 'self,', 'af,', 'addr', 'stream', '=', 'self.streams', 'addr]', '=', 'stream', 'future', '=', 'Future', 'self.connect_futures', 'af,', 'addr', '=', 'future', 'stream,', 'future', 'self,', '*keys', 'self.connect_futures.keys', 'keys', 'resolve_connect', 'self,', 'af,', 'addr,', 'success', 'future', '=', 'self.connect_futures.pop', 'af,', 'addr', 'success:', 'future.set_result', 'self.streams', 'addr', 'self.streams.pop', 'addr)', 'self.io_loop.add_callback', 'self.stop)', 'self.wait', 'self,', 'conn', 'stream', 'conn.streams:', 'stream.closed)', 'start_connect', 'self,', 'conn', '=', 'self.create_stream)', 'future', '=', 'conn.start', '3600,', 'connect_timeout', '=', 'self.io_loop.time', '+', '3600)', 'conn,', 'future', 'test_immediate_success', 'self', 'conn,', 'future', '=', 'self.start_connect', 'self.connect_futures.keys', 'AF1,', '\"a\"', 'self.resolve_connect', 'AF1,', '\"a\",', 'future.result', '(AF1,', '\"a\",', 'self.streams', '\"a\"', 'test_immediate_failure', 'self', 'conn,', 'future', '=', 'self.start_connect', 'AF1,', '\"a\"', 'AF1,', '\"a\"', 'self.resolve_connect', 'AF1,', '\"a\",', 'future.result)', 'self', 'conn,', 'future', '=', 'self.start_connect', 'AF1,', '\"a\"', '(AF1,', '\"b\"', 'AF1,', '\"a\"', 'self.resolve_connect', 'AF1,', '\"a\",', 'AF1,', '\"b\"', 'self.resolve_connect', 'AF1,', '\"b\",', 'future.result', '(AF1,', '\"b\",', 'self.streams', '\"b\"', 'self', 'conn,', 'future', '=', 'self.start_connect', 'AF1,', '\"a\"', '(AF1,', '\"b\"', 'AF1,', '\"a\"', 'self.resolve_connect', 'AF1,', '\"a\",', 'AF1,', '\"b\"', 'self.resolve_connect', 'AF1,', '\"b\",', 'future.result)', 'self', 'conn,', 'future', '=', 'self.start_connect', 'AF1,', '\"a\"', '(AF1,', '\"b\"', 'AF1,', '\"a\"', 'conn.on_timeout', 'AF1,', '\"a\"', 'self.resolve_connect', 'AF1,', '\"a\",', 'AF1,', '\"b\"', 'self.resolve_connect', 'AF1,', '\"b\",', 'future.result', '(AF1,', '\"b\",', 'self.streams', '\"b\"', 'test_two_families_immediate_failure', 'self', 'conn,', 'future', '=', 'self.start_connect', 'AF1,', '\"a\"', 'self.resolve_connect', 'AF1,', '\"a\",', 'AF1,', '\"b\"', '(AF2,', '\"c\"', 'self.resolve_connect', 'AF1,', '\"b\",', 'self.resolve_connect', 'AF2,', '\"c\",', 'future.result', '(AF2,', '\"c\",', 'self.streams', '\"c\"', 'test_two_families_timeout', 'self', 'conn,', 'future', '=', 'self.start_connect', 'AF1,', '\"a\"', 'conn.on_timeout', 'AF1,', '\"a\"', '(AF2,', '\"c\"', 'self.resolve_connect', 'AF2,', '\"c\",', 'future.result', '(AF2,', '\"c\",', 'self.streams', '\"c\"', 'self.resolve_connect', 'AF1,', '\"a\",', 'test_success_after_timeout', 'self', 'conn,', 'future', '=', 'self.start_connect', 'AF1,', '\"a\"', 'conn.on_timeout', 'AF1,', '\"a\"', '(AF2,', '\"c\"', 'self.resolve_connect', 'AF1,', '\"a\",', 'future.result', '(AF1,', '\"a\",', 'self.streams', '\"a\"', 'self.resolve_connect', 'AF2,', '\"c\",', 'self.streams.pop', '\"c\"', '.closed)', 'test_all_fail', 'self', 'conn,', 'future', '=', 'self.start_connect', 'AF1,', '\"a\"', 'conn.on_timeout', 'AF1,', '\"a\"', '(AF2,', '\"c\"', 'self.resolve_connect', 'AF2,', '\"c\",', 'AF1,', '\"a\"', '(AF2,', '\"d\"', 'self.resolve_connect', 'AF2,', '\"d\",', 'AF1,', '\"a\"', 'self.resolve_connect', 'AF1,', '\"a\",', 'AF1,', '\"b\"', 'future.done', 'self.resolve_connect', 'AF1,', '\"b\",', 'future.result)', 'test_one_family_timeout_after_connect_timeout', 'self', 'conn,', 'future', '=', 'self.start_connect', 'AF1,', '\"a\"', '(AF1,', '\"b\"', 'AF1,', '\"a\"', 'conn.on_connect_timeout', 'self.connect_futures.pop', 'AF1,', '\"a\"', 'self.streams.pop', '\"a\"', '.closed)', 'conn.on_timeout', 'len', 'conn.streams', '1)', 'conn)', 'future.result)', 'self', 'conn,', 'future', '=', 'self.start_connect', 'AF1,', '\"a\"', '(AF1,', '\"b\"', 'AF1,', '\"a\"', 'self.resolve_connect', 'AF1,', '\"a\",', 'conn.on_connect_timeout', 'self.streams', '\"a\"', '.closed,', 'len', 'conn.streams', '0)', 'conn)', 'future.result', '(AF1,', '\"a\",', 'self.streams', '\"a\"', 'self', 'conn,', 'future', '=', 'self.start_connect', 'AF1,', '\"a\"', '(AF1,', '\"b\"', 'AF1,', '\"a\"', 'self.resolve_connect', 'AF1,', '\"a\",', 'AF1,', '\"b\"', 'conn.on_connect_timeout', 'self.connect_futures.pop', 'AF1,', '\"b\"', 'self.streams.pop', '\"b\"', '.closed)', 'len', 'conn.streams', '2)', 'conn)', 'future.result)', 'self', 'conn,', 'future', '=', 'self.start_connect', 'AF1,', '\"a\"', '(AF1,', '\"b\"', 'AF1,', '\"a\"', 'self.resolve_connect', 'AF1,', '\"a\",', 'AF1,', '\"b\"', 'self.resolve_connect', 'AF1,', '\"b\",', 'conn.on_connect_timeout', 'len', 'conn.streams', '2)', 'conn)', 'future.result)', 'self', 'conn,', 'future', '=', 'self.start_connect', 'AF1,', '\"a\"', 'conn.on_timeout', 'AF1,', '\"a\"', '(AF2,', '\"c\"', 'conn.on_connect_timeout', 'self.connect_futures.pop', 'AF1,', '\"a\"', 'self.streams.pop', '\"a\"', '.closed)', 'self.connect_futures.pop', 'AF2,', '\"c\"', 'self.streams.pop', '\"c\"', '.closed)', 'len', 'conn.streams', '2)', 'conn)', 'future.result)', 'test_two_family_success_after_timeout', 'self', 'conn,', 'future', '=', 'self.start_connect', 'AF1,', '\"a\"', 'conn.on_timeout', 'AF1,', '\"a\"', '(AF2,', '\"c\"', 'self.resolve_connect', 'AF1,', '\"a\",', 'self.connect_futures.pop', 'AF2,', '\"c\"', 'self.streams.pop', '\"c\"', '.closed)', 'len', 'conn.streams', '1)', 'conn)', 'future.result', '(AF1,', '\"a\",', 'self.streams', '\"a\"', 'test_two_family_timeout_after_connect_timeout', 'self', 'conn,', 'future', '=', 'self.start_connect', 'AF1,', '\"a\"', 'conn.on_connect_timeout', 'self.connect_futures.pop', 'AF1,', '\"a\"', 'self.streams.pop', '\"a\"', '.closed)', 'conn.on_timeout', 'len', 'conn.streams', '1)', 'conn)', 'future.result)']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/tornado/test/tcpserver_test.py",
        "vector": "['socket', 'subprocess', 'sys', 'textwrap', 'unittest', 'gen', 'IOStream', 'app_log', 'TCPServer', 'skipIfNonUnix', 'ExpectLog,', 'gen_test', 'Tuple', 'TCPServerTest', '@gen_test', 'self', 'TestServer', 'TCPServer', 'self,', 'stream,', 'address', 'stream.read_bytes', 'len', 'b\"hello\"', 'stream.close', '1', '/', '0', 'server', '=', 'client', '=', 'sock,', '=', 'server', '=', 'TestServer', 'server.add_socket', 'sock)', 'client', '=', 'IOStream', 'socket.socket', 'ExpectLog', 'app_log,', '\"Exception', 'callback\"', 'client.connect', '\"localhost\",', 'client.write', 'b\"hello\")', 'client.read_until_close', 'gen.moment', 'server', 'server.stop', 'client', 'client.close', '@gen_test', 'self', 'TestServer', 'TCPServer', 'self,', 'stream,', 'address', 'stream.write', 'b\"data\")', 'stream.close', 'sock,', '=', 'server', '=', 'TestServer', 'server.add_socket', 'sock)', 'client', '=', 'IOStream', 'socket.socket', 'client.connect', '\"localhost\",', 'result', '=', 'client.read_until_close', 'result,', 'b\"data\")', 'server.stop', 'client.close', 'test_stop_twice', 'self', 'sock,', '=', 'server', '=', 'TCPServer', 'server.add_socket', 'sock)', 'server.stop', 'server.stop', '@gen_test', 'self', 'TestServer', 'TCPServer', 'self,', 'stream,', 'address', 'server.stop', 'stream.read_until_close', 'sock,', '=', 'server', '=', 'TestServer', 'server.add_socket', 'sock)', 'server_addr', '=', '(\"localhost\",', 'N', '=', '40', 'clients', '=', '[IOStream', 'socket.socket', 'i', 'range', 'N', 'connected_clients', '=', '[]', 'connect', 'c', 'c.connect', 'server_addr)', 'connected_clients.append', 'c)', '[connect', 'c)', 'c', 'clients]', 'len', 'connected_clients', '0,', '\"all', 'clients', 'failed', 'len', 'connected_clients)', '==', 'N:', 'self.skipTest(', '\"at', 'one', 'client', 'should', 'fail', '\"', 'the', 'test', 'to', 'be', 'c', 'connected_clients:', 'c.close', '@skipIfNonUnix', 'TestMultiprocess', 'run_subproc', 'self,', 'code:', 'str)', '->', 'Tuple', 'str,', 'str', 'result', '=', 'subprocess.run(', '[sys.executable,', '\"', '-', 'capture_output', '=', '=', 'code,', '=', '\"utf8\",', 'check', '=', 'e:', 'f\"Process', 'stdout', '=', 'e.stdout}', 'stderr', '=', 'e.stderr', '\"', 'e', 'result.stdout,', 'result.stderr', 'self', 'code', '=', 'textwrap.dedent(', 'out,', 'err', '=', 'self.run_subproc', 'code)', 'out', '\"012\")', 'err,', '\"\")', 'self', 'code', '=', 'textwrap.dedent(', 'out,', 'err', '=', 'self.run_subproc', 'code)', 'out', '\"012\")', 'err,', '\"\")', 'test_add_sockets', 'self', 'code', '=', 'textwrap.dedent(', 'out,', 'err', '=', 'self.run_subproc', 'code)', 'out', '\"012\")', 'err,', '\"\")', 'self', 'code', '=', 'textwrap.dedent(', 'out,', 'err', '=', 'self.run_subproc', 'code)', 'out', '\"012\")', 'err,', '\"\")']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/tornado/test/template_test.py",
        "vector": "['os', 'traceback', 'unittest', 'utf8,', 'native_str,', 'to_unicode', 'Template,', 'DictLoader,', 'Loader', 'ObjectDict', 'TemplateTest', 'test_simple', 'self', 'template', '=', 'Template', '\"Hello', '{{', 'name', '!\")', 'template.generate', 'name', '=', '\"Ben\"', 'b\"Hello', 'Ben!\")', 'test_bytes', 'self', 'template', '=', 'Template', '\"Hello', '{{', 'name', '!\")', 'template.generate', 'name', '=', 'utf8', '\"Ben\"', 'b\"Hello', 'Ben!\")', 'test_expressions', 'self', 'template', '=', 'Template', '\"2', '+', '2', '=', '{{', '2', '+', '2', '\")', 'template.generate', 'b\"2', '+', '2', '=', '4\")', 'test_comment', 'self', 'template', '=', 'Template', '\"Hello{', 'template.generate', 'name', '=', 'utf8', '\"Ben\"', 'b\"Hello', 'Ben!\")', 'self', 'loader', '=', 'DictLoader(', \"'\", '%', '\"header.html\"', '%', '\\\\nbody', \"text',\", '\"header.html\":', '\"header', 'text\",', 'loader.load', '.generate', 'b\"header', 'text\\\\nbody', 'text\"', 'test_extends', 'self', 'loader', '=', 'DictLoader(', '\"page.html\":', 'loader.load', '\"page.html\"', '.generate', 'b\"', '<', 'title', '>', 'page', 'title', '<', '/', 'title', '>', '\\\\n', '<', 'body', '>', 'page', 'body', '<', '/', 'body', '>', '\\\\n\",', 'test_relative_load', 'self', 'loader', '=', 'DictLoader(', '\"a', '/', '1.html\":', '\"', '%', \"'2.html'\", '%', '\",', '\"a', '/', '2.html\":', '\"', '%', \"'..\", '/', 'b', '/', \"3.html'\", '%', '\",', '\"b', '/', '3.html\":', '\"ok\",', 'loader.load', '\"a', '/', '1.html\"', '.generate', 'b\"ok\")', 'self', 'Template', '\"', '\"', 'Template', '\"', '%', '\"', 'Template', '\"', '!\"', '.generate', 'b\"', '\")', 'Template', '\"', '%', '!\"', '.generate', 'b\"', '%', '\")', 'Template', '\"{', 'Template', '\"', \"'expr'\", '}}', '!jquery', 'expr', '\"', '.generate', 'b\"expr', 'jquery', 'expr', '\",', 'test_unicode_template', 'self', 'template', '=', 'Template', 'utf8', '\"\\\\u00e9\"', 'template.generate', 'utf8', '\"\\\\u00e9\"', 'test_unicode_literal_expression', 'self', 'template', '=', 'Template', 'utf8', \"'\", '\"\\\\u00e9\"', \"'\", 'template.generate', 'utf8', '\"\\\\u00e9\"', 'test_custom_namespace', 'self', 'loader', '=', 'DictLoader(', '{\"test.html\":', '\"', '5)', '\"', 'namespace', '=', 'x:', 'x', '+', '1}', 'loader.load', '\"test.html\"', '.generate', 'b\"6\")', 'test_apply', 'self', 'upper', 's', 's.upper', 'template', '=', 'Template', 'utf8', '\"', '%', 'apply', 'upper', '%', 'foo', '%', 'end', '%', '\"', 'template.generate', 'upper', '=', 'upper', 'b\"FOO\")', 'test_unicode_apply', 'self', 'upper', 's', 'to_unicode', 's', '.upper', 'template', '=', 'Template', 'utf8', '\"', '%', 'apply', 'upper', '%', 'foo', '\\\\u00e9', '%', 'end', '%', '\"', 'template.generate', 'upper', '=', 'upper', 'utf8', '\"FOO', '\\\\u00c9\"', 'test_bytes_apply', 'self', 'upper', 's', 'utf8', 'to_unicode', 's', '.upper', 'template', '=', 'Template', 'utf8', '\"', '%', 'apply', 'upper', '%', 'foo', '\\\\u00e9', '%', 'end', '%', '\"', 'template.generate', 'upper', '=', 'upper', 'utf8', '\"FOO', '\\\\u00c9\"', 'self', 'template', '=', 'Template', 'utf8', '\"', '%', 'x', '>', '4', '%', 'yes', '%', '%', 'no', '%', 'end', '%', '\"', 'template.generate', 'x', '=', '5', 'b\"yes\")', 'template.generate', 'x', '=', '3', 'b\"no\")', 'self', 'template', '=', 'Template', 'utf8', '\"', '%', '%', '%', '%', '%', 'end', '%', '\"', 'template.generate', 'b\"\")', 'self', 'template', '=', 'Template(', 'utf8(', 'template.generate', 'x', '=', '1', '-', '-', 'template.generate', 'x', '=', '0', '-', '-', 'test_comment_directive', 'self', 'template', '=', 'Template', 'utf8', '\"', '%', 'comment', 'blah', 'blah', '%', 'foo\"', 'template.generate', 'b\"foo\")', 'self', 'template', '=', 'Template(', 'utf8(', 'result', '=', 'template.generate', 'result', '=', 'result.split', 'result,', 'b\"013456\")', 'self', 'Template', 'utf8', '\"', '%', '%', '\"', 'Exception', '\"Did', 'get', 'expected', 'self', 'Template(', 'utf8', '\"', '%', 'i', '[]', '%', '%', 'apply', 'foo', '%', '%', '%', '%', 'end', '%', '%', 'end', '%', '\")', 'Exception', '\"Did', 'get', 'expected', '@unittest.skip', '\"no', 'testable', 'future', 'self', '1', '/', '2,', '0.5)', 'template', '=', 'Template', '\"', '1', '/', '2', '\")', 'template.generate', '\"0\")', 'self', 'loader', '=', 'DictLoader', '\"t\\\\u00e9st.html\":', '\"hello\"', 'loader.load', '\"t\\\\u00e9st.html\"', '.generate', 'b\"hello\")', 'StackTraceTest', 'self', 'loader', '=', 'DictLoader(', '\"test.html\":', 'loader.load', '\"test.html\"', '.generate', 'self.fail', '\"did', 'get', 'expected', '\"', 'self', 'loader', '=', 'DictLoader(', '\"test.html\":', 'loader.load', '\"test.html\"', '.generate', 'self.fail', '\"did', 'get', 'expected', '\"', 'self', 'loader', '=', 'load_generate', 'path,', '*', '*', 'kwargs', 'loader', 'loader.load', 'path', '.generate', '**', 'kwargs)', 'loader', '=', 'DictLoader(', '\"', '%', 'module', 'Template', \"'sub.html')\", '%', '\",', '\"sub.html\":', '\"', '1', '/', '0', '\"', 'namespace', '=', '\"_tt_modules\":', 'ObjectDict', 'Template', '=', 'load_generate', 'loader.load', '.generate', 'self.fail', '\"did', 'get', 'expected', 'exc_stack', '=', '\"', '\"', 'self', 'loader', '=', 'DictLoader(', '\"', '%', \"'sub.html'\", '%', '\",', '\"sub.html\":', '\"', '1', '/', '0', '\"}', 'loader.load', '.generate', 'self.fail', '\"did', 'get', 'expected', '\"', 'self', 'loader', '=', 'DictLoader(', '\"', '1', '/', '0', '\",', '\"sub.html\":', '\"', '%', 'extends', '%', '\"}', 'loader.load', '\"sub.html\"', '.generate', 'self.fail', '\"did', 'get', 'expected', 'exc_stack', '=', '\"', 'self', 'loader', '=', 'DictLoader(', '\"', '%', 'block', \"'block'\", '%', '%', 'end', '%', '\",', '\"sub.html\":', 'loader.load', '\"sub.html\"', '.generate', 'self.fail', '\"did', 'get', 'expected', '\"', 'self', 'loader', '=', 'DictLoader(', '\"a.html\":', '\"', '%', \"'b.html'\", '%', '\",', '\"b.html\":', '\"', '%', \"'c.html'\", '%', '\",', '\"c.html\":', '\"', '1', '/', '0', '\",', 'loader.load', '\"a.html\"', '.generate', 'self.fail', '\"did', 'get', 'expected', '\"', 'test_details', 'self', 'loader', '=', 'DictLoader', '\"foo.html\":', '\"\\\\n\\\\n', '\"', 'cm:', 'loader.load', '\"foo.html\")', 'end', 'expression', '}}', 'at', 'foo.html', '3\",', 'str', '\"foo.html\",', '3,', 'self', 'at', '0\",', 'str', 'AutoEscapeTest', 'setUp', 'self', 'self.templates', '=', '\"escaped.html\":', '\"', '%', 'autoescape', 'xhtml_escape', '%', 'name', '\",', '\"unescaped.html\":', '\"', '%', 'autoescape', '%', 'name', '\",', '\"', 'name', '\",', '\"escaped_block.html\":', '\"unescaped_block.html\":', '\"escaped_extends_unescaped.html\":', '\"escaped_overrides_unescaped.html\":', '\"unescaped_extends_escaped.html\":', '\"unescaped_overrides_escaped.html\":', '\"raw_expression.html\":', 'self', 'loader', '=', 'DictLoader', 'self.templates,', 'autoescape', '=', 'name', '=', '\"Bobby', '<table', '>', 's\"', 'loader.load', '\"escaped.html\"', '.generate', 'name', '=', 'name', 'b\"Bobby', '&lt', 'table', '&', 'gt', 's\"', 'loader.load', '\"unescaped.html\"', '.generate', 'name', '=', 'name', 'b\"Bobby', '<table', '>', 's\"', 'loader.load', '.generate', 'name', '=', 'name', 'b\"Bobby', '<table', '>', 's\"', 'loader.load', '.generate', 'name', '=', 'name', 'b\"escaped:', 'Bobby', '&lt', 'table', '&', 'gt', 's\\\\n\"', 'b\"unescaped:', 'Bobby', '<table', '>', 's\\\\n\"', 'Bobby', '<table', '>', 's\\\\n\",', 'self', 'loader', '=', 'DictLoader', 'self.templates,', 'autoescape', '=', '\"xhtml_escape\")', 'name', '=', '\"Bobby', '<table', '>', 's\"', 'loader.load', '\"escaped.html\"', '.generate', 'name', '=', 'name', 'b\"Bobby', '&lt', 'table', '&', 'gt', 's\"', 'loader.load', '\"unescaped.html\"', '.generate', 'name', '=', 'name', 'b\"Bobby', '<table', '>', 's\"', 'loader.load', '.generate', 'name', '=', 'name', 'b\"Bobby', '&lt', 'table', '&', 'gt', 's\"', 'loader.load', '.generate', 'name', '=', 'name', 'b\"escaped:', 'Bobby', '&lt', 'table', '&', 'gt', 's\\\\n\"', 'b\"unescaped:', 'Bobby', '<table', '>', 's\\\\n\"', 'Bobby', '&lt', 'table', '&', 'gt', 's\\\\n\",', 'test_unextended_block', 'self', 'loader', '=', 'DictLoader', 'self.templates)', 'name', '=', '\"', '<', 'script', '>', '\"', 'loader.load', '\"escaped_block.html\"', '.generate', 'name', '=', 'name', '&lt', 'script', '&', 'gt', '\",', 'loader.load', '\"unescaped_block.html\"', '.generate', 'name', '=', 'name', '<script', '>', '\"', 'test_extended_block', 'self', 'loader', '=', 'DictLoader', 'self.templates)', 'render', 'name', 'loader.load', 'name', '.generate', 'name', '=', '\"', '<', 'script', '>', '\")', 'render', '\"escaped_extends_unescaped.html\"', '<script', '>', '\")', 'render', '\"escaped_overrides_unescaped.html\"', 'b\"extended:', '&lt', 'script', '&', 'gt', '\"', 'render', '\"unescaped_extends_escaped.html\"', '&lt', 'script', '&', 'gt', '\"', 'render', '\"unescaped_overrides_escaped.html\"', 'b\"extended:', '<script', '>', '\"', 'test_raw_expression', 'self', 'loader', '=', 'DictLoader', 'self.templates)', 'render', 'name', 'loader.load', 'name', '.generate', 'name', '=', \"'\", '<', '>', '&', '\"\\')', 'render', '\"raw_expression.html\"', 'b\"expr:', '&lt', '&', 'gt', '&', 'amp', '&', 'quot', '\\\\n\"', \"b'raw:\", '<', '>', '&', '\"\\'', 'test_custom_escape', 'self', 'loader', '=', 'DictLoader', '\"foo.py\":', '\"', '%', 'autoescape', 'py_escape', '%', 's', '=', '{{', 'name', '\\\\n\"', 'py_escape', 's', 'type', 's', 'bytes)', 'repr', 'native_str', 's', 'render', 'template,', 'name', 'loader.load', 'template', '.generate', 'py_escape', '=', 'py_escape,', 'name', '=', 'name)', 'render', '\"foo.py\",', '\"', '<', 'html', '>', '\"', 'b\"s', '=', \"'\", '<', 'html', '>', '\\'\\\\n\")', 'render', '\"foo.py\",', '\"\\'', 'sys.exit', '\"', 'b)', 'render', '\"foo.py\",', 'a', 'b', 'self', 'loader', '=', 'DictLoader(', '\"foo.txt\":', 'loader.load', '\"foo.txt\"', '.generate', 'items', '=', 'range', '5', 'b\"0,', '1,', '2,', '3,', '4\"', 'test_whitespace_by_filename', 'self', 'loader', '=', 'DictLoader(', '\"foo.html\":', '\"', '\\\\n\\\\t\\\\n', '\",', '\"bar.js\":', '\"', '\\\\n\\\\n\\\\n\\\\t', 'qwer', '\",', '\"baz.txt\":', '\"\\\\t', 'zxcv\\\\n\\\\n\",', '\"', '{%', 'baz.txt', '%}', '\\\\n', '\",', '\"\\\\t\\\\t', '%', 'foo.html', '%}', '\",', 'loader.load', '\"foo.html\"', '.generate', '\")', 'loader.load', '\"bar.js\"', '.generate', 'b\"\\\\nqwer', '\")', 'loader.load', '\"baz.txt\"', '.generate', 'b\"\\\\t', 'zxcv\\\\n\\\\n\")', 'loader.load', '.generate', 'b\"', '\\\\t', 'zxcv\\\\n\\\\n\\\\n\")', 'loader.load', '.generate', '\")', 'test_whitespace_by_loader', 'self', 'templates', '=', '{\"foo.html\":', '\"\\\\t\\\\tfoo\\\\n\\\\n\",', '\"bar.txt\":', '\"\\\\t\\\\tbar\\\\n\\\\n\"}', 'loader', '=', 'DictLoader', 'templates,', 'whitespace', '=', '\"all\")', 'loader.load', '\"foo.html\"', '.generate', 'b\"\\\\t\\\\tfoo\\\\n\\\\n\")', 'loader.load', '\"bar.txt\"', '.generate', 'b\"\\\\t\\\\tbar\\\\n\\\\n\")', 'loader', '=', 'DictLoader', 'templates,', 'whitespace', '=', 'loader.load', '\"foo.html\"', '.generate', 'b\"', 'foo\\\\n\")', 'loader.load', '\"bar.txt\"', '.generate', 'b\"', 'bar\\\\n\")', 'loader', '=', 'DictLoader', 'templates,', 'whitespace', '=', 'loader.load', '\"foo.html\"', '.generate', 'b\"', 'foo', '\")', 'loader.load', '\"bar.txt\"', '.generate', 'b\"', 'bar', '\")', 'test_whitespace_directive', 'self', 'loader', '=', 'DictLoader(', '\"foo.html\":', 'loader.load', '\"foo.html\"', '.generate', 'b\"', '0', '1', '2', '\\\\n', 'TemplateLoaderTest', 'setUp', 'self', 'self.loader', '=', 'Loader', 'os.path.dirname', '__file__', '\"templates\"', 'self', 'tmpl', '=', 'self.loader.load', '\"utf8.html\")', 'result', '=', 'tmpl.generate', 'to_unicode', 'result', '.strip', '\"H\\\\u00e9llo\")']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/tornado/test/testing_test.py",
        "vector": "['gen,', 'ioloop', 'HTTPServer', 'Event', 'gen_test', 'Application', 'contextlib', 'gc', 'os', 'sys', 'traceback', 'unittest', '@contextlib.contextmanager', 'set_environ', 'name,', 'value', 'old_value', '=', 'os.environ.get', 'name)', 'os.environ', 'name]', '=', 'value', 'old_value', 'os.environ', 'name]', 'os.environ', 'name]', '=', 'old_value', 'test_wait_timeout', 'self', 'time', '=', 'self.io_loop.time', 'self.io_loop.add_timeout', 'time', '+', '0.01,', 'self.stop)', 'self.wait', 'self.io_loop.add_timeout', 'time', '+', '1,', 'self.stop)', 'self.failureException', 'self.wait', 'timeout', '=', '0.01)', 'self.io_loop.add_timeout', 'time', '+', '1,', 'self.stop)', 'set_environ', '\"ASYNC_TEST_TIMEOUT\",', '\"0.01\"', 'self.failureException', 'self.wait', 'test_subsequent_wait_calls', 'self', 'self.io_loop.add_timeout', 'self.io_loop.time', '+', '0.00,', 'self.stop)', 'self.wait', 'timeout', '=', '0.1)', 'self.io_loop.add_timeout', 'self.io_loop.time', '+', '0.2,', 'self.stop)', 'self.wait', 'timeout', '=', '0.4)', 'LeakTest', 'tearDown', 'self', 'super', '.tearDown', 'gc.collect', 'self', 'event', '=', 'Event', 'callback', 'event.wait', 'self.io_loop.add_callback', 'callback)', 'self.io_loop.add_callback', 'self.stop)', 'self.wait', 'setUp', 'self', 'super', '.setUp', 'sock,', '=', 'app', '=', 'Application', 'server', '=', 'HTTPServer', 'app,', '*', '*', 'self.get_httpserver_options', 'server.add_socket', 'sock)', '=', 'self.second_server', '=', 'server', 'get_app', 'self', 'Application', 'test_fetch_segment', 'self', 'path', '=', '\"', '/', 'path\"', 'response', '=', 'self.fetch', 'path)', 'response.request.url,', 'self.get_url', 'path', 'test_fetch_full_http_url', 'self', 'path', '=', '\"http', '/', '/', '127.0.0.1', '%', 'd', '/', 'path\"', '%', 'response', '=', 'self.fetch', 'path)', 'response.request.url,', 'path)', 'tearDown', 'self', 'self.second_server.stop', 'super', '.tearDown', 'self', 'Test', 'test_gen', 'self', 'test', '=', 'Test', '\"test_gen\")', 'result', '=', 'unittest.TestResult', 'test.run', 'result)', 'len', '1)', '\"should', 'be', '0', '1', '@unittest.skipIf(', '==', '\"PyPy\",', '\"pypy', 'be', 'silenced\",', '@unittest.skipIf(', '>=', '(3,', '12', '\"py312', 'its', 'own', 'check', 'test', 'self', 'Test', 'self', 'test', '=', 'Test', 'result', '=', 'unittest.TestResult', 'test.run', 'result)', 'len', '1)', '\"should', 'be', '0', '1', 'self', 'Test', '@unittest.skip', '\"don\\'t', 'run', 'test_gen', 'self', 'test', '=', 'Test', '\"test_gen\")', 'result', '=', 'unittest.TestResult', 'test.run', 'result)', 'len', '0)', 'len', 'result.skipped', '1)', 'self', 'Test', 'self', '42', 'test', '=', 'Test', 'result', '=', 'unittest.TestResult', 'test.run', 'result)', 'len', '1)', '\"Return', 'value', 'test', 'method', '0', '1', 'test_unwrap', 'self', 'Test', 'test_foo', 'self', 'test', '=', 'Test', '\"test_foo\")', 'test.test_foo', 'SetUpTearDownTest', 'test_set_up_tear_down', 'self', 'events', '=', '[]', 'result', '=', 'unittest.TestResult', 'SetUpTearDown', 'setUp', 'self', 'events.append', '\"setUp\")', 'tearDown', 'self', 'events.append', '\"tearDown\")', 'InheritBoth', 'SetUpTearDown', 'test', 'self', 'events.append', '\"test\")', 'InheritBoth', '\"test\"', '.run', 'result)', 'expected', '=', '[\"setUp\",', '\"test\",', '\"tearDown\"]', 'expected,', 'events)', 'self', 'result', '=', 'unittest.TestResult', 'SetUpTearDown', 'get_app', 'self', 'Application', 'test', 'self', 'self,', '\"_app\"', 'self,', '\"http_server\"', 'test', '=', 'SetUpTearDown', '\"test\")', 'test.run', 'result)', 'test,', '\"_app\"', 'test,', '\"http_server\"', 'GenTest', 'setUp', 'self', 'super', '.setUp', '=', 'tearDown', 'self', 'super', '.tearDown', '@gen_test', 'test_sync', 'self', '=', '@gen_test', 'self', 'gen.moment', '=', 'test_timeout', 'self', '@gen_test', 'timeout', '=', '0.1)', 'test', 'self', 'gen.sleep', '1)', 'test', 'self)', 'self.fail', '\"did', 'get', 'expected', '\"gen.sleep', '1', '\",', '=', 'test_no_timeout', 'self', '@gen_test', 'timeout', '=', '1)', 'test', 'self', 'gen.sleep', '0.1)', 'test', 'self)', '=', 'test_timeout_environment_variable', 'self', '@gen_test', 'timeout', '=', '0.5)', 'test_long_timeout', 'self', 'gen.sleep', '0.25)', 'set_environ', '\"ASYNC_TEST_TIMEOUT\",', '\"0.1\"', 'test_long_timeout', 'self)', '=', 'test_no_timeout_environment_variable', 'self', '@gen_test', 'timeout', '=', '0.01)', 'self', 'gen.sleep', '1)', 'set_environ', '\"ASYNC_TEST_TIMEOUT\",', '\"0.1\"', 'self)', '=', 'self', '@gen_test', 'self,', '*args', 'args,', '(\"test\"', 'gen.moment', 'self,', '\"test\")', '=', 'self', '@gen_test', 'self,', '*', '*', 'kwargs', 'kwargs,', '{\"test\":', '\"test\"', 'gen.moment', 'self,', 'test', '=', '\"test\")', '=', 'self', '@gen_test', 'test', 'self', '=', 'test', 'self)', 'self', '@gen_test', 'timeout', '=', '0.1)', 'test', 'self', 'gen.sleep', '1)', 'test', 'self)', 'self.fail', '\"did', 'get', 'expected', '=', '__name__', '==']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/tornado/test/twisted_test.py",
        "vector": "['unittest', 'gen_test', '=', '=', '=', 'unittest.skipUnless', 'module', 'present\")', 'ConvertDeferredTest', '@gen_test', 'test_success', 'self', 'fn', '42)', 'res', '=', 'fn', 'res,', '42)', '@gen_test', 'test_failure', 'self', 'fn', '1', '/', '0', 'fn', '__name__', '==']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/tornado/test/util.py",
        "vector": "['contextlib', 'os', 'socket', 'sys', 'textwrap', 'unittest', 'skipIfNonUnix', '=', 'unittest.skipIf(', 'os.name', '!=', '\"posix\"', '==', '\"non', '-', 'unix', '=', 'unittest.skipIf(', '\"TRAVIS\"', 'os.environ,', 'tests', 'unreliable', 'on', '=', 'unittest.skipIf', '\"NO_NETWORK\"', 'os.environ,', 'access', 'skipNotCPython', '=', 'unittest.skipIf(', '!=', '\"CPython\",', '\"Not', 'CPython', 'implementation\"', 'skipPypy3V58', '=', 'unittest.skipIf(', '==', '\"PyPy\"', '>', '(3', '<', '(5,', '9', '\"pypy3', '5.8', 'buggy', 'ssl', 'module\",', '_detect_ipv6', 'sock', '=', 'sock', '=', 'socket.socket', 'socket.AF_INET6)', '\"', '1\",', '0', 'sock', 'sock.close', 'skipIfNoIPv6', '=', 'unittest.skipIf', '_detect_ipv6', '\"ipv6', 'present\")', 'server_socket,', '=', 'client_socket', '=', 'socket.socket', 'client_socket.connect', '\"127.0.0.1\",', 'conn,', 'client_addr', '=', 'server_socket.accept', 'conn.close', 'server_socket.close', '(client_socket.close,', 'client_addr', '1', 'exec_test', 'caller_locals,', 's', '=', 'dict', '*', '*', 'caller_locals)', 'local_namespace', '=', '{}', 'exec', 'textwrap.dedent', 's', 'local_namespace)', 'local_namespace', 'subTest', 'test,', '*args,', '*', '*', 'kwargs', 'subTest', '=', 'test.subTest', 'subTest', '=', 'contextlib.contextmanager', '*a,', '*', '*', 'kw:', 'subTest', '*', 'args,', '*', '*', 'kwargs)', '@contextlib.contextmanager']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/tornado/test/util_test.py",
        "vector": "['io', 're', 'sys', 'datetime', 'unittest', 'utf8', 'Configurable,', 'ArgReplacer,', 're_unescape,', 'Dict,', 'Any', 'self', 'TwoArgException', 'Exception', 'self,', 'a,', 'b', 'super', 'self.a,', 'self.b', '=', 'a,', 'b', 'TwoArgException', '1,', '2)', 'TwoArgException:', '=', 'self.fail', '\"didn\\'t', 'get', 'expected', 'TwoArgException', 'e:', 'e,', '1', 'TestConfigurable', 'Configurable', 'cls', 'TestConfigurable', 'cls', 'TestConfig1', 'TestConfig1', 'TestConfigurable', 'self,', 'pos_arg', '=', 'a', '=', 'self.a', '=', 'a', 'self.pos_arg', '=', 'pos_arg', 'TestConfig2', 'TestConfigurable', 'self,', 'pos_arg', '=', 'b', '=', 'self.b', '=', 'b', 'self.pos_arg', '=', 'pos_arg', 'TestConfig3', 'TestConfigurable', 'cls', 'TestConfig3', 'cls', 'TestConfig3A', 'TestConfig3A', 'TestConfig3', 'self,', 'a', '=', 'self.a', '=', 'a', 'TestConfig3B', 'TestConfig3', 'self,', 'b', '=', 'self.b', '=', 'b', 'ConfigurableTest', 'setUp', 'self', 'self.saved', '=', 'TestConfigurable._save_configuration', 'self.saved3', '=', 'TestConfig3._save_configuration', 'tearDown', 'self', 'self.saved)', 'self.saved3)', 'self', 'TestConfig1', 'TestConfig1)', 'TestConfig2', 'TestConfig2)', 'obj', '=', 'TestConfig1', 'a', '=', '1)', 'obj.a,', '1)', 'obj2', '=', 'TestConfig2', 'b', '=', '2)', 'obj2.b,', '2)', 'self', 'obj', '=', 'TestConfig1,', 'TestConfigurable', 'obj,', 'TestConfig1)', 'obj.a,', 'obj', '=', 'TestConfig1,', 'TestConfigurable', 'a', '=', '1', 'obj,', 'TestConfig1)', 'obj.a,', '1)', 'self', 'TestConfigurable.configure', 'TestConfig2)', 'obj', '=', 'TestConfig2,', 'TestConfigurable', 'obj,', 'TestConfig2)', 'obj.b,', 'obj', '=', 'TestConfig2,', 'TestConfigurable', 'b', '=', '2', 'obj,', 'TestConfig2)', 'obj.b,', '2)', 'test_config_str', 'self', 'TestConfigurable.configure', 'obj', '=', 'TestConfig2,', 'TestConfigurable', 'obj,', 'TestConfig2)', 'obj.b,', 'obj', '=', 'TestConfig2,', 'TestConfigurable', 'b', '=', '2', 'obj,', 'TestConfig2)', 'obj.b,', '2)', 'test_config_args', 'self', 'TestConfigurable.configure', 'a', '=', '3)', 'obj', '=', 'TestConfig1,', 'TestConfigurable', 'obj,', 'TestConfig1)', 'obj.a,', '3)', 'obj', '=', 'TestConfig1,', 'TestConfigurable', '42,', 'a', '=', '4', 'obj,', 'TestConfig1)', 'obj.a,', '4)', 'obj.pos_arg,', '42)', 'obj', '=', 'TestConfig1', 'obj.a,', 'self', 'TestConfigurable.configure', 'TestConfig2,', 'b', '=', '5)', 'obj', '=', 'TestConfig2,', 'TestConfigurable', 'obj,', 'TestConfig2)', 'obj.b,', '5)', 'obj', '=', 'TestConfig2,', 'TestConfigurable', '42,', 'b', '=', '6', 'obj,', 'TestConfig2)', 'obj.b,', '6)', 'obj.pos_arg,', '42)', 'obj', '=', 'TestConfig2', 'obj.b,', 'test_config_multi_level', 'self', 'TestConfigurable.configure', 'TestConfig3,', 'a', '=', '1)', 'obj', '=', 'TestConfig3A,', 'TestConfigurable', 'obj,', 'TestConfig3A)', 'obj.a,', '1)', 'TestConfigurable.configure', 'TestConfig3)', 'TestConfig3.configure', 'TestConfig3B,', 'b', '=', '2)', 'obj2', '=', 'TestConfig3B,', 'TestConfigurable', 'obj2,', 'TestConfig3B)', 'obj2.b,', '2)', 'self', 'obj', '=', 'TestConfig3', 'obj,', 'TestConfig3A)', 'TestConfig3.configure', 'TestConfig3B)', 'obj', '=', 'TestConfig3', 'obj,', 'TestConfig3B)', 'obj2', '=', 'TestConfigurable', 'obj2,', 'TestConfig1)', 'TestConfigurable.configure', 'TestConfig2)', 'obj3', '=', 'TestConfigurable', 'obj3,', 'TestConfig2)', 'obj', '=', 'TestConfig3', 'obj,', 'TestConfig3B)', 'UnicodeLiteralTest', 'test_unicode_escapes', 'self', 'utf8', '\"\\\\u00e9\"', 'b\"\\\\xc3\\\\xa9\")', 'ExecInTest', '@unittest.skip', '\"no', 'testable', 'future', 'self', 'f', '=', '\"hello\",', 'file', '=', 'f)', '>>', 'f,', 'dict', 'f', '=', 'f', 'f.getvalue', 'ArgReplacerTest', 'setUp', 'self', 'function', 'x,', 'y,', 'callback', '=', 'z', '=', 'self.replacer', '=', 'ArgReplacer', 'function,', '\"callback\")', 'test_omitted', 'self', 'args', '=', '(1,', '2)', 'kwargs', '=', 'dict', 'self.replacer.get_old_value', 'args,', 'kwargs', 'self.replacer.replace', '\"new\",', 'args,', 'kwargs', '(1,', '2', 'dict', 'callback', '=', '\"new\"', 'test_position', 'self', 'args', '=', '(1,', '2,', '\"old\",', '3)', 'kwargs', '=', 'dict', 'self.replacer.get_old_value', 'args,', 'kwargs', '\"old\")', 'self.replacer.replace', '\"new\",', 'args,', 'kwargs', '(\"old\",', '[1,', '2,', '\"new\",', '3', 'dict', 'self', 'args', '=', '(1', 'kwargs', '=', 'dict', 'y', '=', '2,', 'callback', '=', '\"old\",', 'z', '=', '3)', 'self.replacer.get_old_value', 'args,', 'kwargs', '\"old\")', 'self.replacer.replace', '\"new\",', 'args,', 'kwargs', '(\"old\",', '(1', 'dict', 'y', '=', '2,', 'callback', '=', '\"new\",', 'z', '=', '3', 'self', '=', 'hours', '=', '1)', '3600.0)', 'self', 'utf8)', 'self', 'utf8)', 'self', 'self', 'ReUnescapeTest', 'test_re_unescape', 'self', '=', '(\"', '/', 'favicon.ico\",', '\"Hello,', '\"!$@', 're_unescape', 're.escape', 'self', 're_unescape', '\"\\\\\\\\d\")', 're_unescape', '\"\\\\\\\\b\")', 're_unescape', '\"\\\\\\\\Z\")', 'self']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/tornado/test/web_test.py",
        "vector": "['Future', 'gen', 'json_decode,', 'utf8,', 'to_unicode,', 'recursive_unicode,', 'native_str,', 'IOStream', 'locale', 'Event', 'app_log,', 'gen_log', 'SimpleAsyncHTTPClient', 'DictLoader', 'ExpectLog,', 'gen_test', 'ObjectDict,', 'unicode_type', 'Application,', 'authenticated,', 'url,', '_create_signature_v1,', 'create_signed_value,', 'decode_signed_value,', 'get_signature_key_version,', 'UIModule,', 'stream_request_body,', 'contextlib', 'copy', 'datetime', 'email.utils', 'gzip', 'io', 'BytesIO', 'itertools', 'os', 're', 'socket', 'unittest', 'urllib.parse', 'relpath', '*', 'a', 'os.path.dirname', '__file__', '*a)', 'get_app', 'self', 'self.app', '=', 'Application', '*', '*', 'self.get_app_kwargs', 'self.app', 'self', 'get_app_kwargs', 'self', '{}', '=', 'self', '\"', '/', '\",', 'get', 'self', 'self.write', '\"hello\")', 'self,', 'cookie_secret', '=', '\"0123456789\",', 'key_version', '=', 'self._cookies', '=', '{}', 'key_version', 'self.application', '=', 'ObjectDict(', '=', 'dict', 'cookie_secret', '=', 'cookie_secret)', 'self.application', '=', 'ObjectDict(', '=', 'dict', 'cookie_secret', '=', 'cookie_secret,', 'key_version', '=', 'key_version)', 'get_cookie', 'self,', 'name', 'self._cookies.get', 'name)', 'set_cookie', 'self,', 'name,', 'value,', 'expires_days', '=', 'self._cookies', 'name]', '=', 'value', 'SecureCookieV1Test', 'test_round_trip', 'self', '=', '\"foo\",', 'b\"bar\",', 'version', '=', '1)', '\"foo\",', '=', '1', 'b\"bar\")', 'self', '=', '\"foo\",', 'b\"d76df8e7aefc\"', 'version', '=', '1)', 'cookie', '=', '\"foo\"]', 'match', '=', 're.match', 'rb\"12345678\\\\', '|', '0', '-', '9', '+', '\\\\', '|', '0', '-', '9a', '-', 'f', '+', '\",', 'cookie)', 'match', 'timestamp', '=', 'match.group', '1)', 'sig', '=', 'match.group', '2)', '_create_signature_v1(', '\"cookie_secret\"', '\"foo\",', '\"12345678\",', 'timestamp,', '),', 'sig,', '_create_signature_v1(', '\"cookie_secret\"', '\"foo\",', '\"1234\",', 'b\"5678\"', '+', 'timestamp,', '),', 'sig,', '\"foo\"]', '=', 'utf8(', '\"1234', '|', '5678', '%', 's', '|', '%', 's\"', '%', 'timestamp', 'sig', 'ExpectLog', 'gen_log,', '\"Cookie', 'timestamp', 'future\"', '\"foo\",', '=', '1)', 'test_arbitrary_bytes', 'self', '=', '\"foo\",', 'b\"\\\\xe9\",', 'version', '=', '1)', '\"foo\",', '=', '1', 'b\"\\\\xe9\")', 'SecureCookieV2Test', 'KEY_VERSIONS', '=', '{0:', '1:', 'test_round_trip', 'self', '=', '\"foo\",', 'b\"bar\",', 'version', '=', '2)', '\"foo\",', '=', '2', 'b\"bar\")', 'test_key_version_roundtrip', 'self', '=', 'cookie_secret', '=', 'self.KEY_VERSIONS,', 'key_version', '=', '0', '\"foo\",', 'b\"bar\")', '\"foo\"', 'b\"bar\")', 'self', '=', 'cookie_secret', '=', 'self.KEY_VERSIONS,', 'key_version', '=', '1', '\"foo\",', 'b\"bar\")', '\"foo\"', 'b\"bar\")', 'self', '=', 'cookie_secret', '=', 'self.KEY_VERSIONS,', 'key_version', '=', '0', '\"foo\",', 'b\"bar\")', '=', 'cookie_secret', '=', 'self.KEY_VERSIONS,', 'key_version', '=', '1', '=', '\"foo\"', 'b\"bar\")', 'self', '=', 'cookie_secret', '=', 'self.KEY_VERSIONS,', 'key_version', '=', '0', '\"foo\",', 'b\"bar\")', 'new_key_versions', '=', 'self.KEY_VERSIONS.copy', 'new_key_versions.pop', '0)', '=', 'cookie_secret', '=', 'new_key_versions,', 'key_version', '=', '1', '=', '\"foo\"', '=', 'self', 'test', '=', 'self', 'get', 'self', '=', 'post', 'self', 'self.write', '\"hello', '\")', 'self.flush', '=', 'create_template_loader', 'self,', 'path', 'DictLoader', '\"foo.html\":', '\"hi\"', 'get', 'self', '=', 'self.render', '\"foo.html\")', '\"', '/', '(\"', '/', 'render\",', 'get_app_kwargs', 'self', 'dict', 'template_path', '=', 'self', 'response', '=', 'self.fetch', 'self.get_url', '\"', '/', 'response.code,', '200)', 'Future)', 'response', '=', 'self.fetch', 'self.get_url', '\"', '/', 'method', '=', '\"POST\",', 'body', '=', 'b\"\")', 'response.code,', '200)', 'Future)', 'self', 'response', '=', 'self.fetch', 'self.get_url', '\"', '/', 'render\"', 'response.code,', '200)', 'Future)', 'CookieTest', 'self', 'get', 'self', 'self.set_cookie', '\"str\",', 'self.set_cookie', '\"unicode\",', '\"qwer\")', 'self.set_cookie', '\"bytes\",', 'b\"zxcv\")', 'get', 'self', 'cookie', '=', 'self.get_cookie', '\"foo\",', 'cookie', 'self.write', 'cookie)', 'get', 'self', 'self.set_cookie', '\"unicode_args\",', '\"blah\",', '=', '\"foo.com\",', 'path', '=', '\"', '/', 'foo\")', 'get', 'self', 'self.set_cookie', '\"equals\",', '\"a', '=', 'b\")', 'self.set_cookie', '\"semicolon\",', '\"a', 'b\")', 'self.set_cookie', '\"quote\",', '\\'a\"b\\')', 'get', 'self', 'self.set_cookie', '\"a\",', '\"b\",', '=', '\"example.com\")', 'self.set_cookie', '\"c\",', '\"d\",', '=', '\"example.com\")', 'self.set_cookie', '\"a\",', '\"e\")', 'get', 'self', 'self.set_cookie', '\"foo\",', '\"bar\",', 'max_age', '=', '10)', 'get', 'self', 'self.set_cookie', '\"foo\",', '\"bar\",', 'expires_days', '=', '10)', 'SetCookieFalsyFlags', 'get', 'self', 'self.set_cookie', '\"a\",', '\"1\",', 'secure', '=', 'self.set_cookie', '\"b\",', '\"1\",', 'secure', '=', 'self.set_cookie', '\"c\",', '\"1\",', 'httponly', '=', 'self.set_cookie', '\"d\",', '\"1\",', 'httponly', '=', 'SetCookieDeprecatedArgs', 'get', 'self', 'self.set_cookie', '\"a\",', '\"b\",', 'HttpOnly', '=', 'pATH', '=', '\"', '/', 'foo\")', '(\"', '/', 'set\",', '(\"', '/', 'get\",', '(\"', '/', '(\"', '/', 'special_char\",', '(\"', '/', 'set_overwrite\",', '(\"', '/', 'set_max_age\",', '(\"', '/', 'set_expires_days\",', '(\"', '/', 'set_falsy_flags\",', 'SetCookieFalsyFlags', '(\"', '/', 'set_deprecated\",', 'SetCookieDeprecatedArgs', 'test_set_cookie', 'self', 'response', '=', 'self.fetch', '\"', '/', 'set\")', '\"Set', '-', 'Cookie\"', '[\"bytes', '=', 'zxcv;', 'Path', '=', '/', '\",', '\"str', '=', 'Path', '=', '/', '\",', '\"unicode', '=', 'qwer;', 'Path', '=', '/', '\"', 'test_get_cookie', 'self', 'response', '=', 'self.fetch', '\"', '/', 'get\",', 'headers', '=', '\"Cookie\":', '\"foo', '=', 'bar\"', 'response.body,', 'b\"bar\")', 'response', '=', 'self.fetch', '\"', '/', 'get\",', 'headers', '=', '\"Cookie\":', \"'foo\", '=', '\"bar\"\\'', 'response.body,', 'b\"bar\")', 'response', '=', 'self.fetch', '\"', '/', 'get\",', 'headers', '=', '\"Cookie\":', '\"', '/=', '\"', 'response.body,', 'self', 'response', '=', 'self.fetch', '\"', '/', '\"Set', '-', 'Cookie\"', '[\"unicode_args', '=', 'blah;', '=', 'foo.com;', 'Path', '=', '/', 'foo\"', 'test_cookie_special_char', 'self', 'response', '=', 'self.fetch', '\"', '/', 'special_char\")', 'headers', '=', '\"Set', '-', 'Cookie\"', 'len', 'headers', '3)', 'headers', '0', \"'equals\", '=', '\"a', '=', 'b\";', 'Path', '=', '/', \"')\", 'headers', '1', \"'quote\", '=', '\"a\\\\\\\\\"b\";', 'Path', '=', '/', \"')\", 'headers', '2]', \"('semicolon\", '=', '\"a', 'b\";', 'Path', '=', '/', \"',\", \"'semicolon\", '=', '\"a\\\\\\\\073b\";', 'Path', '=', '/', \"'\", 'headers', '2', 'data', '=', '(\"foo', '=', 'a', '=', 'b\",', '\"a', '=', 'b\"', \"('foo\", '=', '\"a', '=', 'b\"\\',', '\"a', '=', 'b\"', \"('foo\", '=', '\"a', 'b\"\\',', '\\'\"a\\'', '(\"foo', '=', 'a\\\\\\\\073b\",', '\"a\\\\\\\\073b\"', \"('foo\", '=', '\"a\\\\\\\\073b\"\\',', '\"a', 'b\"', \"('foo\", '=', '\"a\\\\\\\\\"b\"\\',', '\\'a\"b\\'', 'header,', 'expected', 'data:', '%r\",', 'header)', 'response', '=', 'self.fetch', '\"', '/', 'get\",', 'headers', '=', '\"Cookie\":', 'header', 'response.body,', 'utf8', 'expected', 'test_set_cookie_overwrite', 'self', 'response', '=', 'self.fetch', '\"', '/', 'set_overwrite\")', 'headers', '=', '\"Set', '-', 'Cookie\")', 'headers', '[\"a', '=', 'e;', 'Path', '=', '/', '\",', '\"c', '=', 'd;', '=', 'example.com;', 'Path', '=', '/', '\"]', 'test_set_cookie_max_age', 'self', 'response', '=', 'self.fetch', '\"', '/', 'set_max_age\")', 'headers', '=', '\"Set', '-', 'Cookie\")', 'headers', '[\"foo', '=', 'bar;', 'Max', '-', 'Age', '=', '10;', 'Path', '=', '/', '\"', 'test_set_cookie_expires_days', 'self', 'response', '=', 'self.fetch', '\"', '/', 'set_expires_days\")', 'header', '=', 'response.headers.get', '\"Set', '-', 'Cookie\")', 'header', 'match', '=', 're.match', '\"foo', '=', 'bar;', 'expires', '=', '?P', '<', 'expires', '>', '.', '+', 'Path', '=', '/', '\",', 'header)', 'match', 'expires', '=', 'datetime.datetime.now', 'datetime.timezone.utc)', '+', 'days', '=', '10', 'header_expires', '=', 'email.utils.parsedate_to_datetime', 'match.groupdict', '\"expires\"', 'abs', 'expires', '-', 'header_expires', '.total_seconds', '<', '10)', 'test_set_cookie_false_flags', 'self', 'response', '=', 'self.fetch', '\"', '/', 'set_falsy_flags\")', 'headers', '=', '\"Set', '-', 'Cookie\"', 'headers', '0', '.lower', '\"a', '=', '1;', 'path', '=', '/', 'secure\")', 'headers', '1', '.lower', '\"b', '=', '1;', 'path', '=', '/', '\")', 'headers', '2', '.lower', '\"c', '=', '1;', 'httponly;', 'path', '=', '/', '\")', 'headers', '3', '.lower', '\"d', '=', '1;', 'path', '=', '/', '\")', 'test_set_cookie_deprecated', 'self', 'response', '=', 'self.fetch', '\"', '/', 'set_deprecated\")', 'header', '=', 'response.headers.get', '\"Set', '-', 'Cookie\")', 'header,', '\"a', '=', 'b;', 'HttpOnly;', 'Path', '=', '/', 'foo\")', 'self,', '=', 'self', '@authenticated', 'get', 'self', '500)', 'AuthRedirectTest', 'self', '(\"', '/', 'relative\",', 'dict', '=', '\"', '/', '\"', '/', 'absolute\",', 'dict', '=', '\"http', '/', '/', 'example.com', '/', '),', 'test_relative_auth_redirect', 'self', 'response', '=', 'self.fetch', 'self.get_url', '\"', '/', 'relative\"', 'follow_redirects', '=', 'response.code,', '302)', 'response.headers', '\"Location\"', '\"', '/', '=', '%', '2Frelative\")', 'test_absolute_auth_redirect', 'self', 'response', '=', 'self.fetch', 'self.get_url', '\"', '/', 'absolute\"', 'follow_redirects', '=', 'response.code,', '302)', 're.match(', 'r\"http', '/', '/', 'example.com', '/', '=', 'http', '%', '3A', '%', '2F', '%', '2F127.0.0.1', '%', '3A', '0', '-', '9', '+', '%', '2Fabsolute\",', 'response.headers', '\"Location\"', '),', 'response.headers', '\"Location\"', 'self,', 'test', 'self.test', '=', 'test', 'get', 'self', 'self.test.cleanup_event.wait', 'on_connection_close', 'self', 'self.test.on_connection_close', 'ConnectionCloseTest', 'self', 'self.cleanup_event', '=', 'Event', '\"', '/', '\",', 'dict', 'test', '=', 'self', 'test_connection_close', 'self', 's', '=', 'socket.socket', 'socket.AF_INET,', 'socket.SOCK_STREAM,', '0)', 's.connect', '\"127.0.0.1\",', 'self.stream', '=', 'IOStream', 's)', 'self.stream.write', 'b\"GET', '/', 'HTTP', '/', '1.0\\\\r\\\\n\\\\r\\\\n\")', 'self.wait', 'self.cleanup_event.set', 'self.io_loop.run_sync', 'gen.sleep', '0', 'self', 'self.stream.close', 'on_connection_close', 'self', '\"connection', 'closed\")', 'self.stop', 'get', 'self,', '*path_args', 'key', 'self.request.arguments:', 'type', 'key)', '!=', 'str:', 'Exception', 'type', 'key:', '%r\"', '%', 'type', 'key', 'bvalue', 'self.request.arguments', 'key', 'type', 'bvalue)', '!=', 'bytes:', 'Exception', 'type', 'value:', '%r\"', '%', 'type', 'bvalue', 'svalue', 'self.get_arguments', 'key', 'type', 'svalue)', '!=', 'unicode_type:', 'Exception', 'type', 'value:', '%r\"', '%', 'type', 'svalue', 'arg', 'path_args:', 'type', 'arg)', '!=', 'unicode_type:', 'Exception', 'type', 'path', 'arg:', '%r\"', '%', 'type', 'arg', 'self.write(', 'dict(', 'path', '=', 'self.request.path,', 'path_args', '=', 'path_args,', 'args', '=', 'recursive_unicode', 'self.request.arguments', 'self', '\"', '/', 'group', '/', '.', '*', '\",', '(\"', '/', '/', '^', '/', '*', '/', '^', '/', '*', '\",', 'fetch_json', 'self,', 'path', 'json_decode', 'self.fetch', 'path', '.body)', 'test_group_question_mark', 'self', 'self.fetch_json', '\"', '/', 'group', '/', '%', '3F\"', 'dict', 'path', '=', '\"', '/', 'group', '/', '%', '3F\",', 'path_args', '=', '\"?\"', 'args', '=', 'self.fetch_json', '\"', '/', 'group', '/', '%', '3F?', '%', '3F', '=', '%', '3F\"', 'dict', 'path', '=', '\"', '/', 'group', '/', '%', '3F\",', 'path_args', '=', '\"?\"', 'args', '=', '\"?\":', '[\"?\"', 'self', 'self.fetch_json', '\"', '/', 'group', '/', '%', 'C3', '%', 'A9?arg', '=', '%', 'C3', '%', 'A9\"', '\"path\":', '\"', '/', 'group', '/', '%', 'C3', '%', 'A9\",', '\"path_args\":', '[\"\\\\u00e9\"', '\"args\":', '{\"arg\":', '[\"\\\\u00e9\"', '},', 'self', 'self.fetch_json', '\"', '/', '/', 'foo', '/', 'bar\"', 'dict', 'path', '=', '\"', '/', '/', 'foo', '/', 'bar\",', 'path_args', '=', '\"foo\",', '\"bar\"', 'args', '=', 'self.fetch_json', '\"', '/', '/', 'a', '%', '2Fb', '/', 'c', '%', '2Fd\"', 'dict', 'path', '=', '\"', '/', '/', 'a', '%', '2Fb', '/', 'c', '%', '2Fd\",', 'path_args', '=', '\"a', '/', 'b\",', '\"c', '/', 'd\"', 'args', '=', 'self', 'ExpectLog', 'gen_log,', '\".', '*', 'Invalid', 'unicode\"', 'self.fetch', '\"', '/', 'group', '/', '?arg', '=', '%', '25', '%', 'e9\")', 'prepare', 'self', '=', '{}', 'self.check_type', '\"status\",', 'self.get_status', 'self.check_type', '\"argument\",', 'self.get_argument', '\"foo\"', 'unicode_type)', 'self.check_type', '\"cookie_key\",', 'self.cookies.keys', '0', 'str)', 'self.check_type', '\"cookie_value\",', 'self.cookies.values', '0', '.value,', 'str)', 'self.cookies.keys', '!=', 'Exception(', '\"unexpected', 'values', 'cookie', 'keys:', '%r\"', '%', 'self.cookies.keys', 'self.check_type', '\"get_signed_cookie\",', 'self.get_signed_cookie', 'bytes)', 'self.check_type', '\"get_cookie\",', 'self.get_cookie', 'str)', 'self.check_type', '\"xsrf_token\",', 'self.xsrf_token,', 'bytes)', 'self.check_type', 'str)', 'self.check_type', '\"reverse_url\",', 'self.reverse_url', '\"typecheck\",', '\"foo\"', 'str)', 'self.check_type', '\"request_summary\",', 'self._request_summary', 'str)', 'get', 'self,', 'path_component', 'self.check_type', '\"path_component\",', 'path_component,', 'unicode_type)', 'self.write', 'post', 'self,', 'path_component', 'self.check_type', '\"path_component\",', 'path_component,', 'unicode_type)', 'self.write', 'check_type', 'self,', 'name,', 'obj,', 'expected_type', 'actual_type', '=', 'type', 'obj)', 'expected_type', '!=', 'actual_type:', 'name]', '=', '\"expected', '%s,', 'got', '%s\"', '%', '(expected_type,', 'actual_type)', 'decode_argument', 'self,', 'value,', 'name', '=', 'type', 'value)', '!=', 'bytes:', 'Exception', '\"unexpected', 'type', 'value:', '%r\"', '%', 'type', 'value', 'self.request.arguments:', 'value.decode', 'to_unicode', 'self.request.arguments', '0', 'value', 'get', 'self,', 'arg', 'describe', 's', 'type', 's)', '==', 'bytes:', '[\"bytes\",', 'native_str', 's', 'type', 's)', '==', 'unicode_type:', '[\"unicode\",', 's]', 'Exception', '\"unknown', 'type\")', 'self.write', '\"path\":', 'describe', 'arg', '\"query\":', 'describe', 'self.get_argument', '\"foo\"', 'get', 'self', 'self.render', 'message', '=', '\"http', '/', '/', 'example.com\")', 'get', 'self', 'self.render', '\"page.html\",', 'entries', '=', '1,', '2', 'get', 'self,', 'path', 'self.write', '\"path\":', 'path', 'get', 'self', 'self.set_header', '\"x', '-', 'overwrite\",', '\"1\")', 'self.set_header', '\"X', '-', 'Overwrite\",', '2)', 'self.add_header', '\"x', '-', 'multi\",', '3)', 'self.add_header', '\"X', '-', 'Multi\",', '\"4\")', 'get', 'self', 'self.get_argument', '\"permanent\",', 'self.redirect', '\"', '/', '\",', 'permanent', '=', 'bool', 'self.get_argument', '\"permanent\"', 'self.get_argument', '\"status\",', 'self.redirect', '\"', '/', '\",', 'status', '=', 'self.get_argument', '\"status\"', 'Exception', '\"didn\\'t', 'get', 'permanent', 'status', 'arguments\")', 'get', 'self', 'self.flush', 'self.flush', 'self.write', '\"o\")', 'self.flush', 'self.flush', '\"k\")', 'get', 'self', 'self.set_header', '\"X', '-', 'Foo\",', '\"foo\\\\r\\\\nX', '-', 'Bar:', 'baz\")', 'Exception', '\"Didn\\'t', 'get', 'expected', 'e:', '\"Unsafe', 'header', 'value\"', 'str', 'e', 'b\"ok\")', 'prepare', 'self', 'self.get_argument', '\"source\",', '==', '\"query\":', 'method', '=', 'self.get_query_argument', 'self.get_argument', '\"source\",', '==', '\"body\":', 'method', '=', 'self.get_body_argument', 'method', '=', 'self.get_argument', 'method', '\"foo\",', 'prepare', 'self', 'dict(', '=', 'self.get_arguments', '\"foo\"', 'query', '=', 'self.get_query_arguments', '\"foo\"', 'body', '=', 'self.get_body_arguments', '\"foo\"', 'WSGISafeWebTest', 'COOKIE_SECRET', '=', '\"WebTest.COOKIE_SECRET\"', 'get_app_kwargs', 'self', 'loader', '=', 'DictLoader(', '\"', '%', 'module', 'message)', '%', '\",', '\"page.html\":', 'dict(', 'template_loader', '=', 'loader,', 'autoescape', '=', '\"xhtml_escape\",', 'cookie_secret', '=', 'self.COOKIE_SECRET,', 'tearDown', 'self', 'super', '.tearDown', 'self', 'urls', '=', 'url', '\"', '/', 'typecheck', '/', '.', '*', '\",', 'name', '=', '\"typecheck\"', 'url', '\"', '/', 'decode_arg', '/', '.', '*', '\",', 'name', '=', '\"decode_arg\"', 'url', '\"', '/', 'decode_arg_kw', '/', '?P', '<', 'arg', '>', '.', '*', '\",', 'url', '\"', '/', 'url', '\"', '/', 'uimodule_resources\",', 'url', '\"', '/', 'optional_path', '/', '.', '+', '?\",', 'url', '\"', '/', 'multi_header\",', 'url', '\"', '/', 'redirect\",', 'url(', '\"', '/', 'web_redirect_permanent\",', '{\"url\":', '\"', '/', 'web_redirect_newpath\"', '),', 'url(', '\"', '/', 'web_redirect\",', '{\"url\":', '\"', '/', 'web_redirect_newpath\",', '\"permanent\":', '),', 'url(', '\"', '/', '/', '{\"url\":', '\"', '/', 'web_redirect_newpath\"', '),', 'url', '\"', '/', 'url', '\"', '/', 'get_argument\",', 'url', '\"', '/', 'get_arguments\",', 'urls', 'fetch_json', 'self,', '*args,', '*', '*', 'kwargs', 'response', '=', 'self.fetch', '*', 'args,', '*', '*', 'kwargs)', 'response.rethrow', 'json_decode', 'response.body)', 'test_types', 'self', 'cookie_value', '=', 'to_unicode(', 'create_signed_value', 'self.COOKIE_SECRET,', '\"qwer\")', 'response', '=', 'self.fetch(', '\"', '/', 'typecheck', '/', '=', 'bar\",', 'headers', '=', '\"Cookie\":', '=', '\"', '+', 'cookie_value}', 'data', '=', 'json_decode', 'response.body)', 'data,', 'response', '=', 'self.fetch(', '\"', '/', 'typecheck', '/', '=', 'bar\",', 'method', '=', '\"POST\",', 'headers', '=', '\"Cookie\":', '=', '\"', '+', 'cookie_value', 'body', '=', '\"foo', '=', 'bar\",', 'test_decode_argument', 'self', 'urls', '=', '\"', '/', 'decode_arg', '/', '%', 'C3', '%', 'A9?foo', '=', '%', 'C3', '%', 'A9', '&', '=', 'utf', '-', '8\",', '\"', '/', 'decode_arg', '/', '%', 'E9?foo', '=', '%', 'E9', '&', '=', '\"', '/', 'decode_arg_kw', '/', '%', 'E9?foo', '=', '%', 'E9', '&', '=', 'req_url', 'urls:', 'response', '=', 'self.fetch', 'req_url)', 'response.rethrow', 'data', '=', 'json_decode', 'response.body)', 'data,', '{\"path\":', '[\"unicode\",', '\"\\\\u00e9\"', '\"query\":', '[\"unicode\",', '\"\\\\u00e9\"', 'response', '=', 'self.fetch', '\"', '/', 'decode_arg', '/', '%', 'C3', '%', 'A9?foo', '=', '%', 'C3', '%', 'A9\")', 'response.rethrow', 'data', '=', 'json_decode', 'response.body)', 'data,', '{\"path\":', '[\"bytes\",', '\"c3a9\"', '\"query\":', '[\"bytes\",', '\"c3a9\"', 'self', 'ExpectLog', 'gen_log,', '\".', '*', 'Invalid', 'unicode.', '*', '\"', 'response', '=', 'self.fetch', '\"', '/', 'typecheck', '/', '%', 'FF\")', 'response.code,', '400)', 'response', '=', 'self.fetch', '\"', '/', 'typecheck', '/', '=', '%', 'FF\")', 'response.code,', '400)', 'test_decode_argument_plus', 'self', 'urls', '=', '\"', '/', 'decode_arg', '/', '1', '%', '20', '%', '2B', '%', '201?foo', '=', '1', '%', '20', '%', '2B', '%', '201', '&', '=', 'utf', '-', '8\",', '\"', '/', 'decode_arg', '/', '1', '%', '20', '+', '%', '201?foo', '=', '1', '+', '%', '2B', '+', '1', '&', '=', 'utf', '-', '8\",', 'req_url', 'urls:', 'response', '=', 'self.fetch', 'req_url)', 'response.rethrow', 'data', '=', 'json_decode', 'response.body)', 'data,', '{\"path\":', '[\"unicode\",', '\"1', '+', '1\"', '\"query\":', '[\"unicode\",', '\"1', '+', '1\"', 'test_reverse_url', 'self', 'self.app.reverse_url', '\"decode_arg\",', '\"foo\"', '\"', '/', 'decode_arg', '/', 'foo\")', 'self.app.reverse_url', '\"decode_arg\",', '42', '\"', '/', 'decode_arg', '/', '42\")', 'self.app.reverse_url', '\"decode_arg\",', 'b\"\\\\xe9\"', '\"', '/', 'decode_arg', '/', '%', 'E9\")', 'self.app.reverse_url', '\"decode_arg\",', '\"\\\\u00e9\"', '\"', '/', 'decode_arg', '/', '%', 'C3', '%', 'A9\"', 'self.app.reverse_url', '\"decode_arg\",', '\"1', '+', '1\"', '\"', '/', 'decode_arg', '/', '1', '%', '20', '%', '2B', '%', '201\"', 'test_uimodule_unescaped', 'self', 'response', '=', 'self.fetch', '\"', '/', 'response.body,', \"b'\", '<', 'a', 'href', '=', '\"http', '/', '/', 'example.com\"', '>', 'http', '/', '/', 'example.com', '<', '/', 'a', '>', \"'\", 'test_uimodule_resources', 'self', 'response', '=', 'self.fetch', '\"', '/', 'uimodule_resources\")', 'response.body,', 'b,', 'test_optional_path', 'self', 'self.fetch_json', '\"', '/', 'optional_path', '/', 'foo\"', '{\"path\":', '\"foo\"', 'self.fetch_json', '\"', '/', 'optional_path', '/', '\"', '{\"path\":', 'test_multi_header', 'self', 'response', '=', 'self.fetch', '\"', '/', 'multi_header\")', 'response.headers', '\"x', '-', 'overwrite\"', '\"2\")', '\"x', '-', 'multi\"', '[\"3\",', '\"4\"', 'test_redirect', 'self', 'response', '=', 'self.fetch', '\"', '/', 'redirect?permanent', '=', '1\",', 'follow_redirects', '=', 'response.code,', '301)', 'response', '=', 'self.fetch', '\"', '/', 'redirect?permanent', '=', '0\",', 'follow_redirects', '=', 'response.code,', '302)', 'response', '=', 'self.fetch', '\"', '/', 'redirect?status', '=', '307\",', 'follow_redirects', '=', 'response.code,', '307)', 'test_web_redirect', 'self', 'response', '=', 'self.fetch', '\"', '/', 'web_redirect_permanent\",', 'follow_redirects', '=', 'response.code,', '301)', 'response.headers', '\"Location\"', '\"', '/', 'web_redirect_newpath\")', 'response', '=', 'self.fetch', '\"', '/', 'web_redirect\",', 'follow_redirects', '=', 'response.code,', '302)', 'response.headers', '\"Location\"', '\"', '/', 'web_redirect_newpath\")', 'self', 'response', '=', 'self.fetch', '\"', '/', '/', 'follow_redirects', '=', 'response.code,', '301)', 'response.headers', '\"Location\"', '\"', '/', 'web_redirect_newpath\")', 'self', 'response', '=', 'self.fetch', '\"', '/', 'response.body,', 'b\"ok\")', 'test_get_argument', 'self', 'response', '=', 'self.fetch', '\"', '/', 'get_argument?foo', '=', 'bar\")', 'response.body,', 'b\"bar\")', 'response', '=', 'self.fetch', '\"', '/', 'get_argument?foo', '=', '\")', 'response.body,', 'b\"\")', 'response', '=', 'self.fetch', '\"', '/', 'get_argument\")', 'response.body,', 'body', '=', 'urllib.parse.urlencode', 'dict', 'foo', '=', '\"hello\"', 'response', '=', 'self.fetch', '\"', '/', 'get_argument?foo', '=', 'bar\",', 'method', '=', '\"POST\",', 'body', '=', 'body)', 'response.body,', 'b\"hello\")', 'response', '=', 'self.fetch', '\"', '/', 'get_arguments?foo', '=', 'bar\",', 'method', '=', '\"POST\",', 'body', '=', 'body)', 'json_decode', 'response.body', 'dict', '=', '\"bar\",', '\"hello\"', 'query', '=', '\"bar\"', 'body', '=', '\"hello\"', 'test_get_query_arguments', 'self', 'body', '=', 'urllib.parse.urlencode', 'dict', 'foo', '=', '\"hello\"', 'response', '=', 'self.fetch(', '\"', '/', 'get_argument?source', '=', 'query', '&', 'foo', '=', 'bar\",', 'method', '=', '\"POST\",', 'body', '=', 'body', 'response.body,', 'b\"bar\")', 'response', '=', 'self.fetch(', '\"', '/', 'get_argument?source', '=', 'query', '&', 'foo', '=', '\",', 'method', '=', '\"POST\",', 'body', '=', 'body', 'response.body,', 'b\"\")', 'response', '=', 'self.fetch', '\"', '/', 'get_argument?source', '=', 'query\",', 'method', '=', '\"POST\",', 'body', '=', 'body)', 'response.body,', 'test_get_body_arguments', 'self', 'body', '=', 'urllib.parse.urlencode', 'dict', 'foo', '=', '\"bar\"', 'response', '=', 'self.fetch(', '\"', '/', 'get_argument?source', '=', 'body', '&', 'foo', '=', 'hello\",', 'method', '=', '\"POST\",', 'body', '=', 'body', 'response.body,', 'b\"bar\")', 'body', '=', 'urllib.parse.urlencode', 'dict', 'foo', '=', '\"\"', 'response', '=', 'self.fetch(', '\"', '/', 'get_argument?source', '=', 'body', '&', 'foo', '=', 'hello\",', 'method', '=', '\"POST\",', 'body', '=', 'body', 'response.body,', 'b\"\")', 'body', '=', 'urllib.parse.urlencode', 'dict', 'response', '=', 'self.fetch(', '\"', '/', 'get_argument?source', '=', 'body', '&', 'foo', '=', 'hello\",', 'method', '=', '\"POST\",', 'body', '=', 'body', 'response.body,', 'test_no_gzip', 'self', 'response', '=', 'self.fetch', '\"', '/', 'get_argument\")', '\"Accept', '-', 'response.headers.get', '\"Vary\",', '\"\"', '\"gzip\",', 'response.headers.get', '\"Content', '-', '\"\"', 'NonWSGIWebTests', 'self', '\"', '/', 'empty_flush\",', 'test_empty_flush', 'self', 'response', '=', 'self.fetch', '\"', '/', 'empty_flush\")', 'response.body,', 'b\"ok\")', 'self', 'get', 'self', 'self.get_argument', '\"status\",', 'self.get_argument', '\"status\"', '1', '/', '0', 'get', 'self', 'self.get_argument', '\"status\",', 'self.get_argument', '\"status\"', '1', '/', '0', 'self,', 'status_code,', '*', '*', 'kwargs', 'self.set_header', '\"Content', '-', 'Type\",', '\"text', '/', 'kwargs:', 'self.write', '\"Exception:', '%s\"', '%', 'kwargs', '0', '.__name__)', 'self.write', '\"Status:', '%d\"', '%', 'status_code)', 'get', 'self', '1', '/', '0', 'self,', 'status_code,', '*', '*', 'kwargs', 'Exception', 'url', '\"', '/', 'url', '\"', '/', 'url', '\"', '/', 'self', 'ExpectLog', 'app_log,', '\"Uncaught', 'response', '=', 'self.fetch', '\"', '/', 'response.code,', '500)', 'b\"500:', 'Internal', 'Server', 'response.body)', 'response', '=', 'self.fetch', '\"', '/', '=', '503\")', 'response.code,', '503)', 'b\"503:', 'Service', 'Unavailable\"', 'response.body)', 'response', '=', 'self.fetch', '\"', '/', '=', '435\")', 'response.code,', '435)', 'b\"435:', 'Unknown\"', 'response.body)', 'self', 'ExpectLog', 'app_log,', '\"Uncaught', 'response', '=', 'self.fetch', '\"', '/', 'response.code,', '500)', 'b\"Exception:', 'response.body)', 'response', '=', 'self.fetch', '\"', '/', '=', '503\")', 'response.code,', '503)', 'b\"Status:', '503\",', 'response.body)', 'self', 'ExpectLog', 'app_log,', '\"Uncaught', 'response', '=', 'self.fetch', '\"', '/', 'response.code,', '500)', 'b\"\",', 'response.body)', 'StaticFileTest', '=', 'b\"63a36e950e134b5217e33c763e88840c10a07d80e6057d92b9ac97508de7fb1f\"', 'b\"a6f0e9b7531e169657165ea764e8963399cb6d921ffe6078425aaafe54c04563\"', 'static_dir', '=', 'os.path.dirname', '__file__', '\"static\")', 'self', 'get', 'self,', 'path', '=', 'self.get_argument', '\"1\"', 'self.write', 'self.static_url', 'path,', '=', '=', 'get', 'self,', 'path', '=', 'bool', 'self.get_argument', '=', 'regular_url', '=', 'self.static_url', 'path)', 'override_url', '=', 'self.static_url', 'path,', '=', 'override_url', '==', 'regular_url:', 'self.write', 'str', 'protocol', '=', 'self.request.protocol', '+', '\"', '/', '/', '\"', 'protocol_length', '=', 'len', 'protocol)', 'check_regular', '=', 'protocol,', '0,', 'protocol_length)', 'check_override', '=', 'protocol,', '0,', 'protocol_length)', 'result', '=', 'check_override', '==', '0', 'check_regular', '==', '-1', 'result', '=', 'check_override', '==', '-1', 'check_regular', '==', '0', 'self.write', 'str', 'result', '(\"', '/', 'static_url', '/', '.', '*', '\",', '(\"', '/', 'abs_static_url', '/', '.', '*', '\",', '(\"', '/', 'override_static_url', '/', '.', '*', '\",', '(\"', '/', 'root_static', '/', '.', '*', '\",', 'dict', 'path', '=', '\"', '/', '\"', 'get_app_kwargs', 'self', 'dict', 'static_path', '=', 'relpath', '\"static\"', 'test_static_files', 'self', 'response', '=', 'self.fetch', '\"', '/', 'robots.txt\")', '/\"', 'response.body)', 'response', '=', 'self.fetch', '\"', '/', 'static', '/', 'robots.txt\")', '/\"', 'response.body)', 'response.headers.get', '\"Content', '-', 'Type\"', '\"text', '/', 'test_static_files_cacheable', 'self', 'response', '=', 'self.fetch', '\"', '/', 'robots.txt?v', '=', '12345\")', '/\"', 'response.body)', '\"Cache', '-', 'Control\",', 'response.headers)', '\"Expires\",', 'response.headers)', 'test_static_compressed_files', 'self', 'response', '=', 'self.fetch', '\"', '/', 'static', '/', 'sample.xml.gz\")', 'response.headers.get', '\"Content', '-', 'Type\"', '\"application', '/', 'gzip\")', 'response', '=', 'self.fetch', '\"', '/', 'static', '/', 'sample.xml.bz2\")', 'response.headers.get', '\"Content', '-', 'Type\"', '\"application', '/', 'octet', '-', 'stream\"', 'response', '=', 'self.fetch', '\"', '/', 'static', '/', 'sample.xml\")', 'response.headers.get', '\"Content', '-', 'Type\")', 'set', '\"text', '/', 'xml\",', '\"application', '/', 'xml\"', 'test_static_url', 'self', 'response', '=', 'self.fetch', '\"', '/', 'static_url', '/', 'robots.txt\")', 'response.body,', 'b\"', '/', 'static', '/', 'robots.txt?v', '=', '\"', '+', 'test_absolute_static_url', 'self', 'response', '=', 'self.fetch', '\"', '/', 'abs_static_url', '/', 'robots.txt\")', 'response.body,', '(utf8', 'self.get_url', '\"', '/', '\"', '+', 'b\"static', '/', 'robots.txt?v', '=', '\"', '+', 'test_relative_version_exclusion', 'self', 'response', '=', 'self.fetch', '\"', '/', 'static_url', '/', '=', '0\")', 'response.body,', 'b\"', '/', 'static', '/', 'robots.txt\")', 'test_absolute_version_exclusion', 'self', 'response', '=', 'self.fetch', '\"', '/', 'abs_static_url', '/', '=', '0\")', 'response.body,', 'utf8', 'self.get_url', '\"', '/', '\")', '+', '\"static', '/', 'robots.txt\"', 'self', 'self,', 'path', '=', '\"', '/', 'override_static_url', '/', '=', '%', 's\"', 'response', '=', 'self.fetch', 'path', '%', 'response.body,', 'utf8', 'str', 'self,', '*args,', '*', '*', 'kwargs', 'head_response', '=', 'self.fetch', '*', 'args,', 'method', '=', '\"HEAD\",', '*', '*', 'kwargs)', 'get_response', '=', 'self.fetch', '*', 'args,', 'method', '=', '\"GET\",', '*', '*', 'kwargs)', 'content_headers', '=', 'set', 'h', 'head_response.headers,', 'get_response.headers', '\"Content', '-', '\"', 'content_headers.add', 'h)', 'h', 'content_headers:', 'head_response.headers.get', 'h', 'get_response.headers.get', 'h', '\"', '%', 's', 'between', 'GET', '%', 's)', 'HEAD', '%', 's', '\"', '%', '(h,', 'head_response.headers.get', 'h', 'get_response.headers.get', 'h', 'get_response', 'self', 'response1', '=', '\"', '/', 'static', '/', 'robots.txt\")', 'response2', '=', '\"', '/', 'static', '/', 'robots.txt\",', 'headers', '=', '\"If', '-', '-', 'response1.headers', '-', 'response2.code,', '304)', '\"Content', '-', 'Length\"', 'response2.headers)', 'self', 'response1', '=', '\"', '/', 'static', '/', 'robots.txt\")', 'response2', '=', '\"', '/', 'static', '/', 'robots.txt\",', 'headers', '=', '\"If', '-', '-', 'Match\":', 'response1.headers', '\"Etag\"', 'response2.code,', '304)', 'self', 'response1', '=', '\"', '/', 'static', '/', 'robots.txt\")', 'response2', '=', '\"', '/', 'static', '/', 'robots.txt\",', 'headers', '=', '\"If', '-', '-', 'Match\":', '\\'\"MISMATCH\"\\',', '\"If', '-', '-', 'response1.headers', '-', '},', 'response2.code,', '200)', 'self', 'response', '=', '\"', '/', 'static', '/', 'robots.txt\",', 'headers', '=', '\"If', '-', '-', '\"Fri,', '01', 'Jan', '1960', '00', '00', '00', 'GMT\"', 'response.code,', '200)', 'self', 'stat', '=', 'os.stat', 'relpath', '\"static', '/', 'robots.txt\"', 'response', '=', '\"', '/', 'static', '/', 'robots.txt\",', 'headers', '=', '\"If', '-', '-', 'stat.st_mtime', '-', '1', 'response.code,', '200)', 'response', '=', '\"', '/', 'static', '/', 'robots.txt\",', 'headers', '=', '\"If', '-', '-', 'stat.st_mtime', '+', '1', 'response.code,', '304)', 'test_static_etag', 'self', 'response', '=', '\"', '/', 'static', '/', 'robots.txt\")', 'utf8', 'response.headers.get', '\"Etag\"', 'b\\'\"\\'', '+', '+', 'b\\'\"\\'', 'self', 'response', '=', '\"', '/', 'static', '/', 'robots.txt\",', 'headers', '=', '\"Range\":', '\"bytes', '=', '0', '-', '9\"}', 'response.code,', '206)', 'response.body,', 'b\"User', '-', 'agent\")', 'utf8', 'response.headers.get', '\"Etag\"', 'b\\'\"\\'', '+', '+', 'b\\'\"\\'', 'response.headers.get', '\"Content', '-', 'Length\"', '\"10\")', 'response.headers.get', '\"Content', '-', 'Range\"', '\"bytes', '0', '-', '9', '/', '26\")', 'self', 'response', '=', '\"', '/', 'static', '/', 'robots.txt\",', 'headers', '=', '\"Range\":', '\"bytes', '=', '0', '-', '\"}', 'response.code,', '200)', 'robots_file_path', '=', 'self.static_dir,', '\"robots.txt\")', 'open', 'robots_file_path,', '=', '\"utf', '-', '8\")', 'f:', 'response.body,', 'utf8', 'f.read', 'response.headers.get', '\"Content', '-', 'Length\"', '\"26\")', 'response.headers.get', '\"Content', '-', 'Range\"', 'self', 'response', '=', '\"', '/', 'static', '/', 'robots.txt\",', 'headers', '=', '\"Range\":', '\"bytes', '=', '0', '-', '10000000\"}', 'response.code,', '200)', 'robots_file_path', '=', 'self.static_dir,', '\"robots.txt\")', 'open', 'robots_file_path,', '=', '\"utf', '-', '8\")', 'f:', 'response.body,', 'utf8', 'f.read', 'response.headers.get', '\"Content', '-', 'Length\"', '\"26\")', 'response.headers.get', '\"Content', '-', 'Range\"', 'self', 'response', '=', '\"', '/', 'static', '/', 'robots.txt\",', 'headers', '=', '\"Range\":', '\"bytes', '=', '1', '-', '10000000\"}', 'response.code,', '206)', 'robots_file_path', '=', 'self.static_dir,', '\"robots.txt\")', 'open', 'robots_file_path,', '=', '\"utf', '-', '8\")', 'f:', 'response.body,', 'utf8', 'f.read', '1', 'response.headers.get', '\"Content', '-', 'Length\"', '\"25\")', 'response.headers.get', '\"Content', '-', 'Range\"', '\"bytes', '1', '-', '25', '/', '26\")', 'self', 'response', '=', '\"', '/', 'static', '/', 'robots.txt\",', 'headers', '=', '\"Range\":', '\"bytes', '=', '22', '-', '\"}', 'response.body,', 'b\":', '/\\\\n\")', 'response.headers.get', '\"Content', '-', 'Length\"', '\"4\")', 'response.headers.get', '\"Content', '-', 'Range\"', '\"bytes', '22', '-', '25', '/', '26\")', 'self', 'response', '=', '\"', '/', 'static', '/', 'robots.txt\",', 'headers', '=', '\"Range\":', '\"bytes', '=', '-', '4\"}', 'response.body,', 'b\":', '/\\\\n\")', 'response.headers.get', '\"Content', '-', 'Length\"', '\"4\")', 'response.headers.get', '\"Content', '-', 'Range\"', '\"bytes', '22', '-', '25', '/', '26\")', 'self', 'response', '=', '\"', '/', 'static', '/', 'robots.txt\",', 'headers', '=', '\"Range\":', '\"bytes', '=', '-', '1000000\"}', 'response.code,', '200)', 'robots_file_path', '=', 'self.static_dir,', '\"robots.txt\")', 'open', 'robots_file_path,', '=', '\"utf', '-', '8\")', 'f:', 'response.body,', 'utf8', 'f.read', 'response.headers.get', '\"Content', '-', 'Length\"', '\"26\")', 'response.headers.get', '\"Content', '-', 'Range\"', 'self', 'response', '=', '\"', '/', 'static', '/', 'robots.txt\",', 'headers', '=', '\"Range\":', 'response.code,', '200)', 'self', 'response', '=', '\"', '/', 'static', '/', 'robots.txt\",', 'headers', '=', '\"Range\":', '\"bytes', '=', '-', '0\"}', 'response.headers.get', '\"Content', '-', 'Range\"', '\"bytes', '*', '/', '26\")', 'response.code,', '416)', 'self', 'response', '=', '\"', '/', 'static', '/', 'robots.txt\",', 'headers', '=', '\"Range\":', '\"bytes', '=', '26\"}', 'response.code,', '416)', 'response.headers.get', '\"Content', '-', 'Range\"', '\"bytes', '*', '/', '26\")', 'self', 'response', '=', '\"', '/', 'static', '/', 'robots.txt\",', 'headers', '=', '\"Range\":', '\"bytes', '=', '10', '-', '3\"}', 'response.code,', '416)', 'response.headers.get', '\"Content', '-', 'Range\"', '\"bytes', '*', '/', '26\")', 'test_static_head', 'self', 'response', '=', 'self.fetch', '\"', '/', 'static', '/', 'robots.txt\",', 'method', '=', '\"HEAD\")', 'response.code,', '200)', 'response.body,', 'b\"\")', 'response.headers', '\"Content', '-', 'Length\"', '\"26\")', 'utf8', 'response.headers', '\"Etag\"', 'b\\'\"\\'', '+', '+', 'b\\'\"\\'', 'test_static_head_range', 'self', 'response', '=', 'self.fetch(', '\"', '/', 'static', '/', 'robots.txt\",', 'method', '=', '\"HEAD\",', 'headers', '=', '\"Range\":', '\"bytes', '=', '1', '-', '4\"}', 'response.code,', '206)', 'response.body,', 'b\"\")', 'response.headers', '\"Content', '-', 'Length\"', '\"4\")', 'utf8', 'response.headers', '\"Etag\"', 'b\\'\"\\'', '+', '+', 'b\\'\"\\'', 'self', 'response', '=', '\"', '/', 'static', '/', 'robots.txt\",', 'headers', '=', '\"Range\":', '\"bytes', '=', '1', '-', '4\",', '\"If', '-', '-', 'Match\":', 'b\\'\"\\'', '+', '+', 'b\\'\"\\',', '},', 'response.code,', '304)', 'response.body,', 'b\"\")', '\"Content', '-', 'Length\"', 'response.headers)', 'utf8', 'response.headers', '\"Etag\"', 'b\\'\"\\'', '+', '+', 'b\\'\"\\'', 'test_static_404', 'self', 'response', '=', '\"', '/', 'static', '/', 'blarg\")', 'response.code,', '404)', 'test_path_traversal_protection', 'self', 'self.http_client.close', 'self.http_client', '=', 'SimpleAsyncHTTPClient', 'ExpectLog', 'gen_log,', '\".', '*', 'root', 'static', 'response', '=', '\"', '/', 'static', '/', '..', '/', 'static_foo.txt\")', 'response.code,', '403)', '@unittest.skipIf', 'os.name', '!=', '\"posix\",', '\"non', '-', 'posix', 'OS\")', 'test_root_static_path', 'self', 'path', '=', 'os.path.dirname', 'os.path.abspath', '__file__', '\"static', '/', 'robots.txt\"', 'response', '=', '\"', '/', 'root_static\"', '+', 'urllib.parse.quote', 'path', 'response.code,', '200)', 'StaticDefaultFilenameTest', 'get_app_kwargs', 'self', 'dict(', 'static_path', '=', 'relpath', '\"static\"', '=', 'dict', '=', 'self', '[]', 'self', 'response', '=', 'self.fetch', '\"', '/', 'static', '/', 'dir', '/', '\",', 'follow_redirects', '=', 'response.code,', '200)', 'the', 'response.body)', 'self', 'response', '=', 'self.fetch', '\"', '/', 'static', '/', 'dir\",', 'follow_redirects', '=', 'response.code,', '301)', 'response.headers', '\"Location\"', '\"', '/', 'static', '/', 'dir', '/', '\"', 'StaticDefaultFilenameRootTest', 'get_app_kwargs', 'self', 'dict(', 'static_path', '=', 'os.path.abspath', 'relpath', '\"static\"', '=', 'dict', '=', 'static_url_prefix', '=', '\"', '/', '\",', 'self', '[]', 'get_http_client', 'self', 'SimpleAsyncHTTPClient', 'test_no_open_redirect', 'self', 'test_dir', '=', 'os.path.dirname', '__file__)', 'drive,', 'tail', '=', 'os.path.splitdrive', 'test_dir)', 'os.name', '==', '\"posix\":', 'tail,', 'test_dir)', 'test_dir', '=', 'tail', 'ExpectLog', 'gen_log,', '\".', '*', 'redirect', 'path', 'two', 'response', '=', 'self.fetch(', 'f\"', '/', '/', 'evil.com', '/', '..', '/', 'test_dir', '/', 'static', '/', 'dir\",', 'follow_redirects', '=', 'response.code,', '403)', 'StaticFileWithPathTest', 'get_app_kwargs', 'self', 'dict(', 'static_path', '=', 'relpath', '\"static\"', '=', 'dict', '=', 'self', '\"', '/', 'foo', '/', '.', '*', '\",', '{\"path\":', 'relpath', '\"templates', '/', '\"', 'test_serve', 'self', 'response', '=', 'self.fetch', '\"', '/', 'foo', '/', 'utf8.html\")', 'response.body,', 'b\"H\\\\xc3\\\\xa9llo\\\\n\")', 'CustomStaticFileTest', 'self', 'make_static_url', 'cls,', 'path', '=', 'cls.get_version', 'path)', '=', '\".\")', '=', 'path', 'after_version', '=', 'path', '+', '1)', ':]', '\"', '/', 'static', '/', '%', 's.', '%', 's.', '%', 's\"', '%', 'after_version,', 'parse_url_path', 'self,', 'url_path', '=', '\".\")', '=', '\".\",', '0,', '\"', '%', 's', '%', 's\"', '%', '(url_path', 'url_path', 'get_absolute_path', 'cls,', 'path', '\"CustomStaticFileTest', '\"', '+', 'path', 'validate_absolute_path', 'self,', 'root,', 'absolute_path', 'absolute_path', 'get_content', 'self,', 'path,', 'start', '=', 'end', '=', 'start', 'end', 'path', '==', '\"CustomStaticFileTest', 'foo.txt\":', 'b\"bar\"', 'Exception', '\"unexpected', 'path', '%r\"', '%', 'path)', 'get_content_size', 'self', 'self.absolute_path', '==', '\"CustomStaticFileTest', 'foo.txt\":', '3', 'Exception', '\"unexpected', 'path', '%r\"', '%', 'self.absolute_path)', 'self', 'get_version', 'cls,', 'path', '\"42\"', 'get', 'self,', 'path', 'self.write', 'self.static_url', 'path', '=', '\"', '/', 'static_url', '/', '.', '*', '\",', 'get_app_kwargs', 'self', 'dict', 'static_path', '=', '\"dummy\",', '=', 'test_serve', 'self', 'response', '=', 'self.fetch', '\"', '/', 'static', '/', 'foo.42.txt\")', 'response.body,', 'b\"bar\")', 'test_static_url', 'self', 'ExpectLog', 'gen_log,', '\"Could', 'open', 'static', 'file\",', 'required', '=', 'response', '=', 'self.fetch', '\"', '/', 'static_url', '/', 'foo.txt\")', 'response.body,', 'b\"', '/', 'static', '/', 'foo.42.txt\")', 'self,', 'reply', 'self.reply', '=', 'reply', 'get', 'self', 'self.write', 'self.reply)', 'self', '\"', '/', 'foo\",', '{\"reply\":', '\"wildcard\"', 'self', '\"www.example.com\",', '\"', '/', 'foo\",', '{\"reply\":', '\"', '0', '\"', 'r\"www\\\\.example\\\\.com\",', '\"', '/', 'bar\",', '{\"reply\":', '\"', '1', '\"', '\"www.example.com\",', '\"', '/', 'baz\",', '{\"reply\":', '\"', '2', '\"', '\"www.e.', '*', 'e.com\",', '\"', '/', 'baz\",', '{\"reply\":', '\"', '3', '\"', 'response', '=', 'self.fetch', '\"', '/', 'foo\")', 'response.body,', 'b\"wildcard\")', 'response', '=', 'self.fetch', '\"', '/', 'bar\")', 'response.code,', '404)', 'response', '=', 'self.fetch', '\"', '/', 'baz\")', 'response.code,', '404)', 'response', '=', 'self.fetch', '\"', '/', 'foo\",', 'headers', '=', '\"Host\":', '\"www.example.com\"', 'response.body,', 'b\"', '0', '\")', 'response', '=', 'self.fetch', '\"', '/', 'bar\",', 'headers', '=', '\"Host\":', '\"www.example.com\"', 'response.body,', 'b\"', '1', '\")', 'response', '=', 'self.fetch', '\"', '/', 'baz\",', 'headers', '=', '\"Host\":', '\"www.example.com\"', 'response.body,', 'b\"', '2', '\")', 'response', '=', 'self.fetch', '\"', '/', 'baz\",', 'headers', '=', '\"Host\":', '\"www.exe.com\"', 'response.body,', 'b\"', '3', '\")', 'self', '[]', 'get_app_kwargs', 'self', '\"www.example.com\"}', 'self', '\"www.example.com\",', '\"', '/', 'foo\",', '{\"reply\":', '\"', '0', '\"', 'r\"www\\\\.example\\\\.com\",', '\"', '/', 'bar\",', '{\"reply\":', '\"', '1', '\"', '\"www.test.com\",', '\"', '/', 'baz\",', '{\"reply\":', '\"', '2', '\"', 'response', '=', 'self.fetch', '\"', '/', 'foo\")', 'response.body,', 'b\"', '0', '\")', 'response', '=', 'self.fetch', '\"', '/', 'bar\")', 'response.body,', 'b\"', '1', '\")', 'response', '=', 'self.fetch', '\"', '/', 'baz\")', 'response.code,', '404)', 'response', '=', 'self.fetch', '\"', '/', 'foo\",', 'headers', '=', '\"X', '-', 'Real', '-', 'Ip\":', '\"127.0.0.1\"', 'response.code,', '404)', '=', '\"www.test.com\"', 'response', '=', 'self.fetch', '\"', '/', 'baz\")', 'response.body,', 'b\"', '2', '\")', 'NamedURLSpecGroupsTest', 'self', 'get', 'self,', 'path', 'self.write', 'path)', '(\"', '/', 'str', '/', '?P', '<', 'path', '>', '.', '*', '\",', '(\"', '/', 'unicode', '/', '?P', '<', 'path', '>', '.', '*', '\",', 'test_named_urlspec_groups', 'self', 'response', '=', 'self.fetch', '\"', '/', 'str', '/', 'foo\")', 'response.body,', 'b\"foo\")', 'response', '=', 'self.fetch', '\"', '/', 'unicode', '/', 'bar\")', 'response.body,', 'b\"bar\")', 'ClearHeaderTest', 'get', 'self', 'self.set_header', '\"h1\",', '\"foo\")', 'self.set_header', '\"h2\",', '\"bar\")', 'self.clear_header', '\"h1\")', 'self.clear_header', 'test_clear_header', 'self', 'response', '=', 'self.fetch', '\"', '/', '\")', '\"h1\"', 'response.headers)', 'response.headers', '\"h2\"', '\"bar\")', 'Header204Test', 'get', 'self', 'self.set_status', '204)', 'test_204_headers', 'self', 'response', '=', 'self.fetch', '\"', '/', '\")', 'response.code,', '204)', '\"Content', '-', 'Length\",', 'response.headers)', '\"Transfer', '-', 'response.headers)', 'Header304Test', 'get', 'self', 'self.set_header', '\"Content', '-', 'Language\",', '\"en_US\")', 'self.write', '\"hello\")', 'test_304_headers', 'self', 'response1', '=', 'self.fetch', '\"', '/', '\")', 'response1.headers', '\"Content', '-', 'Length\"', '\"5\")', 'response1.headers', '\"Content', '-', 'Language\"', '\"en_US\")', 'response2', '=', 'self.fetch(', '\"', '/', '\",', 'headers', '=', '\"If', '-', '-', 'Match\":', 'response1.headers', '\"Etag\"', 'response2.code,', '304)', '\"Content', '-', 'Length\"', 'response2.headers)', '\"Content', '-', 'Language\"', 'response2.headers)', '\"Transfer', '-', 'response2.headers)', 'get', 'self', '=', 'self.request.arguments.get', 'self.set_status(', 'self.get_argument', '\"code\"', '=', 'to_unicode', '0', 'get_http_client', 'self', 'SimpleAsyncHTTPClient', 'test_status', 'self', 'response', '=', 'self.fetch', '\"', '/', '?code', '=', '304\")', 'response.code,', '304)', '\"Not', 'response', '=', 'self.fetch', '\"', '/', '?code', '=', '304', '&', '=', 'Foo\")', 'response.code,', '304)', '\"Foo\")', 'response', '=', 'self.fetch', '\"', '/', '?code', '=', '682', '&', '=', 'Bar\")', 'response.code,', '682)', '\"Bar\")', 'response', '=', 'self.fetch', '\"', '/', '?code', '=', '682\")', 'response.code,', '682)', '\"Unknown\")', 'DateHeaderTest', 'get', 'self', 'self.write', '\"hello\")', 'test_date_header', 'self', 'response', '=', 'self.fetch', '\"', '/', '\")', 'header_date', '=', 'email.utils.parsedate_to_datetime', 'response.headers', '\"Date\"', 'header_date', '-', 'datetime.datetime.now', 'datetime.timezone.utc)', '<', 'seconds', '=', '2)', 'get', 'self', '682,', '=', '\"Foo\")', 'get_http_client', 'self', 'SimpleAsyncHTTPClient', 'self', 'response', '=', 'self.fetch', '\"', '/', '\")', 'response.code,', '682)', '\"Foo\")', 'b\"682:', 'Foo\",', 'response.body)', 'self', 'str', '682,', '=', '\"Foo\"', '\"HTTP', '682:', 'Foo\")', 'self', 'str', '682', '\"HTTP', '682:', 'Unknown\")', 'self', '\"', '/', 'dict', 'status_code', '=', '417', 'get_app_kwargs', 'self', 'dict', 'xsrf_cookies', '=', 'self', 'response', '=', 'self.fetch', '\"', '/', 'method', '=', '\"POST\",', 'body', '=', '\"\")', 'response.code,', '417)', 'test_404_xsrf', 'self', 'response', '=', 'self.fetch', '\"', '/', '404\",', 'method', '=', '\"POST\",', 'body', '=', '\"\")', 'response.code,', '404)', 'get', 'self', 'v', 'self.get_arguments', '\"vary\"', 'self.add_header', '\"Vary\",', 'v)', 'self.write', '\"hello', '+', '(\"!\"', '*', 'get_app_kwargs', 'self', 'dict(', 'gzip', '=', 'static_path', '=', 'os.path.dirname', '__file__', '\"static\")', 'self,', 'response', 'response.headers.get(', '\"Content', '-', 'response.headers.get', '\"X', '-', 'Consumed', '-', 'Content', '-', '),', '\"gzip\",', 'test_gzip', 'self', 'response', '=', 'self.fetch', '\"', '/', '\")', 'response)', 'response.headers', '\"Vary\"', '\"Accept', '-', 'test_gzip_static', 'self', 'response', '=', 'self.fetch', '\"', '/', 'robots.txt\")', 'response)', 'response.headers', '\"Vary\"', '\"Accept', '-', 'self', 'response', '=', 'self.fetch', '\"', '/', '\",', 'use_gzip', '=', '\"Content', '-', 'response.headers)', 'response.headers', '\"Vary\"', '\"Accept', '-', 'test_vary_already_present', 'self', 'response', '=', 'self.fetch', '\"', '/', '?vary', '=', 'Accept', '-', 'Language\")', 'response)', '[s.strip', 's', 'response.headers', '\"Vary\"', '.split', '\"', '\"', '[\"Accept', '-', 'Language\",', '\"Accept', '-', 'test_vary_already_present_multiple', 'self', 'response', '=', 'self.fetch', '\"', '/', '?vary', '=', 'Accept', '-', 'Language', '&', 'vary', '=', 'Cookie\")', 'response)', '[s.strip', 's', 'response.headers', '\"Vary\"', '.split', '\"', '\"', '[\"Accept', '-', 'Language\",', '\"Cookie\",', '\"Accept', '-', 'PathArgsInPrepareTest', 'prepare', 'self', 'self.write', 'dict', 'args', '=', 'self.path_args,', 'kwargs', '=', 'self.path_kwargs', 'get', 'self,', 'path', 'path', '==', '\"foo\"', 'self', '\"', '/', 'pos', '/', '.', '*', '\",', '(\"', '/', 'kw', '/', '?P', '<', 'path', '>', '.', '*', '\",', 'test_pos', 'self', 'response', '=', 'self.fetch', '\"', '/', 'pos', '/', 'foo\")', 'response.rethrow', 'data', '=', 'json_decode', 'response.body)', 'data,', '{\"args\":', '[\"foo\"', '\"kwargs\":', 'test_kw', 'self', 'response', '=', 'self.fetch', '\"', '/', 'kw', '/', 'foo\")', 'response.rethrow', 'data', '=', 'json_decode', 'response.body)', 'data,', '{\"args\":', '\"kwargs\":', '{\"path\":', '\"foo\"', 'ClearAllCookiesTest', 'get', 'self', 'self.clear_all_cookies', 'self.write', '\"ok\")', 'test_clear_all_cookies', 'self', 'response', '=', 'self.fetch', '\"', '/', '\",', 'headers', '=', '\"Cookie\":', '\"foo', '=', 'bar;', 'baz', '=', 'xyzzy\"', 'set_cookies', '=', '\"Set', '-', 'Cookie\"', 'set_cookies', '0', '\"baz', '=', '\")', 'set_cookies', '0', \"'baz\", '=', '\"\"', \"')\", 'set_cookies', '1', '\"foo', '=', '\")', 'set_cookies', '1', \"'foo\", '=', '\"\"', \"')\", 'Exception', 'get', 'self', 'exc', '=', 'self.get_argument', '\"exc\")', 'exc', '==', '\"http\":', '410,', '\"no', 'longer', 'here\")', 'exc', '==', '\"zero\":', '1', '/', '0', 'exc', '==', 'allowed\")', 'self,', 'status_code,', '*', '*', 'kwargs', 'kwargs:', 'typ,', 'value,', 'tb', '=', 'kwargs', 'value,', 'self.set_status', '403)', 'self.write', 'self,', 'status_code,', '*', '*', 'kwargs)', 'self,', 'typ,', 'value,', 'tb', 'value,', '\"custom', '%s\",', 'value.args', '0', 'self,', 'typ,', 'value,', 'tb)', 'self', 'ExpectLog', 'gen_log,', '\".', '*', 'no', 'longer', 'here\"', 'response', '=', 'self.fetch', '\"', '/', '?exc', '=', 'http\")', 'response.code,', '410)', 'self', 'ExpectLog', 'app_log,', '\"Uncaught', 'response', '=', 'self.fetch', '\"', '/', '?exc', '=', 'zero\")', 'response.code,', '500)', 'self', 'ExpectLog', 'app_log,', '\"custom', 'allowed\"', 'response', '=', 'self.fetch', '\"', '/', '?exc', '=', 'response.code,', '403)', 'get', 'self', '1', '/', '0', 'self,', 'typ,', 'value,', 'tb', '1', '/', '0', 'self', 'ExpectLog', 'app_log,', '\".', '*', '\"', 'self.fetch', '\"', '/', '\")', 'UIMethodUIModuleTest', 'get', 'self', 'self.render', '\"foo.html\")', 'value', 'self', 'self.get_argument', '\"value\")', 'get_app_kwargs', 'self', 'my_ui_method', 'x', '\"In', 'my_ui_method', '%', 's)', 'value', '%s.\"', '%', '(x,', 'MyModule', 'UIModule', 'render', 'self,', 'x', '\"In', 'MyModule', '%', 's)', 'value', '%s.\"', '%', 'x,', '.value', 'loader', '=', 'DictLoader(', '{\"foo.html\":', '\"', 'my_ui_method', '42)', '}}', '{%', 'module', 'MyModule', '123)', '%', '\"}', 'dict(', 'template_loader', '=', 'loader,', 'ui_methods', '=', '\"my_ui_method\":', 'my_ui_method', 'ui_modules', '=', '\"MyModule\":', 'MyModule', 'tearDown', 'self', 'super', '.tearDown', 'test_ui_method', 'self', 'response', '=', 'self.fetch', '\"', '/', '?value', '=', 'response.body,', 'b\"In', 'my_ui_method', '42)', 'value', '\"', 'b\"In', 'MyModule', '123)', 'value', 'get', 'self', 'self.get_argument', '\"foo\")', 'self.write', 'e:', 'self.write', '\"arg_name\":', 'e.arg_name,', '\"log_message\":', 'e.log_message', 'self', 'response', '=', 'self.fetch', '\"', '/', '\")', 'json_decode', 'response.body', '{\"arg_name\":', '\"foo\",', '\"log_message\":', 'argument', 'foo\"', 'SetLazyPropertiesTest', 'prepare', 'self', 'self.current_user', '=', '\"Ben\"', 'self.locale', '=', 'locale.get', '\"en_US\")', 'get_user_locale', 'self', 'get_current_user', 'self', 'get', 'self', 'self.write', '\"Hello', '%s', '%', 's', '\"', '%', '(self.current_user,', 'self.locale.code', 'test_set_properties', 'self', 'response', '=', 'self.fetch', '\"', '/', '\")', 'response.body,', 'b\"Hello', 'Ben', '(en_US', '\")', 'GetCurrentUserTest', 'get_app_kwargs', 'self', 'WithoutUserModule', 'UIModule', 'render', 'self', '\"\"', 'WithUserModule', 'UIModule', 'render', 'self', 'str', 'self.current_user)', 'loader', '=', 'DictLoader(', '\"\",', '\"', 'current_user', '\",', '\"', '%', 'module', 'WithoutUserModule', '%', '\",', '\"', '%', 'module', 'WithUserModule', '%', '\",', 'dict(', 'template_loader', '=', 'loader,', 'ui_modules', '=', '\"WithUserModule\":', 'WithUserModule,', '\"WithoutUserModule\":', 'WithoutUserModule,', '},', 'tearDown', 'self', 'super', '.tearDown', 'self', 'prepare', 'self', '=', 'get_current_user', 'self', '=', '\"\"', 'get', 'self', 'str', 'get', 'self', 'str', 'get_template_namespace', 'self', 'self.ui', 'get', 'self', 'str', 'get', 'self', 'str', '(\"', '/', '(\"', '/', '(\"', '/', '(\"', '/', '@unittest.skip', '\"needs', 'fix\")', 'self', 'response', '=', 'self.fetch', '\"', '/', 'response.body,', 'self', 'response', '=', 'self.fetch', '\"', '/', 'response.body,', 'self', 'response', '=', 'self.fetch', '\"', '/', 'response.body,', 'self', 'response', '=', 'self.fetch', '\"', '/', 'response.body,', 'UnimplementedHTTPMethodsTest', 'self', 'method', '[\"HEAD\",', '\"GET\",', '\"DELETE\",', '\"OPTIONS\"', 'response', '=', 'self.fetch', '\"', '/', '\",', 'method', '=', 'method)', 'response.code,', '405)', 'method', '[\"POST\",', '\"PUT\"', 'response', '=', 'self.fetch', '\"', '/', '\",', 'method', '=', 'method,', 'body', '=', 'b\"\")', 'response.code,', '405)', 'other', 'self', 'self.write', '\"other\")', 'test_unimplemented_patch', 'self', 'response', '=', 'self.fetch', '\"', '/', '\",', 'method', '=', '\"PATCH\",', 'body', '=', 'b\"\")', 'response.code,', '405)', 'test_unimplemented_other', 'self', 'response', '=', 'self.fetch', '\"', '/', '\",', 'method', '=', '\"OTHER\",', '=', 'response.code,', '405)', 'AllHTTPMethodsTest', 'method', 'self', 'self.request.method', 'self.write', 'self.request.method)', 'get', '=', '=', 'options', '=', 'post', '=', 'put', '=', 'method', 'self', 'response', '=', 'self.fetch', '\"', '/', '\",', 'method', '=', '\"HEAD\")', 'response.body,', 'b\"\")', 'method', '[\"GET\",', '\"DELETE\",', '\"OPTIONS\"', 'response', '=', 'self.fetch', '\"', '/', '\",', 'method', '=', 'method)', 'response.body,', 'utf8', 'method', 'method', '[\"POST\",', '\"PUT\"', 'response', '=', 'self.fetch', '\"', '/', '\",', 'method', '=', 'method,', 'body', '=', 'b\"\")', 'response.body,', 'utf8', 'method', 'PatchMethodTest', 'SUPPORTED_METHODS', '=', '+', '\"OTHER\",', 'patch', 'self', 'self.write', '\"patch\")', 'other', 'self', 'self.write', '\"other\")', 'test_patch', 'self', 'response', '=', 'self.fetch', '\"', '/', '\",', 'method', '=', '\"PATCH\",', 'body', '=', 'b\"\")', 'response.body,', 'b\"patch\")', 'test_other', 'self', 'response', '=', 'self.fetch', '\"', '/', '\",', 'method', '=', '\"OTHER\",', '=', 'response.body,', 'b\"other\")', 'prepare', 'self', '\"done\")', 'get', 'self', 'Exception', '\"should', 'reach', 'method\")', 'self', 'response', '=', 'self.fetch', '\"', '/', '\")', 'response.body,', 'b\"done\")', 'Default404Test', 'self', '\"', '/', 'foo\",', 'test_404', 'self', 'response', '=', 'self.fetch', '\"', '/', '\")', 'response.code,', '404)', 'response.body,', 'b\"', '<', 'html', '>', '<', 'title', '>', '404:', 'Not', 'Found', '<', '/', 'title', '>', '\"', 'b\"', '<', 'body', '>', '404:', 'Not', 'Found', '<', '/', 'body', '>', '<', '/', 'html', '>', '\",', 'Custom404Test', 'self', '\"', '/', 'foo\",', 'get_app_kwargs', 'self', 'get', 'self', 'self.set_status', '404)', 'self.write', '\"custom', '404', 'response\")', 'dict', '=', 'test_404', 'self', 'response', '=', 'self.fetch', '\"', '/', '\")', 'response.code,', '404)', 'response.body,', 'b\"custom', '404', 'response\")', 'self', '\"', '/', 'foo\",', 'get_app_kwargs', 'self', 'dict(', '=', '=', 'dict', 'status_code', '=', '403', 'test_403', 'self', 'response', '=', 'self.fetch', '\"', '/', '\")', 'response.code,', '403)', 'self', '(\"', '/', 'hello1\",', '(\"', '/', 'hello2\",', 'url', '\"', '/', 'hello3\",', 'self', 'resp', '=', 'self.fetch', '\"', '/', 'hello1\")', 'resp.body,', 'b\"hello\")', 'resp', '=', 'self.fetch', '\"', '/', 'hello2\")', 'resp.body,', 'b\"hello\")', 'resp', '=', 'self.fetch', '\"', '/', 'hello3\")', 'resp.body,', 'b\"hello\")', 'self', '@stream_request_body', 'self,', 'test', 'self.test', '=', 'test', 'prepare', 'self', 'self.test.prepared.set_result', 'data_received', 'self,', 'data', 'self.test.data.set_result', 'data)', 'get', 'self', 'self.write', '@stream_request_body', 'prepare', 'self', '401)', '@stream_request_body', 'self,', 'test', 'self.test', '=', 'test', 'on_connection_close', 'self', 'super', '.on_connection_close', 'self.test.close_future.set_result', '(\"', '/', 'stream_body\",', 'dict', 'test', '=', 'self', '(\"', '/', '(\"', '/', 'close_detection\",', 'dict', 'test', '=', 'self', 'connect', 'self,', 'url,', 'connection_close', 's', '=', 'socket.socket', 'socket.AF_INET,', 'socket.SOCK_STREAM,', '0)', 's.connect', '\"127.0.0.1\",', 'stream', '=', 'IOStream', 's)', 'stream.write', 'b\"GET', '\"', '+', 'url', '+', 'b\"', 'HTTP', '/', '1.1\\\\r\\\\n\")', 'connection_close:', 'stream.write', 'b\"Connection:', 'close\\\\r\\\\n\")', 'stream.write', 'b\"Transfer', '-', 'chunked\\\\r\\\\n\\\\r\\\\n\")', 'stream', '@gen_test', 'self', 'self.prepared', '=', 'Future', 'self.data', '=', 'Future', '=', 'Future', 'stream', '=', 'self.connect', 'b\"', '/', 'stream_body\",', 'connection_close', '=', 'self.prepared', 'stream.write', 'data', '=', 'self.data', 'data,', 'self.data', '=', 'Future', 'stream.write', 'b\"4\\\\r\\\\nqwer\\\\r\\\\n\")', 'data', '=', 'self.data', 'data,', 'b\"qwer\")', 'stream.write', 'b\"0\\\\r\\\\n\\\\r\\\\n\")', 'data', '=', 'stream.read_until_close', 'b\"', '\"', 'stream.close', '@gen_test', 'self', 'stream', '=', 'self.connect', 'b\"', '/', 'connection_close', '=', 'data', '=', 'stream.read_until_close', 'b\"HTTP', '/', '1.1', '401\"', '@gen_test', 'self', 'stream', '=', 'self.connect', 'b\"', '/', 'connection_close', '=', 'stream.write', 'data', '=', 'stream.read_until_close', 'b\"HTTP', '/', '1.1', '401\"', '@gen_test', 'self', 'self.close_future', '=', 'Future', 'stream', '=', 'self.connect', 'b\"', '/', 'close_detection\",', 'connection_close', '=', 'stream.close', 'self.close_future', '@stream_request_body', 'self,', 'test', 'self.test', '=', 'test', 'self.method', '=', 'self.methods', '=', '[]', '@contextlib.contextmanager', 'self,', 'method', 'self.method', 'self.test.fail', '\"entered', 'method', '%s', '%s\"', '%', '(method,', 'self.method', 'self.method', '=', 'method', 'self.methods.append', 'method)', 'self.method', '=', 'prepare', 'self', 'self.methods.append', '\"prepare\")', 'gen.moment', 'post', 'self', '\"post\"', 'gen.moment', 'self.write', 'dict', 'methods', '=', 'self.methods', 'object', 'get_httpserver_options', 'self', 'dict', 'chunk_size', '=', '10,', 'decompress_request', '=', 'get_http_client', 'self', 'SimpleAsyncHTTPClient', 'test_flow_control_fixed_body', 'self:', 'response', '=', 'self.fetch', '\"', '/', '\",', 'body', '=', 'method', '=', '\"POST\")', 'response.rethrow', 'json_decode', 'response.body', 'dict(', 'methods', '=', '\"prepare\",', '\"data_received\",', '\"data_received\",', '\"data_received\",', '\"post\",', '),', 'test_flow_control_chunked_body', 'self:', 'chunks', '=', '[b\"abcd\",', 'b\"efgh\",', 'b\"ijkl\"]', 'body_producer', 'write', 'i', 'chunks:', 'write', 'i)', 'response', '=', 'self.fetch', '\"', '/', '\",', 'body_producer', '=', 'body_producer,', 'method', '=', '\"POST\")', 'response.rethrow', 'json_decode', 'response.body', 'dict(', 'methods', '=', '\"prepare\",', '\"data_received\",', '\"data_received\",', '\"data_received\",', '\"post\",', '),', 'test_flow_control_compressed_body', 'self:', 'bytesio', '=', 'BytesIO', 'gzip_file', '=', 'gzip.GzipFile', 'mode', '=', '\"w\",', 'fileobj', '=', 'bytesio)', 'gzip_file.write', 'gzip_file.close', 'compressed_body', '=', 'bytesio.getvalue', 'response', '=', 'self.fetch(', '\"', '/', '\",', 'body', '=', 'compressed_body,', 'method', '=', '\"POST\",', 'headers', '=', '\"Content', '-', '\"gzip\"', 'response.rethrow', 'json_decode', 'response.body', 'dict(', 'methods', '=', '\"prepare\",', '\"data_received\",', '\"data_received\",', '\"data_received\",', '\"post\",', '),', '):', 'self', 'data_received', 'self,', 'data', '\"data_received\"', 'gen.moment', '\"', '/', '\",', 'dict', 'test', '=', 'self', '):', 'self', 'data_received', 'self,', 'data', '\"data_received\"', '0)', '\"', '/', '\",', 'dict', 'test', '=', 'self', 'self', 'test', '=', 'self', '=', 'TooHigh', 'get', 'self', 'self.set_header', '\"Content', '-', 'Length\",', '\"42\")', '\"ok\")', 'Exception', 'e:', '=', 'e', 'TooLow', 'get', 'self', 'self.set_header', '\"Content', '-', 'Length\",', '\"2\")', '\"hello\")', 'Exception', 'e:', '=', 'e', '\"', '/', 'high\",', 'TooHigh', '(\"', '/', 'low\",', 'TooLow', 'test_content_length_too_high', 'self', 'ExpectLog', 'app_log,', '\"', 'Uncaught', '|', 'Exception', 'callback', '\"', 'ExpectLog(', 'gen_log,', '\"', 'send', 'response', 'after', 'headers', 'written\"', '\"', '|', 'Failed', 'to', 'flush', 'partial', 'response', '\",', '):', 'self.fetch', '\"', '/', 'high\",', '=', 'str', '\"Tried', 'to', 'write', '40', 'bytes', 'less', 'than', 'Content', '-', 'Length\"', 'test_content_length_too_low', 'self', 'ExpectLog', 'app_log,', '\"', 'Uncaught', '|', 'Exception', 'callback', '\"', 'ExpectLog(', 'gen_log,', '\"', 'send', 'response', 'after', 'headers', 'written\"', '\"', '|', 'Failed', 'to', 'flush', 'partial', 'response', '\",', '):', 'self.fetch', '\"', '/', 'low\",', '=', 'str', '\"Tried', 'to', 'write', 'data', 'than', 'Content', '-', 'Length\"', 'ClientCloseTest', 'get', 'self', '\"HTTP', '/', '1\"', 'self.request.connection.stream.close', 'self.write', '\"hello\")', 'self.write', '\"requires', 'HTTP', '/', '1.x\")', 'test_client_close', 'self', 'unittest.SkipTest', 'response', '=', 'self.fetch', '\"', '/', '\",', '=', 'response.body', '==', 'b\"requires', 'HTTP', '/', '1.x\":', 'self.skipTest', '\"requires', 'HTTP', '/', '1.x\")', 'response.code,', '599)', 'SignedValueTest', 'SECRET', '=', '\"It\\'s', 'a', 'secret', 'to', 'everybody\"', 'SECRET_DICT', '=', '{0:', '1:', '\"12312312\",', '2:', '\"2342342\"}', 'self', 'self.present', '-', '86400', '*', '32', 'present', 'self', '1300000000', 'test_known_values', 'self', 'signed_v1', '=', 'create_signed_value(', 'SignedValueTest.SECRET,', '\"key\",', '\"value\",', 'version', '=', '1,', 'clock', '=', 'self.present', 'signed_v1,', 'b\"dmFsdWU', '=', '|', '1300000000', '|', '31c934969f53e48164c50768b40cbd7e2daaaa4f\"', 'signed_v2', '=', 'create_signed_value(', 'SignedValueTest.SECRET,', '\"key\",', '\"value\",', 'version', '=', '2,', 'clock', '=', 'self.present', 'signed_v2,', 'b\"2', '|', '1', '0', '|', '10', '1300000000', '|', '3', 'key', '|', '8', 'dmFsdWU', '=', '|', '\"', 'b\"3d4e60b996ff9c5d5788e333a0cba6f238a22c6c0f94788870e1a9ecd482e152\",', '=', 'create_signed_value(', 'SignedValueTest.SECRET,', '\"key\",', '\"value\",', 'clock', '=', 'self.present', 'signed_v2)', 'decoded_v1', '=', 'decode_signed_value(', 'SignedValueTest.SECRET,', '\"key\",', 'signed_v1,', '=', '1,', 'clock', '=', 'self.present', 'decoded_v1,', 'b\"value\")', 'decoded_v2', '=', 'decode_signed_value(', 'SignedValueTest.SECRET,', '\"key\",', 'signed_v2,', '=', '2,', 'clock', '=', 'self.present', 'decoded_v2,', 'b\"value\")', 'test_name_swap', 'self', 'signed1', '=', 'create_signed_value(', 'SignedValueTest.SECRET,', '\"key1\",', '\"value\",', 'clock', '=', 'self.present', 'signed2', '=', 'create_signed_value(', 'SignedValueTest.SECRET,', '\"key2\",', '\"value\",', 'clock', '=', 'self.present', 'decoded1', '=', 'decode_signed_value(', 'SignedValueTest.SECRET,', '\"key2\",', 'signed1,', 'clock', '=', 'self.present', 'decoded1,', 'decoded2', '=', 'decode_signed_value(', 'SignedValueTest.SECRET,', '\"key1\",', 'signed2,', 'clock', '=', 'self.present', 'decoded2,', 'test_expired', 'self', 'signed', '=', 'create_signed_value(', 'SignedValueTest.SECRET,', '\"key1\",', '\"value\",', 'clock', '=', '=', 'decode_signed_value(', 'SignedValueTest.SECRET,', '\"key1\",', 'signed,', 'clock', '=', 'b\"value\")', 'decoded_present', '=', 'decode_signed_value(', 'SignedValueTest.SECRET,', '\"key1\",', 'signed,', 'clock', '=', 'self.present', 'decoded_present,', 'self', 'sig', '=', '\"3d4e60b996ff9c5d5788e333a0cba6f238a22c6c0f94788870e1a9ecd482e152\"', 'validate', 'prefix', 'b\"value\"', '==', 'decode_signed_value(', 'SignedValueTest.SECRET,', '\"key\",', 'prefix', '+', 'sig,', 'clock', '=', 'self.present', 'validate', '\"2', '|', '1', '0', '|', '10', '1300000000', '|', '3', 'key', '|', '8', 'dmFsdWU', '=', '|', '\"', 'validate', '\"2', '|', '1', '1', '|', '10', '1300000000', '|', '3', 'key', '|', '8', 'dmFsdWU', '=', '|', '\"', 'validate', '\"2', '|', '1', '0', '|', '10', '130000000', '|', '3', 'key', '|', '8', 'dmFsdWU', '=', '|', '\"', 'validate', '\"2', '|', '1', '0', '|', '10', '1300000000', '|', '3', 'keey', '|', '8', 'dmFsdWU', '=', '|', '\"', 'self', 'prefix', '=', '\"2', '|', '1', '0', '|', '10', '1300000000', '|', '3', 'key', '|', '8', 'dmFsdWU', '=', '|', '\"', 'validate', 'sig', 'b\"value\"', '==', 'decode_signed_value(', 'SignedValueTest.SECRET,', '\"key\",', 'prefix', '+', 'sig,', 'clock', '=', 'self.present', 'validate', '\"3d4e60b996ff9c5d5788e333a0cba6f238a22c6c0f94788870e1a9ecd482e152\")', 'validate', '\"0\"', '*', '32', 'validate', '\"4d4e60b996ff9c5d5788e333a0cba6f238a22c6c0f94788870e1a9ecd482e152\")', 'validate', '\"3d4e60b996ff9c5d5788e333a0cba6f238a22c6c0f94788870e1a9ecd482e153\")', 'validate', '\"3d4e60b996ff9c5d5788e333a0cba6f238a22c6c0f94788870e1a9ecd482e15\")', 'validate(', '\"3d4e60b996ff9c5d5788e333a0cba6f238a22c6c0f94788870e1a9ecd482e1538\"', 'self', 'value', '=', 'b\"\\\\xe9\"', 'signed', '=', 'create_signed_value(', 'SignedValueTest.SECRET,', '\"key\",', 'value,', 'clock', '=', 'self.present', 'decoded', '=', 'decode_signed_value(', 'SignedValueTest.SECRET,', '\"key\",', 'signed,', 'clock', '=', 'self.present', 'value,', 'decoded)', 'self', 'value', '=', 'b\"\\\\xe9\"', 'signed', '=', 'create_signed_value(', 'SignedValueTest.SECRET_DICT,', '\"key\",', 'value,', 'clock', '=', 'self.present,', 'key_version', '=', '0', 'decoded', '=', 'decode_signed_value(', 'SignedValueTest.SECRET_DICT,', '\"key\",', 'signed,', 'clock', '=', 'self.present', 'value,', 'decoded)', 'self', 'value', '=', 'b\"\\\\xe9\"', 'signed', '=', 'create_signed_value(', 'SignedValueTest.SECRET_DICT,', '\"key\",', 'value,', 'clock', '=', 'self.present,', 'key_version', '=', '1', 'decoded', '=', 'decode_signed_value(', 'SignedValueTest.SECRET_DICT,', '\"key\",', 'signed,', 'clock', '=', 'self.present', 'value,', 'decoded)', 'self', 'value', '=', 'b\"\\\\xe9\"', 'signed', '=', 'create_signed_value(', 'SignedValueTest.SECRET_DICT,', '\"key\",', 'value,', 'clock', '=', 'self.present,', 'key_version', '=', '0', 'newkeys', '=', 'SignedValueTest.SECRET_DICT.copy', 'newkeys.pop', '0)', 'decoded', '=', 'decode_signed_value', 'newkeys,', '\"key\",', 'signed,', 'clock', '=', 'self.present)', 'decoded)', 'test_key_version_retrieval', 'self', 'value', '=', 'b\"\\\\xe9\"', 'signed', '=', 'create_signed_value(', 'SignedValueTest.SECRET_DICT,', '\"key\",', 'value,', 'clock', '=', 'self.present,', 'key_version', '=', '1', 'key_version', '=', 'get_signature_key_version', 'signed)', '1,', 'key_version)', 'XSRFTest', 'get', 'self', 'version', '=', 'self.get_argument', '\"version\",', '\"2\"', '\"xsrf_cookie_version\"]', '=', 'version', 'self.write', 'self.xsrf_token)', 'post', 'self', 'self.write', '\"ok\")', 'get_app_kwargs', 'self', 'dict', 'xsrf_cookies', '=', 'setUp', 'self', 'super', '.setUp', 'self.xsrf_token', '=', 'self.get_token', 'get_token', 'self,', 'old_token', '=', 'version', '=', 'old_token', 'headers', '=', 'self.cookie_headers', 'old_token)', 'headers', '=', 'response', '=', 'self.fetch(', '\"', '/', '\"', 'version', '(\"', '/', '?version', '=', '%', 'd\"', '%', 'version', 'headers', '=', 'headers', 'response.rethrow', 'native_str', 'response.body)', 'cookie_headers', 'self,', 'token', '=', 'token', 'token', '=', 'self.xsrf_token', '{\"Cookie\":', '\"_xsrf', '=', '\"', '+', 'token}', 'test_xsrf_fail_no_token', 'self', 'ExpectLog', 'gen_log,', '\".', '*', \"'_xsrf'\", 'argument', 'response', '=', 'self.fetch', '\"', '/', '\",', 'method', '=', '\"POST\",', 'body', '=', 'b\"\")', 'response.code,', '403)', 'test_xsrf_fail_body_no_cookie', 'self', 'ExpectLog', 'gen_log,', '\".', '*', 'XSRF', 'cookie', 'does', 'match', 'POST\"', 'response', '=', 'self.fetch(', '\"', '/', '\",', 'method', '=', '\"POST\",', 'body', '=', 'urllib.parse.urlencode', 'dict', '_xsrf', '=', 'self.xsrf_token', 'response.code,', '403)', 'self', 'ExpectLog', 'gen_log,', '\".', '*', \"'_xsrf'\", 'argument', 'response', '=', 'self.fetch(', '\"', '/', '\",', 'method', '=', '\"POST\",', 'headers', '=', 'self.cookie_headers', 'body', '=', 'urllib.parse.urlencode', 'dict', '_xsrf', '=', '\"3', '|', '\"', 'response.code,', '403)', 'self', 'ExpectLog', 'gen_log,', '\".', '*', 'XSRF', 'cookie', 'does', 'match', 'POST\"', 'response', '=', 'self.fetch(', '\"', '/', '\",', 'method', '=', '\"POST\",', 'headers', '=', 'self.cookie_headers', 'token', '=', '\"3', '|', '\"', 'body', '=', 'urllib.parse.urlencode', 'dict', '_xsrf', '=', 'self.xsrf_token', 'response.code,', '403)', 'test_xsrf_fail_cookie_no_body', 'self', 'ExpectLog', 'gen_log,', '\".', '*', \"'_xsrf'\", 'argument', 'response', '=', 'self.fetch(', '\"', '/', '\",', 'method', '=', '\"POST\",', 'body', '=', 'b\"\",', 'headers', '=', 'self.cookie_headers', 'response.code,', '403)', 'self', 'response', '=', 'self.fetch(', '\"', '/', '\",', 'method', '=', '\"POST\",', 'body', '=', 'urllib.parse.urlencode', 'dict', '_xsrf', '=', '\"deadbeef\"', 'headers', '=', 'self.cookie_headers', 'token', '=', '\"deadbeef\"', 'response.code,', '200)', 'test_xsrf_success_non_hex_token', 'self', 'response', '=', 'self.fetch(', '\"', '/', '\",', 'method', '=', '\"POST\",', 'body', '=', 'urllib.parse.urlencode', 'dict', '_xsrf', '=', '\"xoxo\"', 'headers', '=', 'self.cookie_headers', 'token', '=', '\"xoxo\"', 'response.code,', '200)', 'test_xsrf_success_post_body', 'self', 'response', '=', 'self.fetch(', '\"', '/', '\",', 'method', '=', '\"POST\",', 'body', '=', 'urllib.parse.urlencode', 'dict', '_xsrf', '=', 'self.xsrf_token', 'headers', '=', 'self.cookie_headers', 'response.code,', '200)', 'self', 'response', '=', 'self.fetch(', '\"', '/', '?\"', '+', 'urllib.parse.urlencode', 'dict', '_xsrf', '=', 'self.xsrf_token', 'method', '=', '\"POST\",', 'body', '=', 'b\"\",', 'headers', '=', 'self.cookie_headers', 'response.code,', '200)', 'test_xsrf_success_header', 'self', 'response', '=', 'self.fetch(', '\"', '/', '\",', 'method', '=', '\"POST\",', 'body', '=', 'b\"\",', 'headers', '=', 'dict(', '{\"X', '-', 'Xsrftoken\":', 'self.xsrf_token', '*', '*', 'self.cookie_headers', '),', 'response.code,', '200)', 'self', 'NUM_TOKENS', '=', '10', 'tokens', '=', 'set', 'i', 'range', 'NUM_TOKENS', 'tokens.add', 'self.get_token', 'len', 'tokens', 'NUM_TOKENS)', 'test_cross_user', 'self', 'token2', '=', 'self.get_token', 'token', '(self.xsrf_token,', 'token2', 'response', '=', 'self.fetch(', '\"', '/', '\",', 'method', '=', '\"POST\",', 'body', '=', 'urllib.parse.urlencode', 'dict', '_xsrf', '=', 'token', 'headers', '=', 'self.cookie_headers', 'token', 'response.code,', '200)', 'cookie_token,', 'body_token', '(self.xsrf_token,', 'token2', '(token2,', 'self.xsrf_token', '):', 'ExpectLog', 'gen_log,', '\".', '*', 'XSRF', 'cookie', 'does', 'match', 'POST\"', 'response', '=', 'self.fetch(', '\"', '/', '\",', 'method', '=', '\"POST\",', 'body', '=', 'urllib.parse.urlencode', 'dict', '_xsrf', '=', 'body_token', 'headers', '=', 'self.cookie_headers', 'cookie_token', 'response.code,', '403)', 'test_refresh_token', 'self', 'token', '=', 'self.xsrf_token', 'tokens_seen', '=', 'set', 'token', 'i', 'range', '5', 'token', '=', 'self.get_token', 'token)', 'tokens_seen.add', 'token)', 'response', '=', 'self.fetch(', '\"', '/', '\",', 'method', '=', '\"POST\",', 'body', '=', 'urllib.parse.urlencode', 'dict', '_xsrf', '=', 'self.xsrf_token', 'headers', '=', 'self.cookie_headers', 'token', 'response.code,', '200)', 'len', 'tokens_seen', '6)', 'self', 'self.get_token', 'version', '=', '1', 'self.get_token', 'version', '=', '1', 'v1_token', '=', 'self.get_token', 'version', '=', '1)', 'i', 'range', '5', 'self.get_token', 'v1_token,', 'version', '=', '1', 'v1_token)', 'v2_token', '=', 'self.get_token', 'v1_token)', 'v1_token,', 'v2_token)', 'v2_token,', 'self.get_token', 'v1_token', 'cookie_token,', 'body_token', 'v1_token,', 'v2_token', '(v2_token,', 'v1_token', 'response', '=', 'self.fetch(', '\"', '/', '\",', 'method', '=', '\"POST\",', 'body', '=', 'urllib.parse.urlencode', 'dict', '_xsrf', '=', 'body_token', 'headers', '=', 'self.cookie_headers', 'cookie_token', 'response.code,', '200)', 'XSRFCookieNameTest', 'get', 'self', 'self.write', 'self.xsrf_token)', 'post', 'self', 'self.write', '\"ok\")', 'get_app_kwargs', 'self', 'dict(', 'xsrf_cookies', '=', 'xsrf_cookie_name', '=', '\"__Host', '-', 'xsrf\",', 'xsrf_cookie_kwargs', '=', '\"secure\":', 'setUp', 'self', 'super', '.setUp', 'self.xsrf_token', '=', 'self.get_token', 'get_token', 'self,', 'old_token', '=', 'old_token', 'headers', '=', 'self.cookie_headers', 'old_token)', 'headers', '=', 'response', '=', 'self.fetch', '\"', '/', '\",', 'headers', '=', 'headers)', 'response.rethrow', 'native_str', 'response.body)', 'cookie_headers', 'self,', 'token', '=', 'token', 'token', '=', 'self.xsrf_token', '{\"Cookie\":', '\"__Host', '-', 'xsrf', '=', '\"', '+', 'token}', 'test_xsrf_fail_no_token', 'self', 'ExpectLog', 'gen_log,', '\".', '*', \"'_xsrf'\", 'argument', 'response', '=', 'self.fetch', '\"', '/', '\",', 'method', '=', '\"POST\",', 'body', '=', 'b\"\")', 'response.code,', '403)', 'test_xsrf_fail_body_no_cookie', 'self', 'ExpectLog', 'gen_log,', '\".', '*', 'XSRF', 'cookie', 'does', 'match', 'POST\"', 'response', '=', 'self.fetch(', '\"', '/', '\",', 'method', '=', '\"POST\",', 'body', '=', 'urllib.parse.urlencode', 'dict', '_xsrf', '=', 'self.xsrf_token', 'response.code,', '403)', 'test_xsrf_success_post_body', 'self', 'response', '=', 'self.fetch(', '\"', '/', '\",', 'method', '=', '\"POST\",', 'body', '=', 'urllib.parse.urlencode', 'dict', '_xsrf', '=', 'self.xsrf_token', 'headers', '=', 'self.cookie_headers', 'response.code,', '200)', 'XSRFCookieKwargsTest', 'get', 'self', 'self.write', 'self.xsrf_token)', 'get_app_kwargs', 'self', 'dict(', 'xsrf_cookies', '=', 'xsrf_cookie_kwargs', '=', 'dict', 'httponly', '=', 'expires_days', '=', '2)', 'test_xsrf_httponly', 'self', 'response', '=', 'self.fetch', '\"', '/', '\")', '\"httponly', '\",', 'response.headers', '\"Set', '-', 'Cookie\"', '.lower', '\"expires', '=', '\",', 'response.headers', '\"Set', '-', 'Cookie\"', '.lower', 'header', '=', 'response.headers.get', '\"Set', '-', 'Cookie\")', 'header', 'match', '=', 're.match', '\".', '*', 'expires', '=', '?P', '<', 'expires', '>', '.', '+', '.', '*', '\",', 'header)', 'match', 'expires', '=', 'datetime.datetime.now', 'datetime.timezone.utc)', '+', 'days', '=', '2', 'header_expires', '=', 'email.utils.parsedate_to_datetime', 'match.groupdict', '\"expires\"', 'header_expires', '=', 'header_expires.replace', '=', 'datetime.timezone.utc)', 'abs', 'expires', '-', 'header_expires', '.total_seconds', '<', '10)', 'get', 'self', 'self.set_status', '401)', 'self.set_header', '\"WWW', '-', 'Authenticate\",', 'realm', '=', 'self.get_argument', '\"\"', '\"authentication', 'required\")', 'self.write', '\"authentication', 'required\")', 'self', 'u', '[\"', '/', '\",', '\"', '/', '=', '1\"', 'response', '=', 'self.fetch', 'u)', 'response.code,', '401)', 'realm', '=', 'response.headers.get', '\"WWW', '-', 'Authenticate\")', 'b\"authentication', 'required\",', 'response.body)', 'self', 'get', 'self', 'get', 'self', '\"', '/', '/', '\",', '(\"', '/', 'self', 'response', '=', 'self.fetch', '\"', '/', '/', '\",', 'follow_redirects', '=', 'response.code,', '301)', 'response.headers', '\"Location\"', '\"', '/', 'response', '=', 'self.fetch', '\"', '/', '/', '?foo', '=', 'bar\",', 'follow_redirects', '=', 'response.code,', '301)', 'response.headers', '\"Location\"', '\"', '/', '=', 'bar\")', 'self', 'response', '=', 'self.fetch', '\"', '/', 'follow_redirects', '=', 'response.code,', '301)', 'response.headers', '\"Location\"', '\"', '/', '/', '\")', 'response', '=', 'self.fetch', '\"', '/', '=', 'bar\",', 'follow_redirects', '=', 'response.code,', '301)', 'response.headers', '\"Location\"', '\"', '/', '/', '?foo', '=', 'bar\")', 'CacheTest', 'self', 'get', 'self,', 'computed_etag', 'self.write', 'computed_etag)', 'compute_etag', 'self', 'self._write_buffer', '0]', '\"', '/', 'etag', '/', '.', '*', '\",', 'test_wildcard_etag', 'self', 'computed_etag', '=', '\\'\"xyzzy\"\\'', 'etags', '=', '\"', '*', '\"', 'self._test_etag', 'computed_etag,', 'etags,', '304)', 'test_strong_etag_match', 'self', 'computed_etag', '=', '\\'\"xyzzy\"\\'', 'etags', '=', '\\'\"xyzzy\"\\'', 'self._test_etag', 'computed_etag,', 'etags,', '304)', 'test_multiple_strong_etag_match', 'self', 'computed_etag', '=', '\\'\"xyzzy1\"\\'', 'etags', '=', '\\'\"xyzzy1\",', '\"xyzzy2\"\\'', 'self._test_etag', 'computed_etag,', 'etags,', '304)', 'self', 'computed_etag', '=', '\\'\"xyzzy\"\\'', 'etags', '=', '\\'\"xyzzy1\"\\'', 'self._test_etag', 'computed_etag,', 'etags,', '200)', 'self', 'computed_etag', '=', '\\'\"xyzzy\"\\'', 'etags', '=', '\\'\"xyzzy1\",', '\"xyzzy2\"\\'', 'self._test_etag', 'computed_etag,', 'etags,', '200)', 'test_weak_etag_match', 'self', 'computed_etag', '=', '\\'\"xyzzy1\"\\'', 'etags', '=', \"'W\", '/', '\"xyzzy1\"\\'', 'self._test_etag', 'computed_etag,', 'etags,', '304)', 'test_multiple_weak_etag_match', 'self', 'computed_etag', '=', '\\'\"xyzzy2\"\\'', 'etags', '=', \"'W\", '/', '\"xyzzy1\",', 'W', '/', '\"xyzzy2\"\\'', 'self._test_etag', 'computed_etag,', 'etags,', '304)', 'self', 'computed_etag', '=', '\\'\"xyzzy2\"\\'', 'etags', '=', \"'W\", '/', '\"xyzzy1\"\\'', 'self._test_etag', 'computed_etag,', 'etags,', '200)', 'self', 'computed_etag', '=', '\\'\"xyzzy3\"\\'', 'etags', '=', \"'W\", '/', '\"xyzzy1\",', 'W', '/', '\"xyzzy2\"\\'', 'self._test_etag', 'computed_etag,', 'etags,', '200)', '_test_etag', 'self,', 'computed_etag,', 'etags,', 'status_code', 'response', '=', 'self.fetch(', '\"', '/', 'etag', '/', '\"', '+', 'computed_etag,', 'headers', '=', '\"If', '-', '-', 'Match\":', 'etags}', 'response.code,', 'status_code)', 'RequestSummaryTest', 'get', 'self', 'self.request.remote_ip', '=', 'self._request_summary', 'self', 'resp', '=', 'self.fetch', '\"', '/', '\")', 'resp.body,', 'b\"GET', '/', '\")', 'test_copy', 'self', 'e', '=', '403,', '=', '\"Go', 'away\")', 'e2', '=', 'copy.copy', 'e)', 'e,', 'e2)', 'e.status_code,', 'e2.status_code)', 'ApplicationTest', 'self', 'app', '=', 'Application', 'server', '=', '0,', 'address', '=', '\"127.0.0.1\")', 'server.stop', 'URLSpecReverseTest', 'test_reverse', 'self', '\"', '/', 'favicon.ico\",', 'url', 'r\"', '/', 'favicon\\\\.ico\",', '.reverse', '\"', '/', 'favicon.ico\",', 'url', 'r\"', '^', '/', 'favicon\\\\.ico$\",', '.reverse', 'test_non_reversible', 'self', 'paths', '=', '[r\"', '^', '/', 'api', '/', 'v\\\\d', '+', '/', 'foo', '/', '\\\\w', '+', '$\"]', 'path', 'paths:', 'url_spec', '=', 'url', 'path,', 'result', '=', 'url_spec.reverse', 'self.fail(', '\"did', 'get', 'expected', 'when', '%s.', '\"', '\"result:', '%s\"', '%', '(path,', 'result)', 'test_reverse_arguments', 'self', '\"', '/', 'api', '/', 'v1', '/', 'foo', '/', 'bar\",', 'url', 'r\"', '^', '/', 'api', '/', 'v1', '/', 'foo', '/', '\\\\w', '+', '$\",', '.reverse', '\"bar\")', '\"', '/', 'api.v1', '/', 'foo', '/', '5', '/', 'icon.png\",', 'url', 'r\"', '/', 'api\\\\.v1', '/', 'foo', '/', '0', '-', '9', '+', '/', 'icon\\\\.png\",', '.reverse', '5', 'self', '(\"', '/', 'src\",', '{\"url\":', '\"', '/', 'dst\"', '(\"', '/', 'src2\",', '{\"url\":', '\"', '/', 'dst2?foo', '=', 'bar\"', '(r\"', '/', '.', '*', '?', '/', '.', '*', '?', '/', '.', '*', '\",', '{\"url\":', '\"', '/', '1', '/', '0', '/', '2', '\"', 'self', 'response', '=', 'self.fetch', '\"', '/', 'src\",', 'follow_redirects', '=', 'response.code,', '301)', 'response.headers', '\"Location\"', '\"', '/', 'dst\")', 'self', 'response', '=', 'self.fetch', '\"', '/', 'src?foo', '=', 'bar\",', 'follow_redirects', '=', 'response.code,', '301)', 'response.headers', '\"Location\"', '\"', '/', 'dst?foo', '=', 'bar\")', 'self', 'response', '=', 'self.fetch', '\"', '/', 'src2?foo2', '=', 'bar2\",', 'follow_redirects', '=', 'response.code,', '301)', 'response.headers', '\"Location\"', '\"', '/', 'dst2?foo', '=', 'bar', '&', 'foo2', '=', 'bar2\")', 'test_redirect_pattern', 'self', 'response', '=', 'self.fetch', '\"', '/', 'a', '/', 'b', '/', 'c\",', 'follow_redirects', '=', 'response.code,', '301)', 'response.headers', '\"Location\"', '\"', '/', 'b', '/', 'a', '/', 'c\")', 'AcceptLanguageTest', 'self', 'locale.load_gettext_translations(', 'os.path.dirname', '__file__', '\"gettext_translations\"', 'get', 'self', 'self.set_header(', '\"Content', '-', 'Language\",', 'self.get_browser_locale', '.code.replace', '\"_\",', '\"', '-', '\")', 'b\"\")', '(\"', '/', '\",', 'test_accept_language', 'self', 'response', '=', 'self.fetch', '\"', '/', '\",', 'headers', '=', '\"Accept', '-', 'Language\":', '\"fr', '-', 'FR', 'q', '=', '0.9\"', 'response.headers', '\"Content', '-', 'Language\"', '\"fr', '-', 'FR\")', 'response', '=', 'self.fetch', '\"', '/', '\",', 'headers', '=', '\"Accept', '-', 'Language\":', '\"fr', '-', 'FR;', 'q', '=', '0.9\"', 'response.headers', '\"Content', '-', 'Language\"', '\"fr', '-', 'FR\")', 'self', 'response', '=', 'self.fetch', '\"', '/', '\",', 'headers', '=', '\"Accept', '-', 'Language\":', '\"fr', '-', 'FR', 'q', '=', '0\"', 'response.headers', '\"Content', '-', 'Language\"', '\"en', '-', 'US\")', 'self', 'response', '=', 'self.fetch', '\"', '/', '\",', 'headers', '=', '\"Accept', '-', 'Language\":', '\"fr', '-', 'FR', 'q', '=', '-', '1\"', 'response.headers', '\"Content', '-', 'Language\"', '\"en', '-', 'US\")']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/tornado/test/websocket_test.py",
        "vector": "['contextlib', 'functools', 'socket', 'traceback', 'unittest', 'Future', 'gen', 'HTTPRequest', 'Event', 'gen_log,', 'app_log', 'Resolver', 'SimpleAsyncHTTPClient', 'DictLoader', 'gen_test,', 'ExpectLog', 'Application,', 'websocket_connect,', 'speedups', 'speedups', '=', 'self,', 'close_future', '=', 'compression_options', '=', 'self.close_future', '=', 'close_future', 'self.compression_options', '=', 'compression_options', 'get_compression_options', 'self', 'self.compression_options', 'on_close', 'self', 'self.close_future', 'self.close_future.set_result', 'self.close_code,', 'on_message', 'self,', 'message', 'self.write_message', 'message,', 'message,', 'bytes', 'on_message', 'self,', 'message', '1', '/', '0', 'open', 'self', 'methods_to_test', '=', 'functools.partial', 'self.write,', 'should', 'functools.partial', 'self.redirect,', '\"http', '/', '/', 'localhost', '/', 'functools.partial', 'self.set_header,', '\"X', '-', 'Test\",', '\"\"', 'functools.partial', 'self.set_cookie,', '\"Chocolate\",', '\"Chip\"', 'functools.partial', 'self.set_status,', '503', 'self.flush,', 'method', 'methods_to_test:', 'method', 'Exception', '\"did', 'get', 'expected', 'self.write_message', 'self.request.headers.get', '\"X', '-', 'Test\",', '\"\"', 'self', 'self.set_header', '\"X', '-', 'Extra', '-', 'Response', '-', 'Header\",', '\"Extra', '-', 'Response', '-', 'Value\")', 'prepare', 'self', 'k,', 'v', 'self.request.headers.get_all', 'k.lower', '\"x', '-', 'test\"', 'self.set_header', 'k,', 'v)', 'get', 'self', 'self.write', '\"ok\")', 'get', 'self', 'self.redirect', '\"', '/', 'echo\")', 'open', 'self', 'self.on_close_called', '=', 'self.close', '1001,', '\"goodbye\")', 'prepare', 'self', 'gen.moment', 'on_message', 'self,', 'message', 'self.write_message', 'message)', 'open', 'self,', 'arg', 'self.write_message', 'arg)', 'self,', '*', '*', 'kwargs', 'super', '**', 'kwargs)', '=', '0', 'on_message', 'self,', 'message', '>', '0:', 'self.write_message', 'already', '+=', '1', 'gen.sleep', '0.01)', '-=', '1', 'self.write_message', 'message)', 'on_message', 'self,', 'message', 'self.write_message', '\"message.html\",', 'message', '=', 'message', 'self,', '*', '*', 'kwargs', 'super', '**', 'kwargs)', 'self.select_subprotocol_called', '=', 'select_subprotocol', 'self,', 'subprotocols', 'self.select_subprotocol_called:', 'Exception', '\"select_subprotocol', 'called', 'twice\")', 'self.select_subprotocol_called', '=', '\"goodproto\"', 'subprotocols:', '\"goodproto\"', 'open', 'self', 'self.select_subprotocol_called:', 'Exception', '\"select_subprotocol', 'called\")', 'self.write_message', '\"subprotocol', '=', '%', 's\"', '%', 'self.selected_subprotocol)', 'self,', 'test,', '*', '*', 'kwargs', 'super', '**', 'kwargs)', 'self.test', '=', 'test', '=', 'open', 'self', 'self.test.message_sent.wait', 'gen.sleep', '0.010)', '=', 'on_message', 'self,', 'message', 'Exception', '\"on_message', 'called', 'open', 'self.write_message', '\"ok\")', 'open', 'self', 'Exception', '\"boom\")', 'open', 'self', '0)', 'Exception', '\"boom\")', 'open', 'self', 'self.write_message', '\"hello\")', 'setUp', 'self', 'super', '.setUp', 'self.conns_to_close', '=', '[]', 'tearDown', 'self', 'conn', 'self.conns_to_close:', 'conn.close', 'super', '.tearDown', 'ws_connect', 'self,', 'path,', '*', '*', 'kwargs', 'ws', '=', 'websocket_connect(', '\"ws', '/', '/', '127.0.0.1', '%', 'd', '%', 's\"', '%', 'path', '*', '*', 'kwargs', 'self.conns_to_close.append', 'ws)', 'gen.Return', 'ws)', 'WebSocketTest', 'get_app', 'self', 'self.close_future', '=', 'Future', 'Application(', '(\"', '/', 'echo\",', 'dict', 'close_future', '=', 'self.close_future', '(\"', '/', 'non_ws\",', '(\"', '/', 'redirect\",', '(\"', '/', 'header\",', 'dict', 'close_future', '=', 'self.close_future', '\"', '/', 'header_echo\",', 'dict', 'close_future', '=', 'self.close_future', '),', '\"', '/', 'dict', 'close_future', '=', 'self.close_future', '),', '\"', '/', 'dict', 'close_future', '=', 'self.close_future', '),', '\"', '/', 'dict', 'close_future', '=', 'self.close_future', '),', '\"', '/', 'path_args', '/', '.', '*', '\",', 'dict', 'close_future', '=', 'self.close_future', '),', '\"', '/', 'dict', 'close_future', '=', 'self.close_future', '),', '(\"', '/', 'render\",', 'dict', 'close_future', '=', 'self.close_future', '\"', '/', 'subprotocol\",', 'dict', 'close_future', '=', 'self.close_future', '),', '\"', '/', 'dict', 'close_future', '=', 'self.close_future,', 'test', '=', 'self', '),', '(\"', '/', '(\"', '/', '(\"', '/', '],', 'template_loader', '=', 'DictLoader', '\"message.html\":', '\"', '<', 'b', '>', 'message', '<', '/', 'b', '>', '\"', 'get_http_client', 'self', 'SimpleAsyncHTTPClient', 'tearDown', 'self', 'super', '.tearDown', 'test_http_request', 'self', 'response', '=', 'self.fetch', '\"', '/', 'echo\")', 'response.code,', '400)', 'self', 'response', '=', 'self.fetch(', '\"', '/', 'echo\",', 'headers', '=', '\"Connection\":', '\"Upgrade\",', '\"Upgrade\":', '\"WebSocket\",', '\"Sec', '-', 'WebSocket', '-', 'Version\":', '\"13\",', '},', 'response.code,', '400)', 'test_bad_websocket_version', 'self', 'response', '=', 'self.fetch(', '\"', '/', 'echo\",', 'headers', '=', '\"Connection\":', '\"Upgrade\",', '\"Upgrade\":', '\"WebSocket\",', '\"Sec', '-', 'WebSocket', '-', 'Version\":', '\"12\",', '},', 'response.code,', '426)', '@gen_test', 'test_websocket_gen', 'self', 'ws', '=', 'self.ws_connect', '\"', '/', 'echo\")', 'ws.write_message', '\"hello\")', 'response', '=', 'ws.read_message', 'response,', '\"hello\")', 'test_websocket_callbacks', 'self', 'websocket_connect(', '\"ws', '/', '/', '127.0.0.1', '%', 'd', '/', 'echo\"', '%', 'callback', '=', 'self.stop', 'ws', '=', 'self.wait', '.result', 'ws.write_message', '\"hello\")', 'ws.read_message', 'self.stop)', 'response', '=', 'self.wait', '.result', 'response,', '\"hello\")', 'self.close_future.add_done_callback', 'f:', 'self.stop', 'ws.close', 'self.wait', '@gen_test', 'self', 'ws', '=', 'self.ws_connect', '\"', '/', 'echo\")', 'ws.write_message', 'b\"hello', '\\\\xe9\",', '=', 'response', '=', 'ws.read_message', 'response,', 'b\"hello', '\\\\xe9\")', '@gen_test', 'test_unicode_message', 'self', 'ws', '=', 'self.ws_connect', '\"', '/', 'echo\")', 'ws.write_message', '\"hello', '\\\\u00e9\")', 'response', '=', 'ws.read_message', 'response,', '\"hello', '\\\\u00e9\")', '@gen_test', 'self', 'ws', '=', 'self.ws_connect', '\"', '/', 'echo\")', 'ws.close', 'ws.write_message', '\"hello', '\\\\u00e9\")', '@gen_test', 'test_render_message', 'self', 'ws', '=', 'self.ws_connect', '\"', '/', 'render\")', 'ws.write_message', '\"hello\")', 'response', '=', 'ws.read_message', 'response,', '\"', '<', 'b', '>', 'hello', '<', '/', 'b', '>', '\")', '@gen_test', 'self', 'ws', '=', 'self.ws_connect', '\"', '/', 'ws.write_message', '\"hello\")', 'ExpectLog', 'app_log,', '\"Uncaught', 'response', '=', 'ws.read_message', 'response,', '@gen_test', 'test_websocket_http_fail', 'self', 'cm:', 'self.ws_connect', '\"', '/', '404)', '@gen_test', 'test_websocket_http_success', 'self', 'self.ws_connect', '\"', '/', 'non_ws\")', '@gen_test', 'test_websocket_http_redirect', 'self', 'self.ws_connect', '\"', '/', 'redirect\")', '@gen_test', 'self', 'sock,', '=', 'sock.close', 'ExpectLog', 'gen_log,', '\".', '*', '\",', 'required', '=', 'websocket_connect(', '\"ws', '/', '/', '127.0.0.1', '%', 'd', '/', '\"', '%', 'connect_timeout', '=', '3600', '@gen_test', 'test_websocket_close_buffered_data', 'self', 'websocket_connect', '\"ws', '/', '/', '127.0.0.1', '%', 'd', '/', 'echo\"', '%', 'ws:', 'ws.write_message', '\"hello\")', 'ws.write_message', 'ws.stream.close', '@gen_test', 'test_websocket_headers', 'self', 'websocket_connect(', 'HTTPRequest(', '\"ws', '/', '/', '127.0.0.1', '%', 'd', '/', 'header\"', '%', 'headers', '=', '\"X', '-', 'Test\":', '\"hello\"', 'ws:', 'response', '=', 'ws.read_message', 'response,', '\"hello\")', '@gen_test', 'test_websocket_header_echo', 'self', 'websocket_connect(', 'HTTPRequest(', '\"ws', '/', '/', '127.0.0.1', '%', 'd', '/', 'header_echo\"', '%', 'headers', '=', '\"X', '-', 'Test', '-', 'Hello\":', '\"hello\"', 'ws:', 'ws.headers.get', '\"X', '-', 'Test', '-', 'Hello\"', '\"hello\")', 'ws.headers.get', '\"X', '-', 'Extra', '-', 'Response', '-', 'Header\"', '\"Extra', '-', 'Response', '-', 'Value\"', '@gen_test', 'self', 'ws', '=', 'self.ws_connect', '\"', '/', 'msg', '=', 'ws.read_message', 'msg,', 'ws.close_code,', '1001)', '\"goodbye\")', 'code,', '=', 'self.close_future', 'code,', '1001)', '@gen_test', 'self', 'ws', '=', 'self.ws_connect', '\"', '/', 'echo\")', 'ws.close', '1001,', '\"goodbye\")', 'code,', '=', 'self.close_future', 'code,', '1001)', '\"goodbye\")', '@gen_test', 'test_write_after_close', 'self', 'ws', '=', 'self.ws_connect', '\"', '/', 'msg', '=', 'ws.read_message', 'msg,', 'ws.write_message', '\"hello\")', '@gen_test', 'self', 'ws', '=', 'self.ws_connect', '\"', '/', 'ws.write_message', '\"hello\")', 'res', '=', 'ws.read_message', 'res,', '\"hello\")', '@gen_test', 'test_path_args', 'self', 'ws', '=', 'self.ws_connect', '\"', '/', 'path_args', '/', 'hello\")', 'res', '=', 'ws.read_message', 'res,', '\"hello\")', '@gen_test', 'self', 'ws', '=', 'self.ws_connect', '\"', '/', 'ws.write_message', '\"hello1\")', 'ws.write_message', '\"hello2\")', 'res', '=', 'ws.read_message', 'res,', '\"hello1\")', 'res', '=', 'ws.read_message', 'res,', '\"hello2\")', '@gen_test', 'self', '=', 'url', '=', '\"ws', '/', '/', '127.0.0.1', '%', 'd', '/', 'echo\"', '%', 'headers', '=', '\"http', '/', '/', '127.0.0.1', '%', 'd\"', '%', 'websocket_connect', 'HTTPRequest', 'url,', 'headers', '=', 'headers', 'ws:', 'ws.write_message', '\"hello\")', 'response', '=', 'ws.read_message', 'response,', '\"hello\")', '@gen_test', 'self', '=', 'url', '=', '\"ws', '/', '/', '127.0.0.1', '%', 'd', '/', 'echo\"', '%', 'headers', '=', '\"http', '/', '/', '127.0.0.1', '%', 'd', '/', '%', 'websocket_connect', 'HTTPRequest', 'url,', 'headers', '=', 'headers', 'ws:', 'ws.write_message', '\"hello\")', 'response', '=', 'ws.read_message', 'response,', '\"hello\")', '@gen_test', 'self', '=', 'url', '=', '\"ws', '/', '/', '127.0.0.1', '%', 'd', '/', 'echo\"', '%', 'headers', '=', '\"127.0.0.1', '%', 'd\"', '%', 'cm:', 'websocket_connect', 'HTTPRequest', 'url,', 'headers', '=', 'headers', '403)', '@gen_test', 'self', '=', 'url', '=', '\"ws', '/', '/', '127.0.0.1', '%', 'd', '/', 'echo\"', '%', 'headers', '=', '\"http', '/', '/', 'cm:', 'websocket_connect', 'HTTPRequest', 'url,', 'headers', '=', 'headers', '403)', '@gen_test', 'self', '=', '=', 'Resolver', '.resolve', '\"localhost\",', 'families', '=', 'set', 'addr', '0]', 'addr', 'socket.AF_INET', 'families:', 'self.skipTest', '\"localhost', 'does', 'resolve', 'to', 'ipv4\")', 'url', '=', '\"ws', '/', '/', 'localhost', '%', 'd', '/', 'echo\"', '%', 'headers', '=', '\"http', '/', '/', 'subtenant.localhost\"}', 'cm:', 'websocket_connect', 'HTTPRequest', 'url,', 'headers', '=', 'headers', '403)', '@gen_test', 'test_subprotocols', 'self', 'ws', '=', 'self.ws_connect(', '\"', '/', 'subprotocol\",', 'subprotocols', '=', '\"badproto\",', '\"goodproto\"]', 'ws.selected_subprotocol,', '\"goodproto\")', 'res', '=', 'ws.read_message', 'res,', '\"subprotocol', '=', 'goodproto\")', '@gen_test', 'self', 'ws', '=', 'self.ws_connect', '\"', '/', 'subprotocol\")', 'ws.selected_subprotocol,', 'res', '=', 'ws.read_message', 'res,', '\"subprotocol', '=', '@gen_test', 'self', 'self.message_sent', '=', 'Event', 'ws', '=', 'self.ws_connect', '\"', '/', 'ws.write_message', '\"hello\")', 'self.message_sent.set', 'res', '=', 'ws.read_message', 'res,', '\"ok\")', '@gen_test', 'self', 'ExpectLog', 'app_log,', '\"Uncaught', 'ws', '=', 'self.ws_connect', '\"', '/', 'res', '=', 'ws.read_message', 'res)', '@gen_test', 'self', 'ExpectLog', 'app_log,', '\"Uncaught', 'ws', '=', 'self.ws_connect', '\"', '/', 'res', '=', 'ws.read_message', 'res)', '@gen_test', 'self', 'ws', '=', 'self.ws_connect', '\"', '/', 'res', '=', 'ws.read_message', 'res,', '\"hello\")', 'self,', '*', '*', 'kwargs', 'super', '**', 'kwargs)', '=', '0', 'on_message', 'self,', 'message', '>', '0:', 'self.write_message', 'already', '+=', '1', 'gen.sleep', '0.01)', '-=', '1', 'self.write_message', 'message)', 'get_app', 'self', 'Application', '\"', '/', 'native\",', '@gen_test', 'self', 'ws', '=', 'self.ws_connect', '\"', '/', 'native\")', 'ws.write_message', '\"hello1\")', 'ws.write_message', '\"hello2\")', 'res', '=', 'ws.read_message', 'res,', '\"hello1\")', 'res', '=', 'ws.read_message', 'res,', '\"hello2\")', 'object', 'MESSAGE', '=', '\"Hello', '123', '123\"', 'get_app', 'self', '@property', 'max_message_size', 'self', '1024', 'on_message', 'self,', 'message', 'self.write_message', 'str', 'len', 'message', 'Application(', '\"', '/', 'echo\",', 'dict', 'compression_options', '=', 'self.get_server_compression_options', '),', '\"', '/', 'limited\",', 'dict', 'compression_options', '=', 'self.get_server_compression_options', '),', 'get_server_compression_options', 'self', 'get_client_compression_options', 'self', 'self,', 'bytes_out:', '->', '@gen_test', 'test_message_sizes', 'self:', 'ws', '=', 'self.ws_connect(', '\"', '/', 'echo\",', 'compression_options', '=', 'self.get_client_compression_options', 'i', 'range', '3', 'ws.write_message', 'self.MESSAGE)', 'response', '=', 'ws.read_message', 'response,', 'self.MESSAGE)', 'ws.protocol._message_bytes_out,', 'len', 'self.MESSAGE)', '*', '3)', 'len', 'self.MESSAGE)', '*', '3)', 'ws.protocol._wire_bytes_out)', '@gen_test', 'test_size_limit', 'self:', 'ws', '=', 'self.ws_connect(', '\"', '/', 'limited\",', 'compression_options', '=', 'self.get_client_compression_options', 'ws.write_message', '\"a\"', '*', '128)', 'response', '=', 'ws.read_message', 'response,', '\"128\")', 'ws.write_message', '\"a\"', '*', '2048)', 'response', '=', 'ws.read_message', 'response)', 'self:', 'bytes_out', 'bytes_out,', '3', '*', '(len', 'self.MESSAGE)', '+', '6', '3', '*', '(len', 'self.MESSAGE)', '+', '2', 'NoCompressionTest', 'ServerOnlyCompressionTest', 'get_server_compression_options', 'self', '{}', 'ClientOnlyCompressionTest', 'get_client_compression_options', 'self', '{}', 'DefaultCompressionTest', 'get_server_compression_options', 'self', '{}', 'get_client_compression_options', 'self', '{}', 'self,', 'bytes_out', 'bytes_out,', '3', '*', '(len', 'self.MESSAGE)', '+', '6', '3', '*', '(len', 'self.MESSAGE)', '+', '2', 'bytes_out,', '+', '12)', 'object', 'self,', 'bytes,', 'data:', 'bytes)', '->', 'bytes:', 'self:', 'b\"abcd\",', 'b\"\"', 'b\"\")', 'b\"abcd\",', 'b\"b\"', 'b\"\\\\x03\")', 'b\"abcd\",', 'b\"54321\"', 'b\"TVPVP\")', 'b\"ZXCV\",', 'b\"98765432\"', 'b\"c`t`olpd\")', 'b\"\\\\x00\\\\x01\\\\x02\\\\x03\",', 'b\"\\\\xff\\\\xfb\\\\xfd\\\\xfc\\\\xfe\\\\xfa\"', 'b\"\\\\xff\\\\xfa\\\\xff\\\\xff\\\\xfe\\\\xfb\",', 'b\"\\\\xff\\\\xfb\\\\xfd\\\\xfc\",', 'b\"\\\\x00\\\\x01\\\\x02\\\\x03\\\\x04\\\\x05\"', 'b\"\\\\xff\\\\xfa\\\\xff\\\\xff\\\\xfb\\\\xfe\",', 'self,', 'data', 'data)', '@unittest.skipIf', 'speedups', 'module', 'present\")', 'self,', 'data', 'data)', 'get_app', 'self', 'on_pong', 'self,', 'data', 'self.write_message', '\"got', 'pong\")', 'Application', '\"', '/', '\",', '=', '0.01)', '@gen_test', 'self', 'ws', '=', 'self.ws_connect', '\"', '/', '\")', 'i', 'range', '3', 'response', '=', 'ws.read_message', 'response,', '\"got', 'pong\")', 'get_app', 'self', 'self,', 'data', 'self.write_message', '\"got', 'Application', '\"', '/', '\",', '@gen_test', 'self', 'ws', '=', 'self.ws_connect', '\"', '/', '\",', '=', '0.01)', 'i', 'range', '3', 'response', '=', 'ws.read_message', 'response,', '\"got', 'ws.close', 'get_app', 'self', 'self,', 'data', 'self.write_message', 'data,', '=', 'data,', 'bytes', 'Application', '\"', '/', '\",', '@gen_test', 'self', 'ws', '=', 'self.ws_connect', '\"', '/', '\")', '\"a\"', '*', '126)', '\"hello\")', 'resp', '=', 'ws.read_message', 'resp,', 'b\"hello\")', 'hello\")', 'resp', '=', 'ws.read_message', 'resp,', 'hello\")', 'MaxMessageSizeTest', 'get_app', 'self', 'Application', '\"', '/', '\",', 'websocket_max_message_size', '=', '1024)', '@gen_test', 'test_large_message', 'self', 'ws', '=', 'self.ws_connect', '\"', '/', '\")', 'msg', '=', '\"a\"', '*', '1024', 'ws.write_message', 'msg)', 'resp', '=', 'ws.read_message', 'resp,', 'msg)', 'ws.write_message', 'msg', '+', '\"b\")', 'resp', '=', 'ws.read_message', 'resp,', 'ws.close_code,', '1009)', '\"message', 'too', 'big\")']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/tornado/test/wsgi_test.py",
        "vector": "['concurrent.futures', 'wsgiref.validate', 'RuleRouter', 'gen_test', 'self', 'get_app', 'self', '=', 'self.barrier', '=', '2,', 'timeout', '=', '0.3)', 'app', 'app', '=', 'RuleRouter(', '(\"', '/', 'simple\",', 'self.simple_wsgi_app', '(\"', '/', 'barrier\",', 'self.barrier_wsgi_app', '(\"', '/', 'self,', 'start_response', 'status', '=', '\"200', 'OK\"', 'response_headers', '=', '\"Content', '-', 'Type\",', '\"text', '/', 'start_response', 'status,', 'response_headers)', 'simple_wsgi_app', 'self,', 'environ,', 'start_response', 'start_response)', '[b\"Hello', 'barrier_wsgi_app', 'self,', 'environ,', 'start_response', 'start_response)', 'n', '=', 'self.barrier.wait', '[b\"broken', 'barrier\"]', '[b\"ok', '%d\"', '%', 'n]', 'self,', 'environ,', 'start_response', 'start_response)', 'b\"ok', '\"', 'n', '=', 'self.barrier.wait', 'b\"broken', 'barrier\"', 'b\"', '%', 'd\"', '%', 'n', 'self', 'test_simple', 'self', 'response', '=', 'self.fetch', '\"', '/', 'simple\")', 'response.body,', 'b\"Hello', '@gen_test', 'test_concurrent_barrier', 'self', 'self.barrier.reset', 'resps', '=', 'self.http_client.fetch', 'self.get_url', '\"', '/', 'barrier\"', 'self.http_client.fetch', 'self.get_url', '\"', '/', 'barrier\"', 'resp', 'resps:', 'resp.body,', 'b\"broken', 'barrier\")', '@gen_test', 'self', 'self.barrier.reset', 'resps', '=', 'self.http_client.fetch', 'self.get_url', '\"', '/', 'self.http_client.fetch', 'self.get_url', '\"', '/', 'resp', 'resps:', 'resp.body,', 'b\"ok', 'broken', 'barrier\")', 'self', 'test_simple', 'self', 'response', '=', 'self.fetch', '\"', '/', 'simple\")', 'response.body,', 'b\"Hello', '@gen_test', 'test_concurrent_barrier', 'self', 'self.barrier.reset', 'resps', '=', 'self.http_client.fetch', 'self.get_url', '\"', '/', 'barrier\"', 'self.http_client.fetch', 'self.get_url', '\"', '/', 'barrier\"', 'b\"ok', '0\",', 'b\"ok', '1\"', 'resp.body', 'resp', 'resps', '@gen_test', 'self', 'self.barrier.reset', 'resps', '=', 'self.http_client.fetch', 'self.get_url', '\"', '/', 'self.http_client.fetch', 'self.get_url', '\"', '/', 'b\"ok', '0\",', 'b\"ok', '1\"', 'resp.body', 'resp', 'resps']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/tornado/testing.py",
        "vector": "['collections.abc', 'functools', 'os', 're', 'signal', 'socket', 'sys', 'unittest', 'gen', 'AsyncHTTPClient,', 'HTTPResponse', 'HTTPServer', 'IOLoop,', 'netutil', 'Subprocess', 'app_log', 'Application', 'Tuple,', 'Any,', 'Callable,', 'Type,', 'Dict,', 'Union,', 'Optional,', 'types', 'TracebackType', '_ExcInfoTuple', '=', 'Tuple[', 'Optional', 'Type', 'Optional', 'Optional', 'TracebackType]', '_NON_OWNED_IOLOOPS', '=', 'bool', '=', 'address:', 'str', '=', '\"127.0.0.1\"', '->', 'Tuple', 'socket.socket,', 'sock', '=', '0,', 'address,', 'family', '=', 'socket.AF_INET,', '=', '0]', '=', 'sock.getsockname', '1]', 'sock,', '->', 'float:', 'env', '=', 'os.environ.get', '\"ASYNC_TEST_TIMEOUT\")', 'env', 'float', 'env)', '5', '_TestMethodWrapper', 'object', 'self,', 'Callable)', '->', '=', 'self.__wrapped__', '=', '__call__', 'self,', '*args:', 'Any,', '*', '*', 'kwargs:', 'Any)', '->', 'result', '=', '*', 'args,', '*', '*', 'kwargs)', 'result,', 'result', 'test', 'methods', 'should', 'be\"', '\"', 'result', '\"Return', 'value', 'test', 'method', '%r\"', '%', 'result)', '__getattr__', 'self,', 'name:', 'str)', '->', 'Any:', 'getattr', 'name)', 'self,', 'methodName:', 'str', '=', '\"runTest\")', '->', 'super', 'methodName)', 'self.__stopped', '=', '=', 'self.__failure', '=', 'self.__stop_args', '=', 'self.__timeout', '=', 'setattr', 'self,', 'methodName,', '_TestMethodWrapper', 'getattr', 'self,', 'methodName', '=', 'setUp', 'self)', '->', 'py_ver', '=', '3,', '10,', '0)', '<=', 'py_ver', '<', '(3,', '10,', '9', '3,', '11,', '0)', '<=', 'py_ver', '<=', '(3,', '11,', '1', 'self,', 'message', '=', '\"There', 'no', 'current', 'event', 'loop\",', '=', 'module', '=', '*', '\",', 'super', '.setUp', 'type', 'self', '.get_new_ioloop', '\"get_new_ioloop', 'deprecated\",', 'self.io_loop', '=', 'self.get_new_ioloop', 'tearDown', 'self)', '->', '=', '=', '=', '[t', 't', 't.done', 't', 't.cancel', 'done,', '=', 'self.io_loop.run_sync', 'f', 'done:', 'f.result', 'self.io_loop,', '_NON_OWNED_IOLOOPS', 'self.io_loop.close', 'all_fds', '=', 'super', '.tearDown', 'self.__rethrow', 'get_new_ioloop', 'self)', '->', 'IOLoop:', 'IOLoop', 'make_current', '=', 'self,', 'typ:', 'Type', 'Exception', 'value:', 'Exception,', 'tb:', 'TracebackType', '->', 'bool:', 'self.__failure', 'self.__failure', '=', '(typ,', 'value,', 'tb)', '\"multiple', 'test\",', '=', 'typ,', 'value,', 'tb)', 'self.stop', '__rethrow', 'self)', '->', 'self.__failure', 'failure', '=', 'self.__failure', 'self.__failure', '=', 'failure)', 'run(', 'self,', 'result:', 'Optional', 'unittest.TestResult]', '=', '->', 'Optional', 'unittest.TestResult', 'ret', '=', 'super', '.run', 'result)', 'self.__rethrow', 'ret', 'stop', 'self,', '_arg:', 'Any', '=', '*', '*', 'kwargs:', 'Any)', '->', '_arg', 'kwargs', 'self.__stop_args', '=', 'kwargs', '_arg', 'self.io_loop.stop', '=', 'self.__stopped', '=', 'wait(', 'self,', 'condition:', 'Optional', 'Callable', '...,', 'bool', '=', 'timeout:', 'Optional', 'float]', '=', '->', 'Any:', 'timeout', 'timeout', '=', 'self.__stopped:', 'timeout:', 'timeout_func', '->', 'self.failureException(', '\"Async', 'operation', 'timed', 'out', 'after', '%s', 'seconds\"', '%', 'timeout', 'Exception:', 'self.__failure', '=', 'self.stop', 'self.__timeout', '=', 'self.io_loop.add_timeout(', 'self.io_loop.time', '+', 'timeout,', 'timeout_func', '=', 'self.io_loop.start', 'self.__failure', 'condition', 'condition', 'self.__timeout', 'self.io_loop.remove_timeout', 'self.__timeout)', 'self.__timeout', '=', 'self.__stopped', 'self.__stopped', '=', 'self.__rethrow', 'result', '=', 'self.__stop_args', 'self.__stop_args', '=', 'result', 'setUp', 'self)', '->', 'super', '.setUp', 'sock,', '=', '=', 'self.http_client', '=', 'self.get_http_client', 'self._app', '=', 'self.get_app', 'self.http_server', '=', 'self.get_http_server', 'self.http_server.add_sockets', 'sock', 'get_http_client', 'self)', '->', 'AsyncHTTPClient:', 'AsyncHTTPClient', 'get_http_server', 'self)', '->', 'HTTPServer:', 'HTTPServer', 'self._app,', '*', '*', 'self.get_httpserver_options', 'get_app', 'self)', '->', 'Application:', 'fetch(', 'self,', 'path:', 'str,', 'bool', '=', '*', '*', 'kwargs:', 'Any', '->', 'HTTPResponse:', 'path.lower', '\"http', '/', '/', '\",', '\"https', '/', '/', '\"', 'url', '=', 'path', 'url', '=', 'self.get_url', 'path)', 'self.io_loop.run_sync(', 'self.http_client.fetch', 'url,', '=', '*', '*', 'kwargs', 'timeout', '=', 'get_httpserver_options', 'self)', '->', 'Dict', 'str,', 'Any', '{}', 'self)', '->', 'get_protocol', 'self)', '->', 'str:', '\"http\"', 'get_url', 'self,', 'path:', 'str)', '->', 'str:', '\"', '%', 's', '/', '/', '127.0.0.1', '%', 's', '%', 's\"', '%', '(self.get_protocol', 'path)', 'tearDown', 'self)', '->', 'self.http_server.stop', 'self.io_loop.run_sync(', 'self.http_server.close_all_connections,', 'timeout', '=', 'self.http_client.close', 'self.http_server', 'self._app', 'super', '.tearDown', 'get_http_client', 'self)', '->', 'AsyncHTTPClient:', 'AsyncHTTPClient', '=', '=', 'dict', 'validate_cert', '=', 'get_httpserver_options', 'self)', '->', 'Dict', 'str,', 'Any', 'dict', 'ssl_options', '=', 'self.get_ssl_options', 'get_ssl_options', 'self)', '->', 'Dict', 'str,', 'Any', '@staticmethod', '->', 'Dict', 'str,', 'Any', 'module_dir', '=', 'os.path.dirname', '__file__)', 'dict(', 'certfile', '=', 'module_dir,', '\"test\",', '\"test.crt\"', 'keyfile', '=', 'module_dir,', '\"test\",', '\"test.key\"', 'get_protocol', 'self)', '->', 'str:', '\"https\"', 'gen_test(', '*,', 'timeout:', 'Optional', 'float]', '=', '->', 'Callable', 'Callable', '...,', 'Union', 'Callable', '...,', 'gen_test', 'func:', 'Callable', '...,', 'Union', '->', 'Callable', '...,', 'gen_test(', 'func:', 'Optional', 'Callable', '...,', 'Union', '=', 'timeout:', 'Optional', 'float]', '=', '->', 'Union[', 'Callable', '...,', 'Callable', 'Callable', '...,', 'Union', 'Callable', '...,', ']:', 'timeout', 'timeout', '=', 'wrap', 'f:', 'Callable', '...,', 'Union', '->', 'Callable', '...,', '@functools.wraps', 'f)', 'self,', '*args,', '*', '*', 'kwargs', 'result', '=', 'f', 'self,', '*args,', '*', '*', 'kwargs)', 'result,', 'result', '=', 'result', '=', 'result', 'f', '=', '=', '@functools.wraps', 'self,', '*args,', '*', '*', 'kwargs', 'self.io_loop.run_sync(', 'functools.partial', 'self,', '*args,', '*', '*', 'kwargs', 'timeout', '=', 'timeout', 'e:', 'getattr(', '):', 'e)', 'func', 'wrap', 'func)', 'wrap', 'gen_test.__test__', '=', 'ExpectLog', 'self,', 'logger:', 'Union', 'regex:', 'str,', 'required:', 'bool', '=', 'level:', 'Optional', '=', '->', 'logger,', 'logger', '=', 'logger)', 'self.logger', '=', 'logger', 'self.regex', '=', 're.compile', 'regex)', 'self.required', '=', 'required', 'self.matched', '=', '0', 'self.deprecated_level_matched', '=', '0', 'self.logged_stack', '=', 'self.level', '=', 'level', '=', 'filter', 'self,', '->', 'bool:', 'self.logged_stack', '=', 'message', '=', 'self.regex.match', 'message', 'self.level', '<', 'self.deprecated_level_matched', '+=', '1', 'self.level', '!=', 'self.level:', '\"Got', 'expected', 'log', 'message', '%r', 'at', 'unexpected', 'level', '%', 's', 'vs', '%s', '\"', '%', '(message,', 'self.level', 'self.matched', '+=', '1', '__enter__', 'self)', '->', '\"ExpectLog\":', 'self.level', 'self.level', '<', 'self.logger.getEffectiveLevel', '=', 'self.logger.level', 'self.logger.setLevel', 'self.level)', 'self.logger.addFilter', 'self)', 'self', '__exit__(', 'self,', 'typ:', '\"Optional', 'Type', '\",', 'value:', 'Optional', 'tb:', 'Optional', 'TracebackType', '->', 'self.logger.setLevel', 'self.logger.removeFilter', 'self)', 'typ', 'self.required', 'self.matched:', 'Exception', '\"did', 'get', 'expected', 'log', 'message\")', 'typ', 'self.required', '(self.deprecated_level_matched', '>=', 'self.matched)', '):', '\"ExpectLog', 'matched', 'at', 'INFO', 'below', 'level', 'argument\",', 'cm:', 'Any)', '->', 'Any:', 'val', '=', 'cm.__enter__', 'cm.__exit__,', 'val', '**', 'kwargs:', 'Any)', '->', 'options,', 'type', '=', 'bool,', '=', 'help', '=', '\"If', 'true', 'ctrl', '-', 'c', 'a', 'KeyboardInterrupt', '\"', 'a', 'stack', 'trace', 'but', '\"', 'operations.', 'If', 'false,', 'the', 'process', 'reliably', '\"', '\"killed,', 'but', 'does', 'a', 'stack', 'trace.\"', '),', '\"verbose\",', 'type', '=', 'bool)', '\"quiet\",', 'type', '=', 'bool)', 'type', '=', 'bool)', '\"catch\",', 'type', '=', 'bool)', '\"buffer\",', 'type', '=', 'bool)', 'argv', '=', '[sys.argv', '0', '+', 'sys.argv)', 'signal.signal', 'signal.SIGINT,', 'signal.SIG_DFL)', 'options.verbose', 'kwargs', '\"verbosity\"]', '=', '2', 'options.quiet', 'kwargs', '\"verbosity\"]', '=', '0', 'kwargs', '=', 'options.catch', 'kwargs', '=', 'options.buffer', 'kwargs', '\"buffer\"]', '=', '__name__', '==', 'len', 'argv)', '==', '1:', '\"No', 'tests', 'file', '=', 'sys.stderr)', 'sys.exit', '1)', 'len', 'argv)', '>', '1:', 'module', '=', 'argv', '=', 'argv,', '*', '*', 'kwargs)', '=', '\"all\",', 'argv', '=', 'argv,', '*', '*', 'kwargs)', '__name__', '==']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/tornado/util.py",
        "vector": "['array', 'atexit', 'getfullargspec', 'os', 're', 'zlib', 'Any,', 'Optional,', 'Dict,', 'Tuple,', 'Match,', 'Callable,', 'Type,', 'Sequence,', 'datetime', 'types', 'TracebackType', 'Union', 'unittest', 'bytes_type', '=', 'bytes', 'unicode_type', '=', 'str', '=', 'str', 'sys', '->', 'Callable', 'bool', 'L', '=', '[]', 'L.append', '->', 'bool:', 'L', '!=', '[]', '=', '=', 'ObjectDict', 'Dict', 'str,', 'Any', '__getattr__', 'self,', 'name:', 'str)', '->', 'Any:', 'self', 'name]', 'name)', '__setattr__', 'self,', 'name:', 'str,', 'value:', 'Any)', '->', 'self', 'name]', '=', 'value', 'object', 'self)', '->', 'self.decompressobj', '=', 'zlib.decompressobj', '16', '+', 'zlib.MAX_WBITS)', 'decompress', 'self,', 'value:', 'bytes,', 'max_length:', '=', '0)', '->', 'bytes:', 'self.decompressobj.decompress', 'value,', 'max_length)', '@property', 'unconsumed_tail', 'self)', '->', 'bytes:', 'self.decompressobj.unconsumed_tail', 'flush', 'self)', '->', 'bytes:', 'self.decompressobj.flush', 'name:', 'str)', '->', 'Any:', 'name.count', '\".\")', '==', '0:', 'name)', 'parts', '=', 'name.split', '\".\")', 'obj', '=', 'parts', '-', '1', '=', 'parts', '-', '1', 'getattr', 'obj,', 'parts', '-', '1', '\"No', 'module', 'named', '%s\"', '%', 'parts', '-', '1', 'code:', 'Any,', 'glob:', 'Dict', 'str,', 'Any', 'loc:', 'Optional', 'Optional', 'str,', 'Any', '=', '->', 'code,', 'str', 'code', '=', 'compile', 'code,', '\"', '<', '>', '\",', '\"exec\",', '=', 'exec', 'code,', 'glob,', 'loc)', 'Tuple', 'Optional', 'type', 'Optional', 'Optional', '\"TracebackType\"', '->', '1]', '1', '2', 'called', 'no', '=', 'e:', '->', 'Optional', 'e,', '\"errno\"', 'e.errno', 'e.args:', 'e.args', '0]', '_alphanum', '=', 'frozenset', '_re_unescape_replacement', 'match:', 'Match', 'str', '->', 'str:', 'group', '=', 'match.group', '1)', 'group', '0]', '_alphanum:', 'unescape', \"'\\\\\\\\\\\\\\\\\", '%', 's\\'\"', '%', 'group', '0', 'group', '_re_unescape_pattern', '=', 're.compile', 'r\"\\\\\\\\', '.', '\",', 're.DOTALL)', 're_unescape', 's:', 'str)', '->', 'str:', 'r', '_re_unescape_pattern.sub', '_re_unescape_replacement,', 's)', 'Configurable', 'object', '=', '__impl_kwargs', '=', '__new__', 'cls,', '*args:', 'Any,', '*', '*', 'kwargs:', 'Any)', '->', 'Any:', '=', '=', '{}', 'cls', 'impl', '=', 'impl', '=', 'cls', 'kwargs)', 'impl', '*', 'args,', '*', '*', '=', 'super', 'Configurable,', 'cls', '.__new__', 'impl)', '*', 'args,', '*', '*', 'cls', 'cls', 'self)', '->', '=', 'configure', 'cls,', 'impl,', '*', '*', 'kwargs', '=', 'impl,', 'str', 'impl', '=', 'Type', 'Configurable', 'impl', 'impl', 'impl,', 'cls', '\"Invalid', 'of', '%s\"', '%', 'cls)', '=', 'impl', '=', 'kwargs', 'cls', '=', '=', '\"configured', 'found\")', '_save_configuration', 'cls', '=', 'cls,', 'saved', '=', '=', 'saved', '0]', '=', 'saved', '1]', 'ArgReplacer', 'object', 'self,', 'func:', 'Callable,', 'name:', 'str)', '->', 'self.name', '=', 'name', 'self.arg_pos', '=', 'self._getargnames', 'func', 'name)', 'self.arg_pos', '=', '_getargnames', 'self,', 'func:', 'Callable)', '->', 'str', 'getfullargspec', 'func', '.args', 'func,', '\"func_code\"', 'code', '=', 'func.func_code', 'code.co_varnames', 'code.co_argcount]', 'get_old_value(', 'self,', 'args:', 'Sequence', 'Any', 'kwargs:', 'Dict', 'str,', 'Any', 'Any', '=', '->', 'Any:', 'self.arg_pos', 'len', 'args)', '>', 'self.arg_pos:', 'args', 'self.arg_pos]', 'kwargs.get', 'self.name,', 'replace(', 'self,', 'new_value:', 'Any,', 'args:', 'Sequence', 'Any', 'kwargs:', 'Dict', 'str,', 'Any]', '->', 'Tuple', 'Any,', 'Sequence', 'Any', 'Dict', 'str,', 'Any', 'self.arg_pos', 'len', 'args)', '>', 'self.arg_pos:', 'old_value', '=', 'args', 'self.arg_pos]', 'args', '=', 'args)', 'args', 'self.arg_pos]', '=', 'new_value', 'old_value', '=', 'kwargs.get', 'self.name)', 'kwargs', 'self.name]', '=', 'new_value', 'old_value,', 'args,', 'kwargs', 'td', 'td.total_seconds', 'bytes,', 'data:', 'bytes)', '->', 'bytes:', '=', 'array.array', '\"B\",', '=', 'array.array', '\"B\",', 'data)', 'i', 'range', 'len', 'data', 'i]', '=', 'i]', '^', 'i', '%', '4]', 'os.environ.get', '\"TORNADO_NO_EXTENSION\")', 'os.environ.get', '\"TORNADO_EXTENSION\")', '==', '\"0\":', '=', 'os.environ.get', '\"TORNADO_EXTENSION\")', '==', '\"1\":', '=', 'doctests', 'doctest', 'doctest.DocTestSuite']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/tornado/web.py",
        "vector": "['datetime', 'email.utils', 'functools', 'gzip', 'hmac', 'http.cookies', 'io', 'BytesIO', 'mimetypes', 'numbers', 'os.path', 're', 'socket', 'sys', 'time', 'traceback', 'types', 'urllib.parse', 'urllib.parse', 'urlencode', 'Future,', 'future_set_result_unless_cancelled', 'escape', 'gen', 'HTTPServer', 'httputil', 'iostream', 'locale', 'access_log,', 'app_log,', 'gen_log', 'template', 'utf8,', '_unicode', 'AnyMatches,', 'DefaultHostMatches,', 'HostMatches,', 'ReversibleRouter,', 'Rule,', 'ReversibleRuleRouter,', 'URLSpec,', 'ObjectDict,', 'unicode_type,', 'url', '=', 'URLSpec', 'Dict,', 'Any,', 'Union,', 'Optional,', 'Awaitable,', 'Tuple,', 'Callable,', 'Iterable,', 'Type,', 'TypeVar,', 'overload,', 'types', 'TracebackType', 'Set', '_HeaderTypes', '=', 'Union', 'bytes,', 'unicode_type,', 'numbers.Integral,', 'datetime.datetime]', '_CookieSecretTypes', '=', 'Union', 'str,', 'bytes,', 'Dict', 'str', 'Dict', 'bytes', 'MIN_SUPPORTED_SIGNED_VALUE_VERSION', '=', '1', 'MAX_SUPPORTED_SIGNED_VALUE_VERSION', '=', '2', 'DEFAULT_SIGNED_VALUE_VERSION', '=', '2', 'DEFAULT_SIGNED_VALUE_MIN_VERSION', '=', '1', '_ArgDefaultMarker:', '_ARG_DEFAULT', '=', '_ArgDefaultMarker', 'object', 'SUPPORTED_METHODS', '=', '(\"GET\",', '\"HEAD\",', '\"POST\",', '\"DELETE\",', '\"PATCH\",', '\"PUT\",', '\"OPTIONS\")', '_template_loaders', '=', '{}', '_template_loader_lock', '=', '_remove_control_chars_regex', '=', 're.compile', 'r\"', '\\\\x00', '-', '\\\\x08\\\\x0e', '-', '\\\\x1f', '\")', '_stream_request_body', '=', '=', 'path_args', '=', 'path_kwargs', '=', 'self,', 'application:', '\"Application\",', 'request:', 'httputil.HTTPServerRequest,', '*', '*', 'kwargs:', 'Any,', '->', 'super', 'self.application', '=', 'application', 'self.request', '=', 'request', 'self._headers_written', '=', '=', '=', 'self._prepared_future', '=', 'self.ui', '=', 'ObjectDict(', '(n,', 'self._ui_method', 'm', 'n,', 'm', 'application.ui_methods.items', 'self.ui', '\"_tt_modules\"]', '=', '_UIModuleNamespace', 'self,', 'application.ui_modules)', 'self.ui', '\"modules\"]', '=', 'self.ui', '\"_tt_modules\"]', 'self.clear', 'self.request.connection', 'self.request.connection.set_close_callback(', 'self.on_connection_close', '**', 'kwargs)', 'self)', '->', '=', '@property', 'self)', '->', 'Dict', 'str,', 'Any', '_unimplemented_method', 'self,', '*args:', 'str,', '*', '*', 'kwargs:', 'str)', '->', '405)', 'head', '=', '_unimplemented_method', 'get', '=', '_unimplemented_method', 'post', '=', '_unimplemented_method', '=', '_unimplemented_method', 'patch', '=', '_unimplemented_method', 'put', '=', '_unimplemented_method', 'options', '=', '_unimplemented_method', 'prepare', 'self)', '->', 'Optional', 'Awaitable', 'self)', '->', 'on_connection_close', 'self)', '->', 'self.request._body_future.done', 'clear', 'self)', '->', 'self._headers', '=', 'httputil.HTTPHeaders(', '\"Server\":', '/', '%', 's\"', '%', '\"Content', '-', 'Type\":', '\"text', '/', 'html;', 'charset', '=', 'UTF', '-', '8\",', '\"Date\":', 'time.time', 'self._write_buffer', '=', '[]', 'self._status_code', '=', '200', '=', 'httputil.responses', '200]', 'self)', '->', 'set_status', 'self,', 'status_code:', 'Optional', 'str]', '=', '->', 'self._status_code', '=', 'status_code', '=', 'escape.native_str', '=', 'httputil.responses.get', 'status_code,', '\"Unknown\")', 'get_status', 'self)', '->', 'self._status_code', 'set_header', 'self,', 'name:', 'str,', 'value:', '_HeaderTypes)', '->', 'self._headers', 'name]', '=', 'self._convert_header_value', 'value)', 'add_header', 'self,', 'name:', 'str,', 'value:', '_HeaderTypes)', '->', 'self._headers.add', 'name,', 'self._convert_header_value', 'value', 'clear_header', 'self,', 'name:', 'str)', '->', 'name', 'self._headers:', 'self._headers', 'name]', '_INVALID_HEADER_CHAR_RE', '=', 're.compile', 'r\"', '\\\\x00', '-', '\\\\x1f', '\")', '_convert_header_value', 'self,', 'value:', '_HeaderTypes)', '->', 'str:', 'value,', 'str', 'retval', '=', 'value', 'value,', 'bytes', 'retval', '=', 'value.decode', 'value,', 'numbers.Integral', 'str', 'value)', 'value,', 'datetime.datetime', 'value)', 'header', 'value', '%r\"', '%', 'value)', 'retval', '\"Unsafe', 'header', 'value', '%r\",', 'retval)', 'retval', '@overload', 'get_argument', 'self,', 'name:', 'str,', 'str,', 'strip:', 'bool', '=', '->', 'str:', '@overload', 'get_argument(', 'self,', 'name:', 'str,', '_ArgDefaultMarker', '=', '_ARG_DEFAULT,', 'strip:', 'bool', '=', '->', 'str:', '@overload', 'get_argument(', 'self,', 'name:', 'str,', 'strip:', 'bool', '=', '->', 'Optional', 'str', 'get_argument(', 'self,', 'name:', 'str,', 'Union', 'str,', '_ArgDefaultMarker]', '=', '_ARG_DEFAULT,', 'strip:', 'bool', '=', '->', 'Optional', 'str', 'self._get_argument', 'name,', 'self.request.arguments,', 'strip)', 'get_arguments', 'self,', 'name:', 'str,', 'strip:', 'bool', '=', '->', 'str', 'strip,', 'bool)', 'self._get_arguments', 'name,', 'self.request.arguments,', 'strip)', 'get_body_argument(', 'self,', 'name:', 'str,', 'Union', 'str,', '_ArgDefaultMarker]', '=', '_ARG_DEFAULT,', 'strip:', 'bool', '=', '->', 'Optional', 'str', 'self._get_argument', 'name,', 'self.request.body_arguments,', 'strip)', 'get_body_arguments', 'self,', 'name:', 'str,', 'strip:', 'bool', '=', '->', 'str', 'self._get_arguments', 'name,', 'self.request.body_arguments,', 'strip)', 'get_query_argument(', 'self,', 'name:', 'str,', 'Union', 'str,', '_ArgDefaultMarker]', '=', '_ARG_DEFAULT,', 'strip:', 'bool', '=', '->', 'Optional', 'str', 'self._get_argument', 'name,', 'self.request.query_arguments,', 'strip)', 'get_query_arguments', 'self,', 'name:', 'str,', 'strip:', 'bool', '=', '->', 'str', 'self._get_arguments', 'name,', 'self.request.query_arguments,', 'strip)', '_get_argument(', 'self,', 'name:', 'str,', 'Union', 'str,', '_ArgDefaultMarker', 'source:', 'Dict', 'str,', 'bytes', 'strip:', 'bool', '=', '->', 'Optional', 'str', 'args', '=', 'self._get_arguments', 'name,', 'source,', 'strip', '=', 'strip)', 'args:', '_ArgDefaultMarker', 'name)', 'args', '-', '1]', '_get_arguments(', 'self,', 'name:', 'str,', 'source:', 'Dict', 'str,', 'bytes', 'strip:', 'bool', '=', '->', 'str', 'values', '=', '[]', 'v', 'source.get', 'name,', 's', '=', 'self.decode_argument', 'v,', 'name', '=', 'name)', 's,', 'unicode_type', 's', '=', '\"', '\",', 's)', 'strip:', 's', '=', 's.strip', 'values.append', 's)', 'values', 'decode_argument', 'self,', 'value:', 'bytes,', 'name:', 'Optional', 'str]', '=', '->', 'str:', '_unicode', 'value)', '400,', '\"Invalid', 'unicode', '%s:', '%r\"', '%', '(name', '\"url\",', 'value', '40', '@property', 'cookies', 'self)', '->', 'Dict', 'str,', 'self.request.cookies', 'get_cookie', 'self,', 'name:', 'str,', 'Optional', 'str]', '=', '->', 'Optional', 'str', 'self.request.cookies', 'name', 'self.request.cookies:', 'self.request.cookies', 'name', '.value', 'set_cookie(', 'self,', 'name:', 'str,', 'value:', 'Union', 'str,', 'bytes', 'Optional', 'str]', '=', 'expires:', 'Optional', 'Union', 'float,', 'Tuple,', 'datetime.datetime', '=', 'path:', 'str', '=', '\"', '/', '\",', 'expires_days:', 'Optional', 'float]', '=', '*,', 'max_age:', 'Optional', '=', 'httponly:', 'bool', '=', 'secure:', 'bool', '=', 'samesite:', 'Optional', 'str]', '=', '*', '*', 'kwargs:', 'Any,', '->', 'name', '=', 'escape.native_str', 'name)', 'value', '=', 'escape.native_str', 'value)', 're.search', 'r\"', '\\\\x00', '-', '\\\\x20', '\",', 'name', '+', 'value', '\"Invalid', 'cookie', '%r:', '%r\"', '%', '(name,', 'value', 'self,', '\"_new_cookie\"', 'self._new_cookie', '=', 'http.cookies.SimpleCookie', 'name', 'self._new_cookie:', 'self._new_cookie', 'name]', 'self._new_cookie', 'name]', '=', 'value', '=', 'self._new_cookie', 'name]', '=', 'expires_days', 'expires:', 'expires', '=', 'datetime.datetime.now', 'datetime.timezone.utc)', '+', 'days', '=', 'expires_days', 'expires:', '\"expires\"]', '=', 'expires)', 'path:', '\"path\"]', '=', 'path', 'max_age:', '\"max', '-', 'age\"]', '=', 'str', 'max_age)', 'httponly:', '\"httponly\"]', '=', 'secure:', '\"secure\"]', '=', 'samesite:', '\"samesite\"]', '=', 'samesite', 'kwargs:', 'k,', 'v', 'kwargs.items', 'k]', '=', 'v', 'f\"Deprecated', 'arguments', 'to', 'set_cookie:', '{set', 'kwargs.keys', '\"', '\"', 'should', 'be', '\",', 'clear_cookie', 'self,', 'name:', 'str,', '*', '*', 'kwargs:', 'Any)', '->', 'excluded_arg', '[\"expires\",', '\"max_age\"', 'excluded_arg', 'kwargs:', 'f\"clear_cookie', 'got', 'an', 'unexpected', 'argument', \"'\", 'excluded_arg', '\\'\"', 'expires', '=', 'datetime.datetime.now', 'datetime.timezone.utc)', '-', 'days', '=', '365', 'self.set_cookie', 'name,', 'value', '=', '\"\",', 'expires', '=', 'expires,', '*', '*', 'kwargs)', 'clear_all_cookies', 'self,', '*', '*', 'kwargs:', 'Any)', '->', 'name', 'self.request.cookies:', 'self.clear_cookie', 'name,', '*', '*', 'kwargs)', 'set_signed_cookie(', 'self,', 'name:', 'str,', 'value:', 'Union', 'str,', 'bytes', 'expires_days:', 'Optional', 'float]', '=', '30,', 'version:', 'Optional', '=', '*', '*', 'kwargs:', 'Any,', '->', 'self.set_cookie(', 'name,', 'self.create_signed_value', 'name,', 'value,', 'version', '=', 'version', 'expires_days', '=', 'expires_days,', '*', '*', 'kwargs,', 'set_secure_cookie', '=', 'set_signed_cookie', 'create_signed_value(', 'self,', 'name:', 'str,', 'value:', 'Union', 'str,', 'bytes', 'version:', 'Optional', '=', '->', 'bytes:', '\"cookie_secret\",', '\"secure', 'cookies\")', 'secret', '=', '\"cookie_secret\"]', 'key_version', '=', 'secret,', 'dict', '\"key_version\")', 'Exception', '\"key_version', 'must', 'be', 'used', 'secret_key', 'dicts\")', 'key_version', '=', '\"key_version\"]', 'create_signed_value(', 'secret,', 'name,', 'value,', 'version', '=', 'version,', 'key_version', '=', 'key_version', 'get_signed_cookie(', 'self,', 'name:', 'str,', 'value:', 'Optional', 'str]', '=', 'max_age_days:', 'float', '=', '31,', 'Optional', '=', '->', 'Optional', 'bytes', '\"cookie_secret\",', '\"secure', 'cookies\")', 'value', 'value', '=', 'self.get_cookie', 'name)', 'decode_signed_value(', '\"cookie_secret\"', 'name,', 'value,', 'max_age_days', '=', 'max_age_days,', '=', 'get_secure_cookie', '=', 'get_signed_cookie', 'get_signed_cookie_key_version(', 'self,', 'name:', 'str,', 'value:', 'Optional', 'str]', '=', '->', 'Optional', '\"cookie_secret\",', '\"secure', 'cookies\")', 'value', 'value', '=', 'self.get_cookie', 'name)', 'value', 'get_signature_key_version', 'value)', 'get_secure_cookie_key_version', '=', 'get_signed_cookie_key_version', 'redirect(', 'self,', 'url:', 'str,', 'permanent:', 'bool', '=', 'status:', 'Optional', '=', '->', 'self._headers_written:', 'Exception', 'redirect', 'after', 'headers', 'have', 'been', 'written\")', 'status', 'status', '=', '301', 'permanent', '302', 'status,', '300', '<=', 'status', '<=', '399', 'self.set_status', 'status)', 'self.set_header', '\"Location\",', 'utf8', 'url', 'write', 'self,', 'chunk:', 'Union', 'str,', 'bytes,', 'dict', '->', 'write', 'after', '\")', 'chunk,', '(bytes,', 'unicode_type,', 'dict', 'message', '=', '\"write', 'only', 'accepts', 'bytes,', 'unicode,', 'dict', 'objects\"', 'chunk,', 'message', '+=', '\".', 'accepted', 'security', 'see', '\"', '+', '\"http', '/', '/', '/', 'en', '/', 'stable', '/', 'web.html', 'message)', 'chunk,', 'dict', 'chunk', '=', 'escape.json_encode', 'chunk)', 'self.set_header', '\"Content', '-', 'Type\",', '\"application', '/', 'json;', 'charset', '=', 'UTF', '-', '8\")', 'chunk', '=', 'utf8', 'chunk)', 'self._write_buffer.append', 'chunk)', 'render', 'self,', 'template_name:', 'str,', '*', '*', 'kwargs:', 'Any)', '->', '\"Future', '\":', 'render', 'after', '\")', 'html', '=', 'template_name,', '*', '*', 'kwargs)', 'js_embed', '=', '[]', 'js_files', '=', '[]', 'css_embed', '=', '[]', 'css_files', '=', '[]', 'html_heads', '=', '[]', 'html_bodies', '=', '[]', 'module', 'getattr', 'self,', '\"_active_modules\",', '.values', 'embed_part', '=', 'embed_part:', 'js_embed.append', 'utf8', 'embed_part', 'file_part', '=', 'file_part:', 'file_part,', '(unicode_type,', 'bytes', 'js_files.append', '_unicode', 'file_part', 'js_files.extend', 'file_part)', 'embed_part', '=', 'module.embedded_css', 'embed_part:', 'css_embed.append', 'utf8', 'embed_part', 'file_part', '=', 'module.css_files', 'file_part:', 'file_part,', '(unicode_type,', 'bytes', 'css_files.append', '_unicode', 'file_part', 'css_files.extend', 'file_part)', 'head_part', '=', 'module.html_head', 'head_part:', 'html_heads.append', 'utf8', 'head_part', 'body_part', '=', 'module.html_body', 'body_part:', 'html_bodies.append', 'utf8', 'body_part', 'js_files:', 'js', '=', 'js_files)', 'sloc', '=', 'b\"', '<', '/', 'body', '>', '\")', 'html', '=', 'html', 'sloc]', '+', 'utf8', 'js)', '+', 'b\"\\\\n\"', '+', 'html', 'sloc', 'js_embed:', 'js_bytes', '=', 'self.render_embed_js', 'js_embed)', 'sloc', '=', 'b\"', '<', '/', 'body', '>', '\")', 'html', '=', 'html', 'sloc]', '+', 'js_bytes', '+', 'b\"\\\\n\"', '+', 'html', 'sloc', 'css_files:', 'css', '=', 'css_files)', 'hloc', '=', 'b\"', '<', '/', 'head', '>', '\")', 'html', '=', 'html', 'hloc]', '+', 'utf8', 'css)', '+', 'b\"\\\\n\"', '+', 'html', 'hloc', 'css_embed:', 'css_bytes', '=', 'self.render_embed_css', 'css_embed)', 'hloc', '=', 'b\"', '<', '/', 'head', '>', '\")', 'html', '=', 'html', 'hloc]', '+', 'css_bytes', '+', 'b\"\\\\n\"', '+', 'html', 'hloc', 'html_heads:', 'hloc', '=', 'b\"', '<', '/', 'head', '>', '\")', 'html', '=', 'html', 'hloc]', '+', 'html_heads)', '+', 'b\"\\\\n\"', '+', 'html', 'hloc', 'html_bodies:', 'hloc', '=', 'b\"', '<', '/', 'body', '>', '\")', 'html', '=', 'html', 'hloc]', '+', 'html_bodies)', '+', 'b\"\\\\n\"', '+', 'html', 'hloc', 'html)', 'self,', 'js_files:', 'Iterable', 'str', '->', 'str:', 'paths', '=', '[]', 'unique_paths', '=', 'set', 'path', 'js_files:', 'path', 'path', '=', 'self.static_url', 'path)', 'path', 'unique_paths:', 'paths.append', 'path)', 'unique_paths.add', 'path)', \"'\", '<', 'script', 'src', '=', '\"\\'', '+', 'escape.xhtml_escape', 'p)', '+', '\\'\"', 'type', '=', '\"text', '/', '>', '<', '/', 'script', '>', \"'\", 'p', 'paths', 'render_embed_js', 'self,', 'js_embed:', 'Iterable', 'bytes', '->', 'bytes:', \"b'\", '<', 'script', 'type', '=', '\"text', '/', '>', '\\\\n', '/', '/', '<', '!', 'CDATA', \"\\\\n'\", '+', 'js_embed)', '+', 'b\"\\\\n', '/', '/', '>', '\\\\n', '<', '/', 'script', '>', '\"', 'self,', 'css_files:', 'Iterable', 'str', '->', 'str:', 'paths', '=', '[]', 'unique_paths', '=', 'set', 'path', 'css_files:', 'path', 'path', '=', 'self.static_url', 'path)', 'path', 'unique_paths:', 'paths.append', 'path)', 'unique_paths.add', 'path)', \"'\", '<', 'href', '=', '\"\\'', '+', 'escape.xhtml_escape', 'p)', '+', '\\'\"', \"'\", \"'type\", '=', '\"text', '/', 'css\"', 'rel', '=', '\"stylesheet\"', '/', '>', \"'\", 'p', 'paths', 'render_embed_css', 'self,', 'css_embed:', 'Iterable', 'bytes', '->', 'bytes:', \"b'\", '<', 'style', 'type', '=', '\"text', '/', 'css\"', '>', \"\\\\n'\", '+', 'css_embed)', '+', 'b\"\\\\n', '<', '/', 'style', '>', '\"', 'self,', 'template_name:', 'str,', '*', '*', 'kwargs:', 'Any)', '->', 'bytes:', 'template_path', '=', 'self.get_template_path', 'template_path:', 'frame', '=', 'sys._getframe', '0)', 'web_file', '=', 'frame.f_code.co_filename', 'frame.f_code.co_filename', '==', 'web_file', 'frame.f_back', 'frame', '=', 'frame.f_back', 'frame.f_code.co_filename', 'template_path', '=', 'os.path.dirname', 'frame.f_code.co_filename)', 'template_path', 'loader', '=', 'self.create_template_loader', 'template_path)', 'template_path]', '=', 'loader', 'loader', '=', 'template_path]', 't', '=', 'loader.load', 'template_name)', 'namespace', '=', 'self.get_template_namespace', 'namespace.update', 'kwargs)', 't.generate', '**', 'namespace)', 'get_template_namespace', 'self)', '->', 'Dict', 'str,', 'Any', 'namespace', '=', 'dict(', '=', 'self,', 'request', '=', 'self.request,', 'current_user', '=', 'self.current_user,', 'locale', '=', 'self.locale,', '_', '=', 'self.locale.translate,', 'pgettext', '=', 'self.locale.pgettext,', 'static_url', '=', 'self.static_url,', '=', 'reverse_url', '=', 'self.reverse_url,', 'namespace.update', 'self.ui)', 'namespace', 'create_template_loader', 'self,', 'template_path:', 'str)', '->', '=', '\"template_loader\"', '\"template_loader\"]', 'kwargs', '=', '{}', '\"autoescape\"', 'kwargs', '\"autoescape\"]', '=', '\"autoescape\"]', '\"template_whitespace\"', 'kwargs', '\"whitespace\"]', '=', '\"template_whitespace\"]', 'template.Loader', 'template_path,', '*', '*', 'kwargs)', 'flush', 'self,', 'bool', '=', '->', '\"Future', '\":', 'self.request.connection', 'chunk', '=', 'self._write_buffer)', 'self._write_buffer', '=', '[]', 'self._headers_written:', 'self._headers_written', '=', 'chunk', 'self._status_code,', 'self._headers,', 'chunk,', '=', 'self._status_code,', 'self._headers,', 'chunk,', 'self.request.method', '==', '\"HEAD\":', 'chunk', '=', 'b\"\"', 'self,', '\"_new_cookie\"', 'cookie', 'self._new_cookie.values', 'self.add_header', '\"Set', '-', 'Cookie\",', '=', '\"\",', 'self._status_code,', 'self.request.connection.write_headers(', 'self._headers,', 'chunk', 'chunk', '=', 'chunk,', 'self.request.method', '!=', '\"HEAD\":', 'self.request.connection.write', 'chunk)', 'future', '=', 'Future', 'future.set_result', 'future', 'self,', 'chunk:', 'Optional', 'Union', 'str,', 'bytes,', 'dict', '=', '->', '\"Future', '\":', 'called', 'twice\")', 'chunk', 'self.write', 'chunk)', 'self._headers_written:', 'self._status_code', '==', '200', 'self.request.method', '(\"GET\",', '\"HEAD\")', '\"Etag\"', 'self._headers', '):', 'self.set_etag_header', 'self.check_etag_header', 'self._write_buffer', '=', '[]', 'self.set_status', '304)', 'self._status_code', '(204,', '304)', '(100', '<=', 'self._status_code', '<', '200', 'self._write_buffer,', 'send', 'body', '%s\"', '%', 'self._status_code', 'self._clear_representation_headers', '\"Content', '-', 'Length\"', 'self._headers:', 'content_length', '=', 'sum', 'len', 'part)', 'part', 'self._write_buffer)', 'self.set_header', '\"Content', '-', 'Length\",', 'content_length)', 'self.request.connection', 'self.request.connection.set_close_callback', 'future', '=', 'self.flush', '=', 'self._log', '=', 'future', 'detach', 'self)', '->', 'iostream.IOStream:', '=', 'self.request.connection.detach', 'self)', '->', 'self.ui', '=', 'self,', 'status_code:', '=', '500,', '*', '*', 'kwargs:', 'Any)', '->', 'self._headers_written:', 'send', 'response', 'after', 'headers', 'written\")', 'Exception:', '\"Failed', 'to', 'flush', 'partial', 'response\",', '=', 'self.clear', '=', 'kwargs.get', 'kwargs:', '=', 'kwargs', '1]', '=', 'self.set_status', 'status_code,', '=', 'status_code,', '*', '*', 'kwargs)', 'Exception:', '\"Uncaught', '=', 'self,', 'status_code:', '*', '*', 'kwargs:', 'Any)', '->', '\"serve_traceback\")', 'kwargs:', 'self.set_header', '\"Content', '-', 'Type\",', '\"text', '/', '*', 'kwargs', 'self.write', '\"', '<', 'html', '>', '<', 'title', '>', '%', 'code', 'd:', '%', 'message', 's', '<', '/', 'title', '>', '\"', '\"', '<', 'body', '>', '%', 'code', 'd:', '%', 'message', 's', '<', '/', 'body', '>', '<', '/', 'html', '>', '\"', '%', '{\"code\":', 'status_code,', '\"message\":', '@property', 'locale', 'self)', '->', 'self,', '\"_locale\"', 'loc', '=', 'self.get_user_locale', 'loc', 'self._locale', '=', 'loc', 'self._locale', '=', 'self.get_browser_locale', 'self._locale', 'self._locale', '@locale.setter', 'locale', 'self,', 'value:', '->', 'self._locale', '=', 'value', 'get_user_locale', 'self)', '->', 'Optional', 'get_browser_locale', 'self,', 'str', '=', '\"en_US\")', '->', '\"Accept', '-', 'Language\"', 'self.request.headers:', 'languages', '=', 'self.request.headers', '\"Accept', '-', 'Language\"', '.split', '\"', '\")', 'locales', '=', '[]', 'language', 'languages:', 'parts', '=', 'language.strip', '.split', '\"', '\")', 'len', 'parts)', '>', '1', 'parts', '1', '.strip', '\"q', '=', '\"', '=', 'float', 'parts', '1', '.strip', '2', '<', '0:', '=', '0.0', '=', '1.0', '>', '0:', 'locales.append', 'parts', '0', 'locales:', 'key', '=', 'pair:', 'pair', '1', 'reverse', '=', 'codes', '=', '[loc', '0]', 'loc', 'locales]', 'locale.get', '*', 'codes)', 'locale.get', '@property', 'current_user', 'self)', '->', 'Any:', 'self,', '\"_current_user\"', 'self._current_user', '=', 'self.get_current_user', 'self._current_user', '@current_user.setter', 'current_user', 'self,', 'value:', 'Any)', '->', 'self._current_user', '=', 'value', 'get_current_user', 'self)', '->', 'Any:', 'self)', '->', 'str:', '\"', '@', 'get_template_path', 'self)', '->', 'Optional', 'str', '\"template_path\")', '@property', 'xsrf_token', 'self)', '->', 'bytes:', 'self,', '\"_xsrf_token\"', 'version,', 'token,', 'timestamp', '=', 'self._get_raw_xsrf_token', 'output_version', '=', '\"xsrf_cookie_version\",', '2)', 'cookie_kwargs', '=', '\"xsrf_cookie_kwargs\",', 'output_version', '==', '1:', 'self._xsrf_token', '=', 'token)', 'output_version', '==', '2:', '=', '4)', 'self._xsrf_token', '=', 'b\"', '|', 'b\"2\",', 'token', 'utf8', 'str', 'timestamp', '\"unknown', 'xsrf', 'cookie', 'version', '%d\",', 'output_version)', 'version', 'self.current_user', '\"expires_days\"', 'cookie_kwargs:', 'cookie_kwargs', '\"expires_days\"]', '=', '30', 'cookie_name', '=', '\"xsrf_cookie_name\",', '\"_xsrf\")', 'self.set_cookie', 'cookie_name,', 'self._xsrf_token,', '*', '*', 'cookie_kwargs)', 'self._xsrf_token', '_get_raw_xsrf_token', 'self)', '->', 'Tuple', 'Optional', 'bytes,', 'float', 'self,', '\"_raw_xsrf_token\"', 'cookie_name', '=', '\"xsrf_cookie_name\",', '\"_xsrf\")', 'cookie', '=', 'self.get_cookie', 'cookie_name)', 'cookie:', 'version,', 'token,', 'timestamp', '=', 'self._decode_xsrf_token', 'cookie)', 'version,', 'token,', 'timestamp', '=', 'token', 'version', '=', 'token', '=', '16)', 'timestamp', '=', 'time.time', 'token', 'timestamp', 'self._raw_xsrf_token', '=', '(version,', 'token,', 'timestamp)', 'self._raw_xsrf_token', '_decode_xsrf_token(', 'self,', 'cookie:', 'str', '->', 'Tuple', 'Optional', 'Optional', 'bytes', 'Optional', 'float', 'm', '=', '_signed_value_version_re.match', 'utf8', 'cookie', 'm:', 'version', '=', 'm.group', '1', 'version', '==', '2:', '_,', 'timestamp_str', '=', 'cookie.split', '\"', '|', '\")', '=', 'utf8', 'token', '=', 'utf8', 'timestamp', '=', 'timestamp_str)', 'version,', 'token,', 'timestamp', 'Exception', '\"Unknown', 'xsrf', 'cookie', 'version\")', 'version', '=', '1', 'token', '=', 'utf8', 'cookie', 'token', '=', 'utf8', 'cookie)', 'timestamp', '=', 'time.time', '(version,', 'token,', 'timestamp)', 'Exception:', 'gen_log.debug', '\"Uncaught', '_decode_xsrf_token\",', '=', 'check_xsrf_cookie', 'self)', '->', 'token', '=', 'self.get_argument', '\"_xsrf\",', 'self.request.headers.get', '\"X', '-', 'Xsrftoken\")', 'self.request.headers.get', '\"X', '-', 'Csrftoken\")', 'token:', '403,', '\"\\'_xsrf\\'', 'argument', 'POST\")', '_,', 'token,', '_', '=', 'self._decode_xsrf_token', 'token)', '_,', 'expected_token,', '_', '=', 'self._get_raw_xsrf_token', 'token:', '403,', '\"\\'_xsrf\\'', 'argument', 'hmac.compare_digest', 'utf8', 'token', 'utf8', 'expected_token', '403,', '\"XSRF', 'cookie', 'does', 'match', 'POST', 'argument\")', 'self)', '->', 'str:', \"'\", '<', 'type', '=', '\"hidden\"', 'name', '=', '\"_xsrf\"', 'value', '=', '\"\\'', '+', 'escape.xhtml_escape', 'self.xsrf_token)', '+', '\\'\"', '/', '>', \"'\", 'static_url(', 'self,', 'path:', 'str,', 'Optional', 'bool]', '=', '*', '*', 'kwargs:', 'Any', '->', 'str:', '\"static_path\",', '\"static_url\")', 'get_url', '=', ').make_static_url', '=', 'getattr', 'self,', '=', 'self.request.protocol', '+', '\"', '/', '/', '\"', '+', 'self.request.host', '=', '\"\"', '+', 'get_url', 'path,', '*', '*', 'kwargs)', 'self,', 'name:', 'str,', 'feature:', 'str', '=', 'feature\")', '->', 'name', 'Exception(', '\"You', 'must', 'the', \"'\", '%', \"s'\", 'your', '\"', '\"application', 'to', 'use', '%s\"', '%', '(name,', 'feature)', 'reverse_url', 'self,', 'name:', 'str,', '*args:', 'Any)', '->', 'str:', 'self.application.reverse_url', 'name,', '*args)', 'compute_etag', 'self)', '->', 'Optional', 'str', '=', 'part', 'self._write_buffer:', 'part)', '\\'\"', '%', 's\"\\'', '%', 'set_etag_header', 'self)', '->', 'etag', '=', 'self.compute_etag', 'etag', 'self.set_header', '\"Etag\",', 'etag)', 'check_etag_header', 'self)', '->', 'bool:', 'computed_etag', '=', 'utf8', 'self._headers.get', '\"Etag\",', '\"\"', 'etags', '=', \"rb'\\\\\", '*', '|', '?', 'W', '/', '?\"', '^', '\"', '*', '\"\\',', 'utf8', 'self.request.headers.get', '\"If', '-', '-', 'Match\",', '\"\"', 'computed_etag', 'etags:', 'match', '=', 'etags', '0]', '==', 'b\"', '*', '\":', 'match', '=', 'val', 'x:', 'bytes)', '->', 'bytes:', 'x', '2', 'b\"W', '/', '\")', 'x', 'etag', 'etags:', 'val', 'etag)', '==', 'val', 'computed_etag', 'match', '=', 'match', '_execute(', 'self,', '*args:', 'bytes,', '*', '*', 'kwargs:', 'bytes', '->', '=', 'self.request.method', 'self.SUPPORTED_METHODS:', '405)', 'self.path_args', '=', '[self.decode_argument', 'arg)', 'arg', 'args]', 'self.path_kwargs', '=', 'dict(', '(k,', 'self.decode_argument', 'v,', 'name', '=', 'k', '(k,', 'v)', 'kwargs.items', 'self.request.method', '\"GET\",', '\"HEAD\",', '\"OPTIONS\",', '\"xsrf_cookies\"', 'self.check_xsrf_cookie', 'result', '=', 'self.prepare', 'result', 'result', '=', 'result', 'self._prepared_future', 'future_set_result_unless_cancelled', 'self._prepared_future,', 'self.request._body_future', 'method', '=', 'getattr', 'self,', 'self.request.method.lower', 'result', '=', 'method', '*', 'self.path_args,', '*', '*', 'self.path_kwargs)', 'result', 'result', '=', 'result', 'Exception', 'e:', 'e)', 'Exception:', '\"Exception', '=', 'result', '=', 'self._prepared_future', 'self._prepared_future.done', 'self._prepared_future.set_result', 'data_received', 'self,', 'chunk:', 'bytes)', '->', 'Optional', 'Awaitable', '_log', 'self)', '->', 'self.application.log_request', 'self)', '_request_summary', 'self)', '->', 'str:', '\"', '%', 's', '%s', '%', 's', '\"', '%', 'self.request.method,', 'self.request.uri,', 'self.request.remote_ip,', 'self,', 'e:', '->', 'e,', '*', 'e.args)', '*', 'Exception:', 'logger\",', '=', 'e,', 'e.status_code,', '=', '500,', '=', 'self,', 'typ:', '\"Optional', 'Type', '\",', 'value:', 'Optional', 'tb:', 'Optional', 'TracebackType', '->', 'value,', 'value.log_message:', '=', '\"', '%', 'd', '%s:', '\"', '+', 'value.log_message', 'args', '=', '[value.status_code,', 'self._request_summary', '+', 'value.args)', '*args)', '\"Uncaught', '%s\\\\n', '%', 'r\",', 'self._request_summary', 'self.request,', '=', 'typ,', 'value,', 'tb', '_ui_module', 'self,', 'name:', 'str,', 'module:', 'Type', '\"UIModule\"', '->', 'Callable', '...,', 'str', 'render', '*', 'args,', '*', '*', 'kwargs)', '->', 'str:', 'self,', '\"_active_modules\"', 'self._active_modules', '=', '{}', 'name', 'self._active_modules:', 'self._active_modules', 'name]', '=', 'module', 'self)', 'rendered', '=', 'self._active_modules', 'name', '.render', '*', 'args,', '*', '*', 'kwargs)', 'rendered', 'render', '_ui_method', 'self,', 'method:', 'Callable', '...,', 'str', '->', 'Callable', '...,', 'str', '*args,', '*', '*', 'kwargs:', 'method', 'self,', '*args,', '*', '*', 'kwargs)', '_clear_representation_headers', 'self)', '->', 'headers', '=', '[\"Content', '-', '\"Content', '-', 'Language\",', '\"Content', '-', 'Type\"]', 'h', 'headers:', 'self.clear_header', 'h)', '=', 'TypeVar', 'bound', '=', 'stream_request_body', 'cls:', 'Type', '->', 'Type', 'cls,', '\"expected', 'of', 'got', '%r\",', 'cls)', 'cls._stream_request_body', '=', 'cls', 'cls:', 'Type', '->', 'bool:', 'cls,', '\"expected', 'of', 'got', '%r\",', 'cls)', 'cls._stream_request_body', 'method:', 'Callable', '...,', 'Optional', 'Awaitable', '->', 'Callable', '...,', 'Optional', 'Awaitable', '@functools.wraps', 'method)', 'wrapper(', 'self:', '*args,', '*', '*', 'kwargs', '->', 'Optional', 'Awaitable', '\"', '/', '\"', 'self.request.method', '(\"GET\",', '\"HEAD\"', 'uri', '=', 'self.request.path.rstrip', '\"', '/', '\")', 'uri:', 'self.request.query:', 'uri', '+=', '\"?\"', '+', 'self.request.query', 'self.redirect', 'uri,', 'permanent', '=', '404)', 'method', 'self,', '*args,', '*', '*', 'kwargs)', 'wrapper', 'method:', 'Callable', '...,', 'Optional', 'Awaitable', '->', 'Callable', '...,', 'Optional', 'Awaitable', '@functools.wraps', 'method)', 'wrapper(', 'self:', '*args,', '*', '*', 'kwargs', '->', 'Optional', 'Awaitable', '\"', '/', '\"', 'self.request.method', '(\"GET\",', '\"HEAD\"', 'uri', '=', 'self.request.path', '+', '\"', '/', '\"', 'self.request.query:', 'uri', '+=', '\"?\"', '+', 'self.request.query', 'self.redirect', 'uri,', 'permanent', '=', '404)', 'method', 'self,', '*args,', '*', '*', 'kwargs)', 'wrapper', '_ApplicationRouter', 'ReversibleRuleRouter', 'self,', 'application:', '\"Application\",', 'rules:', 'Optional', '=', '->', 'application,', 'Application)', 'self.application', '=', 'application', 'super', 'rules)', 'process_rule', 'self,', 'rule:', 'Rule)', '->', 'Rule:', 'rule', '=', 'super', '.process_rule', 'rule)', 'rule.target,', 'tuple', 'rule.target', '=', '_ApplicationRouter(', 'self.application,', 'rule.target', 'rule', 'self,', 'target:', 'Any,', 'request:', 'httputil.HTTPServerRequest,', '*', '*', 'target_params:', 'Any', '->', 'Optional', 'httputil.HTTPMessageDelegate', 'target)', 'target,', 'request,', 'target,', '*', '*', 'target_params', 'super', 'target,', 'request,', '*', '*', 'target_params)', 'Application', 'ReversibleRouter', 'r', 'self,', 'Optional', '=', 'Optional', 'str]', '=', 'Optional', 'Type', '=', '*', '*', 'Any,', '->', '=', '[]', '\"compress_response\")', '\"gzip\"', '=', '=', '=', 'self.ui_modules', '=', '\"Template\":', 'TemplateModule,', 'self.ui_methods', '=', '{}', 'self._load_ui_modules', '\"ui_modules\",', 'self._load_ui_methods', '\"ui_methods\",', '\"static_path\"', 'path', '=', '\"static_path\"]', '=', 'static_url_prefix', '=', '\"static_url_prefix\",', '\"', '/', 'static', '/', '\")', '=', '=', '\"path\"]', '=', 'path', 'pattern', 're.escape', 'static_url_prefix)', '+', 'r\"', '.', '*', '\",', 'r\"', '/', 'favicon\\\\.ico', '\",', 'r\"', '/', 'robots\\\\.txt', '\",', ']:', '0,', '(pattern,', '\"debug\"', '\"compiled_template_cache\",', '\"serve_traceback\",', 'self.wildcard_router', '=', '_ApplicationRouter', 'self,', '=', '_ApplicationRouter(', 'self,', '[Rule', 'AnyMatches', 'self.wildcard_router', 'self,', 'address:', 'Optional', 'str]', '=', '*,', 'family:', 'socket.AddressFamily', '=', 'socket.AF_UNSPEC,', 'backlog:', '=', 'flags:', 'Optional', '=', 'bool', '=', '*', '*', 'kwargs:', 'Any,', '->', 'HTTPServer:', 'server', '=', 'HTTPServer', 'self,', '*', '*', 'kwargs)', 'address', '=', 'address,', 'family', '=', 'family,', 'backlog', '=', 'backlog,', 'flags', '=', 'flags,', '=', 'server', 'self,', 'host_pattern:', 'str,', '->', 'host_matcher', '=', 'HostMatches', 'host_pattern)', 'rule', '=', 'Rule', 'host_matcher,', '_ApplicationRouter', 'self,', '-', '1,', 'rule)', 'self.wildcard_router.add_rules(', 'DefaultHostMatches', 'self,', 'host_matcher.host_pattern', 'self,', 'Type', '->', '_load_ui_methods', 'self,', 'methods:', 'Any)', '->', 'methods,', 'types.ModuleType', 'self._load_ui_methods', 'dict', 'n,', 'getattr', 'methods,', 'n', 'n', 'dir', 'methods', 'methods,', 'm', 'methods:', 'self._load_ui_methods', 'm)', 'name,', 'fn', 'methods.items', '\"_\")', 'fn,', '\"__call__\")', 'name', '0', '.lower', '==', 'name', '0]', '):', 'self.ui_methods', 'name]', '=', 'fn', '_load_ui_modules', 'self,', 'modules:', 'Any)', '->', 'modules,', 'types.ModuleType', 'self._load_ui_modules', 'dict', 'n,', 'getattr', 'modules,', 'n', 'n', 'dir', 'modules', 'modules,', 'm', 'modules:', 'self._load_ui_modules', 'm)', 'modules,', 'dict)', 'name,', 'cls', 'modules.items', 'cls,', 'UIModule', 'self.ui_modules', 'name]', '=', 'cls', '__call__(', 'self,', 'request:', 'httputil.HTTPServerRequest', '->', 'Optional', 'Awaitable', '=', 'request)', 'self,', 'request:', 'httputil.HTTPServerRequest,', '*', '*', 'kwargs:', 'Any', '->', 'route', '=', 'request)', 'route', 'route)', 'request,', 'request,', '{\"status_code\":', '404', 'self,', 'request:', 'httputil.HTTPServerRequest,', 'Type', 'target_kwargs:', 'Optional', 'Dict', 'str,', 'Any', '=', 'path_args:', 'Optional', 'bytes', '=', 'path_kwargs:', 'Optional', 'Dict', 'str,', 'bytes', '=', '->', 'self,', 'request,', 'target_kwargs,', 'path_args,', 'path_kwargs', 'reverse_url', 'self,', 'name:', 'str,', '*args:', 'Any)', '->', 'str:', 'reversed_url', '=', 'name,', '*args)', 'reversed_url', 'reversed_url', '\"', '%', 's', 'found', 'named', 'urls\"', '%', 'name)', 'log_request', 'self,', '->', '\"log_function\"', '\"log_function\"', '<', '400:', 'log_method', '=', '<', '500:', 'log_method', '=', 'log_method', '=', 'request_time', '=', '1000.0', '*', 'log_method(', '\"', '%', 'd', '%s', '%.2fms\",', 'request_time,', 'httputil.HTTPMessageDelegate', 'self,', 'application:', 'Application,', 'request:', 'httputil.HTTPServerRequest,', 'Type', 'Optional', 'Dict', 'str,', 'Any', 'path_args:', 'Optional', 'bytes', 'path_kwargs:', 'Optional', 'Dict', 'str,', 'bytes', '->', 'self.application', '=', 'application', 'self.connection', '=', 'request.connection', 'self.request', '=', 'request', '=', '=', '{}', 'self.path_args', '=', 'path_args', '[]', 'self.path_kwargs', '=', 'path_kwargs', '{}', 'self.chunks', '=', '[]', 'self.stream_request_body', '=', 'headers_received(', 'self,', 'Union', 'headers:', 'httputil.HTTPHeaders,', '->', 'Optional', 'Awaitable', 'self.stream_request_body:', 'self.request._body_future', '=', 'Future', 'self.execute', 'data_received', 'self,', 'data:', 'bytes)', '->', 'Optional', 'Awaitable', 'self.stream_request_body:', 'data)', 'self.chunks.append', 'data)', 'self)', '->', 'self.stream_request_body:', 'future_set_result_unless_cancelled', 'self.request._body_future,', 'self.request.body', '=', 'self.chunks)', 'self.request._parse_body', 'self.execute', 'on_connection_close', 'self)', '->', 'self.stream_request_body:', 'self.chunks', '=', 'execute', 'self)', '->', 'Optional', 'Awaitable', '\"compiled_template_cache\",', 'loader', 'loader.reset', '=', '=', 'self.application,', 'self.request,', '*', '*', '=', '[t', 'self.request)', 't', 'self.stream_request_body:', '=', 'Future', 'fut', '=', '*self.path_args,', '*', '*', 'self.path_kwargs)', 'fut.add_done_callback', 'f:', 'f.result', 'Exception', 'self,', 'status_code:', '=', '500,', 'log_message:', 'Optional', 'str]', '=', '*args:', 'Any,', '*', '*', 'kwargs:', 'Any,', '->', 'self.status_code', '=', 'status_code', 'self.log_message', '=', 'log_message', 'self.args', '=', 'args', '=', 'kwargs.get', 'log_message', 'args:', 'self.log_message', '=', 'log_message.replace', '\"', '%', '\",', '\"', '%', '%', '\")', '__str__', 'self)', '->', 'str:', 'message', '=', '\"HTTP', '%d:', '%s\"', '%', 'self.status_code,', 'httputil.responses.get', 'self.status_code,', '\"Unknown\"', 'self.log_message:', 'message', '+', '\"', '(\"', '+', '(self.log_message', '%', 'self.args)', '+', '\"', '\"', 'message', 'Exception', 'self,', 'arg_name:', 'str)', '->', 'super', '400,', 'argument', '%s\"', '%', 'arg_name)', 'self.arg_name', '=', 'arg_name', 'self,', 'status_code:', '->', 'self.set_status', 'status_code)', 'prepare', 'self)', '->', 'self._status_code)', 'check_xsrf_cookie', 'self)', '->', 'self,', 'url:', 'str,', 'permanent:', 'bool', '=', '->', 'self._url', '=', 'url', 'self._permanent', '=', 'permanent', 'get', 'self,', '*args:', 'Any,', '*', '*', 'kwargs:', 'Any)', '->', 'to_url', '=', '*', 'args,', '*', '*', 'kwargs)', 'self.request.query_arguments:', 'to_url', '=', 'httputil.url_concat(', 'to_url,', 'httputil.qs_to_qsl', 'self.request.query_arguments', 'self.redirect', 'to_url,', 'permanent', '=', 'self._permanent)', 'CACHE_MAX_AGE', '=', '86400', '*', '365', '*', '10', '=', '{}', '_lock', '=', 'self,', 'path:', 'str,', 'Optional', 'str]', '=', '->', 'self.root', '=', 'path', '=', 'reset', 'cls)', '->', 'cls._lock:', '=', '{}', 'head', 'self,', 'path:', 'str)', '->', 'Awaitable', 'self.get', 'path,', '=', 'get', 'self,', 'path:', 'str,', 'bool', '=', '->', 'self.path', '=', 'self.parse_url_path', 'path)', 'path', 'absolute_path', '=', 'self.get_absolute_path', 'self.root,', 'self.path)', 'self.absolute_path', '=', 'self.validate_absolute_path', 'self.root,', 'absolute_path)', 'self.absolute_path', '=', 'self.set_headers', 'self.set_status', '304)', 'request_range', '=', 'range_header', '=', 'self.request.headers.get', '\"Range\")', 'range_header:', 'request_range', '=', 'httputil._parse_request_range', 'range_header)', 'size', '=', 'self.get_content_size', 'request_range:', 'start,', 'end', '=', 'request_range', 'start', 'start', '<', '0:', 'start', '+=', 'size', 'start', '<', '0:', 'start', '=', '0', 'start', '(start', '>=', 'size', '(end', 'start', '>=', 'end', 'end', '==', '0:', 'self.set_status', '416)', 'self.set_header', '\"Content', '-', 'Type\",', '\"text', '/', 'self.set_header', '\"Content', '-', 'Range\",', '\"bytes', '*', '/', '%', 's\"', '%', '(size', 'end', 'end', '>', 'size:', 'end', '=', 'size', 'size', '!=', '(end', 'size)', '-', '(start', '0', 'self.set_status', '206)', 'self.set_header(', '\"Content', '-', 'Range\",', 'httputil._get_content_range', 'start,', 'end,', 'size)', 'start', '=', 'end', '=', 'start', 'end', 'content_length', '=', 'end', '-', 'start', 'end', 'content_length', '=', 'end', 'start', 'content_length', '=', 'size', '-', 'start', 'content_length', '=', 'size', 'self.set_header', '\"Content', '-', 'Length\",', 'content_length)', 'content', '=', 'self.get_content', 'self.absolute_path,', 'start,', 'end)', 'content,', 'bytes', 'content', '=', '[content]', 'chunk', 'content:', 'self.write', 'chunk)', 'self.flush', 'self.request.method', '==', '\"HEAD\"', 'compute_etag', 'self)', '->', 'Optional', 'str', 'self.absolute_path', '=', 'self._get_cached_version', 'self.absolute_path)', '\\'\"', '%', 's\"\\'', '%', 'set_headers', 'self)', '->', 'self.set_header', '\"Accept', '-', 'Ranges\",', '\"bytes\")', 'self.set_etag_header', 'self.set_header', '-', 'content_type', '=', 'self.get_content_type', 'content_type:', 'self.set_header', '\"Content', '-', 'Type\",', 'content_type)', 'cache_time', '=', 'self.get_cache_time', 'self.path,', 'content_type)', 'cache_time', '>', '0:', 'self.set_header(', '\"Expires\",', 'datetime.datetime.now', 'datetime.timezone.utc)', '+', 'seconds', '=', 'cache_time', 'self.set_header', '\"Cache', '-', 'Control\",', '\"max', '-', 'age', '=', '\"', '+', 'str', 'cache_time', 'self.set_extra_headers', 'self.path)', 'self)', '->', 'bool:', 'self.request.headers.get', '\"If', '-', '-', 'Match\"', 'self.check_etag_header', 'ims_value', '=', 'self.request.headers.get', '\"If', '-', '-', 'ims_value', '=', 'email.utils.parsedate_to_datetime', 'ims_value)', '=', '=', 'datetime.timezone.utc)', '>=', 'get_absolute_path', 'cls,', 'root:', 'str,', 'path:', 'str)', '->', 'str:', 'abspath', '=', 'os.path.abspath', 'root,', 'path', 'abspath', 'validate_absolute_path', 'self,', 'root:', 'str,', 'absolute_path:', 'str)', '->', 'Optional', 'str', 'root', '=', 'os.path.abspath', 'root)', 'os.path.sep', 'root', '+=', 'os.path.sep', '(absolute_path', '+', 'os.path.sep', 'root', '403,', '\"', '%', 's', 'root', 'static', 'self.path)', 'absolute_path)', '\"', '/', '\"', '\"', '/', '/', '\"', '403,', 'redirect', 'path', 'two', 'self.redirect', 'self.request.path', '+', '\"', '/', '\",', 'permanent', '=', 'absolute_path', '=', 'absolute_path,', 'absolute_path', '404)', 'absolute_path', '403,', '\"', '%', 's', 'a', 'file\",', 'self.path)', 'absolute_path', 'get_content(', 'cls,', 'abspath:', 'str,', 'start:', 'Optional', '=', 'end:', 'Optional', '=', '->', 'bytes,', 'open', 'abspath,', '\"rb\")', 'file:', 'start', 'file.seek', 'start)', 'end', '=', 'end', '-', '(start', '0)', '=', 'chunk_size', '=', '64', '*', '1024', '<', 'chunk_size:', 'chunk_size', '=', 'chunk', '=', 'file.read', 'chunk_size)', 'chunk:', '-=', 'len', 'chunk)', 'chunk', '==', '0', 'get_content_version', 'cls,', 'abspath:', 'str)', '->', 'str:', 'data', '=', 'cls.get_content', 'abspath)', '=', 'data,', 'bytes', 'data)', 'chunk', 'data:', 'chunk)', '_stat', 'self)', '->', 'os.stat_result:', 'self.absolute_path', 'self,', '\"_stat_result\"', 'self._stat_result', '=', 'os.stat', 'self.absolute_path)', 'self._stat_result', 'get_content_size', 'self)', '->', 'stat_result', '=', 'self._stat', 'stat_result.st_size', 'self)', '->', 'Optional', 'datetime.datetime', 'stat_result', '=', 'self._stat', '=', 'stat_result.st_mtime', 'datetime.timezone.utc', 'get_content_type', 'self)', '->', 'str:', 'self.absolute_path', 'mime_type,', '=', 'mimetypes.guess_type', 'self.absolute_path)', '==', '\"gzip\":', '\"application', '/', 'gzip\"', '\"application', '/', 'octet', '-', 'stream\"', 'mime_type', 'mime_type', '\"application', '/', 'octet', '-', 'stream\"', 'set_extra_headers', 'self,', 'path:', 'str)', '->', 'get_cache_time(', 'self,', 'path:', 'str,', 'Optional', 'datetime.datetime', 'mime_type:', 'str', '->', 'self.CACHE_MAX_AGE', '\"v\"', 'self.request.arguments', '0', 'make_static_url(', 'cls,', 'Dict', 'str,', 'Any', 'path:', 'str,', 'bool', '=', '->', 'str:', 'url', '=', '\"static_url_prefix\",', '\"', '/', 'static', '/', '\")', '+', 'path', 'url', '=', 'cls.get_version', 'path)', 'url', '\"', '%', 's?v', '=', '%', 's\"', '%', '(url,', 'parse_url_path', 'self,', 'url_path:', 'str)', '->', 'str:', 'os.path.sep', '!=', '\"', '/', '\":', 'url_path', '=', 'url_path.replace', '\"', '/', '\",', 'os.path.sep)', 'url_path', 'get_version', 'cls,', 'Dict', 'str,', 'Any', 'path:', 'str)', '->', 'Optional', 'str', 'abs_path', '=', 'cls.get_absolute_path', '\"static_path\"', 'path)', 'cls._get_cached_version', 'abs_path)', '_get_cached_version', 'cls,', 'abs_path:', 'str)', '->', 'Optional', 'str', 'cls._lock:', '=', 'abs_path', 'abs_path]', '=', 'cls.get_content_version', 'abs_path)', 'Exception:', '\"Could', 'open', 'static', 'file', '%r\",', 'abs_path)', 'abs_path]', '=', 'hsh', '=', 'abs_path)', 'hsh:', 'hsh', 'self,', 'fallback:', 'Callable', 'httputil.HTTPServerRequest', '->', 'self.fallback', '=', 'fallback', 'prepare', 'self)', '->', 'self.fallback', 'self.request)', '=', 'object', 'self,', 'request:', 'httputil.HTTPServerRequest)', '->', 'self,', 'status_code:', 'headers:', 'httputil.HTTPHeaders,', 'chunk:', 'bytes,', 'bool,', '->', 'Tuple', 'httputil.HTTPHeaders,', 'bytes', 'status_code,', 'headers,', 'chunk', 'self,', 'chunk:', 'bytes,', 'bool)', '->', 'bytes:', 'chunk', 'CONTENT_TYPES', '=', 'set(', '\"application', '/', '\"application', '/', 'x', '-', '\"application', '/', 'xml\",', '\"application', '/', 'atom', '+', 'xml\",', '\"application', '/', 'json\",', '\"application', '/', 'xhtml', '+', 'xml\",', '\"image', '/', 'svg', '+', 'xml\",', 'GZIP_LEVEL', '=', '6', 'MIN_LENGTH', '=', '1024', 'self,', 'request:', 'httputil.HTTPServerRequest)', '->', '=', '\"gzip\"', 'request.headers.get', '\"Accept', '-', '\"\")', '_compressible_type', 'self,', 'ctype:', 'str)', '->', 'bool:', '\"text', '/', '\")', 'ctype', 'self.CONTENT_TYPES', 'self,', 'status_code:', 'headers:', 'httputil.HTTPHeaders,', 'chunk:', 'bytes,', 'bool,', '->', 'Tuple', 'httputil.HTTPHeaders,', 'bytes', '\"Vary\"', 'headers:', 'headers', '\"Vary\"]', '+=', '\",', 'Accept', '-', 'headers', '\"Vary\"]', '=', '\"Accept', '-', 'ctype', '=', '_unicode', 'headers.get', '\"Content', '-', 'Type\",', '\"\"', '.split', '\"', '\"', '0]', '=', 'self._compressible_type', 'ctype)', 'len', 'chunk)', '>=', 'self.MIN_LENGTH)', '(\"Content', '-', 'headers)', 'headers', '\"Content', '-', '=', '\"gzip\"', 'self._gzip_value', '=', 'BytesIO', 'self._gzip_file', '=', 'gzip.GzipFile(', 'mode', '=', '\"w\",', 'fileobj', '=', 'self._gzip_value,', 'compresslevel', '=', 'self.GZIP_LEVEL', 'chunk', '=', 'chunk,', '\"Content', '-', 'Length\"', 'headers:', 'headers', '\"Content', '-', 'Length\"]', '=', 'str', 'len', 'chunk', 'headers', '\"Content', '-', 'Length\"]', 'status_code,', 'headers,', 'chunk', 'self,', 'chunk:', 'bytes,', 'bool)', '->', 'bytes:', 'self._gzip_file.write', 'chunk)', 'self._gzip_file.close', 'self._gzip_file.flush', 'chunk', '=', 'self._gzip_value.getvalue', 'self._gzip_value.truncate', '0)', 'self._gzip_value.seek', '0)', 'chunk', 'authenticated(', 'method:', 'Callable', '...,', 'Optional', 'Awaitable', '->', 'Callable', '...,', 'Optional', 'Awaitable', '@functools.wraps', 'method)', 'wrapper(', 'self:', '*args,', '*', '*', 'kwargs', '->', 'Optional', 'Awaitable', 'self.current_user:', 'self.request.method', '(\"GET\",', '\"HEAD\"', 'url', '=', '\"?\"', 'url:', 'urllib.parse.urlsplit', 'url', '.scheme:', 'next_url', '=', 'self.request.full_url', 'self.request.uri', 'next_url', '=', 'self.request.uri', 'url', '+=', '\"?\"', '+', 'urlencode', 'dict', 'next', '=', 'next_url', 'self.redirect', 'url)', '403)', 'method', 'self,', '*args,', '*', '*', 'kwargs)', 'wrapper', 'UIModule', 'object', 'self,', '->', '=', 'self.request', '=', 'self.ui', '=', 'self.locale', '=', '@property', 'current_user', 'self)', '->', 'Any:', 'render', 'self,', '*args:', 'Any,', '*', '*', 'kwargs:', 'Any)', '->', 'str:', 'self)', '->', 'Optional', 'str', 'self)', '->', 'Optional', 'Iterable', 'str', 'embedded_css', 'self)', '->', 'Optional', 'str', 'css_files', 'self)', '->', 'Optional', 'Iterable', 'str', 'html_head', 'self)', '->', 'Optional', 'str', 'html_body', 'self)', '->', 'Optional', 'str', 'self,', 'path:', 'str,', '*', '*', 'kwargs:', 'Any)', '->', 'bytes:', 'path,', '*', '*', 'kwargs)', 'UIModule', 'render', 'self,', 'text:', 'str,', '*', '*', 'kwargs:', 'Any)', '->', 'str:', 'text,', '*', '*', 'kwargs)', 'UIModule', 'render', 'self)', '->', 'str:', 'TemplateModule', 'UIModule', 'self,', '->', 'super', '=', '[]', 'self._resource_dict', '=', '{}', 'render', 'self,', 'path:', 'str,', '*', '*', 'kwargs:', 'Any)', '->', 'bytes:', 'set_resources', '**', 'kwargs)', '->', 'str:', 'path', 'self._resource_dict:', 'kwargs)', 'self._resource_dict', 'path]', '=', 'kwargs', 'self._resource_dict', 'path]', '!=', 'kwargs:', '\"set_resources', 'called', '\"', '\"resources', 'the', 'same', 'template\"', '\"\"', 'path,', 'set_resources', '=', 'set_resources,', '*', '*', 'kwargs)', '_get_resources', 'self,', 'key:', 'str)', '->', 'Iterable', 'str', '(r', 'key]', 'r', 'key', 'r)', 'self)', '->', 'str:', 'self._get_resources', 'self)', '->', 'Iterable', 'str', 'result', '=', '[]', 'f', 'self._get_resources', 'f,', '(unicode_type,', 'bytes', 'result.append', 'f)', 'result.extend', 'f)', 'result', 'embedded_css', 'self)', '->', 'str:', 'self._get_resources', '\"embedded_css\"', 'css_files', 'self)', '->', 'Iterable', 'str', 'result', '=', '[]', 'f', 'self._get_resources', '\"css_files\"', 'f,', '(unicode_type,', 'bytes', 'result.append', 'f)', 'result.extend', 'f)', 'result', 'html_head', 'self)', '->', 'str:', 'self._get_resources', '\"html_head\"', 'html_body', 'self)', '->', 'str:', 'self._get_resources', '\"html_body\"', '_UIModuleNamespace', 'object', 'self,', 'ui_modules:', 'Dict', 'str,', 'Type', 'UIModule', '->', '=', 'self.ui_modules', '=', 'ui_modules', '__getitem__', 'self,', 'key:', 'str)', '->', 'Callable', '...,', 'str', 'key,', 'self.ui_modules', 'key', '__getattr__', 'self,', 'key:', 'str)', '->', 'Callable', '...,', 'str', 'self', 'key]', 'e:', 'str', 'e', 'create_signed_value(', 'secret:', '_CookieSecretTypes,', 'name:', 'str,', 'value:', 'Union', 'str,', 'bytes', 'version:', 'Optional', '=', 'clock:', 'Optional', 'Callable', 'float', '=', 'key_version:', 'Optional', '=', '->', 'bytes:', 'version', 'version', '=', 'DEFAULT_SIGNED_VALUE_VERSION', 'clock', 'clock', '=', 'time.time', 'timestamp', '=', 'utf8', 'str', 'clock', 'value', '=', 'utf8', 'value', 'version', '==', '1:', 'secret,', 'dict)', 'signature', '=', '_create_signature_v1', 'secret,', 'name,', 'value,', 'timestamp)', 'value', '=', 'b\"', '|', 'value,', 'timestamp,', 'signature', 'value', 'version', '==', '2:', 's:', 'Union', 'str,', 'bytes', '->', 'bytes:', 'utf8', '\"', '%', 'd', '\"', '%', 'len', 's', '+', 'utf8', 's)', 'to_sign', '=', 'b\"', '|', 'b\"2\",', 'str', 'key_version', '0', 'timestamp', 'name', 'value', 'b\"\",', 'secret,', 'dict', 'key_version', '),', '\"Key', 'version', 'must', 'be', 'set', 'when', 'sign', 'key', 'dict', 'used\"', 'version', '>=', '2,', '\"Version', 'must', 'be', 'at', '2', 'key', 'version', 'secret', '=', 'secret', 'key_version]', 'signature', '=', '_create_signature_v2', 'secret,', 'to_sign)', 'to_sign', '+', 'signature', 'version', '%d\"', '%', 'version)', '_signed_value_version_re', '=', 're.compile', 'rb\"', '^', '1', '-', '9', '0', '-', '9', '*', '\\\\', '|', '.', '*', '$\")', '_get_version', 'value:', 'bytes)', '->', 'm', '=', '_signed_value_version_re.match', 'value)', 'm', 'version', '=', '1', 'version', '=', 'm.group', '1', 'version', '>', '999:', 'version', '=', '1', 'version', '=', '1', 'version', 'decode_signed_value(', 'secret:', '_CookieSecretTypes,', 'name:', 'str,', 'value:', 'Union', 'str,', 'bytes', 'max_age_days:', 'float', '=', '31,', 'clock:', 'Optional', 'Callable', 'float', '=', 'Optional', '=', '->', 'Optional', 'bytes', 'clock', 'clock', '=', 'time.time', '=', 'DEFAULT_SIGNED_VALUE_MIN_VERSION', '>', '2:', '%d\"', '%', 'value:', 'value', '=', 'utf8', 'value)', 'version', '=', '_get_version', 'value)', 'version', '<', 'version', '==', '1:', 'secret,', 'dict)', '_decode_signed_value_v1', 'secret,', 'name,', 'value,', 'max_age_days,', 'clock)', 'version', '==', '2:', '_decode_signed_value_v2', 'secret,', 'name,', 'value,', 'max_age_days,', 'clock)', '_decode_signed_value_v1(', 'secret:', 'Union', 'str,', 'bytes', 'name:', 'str,', 'value:', 'bytes,', 'max_age_days:', 'float,', 'clock:', 'Callable', 'float', '->', 'Optional', 'bytes', 'parts', '=', 'utf8', 'value', '.split', 'b\"', '|', '\")', 'len', 'parts)', '!=', '3:', 'signature', '=', '_create_signature_v1', 'secret,', 'name,', 'parts', '0', 'parts', '1', 'hmac.compare_digest', 'parts', '2', 'signature', '\"Invalid', 'cookie', 'signature', '%r\",', 'value)', 'timestamp', '=', 'parts', '1', 'timestamp', '<', 'clock', '-', 'max_age_days', '*', '86400:', '\"Expired', 'cookie', '%r\",', 'value)', 'timestamp', '>', 'clock', '+', '31', '*', '86400:', '\"Cookie', 'timestamp', 'future;', 'possible', '%r\",', 'value)', 'parts', '1', 'b\"0\"', '\"Tampered', 'cookie', '%r\",', 'value)', 'parts', '0', 'Exception:', '_decode_fields_v2', 'value:', 'bytes)', '->', 'Tuple', 'bytes,', 'bytes,', 'bytes,', 'bytes', '_consume_field', 's:', 'bytes)', '->', 'Tuple', 'bytes,', 'bytes', 'length,', '_,', 'rest', '=', 's.partition', 'b\"', '\")', 'n', '=', 'length)', 'field_value', '=', 'rest', 'n]', 'rest', 'n', 'n', '+', '1]', '!=', 'b\"', '|', '\":', 'v2', 'signed', 'value', 'field\")', 'rest', '=', 'rest', 'n', '+', '1', ':]', 'field_value,', 'rest', 'rest', '=', 'value', '2', 'key_version,', 'rest', '=', '_consume_field', 'rest)', 'timestamp,', 'rest', '=', '_consume_field', 'rest)', 'name_field,', 'rest', '=', '_consume_field', 'rest)', 'value_field,', '=', '_consume_field', 'rest)', 'key_version', 'timestamp,', 'name_field,', 'value_field,', '_decode_signed_value_v2(', 'secret:', '_CookieSecretTypes,', 'name:', 'str,', 'value:', 'bytes,', 'max_age_days:', 'float,', 'clock:', 'Callable', 'float', '->', 'Optional', 'bytes', 'key_version,', 'timestamp_bytes,', 'name_field,', 'value_field,', '=', '_decode_fields_v2', 'value)', '=', 'value', '-len', 'secret,', 'dict', 'secret', '=', 'secret', 'key_version]', 'expected_sig', '=', '_create_signature_v2', 'secret,', 'hmac.compare_digest', 'expected_sig', 'name_field', '!=', 'utf8', 'name', 'timestamp', '=', 'timestamp_bytes)', 'timestamp', '<', 'clock', '-', 'max_age_days', '*', '86400:', 'value_field)', 'Exception:', 'get_signature_key_version', 'value:', 'Union', 'str,', 'bytes', '->', 'Optional', 'value', '=', 'utf8', 'value)', 'version', '=', '_get_version', 'value)', 'version', '<', '2:', 'key_version,', '_,', '_,', '_,', '_', '=', '_decode_fields_v2', 'value)', 'key_version', '_create_signature_v1', 'secret:', 'Union', 'str,', 'bytes', '*parts:', 'Union', 'str,', 'bytes', '->', 'bytes:', '=', 'hmac.new', 'utf8', 'secret', 'digestmod', '=', 'part', 'parts:', 'utf8', 'part', 'utf8', '_create_signature_v2', 'secret:', 'Union', 'str,', 'bytes', 's:', 'bytes)', '->', 'bytes:', '=', 'hmac.new', 'utf8', 'secret', 'digestmod', '=', 'utf8', 's', 'utf8', 'path:', 'str)', '->', 'bool:', 'any', 'x)', 'x', '[\"', '/', '\",', '\"http', '\",', '\"https', '\"']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/tornado/websocket.py",
        "vector": "['abc', 'os', 'sys', 'struct', 'urllib.parse', 'urlparse', 'zlib', 'Future,', 'future_set_result_unless_cancelled', 'utf8,', 'native_str,', 'to_unicode', 'gen,', 'httpclient,', 'httputil', 'IOLoop,', 'PeriodicCallback', 'IOStream', 'gen_log,', 'app_log', 'Resolver', 'simple_httpclient', 'Queue', 'TCPClient', 'TYPE_CHECKING,', 'Any,', 'Optional,', 'Dict,', 'Union,', 'Awaitable,', 'Callable,', 'Tuple,', 'Type,', 'types', 'TracebackType', 'TYPE_CHECKING:', 'Protocol', 'Protocol', 'compress', 'self,', 'data:', 'bytes)', '->', 'bytes:', 'flush', 'self,', 'mode:', '->', 'bytes:', 'Protocol', 'unconsumed_tail', '=', 'b\"\"', 'decompress', 'self,', 'data:', 'bytes,', 'max_length:', '->', 'bytes:', '_WebSocketDelegate', 'Protocol', 'on_ws_connection_close(', 'self,', 'close_code:', 'Optional', '=', 'Optional', 'str]', '=', '->', 'on_message', 'self,', 'message:', 'Union', 'str,', 'bytes', '->', 'Optional', '\"Awaitable', '\"', 'self,', 'data:', 'bytes)', '->', 'on_pong', 'self,', 'data:', 'bytes)', '->', 'self,', 'typ:', 'Optional', 'Type', 'value:', 'Optional', 'tb:', 'Optional', 'TracebackType', '->', '=', '10', '*', '1024', '*', '1024', 'Exception', 'Exception', '_WebSocketParams', 'object', 'self,', 'Optional', 'float]', '=', 'Optional', 'float]', '=', 'max_message_size:', '=', 'compression_options:', 'Optional', 'Dict', 'str,', 'Any', '=', '->', '=', '=', 'self.max_message_size', '=', 'max_message_size', 'self.compression_options', '=', 'compression_options', 'self,', 'application:', 'request:', 'httputil.HTTPServerRequest,', '*', '*', 'kwargs:', 'Any', '->', 'super', 'application,', 'request,', '*', '*', 'kwargs)', 'self.ws_connection', '=', 'self.close_code', '=', '=', 'self._on_close_called', '=', 'get', 'self,', '*args:', 'Any,', '*', '*', 'kwargs:', 'Any)', '->', 'self.open_args', '=', 'args', 'self.open_kwargs', '=', 'kwargs', 'self.request.headers.get', '\"Upgrade\",', '\"\"', '.lower', '!=', '\"websocket\":', 'self.set_status', '400)', 'log_msg', '=', \"'Can\", '\"Upgrade\"', 'only', 'to', '\"WebSocket\".\\'', 'log_msg)', 'gen_log.debug', 'log_msg)', 'headers', '=', 'self.request.headers', 'connection', '=', 'map(', 's:', 's.strip', '.lower', 'headers.get', '\"Connection\",', '\"\"', '.split', '\"', '\")', '\"upgrade\"', 'connection:', 'self.set_status', '400)', 'log_msg', '=', '\\'\"Connection\"', 'must', 'be', '\"Upgrade\".\\'', 'log_msg)', 'gen_log.debug', 'log_msg)', 'self.request.headers:', '=', 'self.request.headers.get', '=', 'self.request.headers.get', '\"Sec', '-', 'Websocket', '-', 'self.set_status', '403)', 'log_msg', '=', '\"Cross', 'websockets', 'allowed\"', 'log_msg)', 'gen_log.debug', 'log_msg)', 'self.ws_connection', '=', 'self.get_websocket_protocol', 'self.ws_connection:', 'self.ws_connection.accept_connection', 'self)', 'self.set_status', '426,', '\"Upgrade', 'Required\")', 'self.set_header', '\"Sec', '-', 'WebSocket', '-', 'Version\",', '\"7,', '8,', '13\")', '@property', 'self)', '->', 'Optional', 'float', '@property', 'self)', '->', 'Optional', 'float', '@property', 'max_message_size', 'self)', '->', '\"websocket_max_message_size\",', 'write_message(', 'self,', 'message:', 'Union', 'bytes,', 'str,', 'Dict', 'str,', 'Any', 'bool', '=', '->', '\"Future', '\":', 'self.ws_connection', 'message,', 'dict', 'message', '=', 'message)', 'self.ws_connection.write_message', 'message,', '=', 'select_subprotocol', 'self,', 'subprotocols:', 'str', '->', 'Optional', 'str', '@property', 'selected_subprotocol', 'self)', '->', 'Optional', 'str', 'self.ws_connection', 'self.ws_connection.selected_subprotocol', 'get_compression_options', 'self)', '->', 'Optional', 'Dict', 'str,', 'Any', 'open', 'self,', '*args:', 'str,', '*', '*', 'kwargs:', 'str)', '->', 'Optional', 'Awaitable', 'on_message', 'self,', 'message:', 'Union', 'str,', 'bytes', '->', 'Optional', 'Awaitable', 'self,', 'data:', 'Union', 'str,', 'bytes]', '=', 'b\"\")', '->', 'data', '=', 'utf8', 'data)', 'self.ws_connection', 'data)', 'on_pong', 'self,', 'data:', 'bytes)', '->', 'self,', 'data:', 'bytes)', '->', 'on_close', 'self)', '->', 'close', 'self,', 'code:', 'Optional', '=', 'Optional', 'str]', '=', '->', 'self.ws_connection:', 'self.ws_connection.close', 'code,', 'self.ws_connection', '=', 'self,', 'str)', '->', 'bool:', '=', 'urlparse', '=', '=', 'host', '=', 'self.request.headers.get', '\"Host\")', '==', 'host', 'self,', 'value:', 'bool)', '->', 'self.ws_connection', 'value)', 'on_connection_close', 'self)', '->', 'self.ws_connection:', 'self.ws_connection.on_connection_close', 'self.ws_connection', '=', 'self._on_close_called:', 'self._on_close_called', '=', 'self.on_close', 'on_ws_connection_close(', 'self,', 'close_code:', 'Optional', '=', 'Optional', 'str]', '=', '->', 'self.close_code', '=', 'close_code', '=', 'self.on_connection_close', 'self)', '->', 'self.get_status', '!=', '101', 'self._on_close_called:', 'super', 'get_websocket_protocol', 'self)', '->', 'Optional', '\"WebSocketProtocol\"', 'websocket_version', '=', 'self.request.headers.get', '\"Sec', '-', 'WebSocket', '-', 'Version\")', 'websocket_version', '(\"7\",', '\"8\",', '\"13\"', 'params', '=', '_WebSocketParams(', '=', '=', 'max_message_size', '=', 'self.max_message_size,', 'compression_options', '=', 'self.get_compression_options', 'WebSocketProtocol13', 'self,', 'params)', '_detach_stream', 'self)', '->', 'IOStream:', 'method', '\"write\",', '\"redirect\",', '\"set_header\",', '\"set_cookie\",', '\"set_status\",', '\"flush\",', ']:', 'setattr', 'self,', 'method,', 'self.detach', '*', 'args:', 'Any,', '*', '*', 'kwargs:', 'Any)', '->', '\"Method', 'Web', 'Sockets\")', 'WebSocketProtocol', 'abc.ABC', 'self,', '\"_WebSocketDelegate\")', '->', '=', 'self.stream', '=', '=', '=', '_run_callback(', 'self,', 'callback:', 'Callable,', '*args:', 'Any,', '*', '*', 'kwargs:', 'Any', '->', '\"Optional', 'Future', 'Any', '\":', 'result', '=', 'callback', '*', 'args,', '*', '*', 'kwargs)', 'Exception:', '*', 'result', 'result', '=', 'result)', 'self.stream', 'self.stream.io_loop.add_future', 'result,', 'f:', 'f.result', 'result', 'on_connection_close', 'self)', '->', 'self)', '->', '=', '=', 'self.stream', 'self.stream.close', 'self.close', '@abc.abstractmethod', 'close', 'self,', 'code:', 'Optional', '=', 'Optional', 'str]', '=', '->', '@abc.abstractmethod', 'self)', '->', 'bool:', '@abc.abstractmethod', 'accept_connection', 'self,', '->', '@abc.abstractmethod', 'write_message(', 'self,', 'message:', 'Union', 'str,', 'bytes,', 'Dict', 'str,', 'Any', 'bool', '=', '->', '\"Future', '\":', '@property', '@abc.abstractmethod', 'selected_subprotocol', 'self)', '->', 'Optional', 'str', '@abc.abstractmethod', 'self,', 'data:', 'bytes)', '->', '@abc.abstractmethod', '_process_server_headers(', 'self,', 'key:', 'Union', 'str,', 'bytes', 'headers:', 'httputil.HTTPHeaders', '->', '@abc.abstractmethod', 'self)', '->', '@abc.abstractmethod', '_receive_frame_loop', 'self)', '->', '@abc.abstractmethod', 'self,', 'x:', 'bool)', '->', 'object', 'self,', 'bool,', 'max_wbits:', 'Optional', 'compression_options:', 'Optional', 'Dict', 'str,', 'Any', '=', '->', 'max_wbits', 'max_wbits', '=', 'zlib.MAX_WBITS', '(8', '<=', 'max_wbits', '<=', 'zlib.MAX_WBITS', '\"Invalid', 'max_wbits', 'value', '%r;', 'allowed', 'range', '8', '-', '%', 'd\",', 'max_wbits,', 'zlib.MAX_WBITS,', 'self._max_wbits', '=', 'max_wbits', 'compression_options', '\"compression_level\"', 'compression_options', '):', 'self._compression_level', '=', 'self._compression_level', '=', 'compression_options', '\"compression_level\"]', 'compression_options', '\"mem_level\"', 'compression_options:', 'self._mem_level', '=', '8', 'self._mem_level', '=', 'compression_options', '\"mem_level\"]', '=', '=', 'self)', '->', 'zlib.compressobj(', 'self._compression_level,', 'zlib.DEFLATED,', '-self._max_wbits,', 'self._mem_level', 'compress', 'self,', 'data:', 'bytes)', '->', 'bytes:', '=', 'data', '=', 'data)', '+', 'zlib.Z_SYNC_FLUSH)', 'b\"\\\\x00\\\\x00\\\\xff\\\\xff\")', 'data', '-', '4]', 'object', 'self,', 'bool,', 'max_wbits:', 'Optional', 'max_message_size:', 'compression_options:', 'Optional', 'Dict', 'str,', 'Any', '=', '->', 'self._max_message_size', '=', 'max_message_size', 'max_wbits', 'max_wbits', '=', 'zlib.MAX_WBITS', '(8', '<=', 'max_wbits', '<=', 'zlib.MAX_WBITS', '\"Invalid', 'max_wbits', 'value', '%r;', 'allowed', 'range', '8', '-', '%', 'd\",', 'max_wbits,', 'zlib.MAX_WBITS,', 'self._max_wbits', '=', 'max_wbits', '=', '=', 'self)', '->', 'zlib.decompressobj', '-', 'self._max_wbits)', 'decompress', 'self,', 'data:', 'bytes)', '->', 'bytes:', '=', 'result', '=', 'data', '+', 'b\"\\\\x00\\\\x00\\\\xff\\\\xff\",', 'self._max_message_size', 'result', 'WebSocketProtocol13', 'WebSocketProtocol', 'FIN', '=', '0x80', 'RSV1', '=', '0x40', 'RSV2', '=', '0x20', 'RSV3', '=', '0x10', 'RSV_MASK', '=', 'RSV1', '|', 'RSV2', '|', 'RSV3', 'OPCODE_MASK', '=', '0x0F', 'stream', '=', 'self,', '\"_WebSocketDelegate\",', 'bool,', 'params:', '_WebSocketParams,', '->', 'self,', '=', 'self.params', '=', 'params', '=', 'self._frame_opcode', '=', '=', '=', 'self._frame_length', '=', 'self._fragmented_message_buffer', '=', 'self._fragmented_message_opcode', '=', '=', 'self._compression_options', '=', 'params.compression_options', '=', '=', 'self._frame_compressed', '=', '=', '0', 'self._message_bytes_out', '=', '0', '=', '0', 'self._wire_bytes_out', '=', '0', '=', '=', '0.0', '=', '0.0', 'self.close_code', '=', '=', '@property', 'selected_subprotocol', 'self)', '->', 'Optional', 'str', 'self._selected_subprotocol', '@selected_subprotocol.setter', 'selected_subprotocol', 'self,', 'value:', 'Optional', 'str', '->', 'self._selected_subprotocol', '=', 'value', 'accept_connection', 'self,', '->', '400)', 'log_msg', '=', '/', 'Invalid', 'WebSocket', 'headers\"', 'log_msg)', 'gen_log.debug', 'log_msg)', 'self._accept_connection', 'gen_log.debug', 'WebSocket', 'request', 'received\",', '=', 'self,', '->', 'fields', '=', '(\"Host\",', '\"Sec', '-', 'Websocket', '-', 'Key\",', '\"Sec', '-', 'Websocket', '-', 'Version\")', 'all', 'map', 'f:', 'f', 'fields', '/', 'Invalid', 'WebSocket', 'headers\")', '@staticmethod', 'compute_accept_value', 'key:', 'Union', 'str,', 'bytes', '->', 'str:', 'sha1', '=', 'sha1.update', 'utf8', 'key', 'sha1.update', 'b\"258EAFA5', '-', 'E914', '-', '47DA', '-', '95CA', '-', 'C5AB0DC85B11\")', 'native_str', 'sha1.digest', '_challenge_response', 'self,', '->', 'str:', 'WebSocketProtocol13.compute_accept_value(', 'str,', '\"Sec', '-', 'Websocket', '-', 'Key\"', '_accept_connection', 'self,', '->', 'subprotocol_header', '=', '\"Sec', '-', 'WebSocket', '-', 'Protocol\")', 'subprotocol_header:', 'subprotocols', '=', '[s.strip', 's', 'subprotocol_header.split', '\"', '\"', 'subprotocols', '=', '[]', 'self.selected_subprotocol', '=', 'subprotocols)', 'self.selected_subprotocol:', 'self.selected_subprotocol', 'subprotocols', '\"Sec', '-', 'WebSocket', '-', 'Protocol\",', 'self.selected_subprotocol)', 'extensions', '=', 'self._parse_extensions_header', 'ext', 'extensions:', 'ext', '0]', '==', '\"permessage', '-', 'self._compression_options', '\"server\",', 'ext', '1', 'self._compression_options)', 'ext', '1]', 'ext', '1', '):', 'ext', '1', '\"Sec', '-', 'WebSocket', '-', 'Extensions\",', 'httputil._encode_header', '\"permessage', '-', 'ext', '1', '\"Content', '-', 'Type\")', '101)', '\"Upgrade\",', '\"websocket\")', '\"Connection\",', '\"Upgrade\")', '\"Sec', '-', 'WebSocket', '-', 'Accept\",', 'self._challenge_response', 'self.stream', '=', 'open_result', '=', '*', '*', '*', 'open_result', 'open_result', 'Exception:', '*', 'self._receive_frame_loop', '_parse_extensions_header(', 'self,', 'headers:', 'httputil.HTTPHeaders', '->', 'Tuple', 'str,', 'Dict', 'str,', 'str', 'extensions', '=', 'headers.get', '\"Sec', '-', 'WebSocket', '-', 'Extensions\",', '\"\")', 'extensions:', '[httputil._parse_header', 'e.strip', 'e', 'extensions.split', '\"', '\"', '[]', '_process_server_headers(', 'self,', 'key:', 'Union', 'str,', 'bytes', 'headers:', 'httputil.HTTPHeaders', '->', 'headers', '\"Upgrade\"', '.lower', '==', '\"websocket\"', 'headers', '\"Connection\"', '.lower', '==', '\"upgrade\"', 'accept', '=', 'self.compute_accept_value', 'key)', 'headers', '\"Sec', '-', 'Websocket', '-', 'Accept\"]', '==', 'accept', 'extensions', '=', 'self._parse_extensions_header', 'headers)', 'ext', 'extensions:', 'ext', '0]', '==', '\"permessage', '-', 'self._compression_options', '\"client\",', 'ext', '1', 'extension', '%r\",', 'ext)', 'self.selected_subprotocol', '=', 'headers.get', '\"Sec', '-', 'WebSocket', '-', 'Protocol\",', 'self,', 'side:', 'str,', 'agreed_parameters:', 'Dict', 'str,', 'Any', 'compression_options:', 'Optional', 'Dict', 'str,', 'Any', '=', '->', 'Dict', 'str,', 'Any', 'options', '=', 'dict(', '=', 'side', '+', '\"_no_context_takeover\")', 'agreed_parameters', 'wbits_header', '=', 'agreed_parameters.get', 'side', '+', 'wbits_header', 'options', '\"max_wbits\"]', '=', 'zlib.MAX_WBITS', 'options', '\"max_wbits\"]', '=', 'wbits_header)', 'options', '\"compression_options\"]', '=', 'compression_options', 'options', 'self,', 'side:', 'str,', 'agreed_parameters:', 'Dict', 'str,', 'Any', 'compression_options:', 'Optional', 'Dict', 'str,', 'Any', '=', '->', 'allowed_keys', '=', 'set(', '\"server_no_context_takeover\",', '\"client_no_context_takeover\",', 'key', 'agreed_parameters:', 'key', 'allowed_keys:', 'compression', 'parameter', '%r\"', '%', 'key)', 'other_side', '=', '\"client\"', '(side', '==', '\"server\")', '\"server\"', '=', '*', '*', 'side,', 'agreed_parameters,', 'compression_options)', '=', 'max_message_size', '=', 'self.params.max_message_size,', '*', '*', 'other_side,', 'agreed_parameters,', 'compression_options', '_write_frame(', 'self,', 'bool,', 'opcode:', 'data:', 'bytes,', 'flags:', '=', '0', '->', '\"Future', '\":', 'data_len', '=', 'len', 'data)', 'opcode', '&', '0x8:', '\"control', 'frames', 'may', 'be', 'fragmented\")', 'data_len', '>', '125:', '\"control', 'frame', 'payloads', 'may', 'exceed', '125', 'bytes\")', '=', 'self.FIN', '=', '0', 'frame', '=', 'struct.pack', '\"B\",', '|', 'opcode', '|', 'flags)', '=', '0x80', '=', '0', 'data_len', '<', '126:', 'frame', '+=', 'struct.pack', '\"B\",', 'data_len', '|', 'data_len', '<=', '0xFFFF:', 'frame', '+=', 'struct.pack', '\"!BH\",', '126', '|', 'data_len)', 'frame', '+=', 'struct.pack', '\"!BQ\",', '127', '|', 'data_len)', '=', '4)', 'data', '=', '+', 'data)', 'frame', '+=', 'data', 'self._wire_bytes_out', '+=', 'len', 'frame)', 'self.stream.write', 'frame)', 'write_message(', 'self,', 'message:', 'Union', 'str,', 'bytes,', 'Dict', 'str,', 'Any', 'bool', '=', '->', '\"Future', '\":', 'opcode', '=', '0x2', 'opcode', '=', '0x1', 'message,', 'dict', 'message', '=', 'message)', 'message', '=', 'message)', 'message,', 'bytes)', 'self._message_bytes_out', '+=', 'len', 'message)', 'flags', '=', '0', 'message', '=', 'message)', 'flags', '|=', 'self.RSV1', 'fut', '=', 'self._write_frame', 'opcode,', 'message,', 'flags', '=', 'flags)', 'wrapper', '->', 'fut', 'wrapper', 'self,', 'data:', 'bytes)', '->', 'data,', 'bytes)', 'self._write_frame', '0x9,', 'data)', '_receive_frame_loop', 'self)', '->', 'self._receive_frame', 'self.close_code,', '_read_bytes', 'self,', 'n:', '->', 'bytes:', 'data', '=', 'self.stream.read_bytes', 'n)', '+=', 'n', 'data', '_receive_frame', 'self)', '->', 'data', '=', 'self._read_bytes', '2)', 'header,', '=', 'struct.unpack', '\"BB\",', 'data)', '=', 'header', '&', 'self.FIN', 'reserved_bits', '=', 'header', '&', 'self.RSV_MASK', 'opcode', '=', 'header', '&', 'self.OPCODE_MASK', '=', 'opcode', '&', '0x8', 'opcode', '!=', '0:', 'self._frame_compressed', '=', 'bool', 'reserved_bits', '&', 'self.RSV1)', 'reserved_bits', '&=', '~self.RSV1', 'reserved_bits:', '=', 'bool', '&', '0x80)', 'payloadlen', '=', '&', '0x7F', 'payloadlen', '>=', '126:', 'payloadlen', '<', '126:', 'self._frame_length', '=', 'payloadlen', 'payloadlen', '==', '126:', 'data', '=', 'self._read_bytes', '2)', 'payloadlen', '=', 'struct.unpack', '\"!H\",', 'data', '0]', 'payloadlen', '==', '127:', 'data', '=', 'self._read_bytes', '8)', 'payloadlen', '=', 'struct.unpack', '\"!Q\",', 'data', '0]', 'new_len', '=', 'payloadlen', 'self._fragmented_message_buffer', 'new_len', '+=', 'len', 'self._fragmented_message_buffer)', 'new_len', '>', 'self.params.max_message_size:', 'self.close', '1009,', '\"message', 'too', 'big\")', '=', 'self._read_bytes', '4)', 'data', '=', 'self._read_bytes', 'payloadlen)', 'data', '=', 'data)', 'opcode', '==', '0:', 'self._fragmented_message_buffer', 'self._fragmented_message_buffer.extend', 'data)', 'opcode', '=', 'self._fragmented_message_opcode', 'data', '=', 'bytes', 'self._fragmented_message_buffer)', 'self._fragmented_message_buffer', '=', 'self._fragmented_message_buffer', 'self._fragmented_message_opcode', '=', 'opcode', 'self._fragmented_message_buffer', '=', 'bytearray', 'data)', '=', 'opcode,', 'data)', 'self,', 'opcode:', 'data:', 'bytes)', '->', '\"Optional', 'Future', '\":', 'self._frame_compressed:', 'data', '=', 'data)', 'self.close', '1009,', '\"message', 'too', 'big', 'after', 'decompression\")', 'opcode', '==', '0x1:', '+=', 'len', 'data)', 'decoded', '=', 'data.decode', '\"utf', '-', '8\")', 'self._run_callback', 'decoded)', 'opcode', '==', '0x2:', '+=', 'len', 'data)', 'self._run_callback', 'data)', 'opcode', '==', '0x8:', '=', 'len', 'data)', '>=', '2:', 'self.close_code', '=', 'struct.unpack', '\"', '>', 'H\",', 'data', '2', '0]', 'len', 'data)', '>', '2:', '=', 'to_unicode', 'data', '2', 'self.close', 'self.close_code)', 'opcode', '==', '0x9:', 'self._write_frame', '0xA,', 'data)', 'self._run_callback', 'data)', 'opcode', '==', '0xA:', '=', 'IOLoop.current', '.time', 'self._run_callback', 'data)', 'close', 'self,', 'code:', 'Optional', '=', 'Optional', 'str]', '=', '->', 'self.stream.closed', 'code', 'code', '=', '1000', 'code', 'close_data', '=', 'b\"\"', 'close_data', '=', 'struct.pack', '\"', '>', 'H\",', 'code)', 'close_data', '+=', 'utf8', 'self._write_frame', '0x8,', 'close_data)', '=', 'self.stream.io_loop.remove_timeout', '=', 'self.stream.close', '=', 'self.stream.io_loop.add_timeout(', 'self.stream.io_loop.time', '+', '5,', '=', 'self)', '->', 'bool:', 'self.stream.closed', '@property', 'self)', '->', 'Optional', 'float', '=', '0', '@property', 'self)', '->', 'Optional', 'float', 'timeout', '=', 'timeout', 'timeout', 'max', '3', '*', '30)', 'self)', '->', '>', '0:', '=', '=', 'IOLoop.current', '.time', '=', 'PeriodicCallback(', '*', '1000', 'self)', '->', 'now', '=', 'IOLoop.current', '.time', '=', 'now', '-', '=', 'now', '-', '<', '2', '*', '>', '):', 'self.close', 'b\"\")', '=', 'now', 'self,', 'x:', 'bool)', '->', 'x)', 'WebSocketClientConnection', 'simple_httpclient._HTTPConnection', 'protocol', '=', 'self,', 'request:', 'httpclient.HTTPRequest,', 'on_message_callback:', 'Optional', 'Callable', 'Union', 'str,', 'bytes', '=', 'compression_options:', 'Optional', 'Dict', 'str,', 'Any', '=', 'Optional', 'float]', '=', 'Optional', 'float]', '=', 'max_message_size:', '=', 'subprotocols:', 'Optional', 'str', '=', 'resolver:', 'Optional', 'Resolver]', '=', '->', 'self.connect_future', '=', 'Future', 'self.read_queue', '=', 'Queue', '1)', 'self.key', '=', '16', 'self._on_message_callback', '=', 'on_message_callback', 'self.close_code', '=', '=', 'self.params', '=', '_WebSocketParams(', '=', '=', 'max_message_size', '=', 'max_message_size,', 'compression_options', '=', 'compression_options,', 'scheme,', 'sep,', 'rest', '=', 'request.url.partition', '\"', '\")', 'scheme', '=', '{\"ws\":', '\"http\",', '\"wss\":', '\"https\"', 'scheme]', 'request.url', '=', 'scheme', '+', 'sep', '+', 'rest', 'request.headers.update(', '\"Upgrade\":', '\"websocket\",', '\"Connection\":', '\"Upgrade\",', '\"Sec', '-', 'WebSocket', '-', 'Key\":', 'self.key,', '\"Sec', '-', 'WebSocket', '-', 'Version\":', '\"13\",', 'subprotocols', 'request.headers', '\"Sec', '-', 'WebSocket', '-', 'Protocol\"]', '=', '\"', 'subprotocols)', 'compression_options', 'request.headers[', '\"Sec', '-', 'WebSocket', '-', 'Extensions\"', '=', '\"permessage', '-', 'request.follow_redirects', '=', 'self.tcp_client', '=', 'TCPClient', 'resolver', '=', 'resolver)', 'super', 'request,', 'self._on_http_response,', '104857600,', 'self.tcp_client,', '65536,', '104857600,', 'self)', '->', 'self.protocol', '\"Unclosed', 'WebSocketClientConnection\",', 'close', 'self,', 'code:', 'Optional', '=', 'Optional', 'str]', '=', '->', 'self.protocol', 'self.protocol.close', 'code,', 'self.protocol', '=', 'on_connection_close', 'self)', '->', 'self.connect_future.done', 'self._on_message', 'self.tcp_client.close', 'super', '.on_connection_close', 'on_ws_connection_close(', 'self,', 'close_code:', 'Optional', '=', 'Optional', 'str]', '=', '->', 'self.close_code', '=', 'close_code', '=', 'self.on_connection_close', '_on_http_response', 'self,', 'response:', 'httpclient.HTTPResponse)', '->', 'self.connect_future.done', '\"Non', '-', 'websocket', 'response\")', 'headers_received(', 'self,', 'Union', 'headers:', 'httputil.HTTPHeaders,', '->', '!=', '101:', 'super', '.headers_received', 'headers)', 'self._timeout', 'self.io_loop.remove_timeout', 'self._timeout)', 'self._timeout', '=', 'self.headers', '=', 'headers', 'self.protocol', '=', 'self.get_websocket_protocol', 'self.protocol._process_server_headers', 'self.key,', 'self.headers)', 'self.protocol.stream', '=', 'self.connection.detach', 'IOLoop.current', '.add_callback', 'self.protocol._receive_frame_loop)', '=', 'future_set_result_unless_cancelled', 'self.connect_future,', 'self)', 'write_message(', 'self,', 'message:', 'Union', 'str,', 'bytes,', 'Dict', 'str,', 'Any', 'bool', '=', '->', '\"Future', '\":', 'self.protocol', '\"Client', 'connection', 'been', 'closed\")', 'self.protocol.write_message', 'message,', '=', 'read_message(', 'self,', 'callback:', 'Optional', 'Callable', '\"Future', 'Union', 'str,', 'bytes', '\"', '=', '->', 'Awaitable', 'Union', 'str,', 'bytes', '=', 'self.read_queue.get', 'callback', 'self.io_loop.add_future', 'callback)', 'on_message', 'self,', 'message:', 'Union', 'str,', 'bytes', '->', 'Optional', 'Awaitable', 'self._on_message', 'message)', '_on_message(', 'self,', 'message:', 'Union', 'str,', 'bytes]', '->', 'Optional', 'Awaitable', 'self._on_message_callback:', 'self._on_message_callback', 'message)', 'self.read_queue.put', 'message)', 'self,', 'data:', 'bytes', '=', 'b\"\")', '->', 'data', '=', 'utf8', 'data)', 'self.protocol', 'data)', 'on_pong', 'self,', 'data:', 'bytes)', '->', 'self,', 'data:', 'bytes)', '->', 'get_websocket_protocol', 'self)', '->', 'WebSocketProtocol:', 'WebSocketProtocol13', 'self,', '=', 'params', '=', 'self.params)', '@property', 'selected_subprotocol', 'self)', '->', 'Optional', 'str', 'self.protocol.selected_subprotocol', 'self,', 'typ:', '\"Optional', 'Type', '\",', 'value:', 'Optional', 'tb:', 'Optional', 'TracebackType', '->', 'typ', 'value', '\"Uncaught', '%s\",', 'value,', '=', 'typ,', 'value,', 'tb', 'websocket_connect(', 'url:', 'Union', 'str,', 'httpclient.HTTPRequest', 'callback:', 'Optional', 'Callable', '\"Future', 'WebSocketClientConnection', '\"', '=', 'connect_timeout:', 'Optional', 'float]', '=', 'on_message_callback:', 'Optional', 'Callable', 'Union', 'str,', 'bytes', '=', 'compression_options:', 'Optional', 'Dict', 'str,', 'Any', '=', 'Optional', 'float]', '=', 'Optional', 'float]', '=', 'max_message_size:', '=', 'subprotocols:', 'Optional', 'str', '=', 'resolver:', 'Optional', 'Resolver]', '=', '->', '\"Awaitable', 'WebSocketClientConnection', '\":', 'url,', 'httpclient.HTTPRequest', 'connect_timeout', 'request', '=', 'url', 'request.headers', '=', 'httputil.HTTPHeaders', 'request.headers)', 'request', '=', 'httpclient.HTTPRequest', 'url,', 'connect_timeout', '=', 'connect_timeout)', 'request', '=', 'httpclient.HTTPRequest,', 'httpclient._RequestProxy', 'request,', 'httpclient.HTTPRequest._DEFAULTS', 'conn', '=', 'WebSocketClientConnection(', 'request,', 'on_message_callback', '=', 'on_message_callback,', 'compression_options', '=', 'compression_options,', '=', '=', 'max_message_size', '=', 'max_message_size,', 'subprotocols', '=', 'subprotocols,', 'resolver', '=', 'resolver,', 'callback', 'IOLoop.current', '.add_future', 'conn.connect_future,', 'callback)', 'conn.connect_future']"
    },
    {
        "link": "https://raw.githubusercontent.com/tornadoweb/tornado/master/tornado/wsgi.py",
        "vector": "['concurrent.futures', 'io', 'BytesIO', 'sys', 'escape', 'httputil', 'IOLoop', 'access_log', 'Tuple,', 'Optional,', 'Callable,', 'Any,', 'Dict,', 'Text', 'types', 'TracebackType', 'Type', '_typeshed.wsgi', 'WSGIApplication', 'WSGIAppType', 'to_wsgi_str', 's:', 'bytes)', '->', 'str:', 's,', 'bytes)', 's.decode', 'object', 'r', 'self,', 'wsgi_application:', '\"WSGIAppType\",', 'Optional', '=', '->', 'self.wsgi_application', '=', 'wsgi_application', '=', '__call__', 'self,', 'request:', 'httputil.HTTPServerRequest)', '->', 'IOLoop.current', '.spawn_callback', 'request)', 'self,', 'request:', 'httputil.HTTPServerRequest)', '->', 'data', '=', '{}', 'response', '=', '[]', 'start_response(', 'status:', 'str,', 'headers:', 'Tuple', 'str,', 'str', 'Optional[', 'Tuple[', '\"Optional', 'Type', '\",', 'Optional', 'Optional', 'TracebackType', '=', '->', 'Callable', 'bytes', 'Any', 'data', '\"status\"]', '=', 'status', 'data', '\"headers\"]', '=', 'headers', 'response.append', 'loop', '=', 'IOLoop.current', 'app_response', '=', 'self.wsgi_application,', 'self.environ', 'request', 'start_response,', 'app_response_iter', '=', 'iter', 'app_response)', 'next_chunk', '->', 'Optional', 'bytes', 'next', 'app_response_iter)', 'StopIteration:', 'chunk', '=', 'next_chunk)', 'chunk', 'response.append', 'chunk)', 'app_response,', '\"close\"', 'app_response.close', 'body', '=', 'response)', 'data:', 'Exception', '\"WSGI', 'app', 'did', 'call', 'start_response\")', 'status_code_str,', '=', 'data', '\"status\"', '.split', '\"', '\",', '1)', 'status_code', '=', 'status_code_str)', 'headers', '=', 'data', '\"headers\"]', 'header_set', '=', 'set', 'k.lower', '(k,', 'v)', 'headers)', 'body', '=', 'escape.utf8', 'body)', 'status_code', '!=', '304:', '\"content', '-', 'length\"', 'header_set:', 'headers.append', '\"Content', '-', 'Length\",', 'str', 'len', 'body', '\"content', '-', 'type\"', 'header_set:', 'headers.append', '\"Content', '-', 'Type\",', '\"text', '/', 'html;', 'charset', '=', 'UTF', '-', '8\"', '\"server\"', 'header_set:', 'headers.append', '\"Server\",', '/', '%', 's\"', '%', '=', '\"HTTP', '/', '1.1\",', 'status_code,', 'header_obj', '=', 'httputil.HTTPHeaders', 'key,', 'value', 'headers:', 'header_obj.add', 'key,', 'value)', 'request.connection', 'request.connection.write_headers', 'header_obj,', 'chunk', '=', 'body)', 'self._log', 'status_code,', 'request)', 'environ', 'self,', 'request:', 'httputil.HTTPServerRequest)', '->', 'Dict', 'Text,', 'Any', '=', 'request.host.split', '\"', '\")', 'len', '==', '2:', 'host', '=', '0]', '=', '1', 'host', '=', 'request.host', '=', '443', 'request.protocol', '==', '\"https\"', '80', 'environ', '=', '\"REQUEST_METHOD\":', 'request.method,', '\"SCRIPT_NAME\":', '\"\",', '\"PATH_INFO\":', 'to_wsgi_str(', 'escape.url_unescape', 'request.path,', '=', 'plus', '=', '),', '\"QUERY_STRING\":', 'request.query,', '\"REMOTE_ADDR\":', 'request.remote_ip,', '\"SERVER_NAME\":', 'host,', '\"SERVER_PORT\":', 'str', '\"SERVER_PROTOCOL\":', 'request.version,', '\"wsgi.version\":', '(1,', '0', '\"wsgi.url_scheme\":', 'request.protocol,', 'BytesIO', 'escape.utf8', 'request.body', 'sys.stderr,', '\"wsgi.multithread\":', '\"wsgi.multiprocess\":', '\"wsgi.run_once\":', '\"Content', '-', 'Type\"', 'request.headers:', 'environ', '\"CONTENT_TYPE\"]', '=', 'request.headers.pop', '\"Content', '-', 'Type\")', '\"Content', '-', 'Length\"', 'request.headers:', 'environ', '\"CONTENT_LENGTH\"]', '=', 'request.headers.pop', '\"Content', '-', 'Length\")', 'key,', 'value', 'request.headers.items', 'environ', '\"HTTP_\"', '+', 'key.replace', '\"', '-', '\",', '\"_\"', '.upper', '=', 'value', 'environ', '_log', 'self,', 'status_code:', 'request:', 'httputil.HTTPServerRequest)', '->', 'status_code', '<', '400:', 'log_method', '=', 'status_code', '<', '500:', 'log_method', '=', 'log_method', '=', 'request_time', '=', '1000.0', '*', 'request.request_time', 'request.method', 'request.uri', 'summary', '=', 'request.method', '+', '\"', '\"', '+', 'request.uri', '+', '\"', '(\"', '+', 'request.remote_ip', '+', '\"', '\"', 'log_method', '\"', '%', 'd', '%s', '%.2fms\",', 'status_code,', 'summary,', 'request_time)', 'HTTPRequest', '=', 'httputil.HTTPServerRequest']"
    },
    {
        "link": "https://raw.githubusercontent.com/tonybeltramelli/pix2code/master/compiler/android-compiler.py",
        "vector": "['__future__', '=', \"'Tony\", 'Beltramelli', '-', \"www.tonybeltramelli.com'\", 'sys', 'os.path', '*', '*', '__name__', '==', 'argv', '=', 'sys.argv', '1', 'length', '=', 'len', 'argv)', 'length', '!=', '0:', '=', 'argv', '0]', 'enough', 'argument', 'supplied', '\")', '-', 'compiler.py', 'file', '>', '\")', 'exit', '0)', 'TEXT_PLACE_HOLDER', '=', '\"', 'TEXT', '\"', 'ID_PLACE_HOLDER', '=', '\"', 'ID', '\"', 'dsl_path', '=', '/', '-', 'dsl', '-', 'compiler', '=', 'Compiler', 'dsl_path)', 'key,', 'value', 'value', '=', 'value.replace', 'TEXT_PLACE_HOLDER,', 'length_text', '=', '5,', 'space_number', '=', '0', 'ID_PLACE_HOLDER)', '!=', '-1:', 'value', '=', 'value.replace', 'ID_PLACE_HOLDER,', '1)', 'value', 'file_uid', '=', '\".\"', 'path', '=', 'file_uid', '=', '\"', 'path,', 'file_uid)', 'output_file_path', '=', '\"', 'path,', 'file_uid)', 'compiler.compile', 'output_file_path,', '=']"
    },
    {
        "link": "https://raw.githubusercontent.com/tonybeltramelli/pix2code/master/compiler/classes/Compiler.py",
        "vector": "['=', \"'Tony\", 'Beltramelli', '-', \"www.tonybeltramelli.com'\", 'json', '*', 'Compiler:', 'self,', 'open', 'data_file:', '=', 'json.load', 'data_file)', '=', '-', 'tag\"]', '=', '-', 'tag\"]', 'self.content_holder', '=', '+', 'self.root', '=', 'Node', '\"body\",', 'self.content_holder)', 'compile', 'self,', 'output_file_path,', '=', 'dsl_file', '=', 'open', 'current_parent', '=', 'self.root', 'token', 'dsl_file:', 'token', '=', 'token.replace', '\"', '\",', '\"\"', '.replace', '\"\\\\n\",', '\"\")', '!=', '-1:', 'token', '=', 'token.replace', '\"\")', 'element', '=', 'Node', 'token,', 'current_parent,', 'self.content_holder)', 'current_parent.add_child', 'element)', 'current_parent', '=', 'element', '!=', '-1:', 'current_parent', '=', 'current_parent.parent', 'tokens', '=', 'token.split', '\"', '\")', 't', 'tokens:', 'element', '=', 'Node', 't,', 'current_parent,', 'self.content_holder)', 'current_parent.add_child', 'element)', 'output_html', '=', 'self.root.render', '=', 'open', 'output_file_path,', \"'w')\", 'output_file:', 'output_file.write', 'output_html)']"
    },
    {
        "link": "https://raw.githubusercontent.com/tonybeltramelli/pix2code/master/compiler/classes/Node.py",
        "vector": "['__future__', '=', \"'Tony\", 'Beltramelli', '-', \"www.tonybeltramelli.com'\", 'Node:', 'self,', 'key,', 'parent_node,', 'content_holder', 'self.key', '=', 'key', 'self.parent', '=', 'parent_node', 'self.children', '=', '[]', 'self.content_holder', '=', 'content_holder', 'add_child', 'self,', 'child', 'self.children.append', 'child)', 'show', 'self', 'self.key)', 'child', 'self.children:', 'child.show', 'render', 'self,', '=', 'content', '=', '\"\"', 'child', 'self.children:', 'content', '+=', 'child.render', 'value', '=', 'self.key]', 'value', '=', 'self.key,', 'value)', 'len', 'self.children)', '!=', '0:', 'value', '=', 'value.replace', 'self.content_holder,', 'content)', 'value']"
    },
    {
        "link": "https://raw.githubusercontent.com/tonybeltramelli/pix2code/master/compiler/classes/Utils.py",
        "vector": "['=', \"'Tony\", 'Beltramelli', '-', \"www.tonybeltramelli.com'\", 'Utils:', '@staticmethod', 'length_text', '=', '10,', 'space_number', '=', '1,', '=', 'results', '=', '[]', 'len', 'results)', '<', 'length_text:', 'char', '=', '26', 'results.append', 'char)', 'results', '0]', '=', 'results', '0', '.upper', 'current_spaces', '=', '[]', 'len', 'current_spaces)', '<', 'space_number:', 'space_pos', '=', '2,', 'length_text', '-', '3)', 'space_pos', 'current_spaces:', 'results', 'space_pos]', '=', '\"', '\"', 'results', 'space_pos', '+', '1]', '=', 'results', 'space_pos', '-', '1', '.upper', 'current_spaces.append', 'space_pos)', 'results)', '@staticmethod', 'get_ios_id', 'length', '=', '10', 'results', '=', '[]', 'len', 'results)', '<', 'length:', 'char', '=', '+', 'results.append', 'char)', 'results', '3]', '=', '\"', '-', '\"', 'results', '6]', '=', '\"', '-', '\"', 'results)', '@staticmethod', 'length', '=', '10', 'results', '=', '[]', 'len', 'results)', '<', 'length:', 'char', '=', 'results.append', 'char)', 'results)']"
    },
    {
        "link": "https://raw.githubusercontent.com/tonybeltramelli/pix2code/master/compiler/classes/__init__.py",
        "vector": "[]"
    },
    {
        "link": "https://raw.githubusercontent.com/tonybeltramelli/pix2code/master/compiler/ios-compiler.py",
        "vector": "['__future__', '=', \"'Tony\", 'Beltramelli', '-', \"www.tonybeltramelli.com'\", 'sys', 'os.path', '*', '*', '__name__', '==', 'argv', '=', 'sys.argv', '1', 'length', '=', 'len', 'argv)', 'length', '!=', '0:', '=', 'argv', '0]', 'enough', 'argument', 'supplied', '\")', '\"ios', '-', 'compiler.py', 'file', '>', '\")', 'exit', '0)', 'TEXT_PLACE_HOLDER', '=', '\"', 'TEXT', '\"', 'ID_PLACE_HOLDER', '=', '\"', 'ID', '\"', 'dsl_path', '=', '/', 'ios', '-', 'dsl', '-', 'compiler', '=', 'Compiler', 'dsl_path)', 'key,', 'value', 'value', '=', 'value.replace', 'TEXT_PLACE_HOLDER,', 'length_text', '=', '6,', 'space_number', '=', '0', 'ID_PLACE_HOLDER)', '!=', '-1:', 'value', '=', 'value.replace', 'ID_PLACE_HOLDER,', 'Utils.get_ios_id', '1)', 'value', 'file_uid', '=', '\".\"', 'path', '=', 'file_uid', '=', '\"', 'path,', 'file_uid)', 'output_file_path', '=', '\"', 'path,', 'file_uid)', 'compiler.compile', 'output_file_path,', '=']"
    },
    {
        "link": "https://raw.githubusercontent.com/tonybeltramelli/pix2code/master/compiler/web-compiler.py",
        "vector": "['__future__', '=', \"'Tony\", 'Beltramelli', '-', \"www.tonybeltramelli.com'\", 'sys', 'os.path', '*', '*', '__name__', '==', 'argv', '=', 'sys.argv', '1', 'length', '=', 'len', 'argv)', 'length', '!=', '0:', '=', 'argv', '0]', 'enough', 'argument', 'supplied', '\")', '\"web', '-', 'compiler.py', '<path>', '<file', 'name', '>', '\")', 'exit', '0)', 'FILL_WITH_RANDOM_TEXT', '=', 'TEXT_PLACE_HOLDER', '=', '\"', '\"', 'dsl_path', '=', '/', 'web', '-', 'dsl', '-', 'compiler', '=', 'Compiler', 'dsl_path)', 'key,', 'value', 'FILL_WITH_RANDOM_TEXT:', '\"btn\")', '!=', '-1:', 'value', '=', 'value.replace', 'TEXT_PLACE_HOLDER,', '\"title\")', '!=', '-1:', 'value', '=', 'value.replace', 'TEXT_PLACE_HOLDER,', 'length_text', '=', '5,', 'space_number', '=', '0', '\"text\")', '!=', '-1:', 'value', '=', 'value.replace', 'TEXT_PLACE_HOLDER,', 'length_text', '=', '56,', 'space_number', '=', '7,', '=', 'value', 'file_uid', '=', '\".\"', 'path', '=', 'file_uid', '=', '\"', 'path,', 'file_uid)', 'output_file_path', '=', '\"', 'path,', 'file_uid)', 'compiler.compile', 'output_file_path,', '=']"
    },
    {
        "link": "https://raw.githubusercontent.com/tonybeltramelli/pix2code/master/model/__init__.py",
        "vector": "[]"
    },
    {
        "link": "https://raw.githubusercontent.com/tonybeltramelli/pix2code/master/model/build_datasets.py",
        "vector": "['__future__', '__future__', '=', \"'Tony\", 'Beltramelli', '-', \"www.tonybeltramelli.com'\", 'os', 'sys', 'shutil', '*', 'argv', '=', 'sys.argv', '1', 'len', 'argv)', '<', '1:', 'enough', 'argument', 'supplied', '\")', 'path>', '6', '>', '\")', 'exit', '0)', '=', 'argv', '0]', '=', '6', 'len', 'argv)', '<', '2', 'argv', '1]', 'TRAINING_SET_NAME', '=', 'EVALUATION_SET_NAME', '=', '\"eval_set\"', 'paths', '=', '[]', 'f', '\".gui\")', '!=', '-1:', 'path_gui', '=', '\"', '/', 'f)', 'file_name', '=', 'f', '\".gui\"', '\"', '/', 'file_name', 'path_img', '=', '\"', '/', 'file_name)', 'paths.append', 'file_name)', 'evaluation_samples_number', '=', 'len', 'paths)', '/', '+', '1)', '=', 'evaluation_samples_number', '*', '+', 'evaluation_samples_number', '==', 'len', 'paths)', 'samples:', 'evaluation', 'samples:', 'evaluation_samples_number', 'paths)', 'eval_set', '=', '[]', '=', '[]', '=', '[]', 'path', 'paths:', '>=', '(3', 'f', '=', 'open', '\"', '/', 'path', \"'r',\", '=', \"'utf\", '-', \"8')\", 'f', '=', 'open', '\"', '/', 'path', \"'r')\", 'f:', 'chars', '=', '\"\"', 'f:', 'chars', '+=', '=', 'chars.replace', '\"', '\",', '\"\"', '.replace', '\"\\\\n\",', '\"\")', '=', \"'utf\", '-', \"8'\", '.hexdigest', 'len', 'eval_set)', '==', 'evaluation_samples_number:', 'path)', '=', 'h', 'h', '=', 'eval_set.append', 'path)', 'path)', 'len', 'eval_set)', '==', 'evaluation_samples_number', 'len', '==', '\"', '/', 'os.path.dirname', 'EVALUATION_SET_NAME', 'os.makedirs', '\"', '/', 'os.path.dirname', 'EVALUATION_SET_NAME', '\"', '/', 'os.path.dirname', 'TRAINING_SET_NAME', 'os.makedirs', '\"', '/', 'os.path.dirname', 'TRAINING_SET_NAME', 'path', 'eval_set:', 'shutil.copyfile', '\"', '/', 'path', '\"', '/', '/', 'os.path.dirname', 'EVALUATION_SET_NAME,', 'path', 'shutil.copyfile', '\"', '/', 'path', '\"', '/', '/', 'os.path.dirname', 'EVALUATION_SET_NAME,', 'path', 'path', 'shutil.copyfile', '\"', '/', 'path', '\"', '/', '/', 'os.path.dirname', 'TRAINING_SET_NAME,', 'path', 'shutil.copyfile', '\"', '/', 'path', '\"', '/', '/', 'os.path.dirname', 'TRAINING_SET_NAME,', 'path', '/', 'os.path.dirname', 'path', '\"Evaluation', '/', 'os.path.dirname', 'path']"
    },
    {
        "link": "https://raw.githubusercontent.com/tonybeltramelli/pix2code/master/model/classes/BeamSearch.py",
        "vector": "['__future__', '=', \"'Tony\", 'Beltramelli', '-', \"www.tonybeltramelli.com'\", 'Node:', 'self,', 'key,', 'value,', 'data', '=', 'self.key', '=', 'key', 'self.value', '=', 'value', 'self.data', '=', 'data', 'self.parent', '=', 'self.root', '=', 'self.children', '=', '[]', 'self.level', '=', '0', 'add_children', 'self,', 'children,', 'beam_width', 'child', 'children:', 'child.level', '=', 'self.level', '+', '1', 'child.value', '=', 'child.value', '*', 'self.value', 'nodes', '=', 'children,', 'key', '=', 'node:', 'node.value,', 'reverse', '=', 'nodes', '=', 'nodes', 'beam_width]', 'node', 'nodes:', 'self.children.append', 'node)', 'node.parent', '=', 'self', 'self.parent', 'self.root', '=', 'self', 'self.root', '=', 'self.parent.root', 'child.root', '=', 'self.root', 'remove_child', 'self,', 'child', 'self.children.remove', 'child)', 'max_child', 'self', 'len', 'self.children)', '==', '0:', 'self', 'max_childs', '=', '[]', 'child', 'self.children:', 'max_childs.append', 'child.max_child', 'nodes', '=', 'max_childs,', 'key', '=', 'child:', 'child.value,', 'reverse', '=', 'nodes', '0]', 'show', 'self,', 'depth', '=', '0', '\"', '\"', '*', 'depth,', 'self.key,', 'self.value,', 'self.level)', 'child', 'self.children:', 'child.show', 'depth', '+', '2)', 'BeamSearch:', 'self,', 'beam_width', '=', '1', 'self.beam_width', '=', 'beam_width', 'self.root', '=', 'self.clear', 'search', 'self', 'result', '=', 'self.root.max_child', 'self.clear', 'self.retrieve_path', 'result)', 'add_nodes', 'self,', 'parent,', 'children', 'parent.add_children', 'children,', 'self.beam_width)', 'self', 'leaves', '=', 'self.get_leaves', 'level', '=', 'leaves', '0', '.level', 'counter', '=', '0', 'leaf', 'leaves:', 'leaf.level', '==', 'level:', 'counter', '+=', '1', 'counter', '==', 'len', 'leaves', 'get_leaves', 'self', 'leaves', '=', '[]', 'self.search_leaves', 'self.root,', 'leaves)', 'leaves', 'search_leaves', 'self,', 'node,', 'leaves', 'child', 'node.children:', 'len', 'child.children)', '==', '0:', 'leaves.append', 'child)', 'self.search_leaves', 'child,', 'leaves)', 'prune_leaves', 'self', 'leaves', '=', 'self.get_leaves', 'nodes', '=', 'leaves,', 'key', '=', 'leaf:', 'leaf.value,', 'reverse', '=', 'nodes', '=', 'nodes', 'self.beam_width', 'node', 'nodes:', 'node.parent.remove_child', 'node)', 'leaves', '=', 'self.get_leaves', 'max_level', '=', '0', 'leaf', 'leaves:', 'leaf.level', '>', 'max_level:', 'max_level', '=', 'leaf.level', 'leaf', 'leaves:', 'leaf.level', '<', 'max_level:', 'leaf.parent.remove_child', 'leaf)', 'clear', 'self', 'self.root', '=', 'self.root', '=', 'Node', '\"root\",', '1.0,', 'retrieve_path', 'self,', 'end', 'path', '=', '[end.key]', 'data', '=', '[end.data]', 'end.parent', 'end', '=', 'end.parent', 'path.append', 'end.key)', 'data.append', 'end.data)', 'result_path', '=', '[]', 'result_data', '=', '[]', 'i', 'range', 'len', 'path)', '-', '2,', '-1,', '-1', 'result_path.append', 'path', 'i', 'result_data.append', 'data', 'i', 'result_path,', 'result_data']"
    },
    {
        "link": "https://raw.githubusercontent.com/tonybeltramelli/pix2code/master/model/classes/Sampler.py",
        "vector": "['__future__', '__future__', '=', \"'Tony\", 'Beltramelli', '-', \"www.tonybeltramelli.com'\", '.Vocabulary', '*', '.BeamSearch', '*', '.Utils', '*', 'Sampler:', 'self,', 'voc_path,', 'output_size,', 'context_length', 'self.voc', '=', 'Vocabulary', 'self.voc.retrieve', 'voc_path)', '=', 'self.output_size', '=', 'output_size', '\"Vocabulary', 'size:', 'self.voc.size', '\"Input', 'shape:', '\"Output', 'size:', 'self.output_size', 'self.context_length', '=', 'context_length', 'predict_greedy', 'self,', 'require_sparse_label', '=', 'sequence_length', '=', '150,', 'verbose', '=', 'current_context', '=', '[self.voc.vocabulary', 'PLACEHOLDER', '*', '(self.context_length', '-', '1)', 'current_context.append', 'self.voc.vocabulary', 'START_TOKEN', 'require_sparse_label:', 'current_context', '=', 'current_context,', 'self.output_size)', 'predictions', '=', 'START_TOKEN', '=', '[]', 'i', 'range', '0,', 'sequence_length', 'verbose:', '/', 'i,', 'sequence_length', '=', 'np.array', 'current_context', 'prediction', '=', 'np.argmax', 'new_context', '=', '[]', 'j', 'range', '1,', 'self.context_length', 'new_context.append', 'current_context', 'j', 'require_sparse_label:', 'sparse_label', '=', 'np.zeros', 'self.output_size)', 'sparse_label', 'prediction]', '=', '1', 'new_context.append', 'sparse_label)', 'new_context.append', 'prediction)', 'current_context', '=', 'new_context', 'predictions', '+=', 'self.voc.token_lookup', 'prediction]', 'self.voc.token_lookup', 'prediction]', '==', 'END_TOKEN:', 'predictions,', 'recursive_beam_search', 'self,', 'current_context,', 'beam,', 'current_node,', 'sequence_length', '=', 'np.array', 'current_context', 'predictions', '=', '[]', 'i', 'range', '0,', 'len', 'predictions.append', 'i,', 'i', 'nodes', '=', '[]', 'i', 'range', '0,', 'len', 'predictions', 'prediction', '=', 'predictions', 'i', '0]', '=', 'predictions', 'i', '1]', '=', 'predictions', 'i', '2]', 'nodes.append', 'Node', 'prediction,', 'beam.add_nodes', 'current_node,', 'nodes)', 'beam.prune_leaves', 'sequence_length', '==', '1', 'self.voc.token_lookup', 'beam.root.max_child', '.key]', '==', 'END_TOKEN:', 'node', 'beam.get_leaves', 'prediction', '=', 'node.key', 'new_context', '=', '[]', 'j', 'range', '1,', 'self.context_length', 'new_context.append', 'current_context', 'j', 'sparse_label', '=', 'np.zeros', 'self.output_size)', 'sparse_label', 'prediction]', '=', '1', 'new_context.append', 'sparse_label)', 'self.recursive_beam_search', 'new_context,', 'beam,', 'node,', 'sequence_length', '-', '1)', 'predict_beam_search', 'self,', 'beam_width', '=', '3,', 'require_sparse_label', '=', 'sequence_length', '=', '150', 'predictions', '=', 'START_TOKEN', '=', '[]', 'current_context', '=', '[self.voc.vocabulary', 'PLACEHOLDER', '*', '(self.context_length', '-', '1)', 'current_context.append', 'self.voc.vocabulary', 'START_TOKEN', 'require_sparse_label:', 'current_context', '=', 'current_context,', 'self.output_size)', 'beam', '=', 'BeamSearch', 'beam_width', '=', 'beam_width)', 'self.recursive_beam_search', 'current_context,', 'beam,', 'beam.root,', 'sequence_length)', 'predicted_sequence,', '=', 'beam.search', 'k', 'range', '0,', 'len', 'predicted_sequence', 'prediction', '=', 'predicted_sequence', 'k]', '=', 'k]', 'predictions', '+=', 'self.voc.token_lookup', 'prediction]', 'predictions,']"
    },
    {
        "link": "https://raw.githubusercontent.com/tonybeltramelli/pix2code/master/model/classes/Utils.py",
        "vector": "['=', \"'Tony\", 'Beltramelli', '-', \"www.tonybeltramelli.com'\", 'numpy', 'np', 'Utils:', '@staticmethod', 'output_size', '=', '[]', 'label', 'sparse_label', '=', 'np.zeros', 'output_size)', 'sparse_label', 'label]', '=', '1', 'sparse_label)', 'np.array', '@staticmethod', 'get_preprocessed_img', 'img_path,', 'image_size', 'cv2', 'img', '=', 'cv2.imread', 'img_path)', 'img', '=', 'cv2.resize', 'img,', '(image_size,', 'image_size', 'img', '=', \"'float32')\", 'img', '/=', '255', 'img', '@staticmethod', 'show', 'image', 'cv2', '\"view\",', 'cv2.WINDOW_AUTOSIZE)', 'cv2.imshow', '\"view\",', 'image)', 'cv2.waitKey', '0)', '\"view\")']"
    },
    {
        "link": "https://raw.githubusercontent.com/tonybeltramelli/pix2code/master/model/classes/Vocabulary.py",
        "vector": "['=', \"'Tony\", 'Beltramelli', '-', \"www.tonybeltramelli.com'\", 'sys', 'numpy', 'np', 'START_TOKEN', '=', '\"', '<', 'START', '>', '\"', 'END_TOKEN', '=', '\"', '<', 'END', '>', '\"', 'PLACEHOLDER', '=', '\"', '\"', 'SEPARATOR', '=', \"'\", '->', \"'\", 'Vocabulary:', 'self', '=', '{}', 'self.vocabulary', '=', '{}', 'self.token_lookup', '=', '{}', 'self.size', '=', '0', 'self.append', 'START_TOKEN)', 'self.append', 'END_TOKEN)', 'self.append', 'PLACEHOLDER)', 'append', 'self,', 'token', 'token', 'self.vocabulary:', 'self.vocabulary', 'token]', '=', 'self.size', 'self.token_lookup', 'self.size]', '=', 'token', 'self.size', '+=', '1', 'self', '>=', '(3', 'items', '=', 'self.vocabulary.items', 'items', '=', 'self.vocabulary.iteritems', 'key,', 'value', 'items:', '=', 'np.zeros', 'self.size)', 'value]', '=', '1', 'key]', '=', 'self', 'len', '==', '0:', '=', '\"\"', '>=', '(3', 'items', '=', 'items', '=', 'key,', 'value', 'items:', '=', 'value,', '=', \"'\", \"',\", '=', 'self.size', '*', 'self.size)', '+=', '\"', 'key,', 'SEPARATOR,', '1', 'len', '-', '1', 'save', 'self,', 'path', 'output_file_name', '=', '\"', '/', 'path)', 'output_file', '=', 'open', 'output_file_name,', \"'w')\", 'output_file.write', 'output_file.close', 'retrieve', 'self,', 'path', '=', 'open', '\"', '/', 'path', \"'r')\", 'buffer', '=', '\"\"', '=', 'len', 'buffer)', '+', 'SEPARATOR)', 'buffer', '+=', 'key', '=', 'buffer', 'value', '=', 'buffer', '+', 'len', 'SEPARATOR', 'value', '=', 'value,', 'sep', '=', \"'\", \"')\", 'key]', '=', 'value', 'self.vocabulary', 'key]', '=', 'np.where', 'value', '==', '1', '0', '0]', 'self.token_lookup', 'np.where', 'value', '==', '1', '0', '0', '=', 'key', 'buffer', '=', '\"\"', 'buffer', '+=', 'self.size', '=', 'len', 'self.vocabulary)']"
    },
    {
        "link": "https://raw.githubusercontent.com/tonybeltramelli/pix2code/master/model/classes/__init__.py",
        "vector": "[]"
    },
    {
        "link": "https://raw.githubusercontent.com/tonybeltramelli/pix2code/master/model/classes/dataset/Dataset.py",
        "vector": "['__future__', '=', \"'Tony\", 'Beltramelli', '-', \"www.tonybeltramelli.com'\", 'os', '*', '*', '*', 'self', '=', 'self.output_size', '=', 'self.ids', '=', '[]', '=', '[]', 'self.partial_sequences', '=', '[]', '=', '[]', 'self.voc', '=', 'Vocabulary', 'self.size', '=', '0', '@staticmethod', 'load_paths_only', 'path', 'data...\")', 'gui_paths', '=', '[]', 'img_paths', '=', '[]', 'f', 'path', '\".gui\")', '!=', '-1:', 'path_gui', '=', '\"', '/', 'path,', 'f)', 'gui_paths.append', 'path_gui)', 'file_name', '=', 'f', '\".gui\"', '\"', '/', 'path,', 'file_name', 'path_img', '=', '\"', '/', 'path,', 'file_name)', 'img_paths.append', 'path_img)', '\"', '/', 'path,', 'file_name', 'path_img', '=', '\"', '/', 'path,', 'file_name)', 'img_paths.append', 'path_img)', 'len', 'gui_paths)', '==', 'len', 'img_paths)', 'gui_paths,', 'img_paths', 'load', 'self,', 'path,', '=', 'data...\")', 'f', 'path', '\".gui\")', '!=', '-1:', 'gui', '=', 'open', '\"', '/', 'path,', 'f', \"'r')\", 'file_name', '=', 'f', '\".gui\"', '\"', '/', 'path,', 'file_name', 'img', '=', 'Utils.get_preprocessed_img', '\"', '/', 'path,', 'file_name', 'IMAGE_SIZE)', 'self.append', 'file_name,', 'gui,', 'img)', '\"', '/', 'path,', 'file_name', 'img', '=', 'np.load', '\"', '/', 'path,', 'file_name', '\"features\"]', 'self.append', 'file_name,', 'gui,', 'img)', 'sparse', '=', 'self.voc)', 'self.partial_sequences', '=', 'self.partial_sequences,', 'self.voc)', 'self.partial_sequences', '=', 'self.partial_sequences,', 'self.voc)', 'self.size', '=', 'len', 'self.ids)', 'self.size', '==', 'len', '==', 'len', 'self.partial_sequences)', '==', 'len', 'self.voc.size', '==', 'len', 'self.voc.vocabulary)', 'size:', 'self.size', '\"Vocabulary', 'size:', 'self.voc.size', '=', '0', '.shape', 'self.output_size', '=', 'self.voc.size', '\"Input', 'shape:', '\"Output', 'size:', 'self.output_size', 'convert_arrays', 'self', '\"Convert', 'arrays...\")', '=', 'np.array', 'self.partial_sequences', '=', 'np.array', 'self.partial_sequences)', '=', 'np.array', 'append', 'self,', 'sample_id,', 'gui,', 'img,', 'to_show', '=', 'to_show:', 'pic', '=', 'img', '*', '255', 'pic', '=', 'np.array', 'pic,', 'dtype', '=', 'Utils.show', 'pic)', 'token_sequence', '=', '[START_TOKEN]', 'gui:', '=', '\"', '\",', '\"', ',\"', '.replace', '\"\\\\n\",', '\"', '\\\\n\")', 'tokens', '=', '\"', '\")', 'token', 'tokens:', 'self.voc.append', 'token)', 'token_sequence.append', 'token)', 'token_sequence.append', 'END_TOKEN)', 'suffix', '=', '[PLACEHOLDER]', '*', 'CONTEXT_LENGTH', 'a', '=', 'np.concatenate', 'suffix,', 'token_sequence', 'j', 'range', '0,', 'len', 'a)', '-', 'CONTEXT_LENGTH', 'context', '=', 'a', 'j', 'j', '+', 'CONTEXT_LENGTH]', 'label', '=', 'a', 'j', '+', 'CONTEXT_LENGTH]', 'self.ids.append', 'sample_id)', 'img)', 'self.partial_sequences.append', 'context)', 'label)', '@staticmethod', 'partial_sequences,', 'voc', 'temp', '=', '[]', 'sequence', 'partial_sequences:', '=', '[]', 'token', 'sequence:', 'voc.vocabulary', 'token', 'temp.append', 'np.array', 'temp', '@staticmethod', 'partial_sequences,', 'voc', 'temp', '=', '[]', 'sequence', 'partial_sequences:', '=', '[]', 'token', 'sequence:', 'token', 'temp.append', 'np.array', 'temp', '@staticmethod', 'voc', 'temp', '=', '[]', 'label', 'temp.append', 'label', 'temp', 'save_metadata', 'self,', 'path', 'np.save', '\"', '/', 'path', 'np.array', 'self.output_size,', 'self.size']"
    },
    {
        "link": "https://raw.githubusercontent.com/tonybeltramelli/pix2code/master/model/classes/dataset/Generator.py",
        "vector": "['__future__', '=', \"'Tony\", 'Beltramelli', '-', \"www.tonybeltramelli.com'\", 'numpy', 'np', '*', '*', '*', '@staticmethod', 'voc,', 'gui_paths,', 'img_paths,', 'batch_size,', '=', 'verbose', '=', 'loop_only_one', '=', 'len', 'gui_paths)', '==', 'len', 'img_paths)', '1:', '=', '[]', 'batch_partial_sequences', '=', '[]', '=', '[]', '=', '0', 'i', 'range', '0,', 'len', 'gui_paths', 'img_paths', 'i', '\".png\")', '!=', '-1:', 'img', '=', 'Utils.get_preprocessed_img', 'img_paths', 'i', 'IMAGE_SIZE)', 'img', '=', 'np.load', 'img_paths', 'i', '\"features\"]', 'gui', '=', 'open', 'gui_paths', 'i', \"'r')\", 'token_sequence', '=', '[START_TOKEN]', 'gui:', '=', '\"', '\",', '\"', ',\"', '.replace', '\"\\\\n\",', '\"', '\\\\n\")', 'tokens', '=', '\"', '\")', 'token', 'tokens:', 'voc.append', 'token)', 'token_sequence.append', 'token)', 'token_sequence.append', 'END_TOKEN)', 'suffix', '=', '[PLACEHOLDER]', '*', 'CONTEXT_LENGTH', 'a', '=', 'np.concatenate', 'suffix,', 'token_sequence', 'j', 'range', '0,', 'len', 'a)', '-', 'CONTEXT_LENGTH', 'context', '=', 'a', 'j', 'j', '+', 'CONTEXT_LENGTH]', 'label', '=', 'a', 'j', '+', 'CONTEXT_LENGTH]', 'img)', 'batch_partial_sequences.append', 'context)', 'label)', '+=', '1', '==', 'batch_size', '(loop_only_one', 'i', '==', 'len', 'gui_paths)', '-', '1', 'verbose:', 'sparse', '=', 'voc)', 'batch_partial_sequences', '=', 'batch_partial_sequences,', 'voc)', 'batch_partial_sequences', '=', 'batch_partial_sequences,', 'voc)', 'verbose:', '\"Convert', 'arrays...\")', '=', 'np.array', 'batch_partial_sequences', '=', 'np.array', 'batch_partial_sequences)', '=', 'np.array', 'verbose:', '\"Yield', 'batch\")', 'batch_partial_sequences', '=', '[]', 'batch_partial_sequences', '=', '[]', '=', '[]', '=', '0']"
    },
    {
        "link": "https://raw.githubusercontent.com/tonybeltramelli/pix2code/master/model/classes/dataset/__init__.py",
        "vector": "[]"
    },
    {
        "link": "https://raw.githubusercontent.com/tonybeltramelli/pix2code/master/model/classes/model/AModel.py",
        "vector": "['=', \"'Tony\", 'Beltramelli', '-', \"www.tonybeltramelli.com'\", 'self,', 'output_size,', 'output_path', '=', '=', 'self.output_size', '=', 'output_size', 'self.output_path', '=', 'output_path', 'self.name', '=', '\"\"', 'save', 'self', '=', 'open', '\"', '/', 'self.output_path,', 'self.name', '\"w\")', 'json_file:', 'json_file.write', '\"', '/', 'self.output_path,', 'self.name', 'load', 'self,', 'name', '=', '\"\"', 'output_name', '=', 'self.name', 'name', '==', '\"\"', 'name', 'open', '\"', '/', 'self.output_path,', 'output_name', '\"r\")', 'json_file:', '=', 'json_file.read', '=', '\"', '/', 'self.output_path,', 'output_name']"
    },
    {
        "link": "https://raw.githubusercontent.com/tonybeltramelli/pix2code/master/model/classes/model/Config.py",
        "vector": "['=', \"'Tony\", 'Beltramelli', '-', \"www.tonybeltramelli.com'\", 'CONTEXT_LENGTH', '=', '48', 'IMAGE_SIZE', '=', '256', 'BATCH_SIZE', '=', '64', 'EPOCHS', '=', '10', 'STEPS_PER_EPOCH', '=', '72000']"
    },
    {
        "link": "https://raw.githubusercontent.com/tonybeltramelli/pix2code/master/model/classes/model/__init__.py",
        "vector": "[]"
    },
    {
        "link": "https://raw.githubusercontent.com/tonybeltramelli/pix2code/master/model/classes/model/pix2code.py",
        "vector": "['__future__', '=', \"'Tony\", 'Beltramelli', '-', \"www.tonybeltramelli.com'\", 'Input,', 'Dense,', 'Dropout,', '\\\\', 'LSTM,', 'concatenate,', '\\\\', 'Conv2D,', 'Flatten', 'Sequential,', 'RMSprop', '*', '.Config', '*', '*', 'pix2code', 'self,', 'output_size,', 'output_path', 'self,', 'output_size,', 'output_path)', 'self.name', '=', '\"pix2code\"', '=', 'Sequential', 'Conv2D', '32,', '(3,', '3', '=', \"'valid',\", 'activation', '=', \"'relu',\", '=', 'Conv2D', '32,', '(3,', '3', '=', \"'valid',\", 'activation', '=', \"'relu'\", 'pool_size', '=', '2,', '2', 'Dropout', '0.25', 'Conv2D', '64,', '(3,', '3', '=', \"'valid',\", 'activation', '=', \"'relu'\", 'Conv2D', '64,', '(3,', '3', '=', \"'valid',\", 'activation', '=', \"'relu'\", 'pool_size', '=', '2,', '2', 'Dropout', '0.25', 'Conv2D', '128,', '(3,', '3', '=', \"'valid',\", 'activation', '=', \"'relu'\", 'Conv2D', '128,', '(3,', '3', '=', \"'valid',\", 'activation', '=', \"'relu'\", 'pool_size', '=', '2,', '2', 'Dropout', '0.25', 'Flatten', 'Dense', '1024,', 'activation', '=', \"'relu'\", 'Dropout', '0.3', 'Dense', '1024,', 'activation', '=', \"'relu'\", 'Dropout', '0.3', 'CONTEXT_LENGTH', '=', 'Input', 'shape', '=', 'encoded_image', '=', '=', 'Sequential', 'LSTM', '128,', '=', '=', 'CONTEXT_LENGTH,', 'output_size', 'LSTM', '128,', '=', '=', 'Input', 'shape', '=', 'CONTEXT_LENGTH,', 'output_size', 'encoded_text', '=', 'decoder', '=', 'concatenate', 'encoded_image,', 'encoded_text', 'decoder', '=', 'LSTM', '512,', '=', 'decoder)', 'decoder', '=', 'LSTM', '512,', '=', 'decoder)', 'decoder', '=', 'Dense', 'output_size,', 'activation', '=', \"'softmax'\", 'decoder)', '=', '=', 'outputs', '=', 'decoder)', 'optimizer', '=', 'RMSprop', 'lr', '=', '0.0001,', 'clipvalue', '=', '1.0)', 'loss', '=', 'optimizer', '=', 'optimizer)', 'fit', 'self,', 'images,', 'partial_captions,', 'images,', 'partial_captions', 'shuffle', '=', 'epochs', '=', 'EPOCHS,', 'batch_size', '=', 'BATCH_SIZE,', 'verbose', '=', '1)', 'self.save', 'self,', 'steps_per_epoch', 'steps_per_epoch', '=', 'steps_per_epoch,', 'epochs', '=', 'EPOCHS,', 'verbose', '=', '1)', 'self.save', 'predict', 'self,', 'image,', 'partial_caption', 'image,', 'partial_caption', 'verbose', '=', '0', '0]', 'predict_batch', 'self,', 'images,', 'partial_captions', 'images,', 'partial_captions', 'verbose', '=', '1)']"
    },
    {
        "link": "https://raw.githubusercontent.com/tonybeltramelli/pix2code/master/model/convert_imgs_to_arrays.py",
        "vector": "['__future__', '__future__', '=', \"'Tony\", 'Beltramelli', '-', \"www.tonybeltramelli.com'\", 'os', 'sys', 'shutil', '*', '*', 'argv', '=', 'sys.argv', '1', 'len', 'argv)', '<', '2:', 'enough', 'argument', 'supplied', '\")', '\"convert_imgs_to_arrays.py', 'path>', '<output', 'path', '>', '\")', 'exit', '0)', '=', 'argv', '0]', 'output_path', '=', 'argv', '1]', 'output_path', 'os.makedirs', 'output_path)', 'images', 'to', 'numpy', 'arrays...\")', 'f', '\".png\")', '!=', '-1:', 'img', '=', 'Utils.get_preprocessed_img', '\"', '/', 'f', 'IMAGE_SIZE)', 'file_name', '=', 'f', '\".png\"', 'np.savez_compressed', '\"', '/', 'output_path,', 'file_name', 'features', '=', 'img)', 'retrieve', '=', 'np.load', '\"', '/', 'output_path,', 'file_name', '\"features\"]', 'np.array_equal', 'img,', 'retrieve)', 'shutil.copyfile', '\"', '/', 'file_name', '\"', '/', 'output_path,', 'file_name', '\"Numpy', 'arrays', 'saved', 'output_path']"
    },
    {
        "link": "https://raw.githubusercontent.com/tonybeltramelli/pix2code/master/model/generate.py",
        "vector": "['__future__', '__future__', '=', \"'Tony\", 'Beltramelli', '-', \"www.tonybeltramelli.com'\", 'os', 'sys', '*', '*', 'argv', '=', 'sys.argv', '1', 'len', 'argv)', '<', '4:', 'enough', 'argument', 'supplied', '\")', '\"generate.py', 'weights', 'path>', 'name>', 'image>', '<output', 'path>', '<search', 'method', 'greedy', '>', '\")', 'exit', '0)', '=', 'argv', '0]', '=', 'argv', '1]', '=', 'argv', '2]', 'output_path', '=', 'argv', '3]', 'search_method', '=', '\"greedy\"', 'len', 'argv)', '<', '5', 'argv', '4]', '=', 'np.load', '\"', '/', '=', '0]', 'output_size', '=', '1]', '=', 'pix2code', 'output_size,', 'sampler', '=', 'Sampler', 'output_size,', 'CONTEXT_LENGTH)', 'f', '\".png\")', '!=', '-1:', 'evaluation_img', '=', 'Utils.get_preprocessed_img', '\"', '/', 'f', 'IMAGE_SIZE)', 'file_name', '=', 'f', '\".png\"', 'search_method', '==', '\"greedy\":', 'result,', '_', '=', 'sampler.predict_greedy', 'np.array', 'evaluation_img', '\"Result', 'greedy:', 'result', 'beam_width', '=', 'search_method)', '\"Search', 'beam', 'width:', 'beam_width', 'result,', '_', '=', 'sampler.predict_beam_search', 'np.array', 'evaluation_img', 'beam_width', '=', 'beam_width)', '\"Result', 'beam:', 'result', 'open', '\"', '/', 'output_path,', 'file_name', \"'w')\", 'out_f:', 'out_f.write', 'result.replace', 'START_TOKEN,', '\"\"', '.replace', 'END_TOKEN,', '\"\"']"
    },
    {
        "link": "https://raw.githubusercontent.com/tonybeltramelli/pix2code/master/model/sample.py",
        "vector": "['__future__', '__future__', '=', \"'Tony\", 'Beltramelli', '-', \"www.tonybeltramelli.com'\", 'sys', 'os.path', '*', '*', 'argv', '=', 'sys.argv', '1', 'len', 'argv)', '<', '4:', 'enough', 'argument', 'supplied', '\")', '\"sample.py', 'weights', 'path>', 'name>', 'image>', '<output', 'path>', '<search', 'method', 'greedy', '>', '\")', 'exit', '0)', '=', 'argv', '0]', '=', 'argv', '1]', '=', 'argv', '2]', 'output_path', '=', 'argv', '3]', 'search_method', '=', '\"greedy\"', 'len', 'argv)', '<', '5', 'argv', '4]', '=', 'np.load', '\"', '/', '=', '0]', 'output_size', '=', '1]', '=', 'pix2code', 'output_size,', 'sampler', '=', 'Sampler', 'output_size,', 'CONTEXT_LENGTH)', 'file_name', '=', '\".\"', 'evaluation_img', '=', 'Utils.get_preprocessed_img', 'IMAGE_SIZE)', 'search_method', '==', '\"greedy\":', 'result,', '_', '=', 'sampler.predict_greedy', 'np.array', 'evaluation_img', '\"Result', 'greedy:', 'result', 'beam_width', '=', 'search_method)', '\"Search', 'beam', 'width:', 'beam_width', 'result,', '_', '=', 'sampler.predict_beam_search', 'np.array', 'evaluation_img', 'beam_width', '=', 'beam_width)', '\"Result', 'beam:', 'result', 'open', '\"', '/', 'output_path,', 'file_name', \"'w')\", 'out_f:', 'out_f.write', 'result.replace', 'START_TOKEN,', '\"\"', '.replace', 'END_TOKEN,', '\"\"']"
    },
    {
        "link": "https://raw.githubusercontent.com/tonybeltramelli/pix2code/master/model/train.py",
        "vector": "['__future__', '__future__', '=', \"'Tony\", 'Beltramelli', '-', \"www.tonybeltramelli.com'\", 'tf', 'sess', '=', 'tf.Session', 'config', '=', 'tf.ConfigProto', 'log_device_placement', '=', 'sys', '*', '*', 'run', 'output_path,', '=', '=', '1234)', '=', '=', 'output_path)', 'output_path)', '=', 'output_size', '=', 'len', 'len', 'len', 'gui_paths,', 'img_paths', '=', '=', 'output_size', '=', 'steps_per_epoch', '=', '/', 'BATCH_SIZE', 'voc', '=', 'Vocabulary', 'voc.retrieve', 'output_path)', '=', 'voc,', 'gui_paths,', 'img_paths,', 'batch_size', '=', 'BATCH_SIZE,', '=', '=', 'pix2code', 'output_size,', 'output_path)', 'steps_per_epoch', '=', 'steps_per_epoch)', '__name__', '==', 'argv', '=', 'sys.argv', '1', 'len', 'argv)', '<', '2:', 'enough', 'argument', 'supplied', '\")', 'path>', '<output', 'path>', '0', '>', 'weights', '(optional', '>', '\")', 'exit', '0)', '=', 'argv', '0]', 'output_path', '=', 'argv', '1]', '=', 'len', 'argv)', '<', '3', 'argv', '2', '==', '1', '=', 'len', 'argv)', '<', '4', 'argv', '3]', 'run', 'output_path,', '=', '=']"
    },
    {
        "link": "https://raw.githubusercontent.com/mps-youtube/yewtube/master/doc/conf.py",
        "vector": "['sys', 'os', 'extensions', '=', 'templates_path', '=', \"['_templates']\", 'source_suffix', '=', \"'.rst'\", '=', 'project', '=', \"'mps_youtube'\", 'copyright', '=', \"'2016,\", 'mps', '-', 'youtube', \"developers'\", '=', \"'mps\", '-', 'youtube', \"developers'\", 'version', '=', \"''\", '=', \"''\", 'language', '=', \"'en'\", 'exclude_patterns', '=', \"['_build',\", \"'Thumbs.db',\", 'pygments_style', '=', '=', 'html_theme', '=', 'html_theme_path', '=', 'html_static_path', '=', \"['_static']\", '=', \"'mps_youtubedoc'\", 'latex_elements', '=', 'latex_documents', '=', \"'mps_youtube.tex',\", \"'mps\\\\\\\\_youtube\", \"Documentation',\", \"'manual'\", 'man_pages', '=', \"'mps_youtube',\", \"'mps_youtube\", \"Documentation',\", '1)', '=', \"'mps_youtube',\", \"'mps_youtube\", \"Documentation',\", \"'mps_youtube',\", \"'One\", 'description', 'of', \"project.',\", 'epub_title', '=', 'project', '=', '=', 'epub_copyright', '=', 'copyright', 'epub_exclude_files', '=', \"['search.html']\"]"
    },
    {
        "link": "https://raw.githubusercontent.com/mps-youtube/yewtube/master/docs/gen_ref_nav.py",
        "vector": "['pathlib', 'Path', 'mkdocs_gen_files', 'nav', '=', 'mkdocs_gen_files.Nav', 'skip_files', '=', '(Path', '\"mps_youtube\")', '/', '\"config.py\"', '(Path', '\"mps_youtube\")', '/', 'skip_files.extend', 'Path', '\"mps_youtube\")', '/', '\"test\"', '.glob', '\"', '*', '.py\"', 'path', 'Path', '\"mps_youtube\"', '.glob', '\"', '**', '/', '*', '.py\"', 'path', 'skip_files:', 'module_path', '=', '\"\")', 'doc_path', '=', 'path.relative_to', '\"mps_youtube\"', '\".md\")', 'full_doc_path', '=', 'Path', '\"reference\",', 'doc_path)', 'parts', '=', 'module_path.parts)', 'parts', '-', '1]', '=', 'f\"', 'parts', '-', '1', '.py\"', 'nav', 'parts]', '=', 'doc_path', 'mkdocs_gen_files.open', 'full_doc_path,', '\"w\")', 'fd:', 'ident', '=', 'module_path.parts)', '\"', '\"', '+', 'ident,', 'file', '=', 'fd)', 'mkdocs_gen_files.set_edit_path', 'full_doc_path,', 'path)', 'mkdocs_gen_files.open', '\"reference', '/', 'SUMMARY.md\",', '\"w\")', 'nav_file:', 'nav.build_literate_nav']"
    },
    {
        "link": "https://raw.githubusercontent.com/mps-youtube/yewtube/master/mps_youtube/__init__.py",
        "vector": "['pkg_resources', '__version__', '=', 'next', 'p.version', 'p', 'p.project_name.lower', '==', \"'yewtube'\", '\"unable', 'to', '=', '__license__', '=', '\"GPLv3\"', '__url__', '=', '\"https', '/', '/', 'github.com', '/', '/', 'yewtube\"']"
    },
    {
        "link": "https://raw.githubusercontent.com/mps-youtube/yewtube/master/mps_youtube/c.py",
        "vector": "['os', 're', 'sys', 'white', '=', '\"\\\\x1b', '%', 'sm\"', '%', '0', 'ul', '=', '\"\\\\x1b', '%', 'sm\"', '*', '2', '%', '(2,', '4)', 'os.getenv', \"'NO_COLOR'\", 'ul', '+=', '\"\\\\x1b', '%', '33m\"', 'cols', '=', '[\"\\\\x1b', '%', 'sm\"', '%', 'n', 'n', 'range', '91,', '96', 'red,', 'green,', 'yellow,', 'blue,', '=', '[\"\"', '*', '5', 'os.getenv', \"'NO_COLOR')\", 'cols', 'ul', '=', 'red', '=', 'green', '=', 'yellow', '=', 'blue', '=', '=', 'white', '=', '\"\"', 'r,', 'g,', 'y,', 'b,', 'p,', 'w', '=', 'red,', 'green,', 'yellow,', 'blue,', 'white', 'ansirx', '=', 're.compile', \"r'\\\\x1b\\\\\", '\\\\d', '*', \"m',\", 're.UNICODE)', 'c', 'colour,', 'text', 'colours', '=', \"{'r':\", 'r,', \"'g':\", 'g,', \"'y':\", 'y,', \"'b'\", 'b,', \"'p'\", 'p}', 'colours', 'colour]', '+', 'text', '+', 'w', 'charcount', 's', 'len', 'ansirx.sub', \"'',\", 's']"
    },
    {
        "link": "https://raw.githubusercontent.com/mps-youtube/yewtube/master/mps_youtube/cache.py",
        "vector": "['os', 'pickle', '.', 'g,', 'c,', 'streams', '.util', 'dbg', 'CACHE_VERSION', '=', '1', 'load', 'g.CACHEFILE', 'open', 'g.CACHEFILE,', '\"rb\")', 'cf:', 'cached', '=', 'pickle.load', 'cf)', 'version', '=', 'cached.get', \"'version')\", \"'streams'\", 'cached:', 'version', 'version', '>=', '1:', 'g.streams', '=', 'cached', \"'streams']\", 'g.username_query_cache', '=', 'cached', \"'userdata']\", 'g.streams', '=', 'cached', \"'pafy'\", 'cached:', 'dbg', 'c.g', '+', '\"', '%', 's', 'cached', 'streams', '%', 's\",', 'str', 'len', 'g.streams', 'c.w)', 'dbg', 'c.r', '+', '\"Cache', 'file', 'failed', 'to', 'open\"', '+', 'c.w)', 'streams.prune', 'save', 'caches', '=', 'dict(', 'version', '=', 'CACHE_VERSION,', 'streams', '=', 'g.streams,', 'userdata', '=', 'g.username_query_cache', 'open', 'g.CACHEFILE,', '\"wb\")', 'cf:', 'pickle.dump', 'caches,', 'cf,', 'protocol', '=', '2)', 'dbg', 'c.p', '+', '\"saved', 'cache', 'file:', '\"', '+', 'g.CACHEFILE', '+', 'c.w)']"
    },
    {
        "link": "https://raw.githubusercontent.com/mps-youtube/yewtube/master/mps_youtube/commands/__init__.py",
        "vector": "['collections', 're', '..', 'g', 'completer', '=', 'collections.namedtuple', \"'regex\", 'usage', \"function')\", 'WORD', '=', \"r'\", '^', '\\\\W\\\\d', '-', '\\\\w\\\\s', '100', \"'\", 'RS', '=', \"r'\", '?', '?', 'repeat', '|', 'shuffle', '|', '-', 'avfw', '\\\\s', '*', \"'\", 'PL', '=', \"r'\\\\S\", '*', '?', '?', 'RD', '|', 'PL', '|', 'LL', '|', 'UU', '|', 'FL', '|', 'OL', '-', '_0', '-', '9a', '-', 'zA', '-', 'Z', '+', '\\\\s', '*', \"'\", 'regex,', 'completer.add_cmd', 'function', 'cmd', '=', 're.compile', 'regex', 'function)', 'cmd)', 'function', '.', 'download,', 'search,', 'album_search,', 'config,', '.', 'play,']"
    },
    {
        "link": "https://raw.githubusercontent.com/mps-youtube/yewtube/master/mps_youtube/commands/album_search.py",
        "vector": "['re', 'time', 'urllib.request', 'build_opener', 'urllib.parse', 'urlencode', 'xml.etree', 'ElementTree', 'ET', '..', 'c,', 'g,', 'screen,', '__version__,', '__url__,', 'config,', 'util,', 'pafy', '..', 'content', 'content_py', '.', '.search', 'show_message', 'message,', 'col', '=', 'c.r,', 'update', '=', 'g.content', '=', 'g.message', '=', 'col', '+', 'message', '+', 'c.w', 'update:', 'screen.update', '_do_query', 'url,', 'query,', 'err', '=', \"'query\", \"failed',\", '=', 'ua', '=', '\"mps', '-', 'youtube', '/', '%', 's', '%s', ')\"', '%', '(__version__,', '__url__)', 'mpsyt_opener', '=', 'build_opener', 'mpsyt_opener.addheaders', '=', \"'User\", '-', \"agent',\", 'ua', 'query', '=', 'k,', 'query', 'k', 'k', 'query.keys', 'url', '=', '\"', '%', 's?', '%', 's\"', '%', '(url,', 'urlencode', 'query', 'wdata', '=', 'mpsyt_opener.open', 'url', '.read', '.decode', 'e:', 'g.message', '=', '\"', '%', 's:', '%s', '%', 's', '\"', '%', '(err,', 'e,', 'url)', 'g.content', '=', 'content_py.logo', 'c.r)', 'wdata', '(wdata,', '_best_song_match', 'songs,', 'title,', 'duration,', 'titleweight,', 'durationweight', 'seqmatch', '=', 'variance', 'a,', 'b', 'float', 'abs', 'a', '-', 'b', '/', 'max', 'a,', 'b)', '=', '[]', '=', '\"music', 'video', 'lyrics', 'new', 'lyrics', 'video', 'audio\".split', 'extra', '=', '\"official', 'vevo\".split', 'song', 'songs:', 'dur,', 'tit', '=', 'song.length', 'song.title', 'util.dbg', '\"Title:', '%s,', 'Duration:', '%s\",', 'tit,', 'dur)', 'extra:', 'tit.lower', 'title.lower', 'pattern', '=', 're.compile', 're.I)', 'tit', '=', 'pattern.sub', '\"\",', 'tit)', 'tit.lower', 'title.lower', 'pattern', '=', 're.compile', 're.I)', 'tit', '=', 'pattern.sub', '\"\",', 'tit)', 'replacechars', '=', 're.compile', 'r\"', '\\\\', '\\\\', '\\\\', '\\\\', '\\\\', '-', '\")', 'tit', '=', 'replacechars.sub', '\"', '\",', 'tit)', 'multiple_spaces', '=', 're.compile', 'r\"', '\\\\s', '\\\\s', '*', '\")', 'tit', '=', 'multiple_spaces.sub', 'r\"\\\\1\",', 'tit)', '=', 'seqmatch', 'title.lower', 'tit.lower', '.ratio', '=', '1', '-', 'variance', 'duration,', 'dur)', 'util.dbg', '\"Title', '%s,', 'Duration', '%s\",', '=', '*', 'durationweight', '+', '*', 'titleweight', 'song', 'best_song', '=', 'max', 'key', '=', 'x:', 'x', '0', '=', '100', '*', 'best_song,', '_match_tracks', 'title,', 'mb_tracks', 'util.dbg', '%s\",', 'util.dbg', '\"title', '%s\",', 'title)', '=', 'c.g', '+', 'title', '+', 'c.w,', 'c.g', '+', '+', 'c.w', '%s', 'by', '%s\\\\n\\\\n\"', '%', 'dtime', 'x', 'time.strftime', \"'\", '%', 'M', '%', \"S',\", 'time.gmtime', 'x', 'track', 'mb_tracks:', 'ttitle', '=', 'track', \"'title']\", 'length', '=', 'track', \"'length']\", '\"Search', '%s', '%', 's', '-', '%s', '%', 's', '-', '%s\"', '%', '(c.y,', 'ttitle,', 'c.w,', 'dtime', 'length', 'q', '=', '\"', '%', 's', '%s\"', '%', 'ttitle)', 'w', '=', 'q', '=', 'ttitle', '==', '\"Various', 'q', 'query', '=', 'w', 'util.dbg', 'query)', 'wdata', '=', 'pafy.search_videos', 'q,', 'config.PAGES.get', 'results', '=', 'wdata)', 'results:', 'c.r', '+', 'matched', '\\\\n\"', '+', 'c.w)', 's,', '=', '_best_song_match(', 'results,', '+', '\"', '\"', '+', 'ttitle,', 'length,', '.5,', '.5)', 'cc', '=', 'c.g', '>', '85', 'c.y', 'cc', '=', 'c.r', '<', '75', 'cc', '\"Matched:', '%s', '%', 's', '%', 's', '-', '%s', '\\\\n', '%', 'sMatch', 'confidence:', '\"', '\"', '%', 's', '%', 's', '\\\\n\"', '%', '(c.y,', 's.title,', 'c.w,', 'util.fmt_time', 's.length', 'cc,', 'c.w', 's', '_get_mb_tracks', 'albumid', 'ns', '=', \"{'mb':\", \"'http\", '/', '/', '/', 'ns', '/', 'mmd', '-', '2.0', 'url', '=', '\"http', '/', '/', '/', 'ws', '/', '2', '/', '/', '\"', '+', 'albumid', 'query', '=', 'wdata', '=', '_do_query', 'url,', 'query,', 'err', '=', \"'album\", 'search', 'wdata:', 'root', '=', 'wdata)', '=', '\".', '/', 'mb', '/', 'mb', 'medium', '-', '/', 'mb', 'medium', '/', 'mb', 'track', '-', 'namespaces', '=', 'ns)', 'mb_songs', '=', '\"mb', 'track\",', 'namespaces', '=', 'ns)', 'tracks', '=', '[]', 'path', '=', '\".', '/', 'mb', '/', 'mb', '\"', 'track', 'mb_songs:', 'title,', 'length,', 'rawlength', '=', '\"unknown\",', '0,', '0', 'title', '=', 'path', '+', '\"title\",', 'namespaces', '=', 'ns', '.text', 'rawlength', '=', 'path', '+', '\"length\",', 'namespaces', '=', 'ns', '.text', 'length', '=', 'round', 'float', 'rawlength)', '/', '1000', 'found\")', 'tracks.append', 'dict', 'title', '=', 'title,', 'length', '=', 'length,', 'rawlength', '=', 'rawlength', 'tracks', '_get_mb_album', 'albumname,', '*', '*', 'kwa', 'url', '=', '\"http', '/', '/', '/', 'ws', '/', '2', '/', '/', '\"', 'qargs', '=', 'dict(', '=', '\\'\"', '%', 's\"\\'', '%', 'albumname,', 'primarytype', '=', 'kwa.get', '\"primarytype\",', '\"album\"', 'status', '=', 'kwa.get', '\"status\",', '\"official\"', 'qargs.update', 'k:', '\\'\"', '%', 's\"\\'', '%', 'v', 'k,', 'v', 'kwa.items', 'qargs', '=', '[\"', '%', 's', '%', 's\"', '%', 'item', 'item', 'qargs.items', 'qargs', '=', '{\"query\":', '\"', 'AND', 'qargs', 'g.message', '=', '\"Album', 'search', \"'\", '%', 's', '%', 's', '%', 's\\'\"', '%', '(c.y,', 'albumname,', 'c.w)', 'wdata', '=', '_do_query', 'url,', 'qargs)', 'wdata:', 'ns', '=', \"{'mb':\", \"'http\", '/', '/', '/', 'ns', '/', 'mmd', '-', '2.0', 'root', '=', 'wdata)', '=', '\"mb', '-', 'namespaces', '=', 'ns)', \"'count'\", '==', '0:', 'album', '=', '\"mb', 'namespaces', '=', 'ns)', '=', '\".', '/', 'mb', '-', 'credit', '/', 'mb', 'name', '-', 'credit', '/', 'mb', 'namespaces', '=', 'ns', '\"mb', 'name\",', 'namespaces', '=', 'ns', '.text', 'title', '=', '\"mb', 'title\",', 'namespaces', '=', 'ns', '.text', 'aid', '=', 'album.get', \"'id')\", 'dict', '=', 'title', '=', 'title,', 'aid', '=', 'aid)', \"r'album\\\\s\", '*', '.', '0', '500', \"',\", \"'album')\", 'search_album', 'term', 'term:', 'show_message', '\"Enter', 'album', 'name', '\",', 'c.g,', 'update', '=', 'term', '=', '\">', '\")', 'term', 'len', 'term)', '<', '2:', 'g.message', '=', 'c.r', '+', '\"Not', 'enough', '+', 'c.w', 'g.content', '=', 'album', '=', '_get_mb_album', 'term)', 'album:', 'show_message', '\"Album', \"'\", '%', \"s'\", 'found!\"', '%', 'term)', 'prompt', '=', '%', 's]', '>', '\"', '%', 'album', 'prompt,', 'end', '=', '\"\")', '=', '.strip', '==', '\"q\":', 'show_message', '\"Album', 'search', 'album', '=', '_get_mb_album', 'term,', '=', 'album:', 'show_message', '\"Album', \"'\", '%', \"s'\", 'by', \"'\", '%', \"s'\", 'found!\"', '%', '(term,', 'title,', '=', 'album', \"'title'\", 'album', 'mb_tracks', '=', '_get_mb_tracks', 'album', \"'aid'\", 'mb_tracks:', 'show_message', '\"Album', \"'\", '%', \"s'\", 'by', \"'\", '%', \"s'\", '0', 'tracks!\"', '%', '(title,', 'msg', '=', '\"', '%', 's', '%', 's', '%', 's', 'by', '%s', '%', 's', '%', 's\\\\n\\\\n\"', '%', '(c.g,', 'title,', 'c.w,', 'c.g,', 'c.w)', 'msg', '+=', '\"Enter', 'to', '[q]', 'to', 'g.message', '=', 'msg', 'g.content', '=', '\"Tracks', '\\\\n\"', 'n,', 'track', 'enumerate', 'mb_tracks,', '1', 'g.content', '+=', '\"', '%', '02s', '%s\"', '%', '(n,', 'track', \"'title'\", 'g.content', '+=', '\"\\\\n\"', 'screen.update', '=', '[Enter]', '>', '\")', '==', '\"\":', 'show_message', '\"Album', 'search', 'songs', '=', '[]', 'screen.clear', 'itt', '=', '_match_tracks', 'title,', 'mb_tracks)', '=', 'config.SEARCH_MUSIC.get,', 'config.ORDER.get', 'config.SEARCH_MUSIC.value', '=', 'config.ORDER.value', '=', '\"relevance\"', 'songs.extend', 'itt)', 'KeyboardInterrupt:', '\"', '%', 'sHalted!', '%', 's\"', '%', '(c.r,', 'c.w', 'config.SEARCH_MUSIC.value,', 'config.ORDER.value', '=', 'songs:', '\"\\\\n', '%', 's', '/', '%s', 'songs', 'matched\"', '%', '(len', 'songs', 'len', 'mb_tracks', '\"Press', 'Enter', 'to', '=', 'g.album', '=', 'title', 'g.scrobble', '=', 'g.scrobble_queue', '=', '[t', \"'title']\", 't', 'mb_tracks]', 'msg', '=', '\"Contents', 'of', 'album', '%s', '%', 's', '-', '%s', '%', 's', '%s', '%', 'd', '/', '%', 'd', '%', 's', '\"', '%', 'c.y,', 'title,', 'c.w,', 'c.b,', 'len', 'songs', 'len', 'mb_tracks', 'c.w)', 'failmsg', '=', '\"Found', 'no', 'album', 'tracks', '%s', '%', 's', '%', 's\"', '%', '(c.y,', 'title,', 'c.w)', 'songs,', 'msg', '=', 'msg,', 'failmsg', '=', 'failmsg)']"
    },
    {
        "link": "https://raw.githubusercontent.com/mps-youtube/yewtube/master/mps_youtube/commands/config.py",
        "vector": "['..', 'g,', 'c,', 'config,', 'util', '.', \"r'set\", '|', \"showconfig',\", \"'set',\", \"'showconfig')\", 'showconfig', 'width', '=', 'util.getxy', '.width', 'longest_key', '=', '17', 'longest_val', '=', '0', '=', 'config:', 'val', '=', 'config', 'longest_val', '=', 'max', 'longest_val,', 'len', 'str', '=', 'val.temp_value', 'width', '-=', '27', 's', '=', '\"', '%s', '%', '-', '0', 's', '%', 's', '%', '-', '1', 'longest_key,', 'longest_val', '+', '1)', 'width', '-=', 'longest_val', '+', '5', 'out', '=', '\"', '%s', '%', '-', 's', '%', '-', 's', '%s', '%', 's', '%', 'longest_key,', 'longest_val)', '%', 'c.ul,', '\"Key\",', '\"Value\",', '\"', '\"', '*', 'width,', 'c.w)', 'out', '=', '\"', '%s', '%', '-', 's', '%s', '%', 's', '%', 'longest_key)', '%', '(c.ul,', '\"Key\",', '\"Value\",', '\"', '\"', '*', 'width,', 'c.w)', 'config:', 'val', '=', 'config', 'config.PLAYER.get)', '\\\\', 'val.require_known_player:', 'g.detectable_size', '==', '\"MAX_RESULTS\":', 'g.detectable_size', '==', '\"CONSOLE_WIDTH\":', 'out', '+=', 's', '%', '(c.g,', 'c.w,', 'out', '+=', '\"', '%', 's', '%', 's\"', '%', '(c.w,', 'out', '+=', '\"\\\\n\"', 'g.content', '=', 'out', 'g.message', '=', '\"Enter', '%sset', '<key>', '<value', '>', '%', 's', 'to', 'change\\\\n\"', '%', '(c.g,', 'c.w)', 'g.message', '+=', '\"Enter', '%sset', 'all', '%', 's', 'to', 'reset', 'all\"', '%', '(c.g,', 'c.w)', \"r'set\\\\s\", '+', '-', 't\\\\s', '*', '-', '\\\\w', '+', '\\\\s', '*', '.', '*', \"')\", 'setconfigtemp', 'key,', 'val', 'setconfig', 'key,', 'val,', '=', \"r'set\\\\s\", '+', '-', '\\\\w', '+', '\\\\s', '*', '.', '*', \"')\", 'setconfig', 'key,', 'val,', '=', 'key', '=', 'key.replace', '\"', '-', '\",', '\"_\")', 'key.upper', '==', '\"ALL\"', 'val.upper', '==', '\"DEFAULT\":', 'ci', 'config:', 'config', 'ci', '.value', '=', 'config', 'ci', 'config.save', 'message', '=', '\"Default', 'configuration', 'key.upper', 'config:', 'message', '=', '\"Unknown', 'config', 'item:', '%s', '%', 's', '%', 's\"', '%', '(c.r,', 'key,', 'c.w)', 'val.upper', '==', '\"DEFAULT\":', 'att', '=', 'config', 'key.upper', 'att.value', '=', 'att.temp_value', '=', 'message', '=', '\"', '%', 's', '%', 's', '%', 's', 'set', 'to', '%s', '%', 's', '%', 's', '\"', '=', 'message', '=', 'message', '%', '(c.y,', 'key,', 'c.w,', 'c.y,', 'c.w)', 'config.save', 'message', '=', 'config', 'key.upper', '.set', 'val,', '=', 'showconfig', 'g.message', '=', 'message', \"r'encoders?',\", \"'encoder')\", 'show_encs', 'out', '=', '\"', '%', 'profiles', '%', 's\\\\n\\\\n\"', '%', '(c.ul,', 'c.w)', 'x,', 'e', 'enumerate', 'g.encoders', 'sel', '=', '\"', '%', 'sselected', '%', 's', '\"', '%', '(c.y,', 'c.w)', 'config.ENCODER.get', '==', 'x', '\"\"', 'out', '+=', '\"', '%', '2d.', '%s', '%', 's\\\\n\"', '%', '(x,', 'e', \"'name'\", 'sel)', 'g.content', '=', 'out', 'message', '=', '\"Enter', '%sset', 'encoder', '<num', '>', '%', 's', 'to', 'select', 'an', 'encoder\"', 'g.message', '=', 'message', '%', '(c.g,', 'c.w)']"
    },
    {
        "link": "https://raw.githubusercontent.com/mps-youtube/yewtube/master/mps_youtube/commands/download.py",
        "vector": "['os', 're', 'sys', 'time', 'shlex', 'subprocess', 'urllib.request', 'urlopen', '..', 'g,', 'c,', 'screen,', 'streams,', 'content,', 'config,', 'util,', 'pafy', '.', 'PL', '.search', 'yt_url,', 'user_pls', 'dump,', \"r'\", 'dv', '|', 'da', '|', 'd', '|', 'dl', '|', 'download', '\\\\s', '*', '\\\\d', '1', '4', \"',\", \"'da',\", \"'dv',\", \"'d',\", \"'dl',\", \"'download')\", 'download', 'dltype,', 'num', 'g.browse_mode', '==', '\"ytpl\"', 'dltype', '(\"da\",', '\"dv\"', 'plid', '=', 'g.ytpls', 'num)', '-', '1', 'dltype,', 'plid)', 'g.browse_mode', '==', '\"ytpl\":', 'g.message', '=', '\"Use', 'da', 'dv', 'to', 'audio', '/', 'video', 'download\"', 'g.message', '=', 'c.y', '+', 'g.message', '+', 'c.w', 'g.content', '=', 'g.browse_mode', '!=', 'g.message', '=', '\"Download', 'must', 'refer', 'to', 'a', 'video', 'item\"', 'g.message', '=', 'c.y', '+', 'g.message', '+', 'c.w', 'g.content', '=', 'screen.writestatus', 'video', 'song', '=', 'num)', '-', '1', 'success', '=', 'pafy.download_video', 'song.ytid,', 'config.DDIR.get,', '\"da\")', 'success:', 'g.message', '=', '\"Saved', '\\\\\\'\"', '+', 'song.title', '+', '\"\\\\\\'', 'to', '\"', '+', 'c.g', '+', 'config.DDIR.get', '+', 'c.w', 'KeyboardInterrupt:', 'g.message', '=', 'c.r', '+', '\"Download', 'halted!\"', '+', 'c.w', 'g.content', '=', \"r'\", 'da', '|', 'dv', '\\\\s', '+', '?', '\\\\d', '+', '\\\\s\\\\d', '+', '|', '-', '\\\\d', '+', '|', '\\\\d', '+', '-', '|', '\\\\d', '+', '?', '\\\\d\\\\s', '-', '*', \"',\", \"'da',\", \"'dv')\", 'down_many', 'dltype,', 'choice,', 'subdir', '=', 'choice', '=', 'util.parse_multi', 'choice)', 'choice', '=', 'set', 'choice', 'downsongs', '=', 'x)', '-', '1]', 'x', 'choice]', 'temp', '=', '=', 'downsongs', 'count', '=', 'len', 'downsongs)', 'av', '=', '\"audio\"', '\"da\")', '\"video\"', 'msg', '=', '\"\"', 'message', 'g.message', '=', 'message', 'g.content', '=', 'screen.update', 'time.sleep', '2)', '0)', 'song', 'downsongs:', 'g.result_count', '=', 'len', '=', 'title', '=', '\"Download', 'Queue', '%', 's', '%', 's\\\\n\\\\n\"', '%', '(av,', 'c.w)', '=', 're.sub', 'r\"', 'Num\\\\s', '*', '?Title.', '*', '?\\\\n', '\",', 'title,', 'g.content', '=', 'screen.update', 'filename', '=', '_make_fname', 'song,', 'av', '=', 'av,', 'subdir', '=', 'subdir)', 'e:', '%s:', '%s\"', '%', '(song.title,', 'str', 'e', 'count', '-=', '1', '\"No', 'audio', 'track', '%s\"', '%', 'song.title)', 'count', '-=', '1', '_download', 'song,', 'filename,', 'url', '=', 'audio', '=', 'av', '==', '\"audio\")', '\"HTTP', '%s\"', '%', 'song.title)', 'count', '-=', '1', '0)', 'msg', '=', '\"Downloaded', '%s', 'items\"', '%', 'count', 'g.message', '=', '\"Saved', 'to', '\"', '+', 'c.g', '+', 'song.title', '+', 'c.w', 'KeyboardInterrupt:', 'msg', '=', '\"Downloads', '=', 'temp', 'g.message', '=', 'msg', 'g.result_count', '=', 'len', 'g.content', '=', \"r'\", 'da', '|', 'dv', 'pl\\\\s', '+', '%', \"s'\", '%', 'PL,', \"'dapl',\", \"'dvpl')\", 'dltype,', 'parturl', 'parturl)', 'dump', 'title', '=', 'g.pafy_pls', 'parturl', '0', '.title', 'subdir', '=', 'util.sanitize_filename', 'title.replace', '\\'\"\\',', \"''\", 'down_many', 'dltype,', '\"1', '-', '\",', 'subdir', '=', 'subdir)', 'msg', '=', 'g.message', 'parturl)', 'g.message', '=', 'msg', \"r'\", 'da', '|', 'dv', 'upl\\\\s', '+', '.', '*', \"',\", \"'daupl',\", \"'dvupl')\", 'down_user_pls', 'dltype,', 'user', 'user_pls', 'user)', 'i', 'g.ytpls:', 'dltype,', 'i.get', '_make_fname', 'song,', 'ext', '=', 'av', '=', 'subdir', '=', 'ddir', '=', 'config.DDIR.get,', 'subdir)', 'subdir', 'config.DDIR.get', 'ddir', 'os.makedirs', 'ddir)', 'ext:', 'stream', '=', 'streams.select', 'streams.get', 'song', 'audio', '=', 'av', '==', '\"audio\",', 'm4a_ok', '=', 'ext', '=', 'stream', \"'ext']\", 'filename', '=', 'song.title', '+', '\".\"', '+', 'ext', 'filename', '=', 'filename.replace', '\\'\"\\',', \"'')\", 'filename', '=', 'ddir,', 'util.sanitize_filename', 'filename', 'filename', 'extract_metadata', 'name', 'seps', '=', 'name.count', '\"', '-', '\")', '=', 'title', '=', 'seps', '==', '1:', 'pos', '=', '\"', '-', '\")', '=', 'name', 'pos', '.strip', 'title', '=', 'name', 'pos', '+', '3', '.strip', 'title', '=', 'name.strip', 'dict', '=', 'title', '=', 'title)', 'remux_audio', 'filename,', 'title', 'util.dbg', 'remux\")', 'temp_file', '=', 'filename', '+', '\".\"', '+', 'str', '10000,', '99999', 'os.rename', 'filename,', 'temp_file)', 'meta', '=', 'extract_metadata', 'title)', 'metadata', '=', '[\"title', '=', '%', 's\"', '%', 'meta', '\"title\"', 'meta', 'metadata', '=', '[\"title', '=', '%', 's\"', '%', 'meta', '\"title\"', '\"', '-', 'metadata\",', '=', '%', 's\"', '%', 'meta', 'cmd', '=', '[g.muxapp,', '\"', '-', 'y\",', '\"', '-', 'i\",', 'temp_file,', '\"', '-', 'acodec\",', '\"copy\",', '\"', '-', 'metadata\"]', 'cmd', '+=', 'metadata', '+', '[\"', '-', 'vn\",', 'filename]', 'util.dbg', 'cmd)', 'open', 'os.devnull,', '\"w\")', 'devnull:', 'subprocess.call', 'cmd,', 'stdout', '=', 'devnull,', 'stderr', '=', 'subprocess.STDOUT)', 'util.dbg', '\"Failed', 'to', 'remux', 'audio', '%s\",', 'g.muxapp)', 'os.rename', 'temp_file,', 'filename)', 'temp_file)', 'util.dbg', '\"remuxed', 'audio', 'file', '%s\"', '%', 'g.muxapp)', 'transcode', 'filename,', 'enc_data', '=', 'os.path.splitext', 'filename', '0]', 'exe', '=', 'g.muxapp', 'g.transcoder_path', '==', '\"auto\"', 'g.transcoder_path', 'exe', 'exe)', 'os.access', 'exe,', 'os.X_OK', 'failed.', \"Couldn't\", 'a', 'valid', 'encoder', '\\\\n\")', 'time.sleep', '2)', 'filename', '=', 'shlex.split', 'enc_data', 'newcom,', 'outfn', '=', '\"\"', 'n,', 'd', 'enumerate', 'd', '==', '\"ENCODER_PATH\":', 'newcom', 'n]', '=', 'exe', 'd', '==', '\"IN\":', 'newcom', 'n]', '=', 'filename', 'd', '==', '\"OUT\":', 'newcom', 'n]', '=', 'outfn', '=', 'd', '==', '\"OUT.EXT\":', 'newcom', 'n]', '=', 'outfn', '=', '+', '\".\"', '+', 'enc_data', \"'ext']\", '=', 'subprocess.call', 'newcom)', '==', '0', 'filename)', 'outfn', 'external_download', 'song,', 'filename,', 'url', 'cmd', '=', 'config.DOWNLOAD_COMMAND.get', 'ddir,', '=', 'config.DDIR.get,', 'filename)', '=', 'shlex.split', 'cmd)', 'repl,', 'lst', '[x', 'x', 'x.replace', 'repl)', 'x', 'lst]', '=', '\"', '%', 'F\",', 'filename,', '=', '\"', '%', 'd\",', 'ddir,', '=', '\"', '%', 'f\",', '=', '\"', '%', 'u\",', 'url,', '=', '\"', '%', 'i\",', 'song.ytid,', 'util.dbg', '%s\",', '\"', 'subprocess.call', '_download', 'song,', 'filename,', 'url', '=', 'audio', '=', 'allow_transcode', '=', 'url:', 'stream', '=', 'streams.select', 'streams.get', 'song', 'audio', '=', 'audio,', 'm4a_ok', '=', 'url', '=', 'stream', \"'url']\", 'config.DOWNLOAD_COMMAND.get:', 'title', '=', 'c.y', '+', 'os.path.splitext', 'filename', '0]', '+', 'c.w', '%s', 'custom', '%', 'title)', 'external_download', 'song,', 'filename,', 'url)', 'config.OVERWRITE.get:', 'filename', '\"File', '%s', '%', 's', '%', 's', '..\\\\n\"', '%', '(c.r,', 'filename,', 'c.w', 'time.sleep', '0.2)', 'filename', 'to', '%s', '%', 's', '%', 's', '..\"', '%', '(c.r,', 'filename,', 'c.w', '=', \"('\", '{0', '1', '2}', 'Bytes', '0', '3', '.2', '%', '2', 'received.', 'Rate:', \"'\", \"'\", '0', '4', '4.0f}', 'kbps', '2', '.', 'ETA:', '0', '5', '.0f}', 'secs', '2', \"')\", 'resp', '=', 'urlopen', 'url)', 'total', '=', \"'Content\", '-', \"Length'\", '.strip', 'chunksize,', 'bytesdone,', 't0', '=', '16384,', '0,', 'time.time', 'outfh', '=', 'open', 'filename,', \"'wb')\", 'chunk', '=', 'resp.read', 'chunksize)', 'outfh.write', 'chunk)', 'elapsed', '=', 'time.time', '-', 't0', 'bytesdone', '+=', 'len', 'chunk)', 'rate', '=', '0', 'elapsed', '!=', '0:', 'rate', '=', '(bytesdone', '/', '1024)', '/', 'elapsed', 'rate:', 'eta', '=', '(total', '-', 'bytesdone)', '/', '(rate', '*', '1024)', 'eta', '=', '0', 'stats', '=', '(c.y,', 'bytesdone,', 'c.w,', 'bytesdone', '*', '1.0', '/', 'total,', 'rate,', 'eta)', 'chunk:', 'outfh.close', 'status', '=', '*', 'stats)', 'sys.stdout.write', '\"\\\\r\"', '+', 'status', '+', \"'\", \"'\", '*', '4', '+', '\"\\\\r\")', 'sys.stdout.flush', 'active_encoder', '=', 'g.encoders', 'config.ENCODER.get]', 'ext', '=', 'filename.split', '\".\"', '-', '1]', 'valid_ext', '=', 'ext', 'active_encoder', \"'valid'\", '.split', '\"', '\")', 'audio', 'g.muxapp:', 'remux_audio', 'filename,', 'song.title)', 'config.ENCODER.get', '!=', '0', 'valid_ext', 'allow_transcode:', 'filename', '=', 'transcode', 'filename,', 'active_encoder)', 'filename', 'menu_prompt', 'prompt', '=', '\"', '>', '\",', 'rows', '=', 'header', '=', '=', 'footer', '=', '=', '0', 'content', '=', '\"\"', 'x', 'header,', 'rows,', 'footer:', 'x,', 'x:', 'content', '+=', '+', '\"\\\\n\"', 'x,', 'str', 'content', '+=', 'x', '+', '\"\\\\n\"', 'g.content', '=', 'content', 'screen.update', 'choice', '=', 'prompt)', 'choice', 'choice]', 'menu_prompt', 'prompt,', 'rows,', 'header,', 'footer,', 'choice.strip', 'prompt_dl', 'song', 'dl_data,', 'p', '=', 'get_dl_data', 'song)', 'dl_text', '=', 'gen_dl_text', 'dl_data,', 'song,', 'p)', '=', '[x', \"'url']\", 'x', 'dl_data]', 'ed', '=', 'enumerate', 'dl_data)', '=', '{str', 'n', '+', '1', '(x', \"'url'\", 'x', \"'ext'\", 'n,', 'x', 'ed}', 'url,', 'ext', '=', 'menu_prompt', '\"Download', 'number:', '\",', '*dl_text)', 'url2', '=', 'ext2', '=', 'mediatype', '=', '[i', 'i', 'dl_data', 'i', \"'url']\", '==', 'url', '0', \"'mediatype']\", 'mediatype', '==', '\"video\"', 'g.muxapp', 'config.DOWNLOAD_COMMAND.get:', 'dl_data,', 'p', '=', 'get_dl_data', 'song,', 'mediatype', '=', '\"audio\")', 'dl_text', '=', 'gen_dl_text', 'dl_data,', 'song,', 'p)', 'au_choices', '=', '\"1\"', 'len', 'dl_data)', '==', '1', '\"1', '-', '%', 's\"', '%', 'len', 'dl_data)', 'footer', '=', '[util.F', \"'\", '-', \"audio')\", '%', 'ext,', 'util.F', \"'select\", \"mux')\", '%', 'au_choices]', 'dl_text', '=', 'tuple', 'dl_text', '0', '3', '+', '(footer', 'aext', '=', '(\"ogg\",', '\"m4a\")', '=', '[x', \"'url']\", 'x', 'dl_data', 'x', \"'ext']\", 'aext]', 'ed', '=', 'enumerate', 'dl_data)', '=', '{str', 'n', '+', '1', '(x', \"'url'\", 'x', \"'ext'\", 'n,', 'x', 'ed}', 'prompt', '=', '\"Audio', 'stream:', '\"', 'url2,', 'ext2', '=', 'menu_prompt', 'prompt,', '*dl_text)', 'url,', 'ext,', 'url2,', 'ext2', 'gen_dl_text', 'ddata,', 'song,', 'p', 'hdr', '=', '[]', 'hdr.append', '\"', '%s', '%', 's', '%', 's\"', '%', '(c.r,', 'song.title,', 'c.w', '=', 'hdr.append', 'c.r', '+', '\"', 'Uploaded', 'by', '\"', '+', '+', 'c.w)', 'hdr.append', '\"', '[\"', '+', 'util.fmt_time', 'song.length)', '+', '\"', '\")', 'hdr.append', '\"\")', '=', 'tuple', '\"Item', 'Quality', 'Media', 'Size', 'Notes\".split', 'fmt', '=', '\"', '{0', '%', '-', '6s', '%', '-', '8s', '%', '-', '13s', '%', '-', '7s', '%', '-', '5s', '%', '-', '16s', '1', '\"', '=', 'c.w,', 'c.w)', '%', '\"\")', 'content', '=', '[]', 'n,', 'd', 'enumerate', 'ddata', 'row', '=', '(n', '+', '1,', 'd', \"'ext'\", 'd', \"'quality'\", 'd', \"'mediatype'\", 'd', \"'size'\", 'd', 'fmt', '=', '\"', '{0', '%', '-', '6s', '%', '-', '8s', '%', '-', '13s', '%', '-', '7s', '%5s', 'Mb', '%', '-', '16s', '1', '\"', 'row', '=', 'c.g,', 'c.w)', '%', 'row', 'content.append', 'row)', 'content.append', '\"\")', 'footer', '=', '\"Select', '%', 's1', '-', '%', 's', '%', 's]', 'to', 'download', '%', 'sEnter', '%', 's]', 'to', 'footer', '=', '[footer', '%', '(c.y,', 'len', 'content)', '-', '1,', 'c.w,', 'c.y,', 'c.w', 'content,', 'hdr,', 'footer)', 'get_dl_data', 'song,', 'mediatype', '=', '\"any\"', 'mbsize', 'x', 'str', 'x', '/', '(1024', '**', '2', 'p', '=', 'util.get_pafy', 'song)', 'dldata', '=', '[]', 'text', '=', '\"', 'stream', '>\"', '=', '[x', 'x', 'p.allstreams]', 'mediatype', '==', '\"audio\":', '=', '[x', 'x', 'p.audiostreams]', 'l', '=', 'len', 'n,', 'stream', 'enumerate', 'sys.stdout.write', 'text', '+', '\"', '-', '\"', '*', 'n', '+', '\"', '>', '\"', '+', '\"', '\"', '*', '(l', '-', 'n', '-', '1)', '+', '\"', '<', '\\\\r\")', 'sys.stdout.flush', 'size', '=', 'mbsize', 'stream.get_filesize', 'util.dbg', 'c.r', '+', '\"', '--', '-', 'stream', 'size\"', '+', 'c.w)', 'size', '=', '0', 'item', '=', \"{'mediatype':\", 'stream.mediatype,', \"'size':\", 'size,', \"'ext':\", 'stream.extension,', \"'quality':\", 'stream.quality,', \"'url':\", 'stream.url}', 'dldata.append', 'item)', 'screen.writestatus', '\"\")', 'dldata,', 'p', \"r'dlurl\\\\s\", '.', '*', '-', '_a', '-', 'zA', '-', 'Z0', '-', '9', '11', '.', '*', \"',\", \"'dlurl')\", 'dl_url', 'url', 'g.browse_mode', '=', 'yt_url', 'url)', 'len', '==', '1:', 'download', '\"download\",', '\"1\")', 'sys.exit', \"r'daurl\\\\s\", '.', '*', '-', '_a', '-', 'zA', '-', 'Z0', '-', '9', '11', '.', '*', \"',\", \"'daurl')\", 'da_url', 'url', 'g.browse_mode', '=', 'yt_url', 'url)', 'len', '==', '1:', 'download', '\"da\",', '\"1\")', 'sys.exit']"
    },
    {
        "link": "https://raw.githubusercontent.com/mps-youtube/yewtube/master/mps_youtube/commands/generate_playlist.py",
        "vector": "['os', 'path', 'choice', '..', 'content,', 'g,', 'screen,', 'util,', '.', 'search,', 'album_search', \"r'mkp\\\\s\", '*', '.', '1', '100', \"',\", \"'mkp')\", 'sourcefile', '\"', '--', 'description\"', 'sourcefile', '\"', '-', 'd\"', 'sourcefile:', 'sourcefile)', '=', 'sourcefile)', 'check_sourcefile', 'g.message', '=', 'util.F', \"'mkp\", \"empty')\", '%', 'queries', '=', 'read_sourcefile', 'g.message', '=', 'util.F', \"'mkp\", \"parsed')\", '%', '(len', 'queries', 'sourcefile)', 'queries:', 'queries)', 'g.message', '=', 'util.F', \"'pl\", \"help')\", 'g.content', '=', 'read_sourcefile', 'filename', 'open', 'filename)', 'srcfl:', 'queries', '=', 'item', 'clean_item', '=', 'str', 'item', '.strip', 'clean_item:', 'queries.append', 'clean_item)', 'queries', 'check_sourcefile', 'filename', 'filename)', 'path.getsize', 'filename)', '>', '0', 'queries,', 'title', '=', \"''\", 'plname', '=', 'title.replace', '\"', '\",', '\"', '-', '\")', 'g.userpl.get', 'plname', 'g.userpl', 'plname]', '=', 'plname)', 'query', 'queries:', 'g.message', '=', 'util.F', \"'mkp\", '%', 'query', 'screen.update', 'qresult', '=', 'query)', 'qresult:', 'g.userpl', 'plname', '.songs.append', 'qresult)', 'g.userpl', 'plname', 'query', 'qs', '=', 'search.generate_search_qs', 'query)', 'wdata', '=', 'pafy.call_gdata', \"'search',\", 'qs)', 'results', '=', 'wdata)', 'results:', 'res,', '=', 'album_search._best_song_match(', 'results,', 'query,', '0.1,', '1.0,', '0.0)', 'res', 'n_chars', '=', '6', 'choice', '+', '_', 'range', 'n_chars', 'text', 'g.message', '=', 'util.F', '\"mkp', 'desc', 'unknown\")', 'num', '=', 'text.replace', '\"', '--', 'description\",', '\"\")', 'num', '=', 'num.replace', '\"', '-', 'd\",', '\"\")', 'num', '=', 'num', '0]', 'query', '=', '{}', 'query', \"'id']\", '=', 'num', '.ytid', 'query', \"'part']\", '=', \"'snippet'\", 'query', \"'maxResults']\", '=', \"'1'\", 'data', '=', 'pafy.call_gdata', \"'videos',\", 'query', \"'items'\", '0', \"'snippet']\", 'title', '=', '\"mkp', '%s\"', '%', 'data', \"'title']\", 'data', '=', 'util.fetch_songs', 'data', \"'description'\", 'data', \"'title'\", 'columns', '=', '{\"name\":', '\"idx\",', '\"size\":', '3,', '\"Num\"', '{\"name\":', '\"size\":', '30,', '{\"name\":', '\"title\",', '\"size\":', '\"Title\"', 'run_m', 'idx', 'idx,', 'title)', 'data:', 'data', '=', 'x)', 'x', 'data]', 'g.content', '=', 'columns,', 'data,', 'run_m)', 'g.message', '=', 'util.F', '\"mkp', 'desc', 'which', 'data\")', 'g.message', '=', 'util.F', '\"mkp', 'no', 'valid\")']"
    },
    {
        "link": "https://raw.githubusercontent.com/mps-youtube/yewtube/master/mps_youtube/commands/lastfm.py",
        "vector": "['time', 'datetime', '=', '=', '..', 'g,', 'util,', 'config', '.', 'verbose', '=', 'verbose:', '=', \"'https\", '/', '/', 'github.com', '/', '/', 'g.message', '=', 'module', 'found\\\\n', 'see', \"%s'\", '%', 'key', '=', 'config.LASTFM_API_KEY.get', 'secret', '=', 'config.LASTFM_API_SECRET.get', '=', 'config.LASTFM_PASSWORD.get', 'username', '=', 'config.LASTFM_USERNAME.get', '(key', 'secret', 'username', 'verbose:', '\"Not', 'all', 'credentials', 'were', 'set.\")', '=', 'api_key', '=', 'key,', 'api_secret', '=', 'secret,', 'username', '=', 'username,', '=', 'verbose:', 'g.message', '=', 'authentication', 'successful!\"', 'e:', 'verbose:', 'g.message', '=', 'connection', '%s\"', '%', '(str', 'e', 'scrobble_track', 'album,', 'track', 'unix_timestamp', '=', 'time.mktime', 'datetime.datetime.now', '.timetuple', '=', 'title', '=', 'track,', 'album', '=', 'album,', 'timestamp', '=', 'unix_timestamp)', 'track', '=', 'title', '=', 'track)']"
    },
    {
        "link": "https://raw.githubusercontent.com/mps-youtube/yewtube/master/mps_youtube/commands/local_playlist.py",
        "vector": "['re', '..', 'g,', 'c,', 'content,', 'util', 'Video', '.', 'WORD', '..util', 'parse_video_length', \"r'rmp\\\\s\", '*', '\\\\d', '+', '|', '%', 's', \"'\", '%', 'WORD,', \"'rmp')\", 'name', 'g.userpl.get', 'name', 'name', '=', 'name)', '-', '1', 'name', '=', 'g.userpl', 'name]', 'name)', 'g.message', '=', '\"Deleted', '%s', '%', 's', '%', 's\"', '%', '(c.y,', 'name,', 'c.w)', 'g.content', '=', 'g.message', '=', 'util.F', \"'pl\", 'found', \"ls')\", '%', 'name', 'g.content', '=', \"r'add\\\\s\", '*', '-', '?\\\\d', '-', '\\\\d\\\\s', '1', '250', '%', 's', \"'\", '%', 'WORD,', \"'add')\", 'nums,', 'nums', '=', 'util.parse_multi', 'nums)', '=', '\"', '\",', '\"', '-', '\")', 'g.userpl.get', 'g.userpl', '=', 'songnum', 'nums:', 'g.userpl', '.songs.append', 'songnum', '-', '1', 'dur', '=', 'g.userpl', '.duration', 'f', '=', '(len', 'nums', 'len', 'g.userpl', 'dur)', 'g.message', '=', 'util.F', \"'added\", 'to', 'saved', \"pl')\", '%', 'f', 'nums:', 'g.content', '=', \"r'mv\\\\s\", '*', '\\\\d', '1', '3', '\\\\s', '*', '%', 's', \"'\", '%', 'WORD,', \"'mv')\", '_id,', 'name', '_id', '=', '_id)', '-', '1', 'g.userpl', '_id]', '+', '\"', '\"', '+', 'name)', \"r'mv\\\\s\", '*', '%', 's\\\\s', '+', '%', 's', \"'\", '%', '(WORD,', 'WORD', \"'mv')\", 'a,', 'b', '=', '\"\",', '\"', '\")', 'a', 'g.userpl:', 'a', '=', '(a', '+', '\"', '\"', '+', '(b.pop', '0', '.strip', 'b', 'a', 'g.userpl:', 'g.message', '=', 'util.F', \"'no\", 'pl', 'match', \"rename')\", 'g.content', '=', 'g.content', 'b', '=', '\"', '-', 'b)', 'g.userpl', 'b]', '=', 'b)', 'g.userpl', 'b', '.songs', '=', 'g.userpl', 'a', '.songs)', 'a)', 'g.message', '=', 'util.F', \"'pl\", \"renamed')\", '%', '(a,', 'b)', \"r'\", 'rm', '|', 'add', '\\\\s', '?', '\\\\', '*', '|', 'all', \"',\", \"'rm',\", \"'add')\", 'add_rm_all', 'action', 'action', '==', '\"rm\":', 'msg', '=', 'c.b', '+', '\"Cleared', 'all', 'songs\"', '+', 'c.w', 'g.content', '=', 'zeromsg', '=', 'msg)', 'action', '==', '\"add\":', 'size', '=', 'len', '\"add\",', '\"', '-', '\"', '+', 'str', 'size', \"r'save',\", \"'save')\", 'open_save_view', '\"save\",', '=', '\"\"', 'g.selected_pafy_pls_id:', '=', 'g.pafy_pls', 'g.selected_pafy_pls_id', '0', \"'title']\", '=', '0', '.title', '18', '.strip', '=', 're.sub', 'r\"', '^', '-', '\\\\w', '\",', '\"', '-', '\",', 'flags', '=', 're.UNICODE)', 'post', '=', '0', 'g.userpl.get', 'post', '+=', '1', '=', '0', '.title', '18', '.strip', '+', '\"', '-', '\"', '+', 'str', 'post)', '=', '\"0123456789\")', 'open_save_view', '\"save\",', \"r'\", 'open', '|', 'save', '|', 'view', '\\\\s', '*', '%', 's', \"'\", '%', 'WORD,', \"'open',\", \"'save',\", \"'view')\", 'open_save_view', 'action,', 'name', 'name', '=', 'name.replace', '\"', '\",', '\"', '-', '\")', 'action', '==', '\"open\"', 'action', '==', '\"view\":', 'saved', '=', 'g.userpl.get', 'name)', 'saved:', 'name', '=', 'util.get_near_name', 'name,', 'g.userpl)', 'saved', '=', 'g.userpl.get', 'name)', 'action', '==', '\"open\":', 'g.active.songs', '=', 'saved.songs)', '=', 'name', 'msg', '=', 'util.F', '\"pl', 'loaded\")', '%', 'name', 'g.active,', 'msg', '=', 'msg)', 'action', '==', '\"view\":', '=', '\"\"', 'msg', '=', 'util.F', '\"pl', 'viewed\")', '%', 'name', 'saved.songs', 'msg', '=', 'msg)', 'saved', 'action', '\"view', 'open\".split', 'g.message', '=', 'util.F', '\"pl', 'found\")', '%', 'name', 'g.content', '=', 'action', '==', '\"save\":', 'g.message', '=', 'to', 'save.', '\"', '+', 'util.F', \"search')\", 'g.content', '=', 'g.selected_pafy_pls_id:', 'g.userpl', 'name]', '=', 'name,', '[Video', 'i', \"'id'\", 'i', \"'title'\", 'parse_video_length', 'i', \"'duration'\", 'i', 'g.pafy_pls', 'g.selected_pafy_pls_id', '0', '.videos', 'g.userpl', 'name]', '=', 'name,', 'g.message', '=', 'util.F', \"'pl\", \"saved')\", '%', 'name', 'g.content', '=', \"r'\", 'open', '|', 'view', '\\\\s', '*', '\\\\d', '1', '4', \"',\", \"'open',\", \"'view')\", 'open_view_bynum', 'action,', 'num', 'srt', '=', 'g.userpl)', 'name', '=', 'srt', 'num)', '-', '1]', 'open_save_view', 'action,', 'name)', \"r'ls',\", \"'ls')\", 'ls', 'g.userpl:', 'g.message', '=', 'util.F', \"'no\", 'g.content', '=', 'g.content', '\\\\', 'zeromsg', '=', 'g.message)', 'g.content', '=', 'g.message', '=', 'util.F', \"'pl\", \"help')\", \"r'vp',\", \"'vp')\", 'vp', 'msg', '=', 'util.F', \"'current\", \"pl')\", 'txt', '=', 'util.F', \"add')\", 'util.F', \"search')\", 'failmsg', '=', 'util.F', \"'pl\", \"empty')\", '+', '\"', '\"', '+', 'txt', 'g.active,', 'msg', '=', 'msg,', 'failmsg', '=', 'failmsg)']"
    },
    {
        "link": "https://raw.githubusercontent.com/mps-youtube/yewtube/master/mps_youtube/commands/misc.py",
        "vector": "['re', 'datetime', 'datetime,', 'socket', 'traceback', 'urllib.request', 'urlopen', '..', 'player', 'pyperclip', '=', '=', '=', '=', '..', 'g,', 'c,', '__version__,', 'content,', 'screen,', 'cache,', 'pafy', '..', 'streams,', 'config,', 'util', '..helptext', 'get_help', '..content', 'logo,', '.', \"r'clearcache')\", 'clearcache', 'g.pafs', '=', '{}', 'g.streams', '=', '{}', 'util.dbg', '\"', '%', 'scache', 'cleared', '%', 's\",', 'c.p,', 'c.w)', 'g.message', '=', '\"cache', 'cleared\"', \"r'\", '?', 'help', '|', 'h', '?', '\\\\s', '+', '-', '_a', '-', 'zA', '-', 'Z', '+', \"?',\", \"'help')\", 'show_help', 'choice', 'g.content', '=', 'get_help', 'choice)', \"r'\", '?', 'q', '|', 'quit', '|', 'exit', \"',\", \"'quit',\", \"'exit')\", 'quits', 'showlogo', '=', 'config.INPUT_HISTORY.get:', 'g.READLINE_FILE)', 'util.dbg', '\"Saved', 'file\")', 'cache.save', 'screen.clear', 'msg', '=', 'logo', 'c.r,', 'version', '=', '__version__)', 'showlogo', '\"\"', 'msg', '+=', 'util.F', '\"exitmsg\",', '2)', 'config.CHECKUPDATE.get', 'showlogo:', 'url', '=', '\"https', '/', '/', 'raw.githubusercontent.com', '/', '/', 'yewtube', '/', '/', 'setup.py\"', 'v', '=', 'urlopen', 'url,', 'timeout', '=', '1', '.read', '.decode', 'v', '=', 're.search', \"r'__version__\\\\s\", '*=', '\\\\s', '*', '\"\\\\s', '*', '\\\\d\\\\.', '+', '\\\\s', '*', '\"\\\\s', '*', \"',\", 'v,', 're.MULTILINE)', 'v:', 'v', '=', 'v.group', '1)', 'v', '>', '__version__:', 'msg', '+=', '\"\\\\n\\\\nA', 'newer', 'version', 'available', '%', 's', '.', 'Use', '`help', 'new`', 'to', 'check', \"what's\", 'changed.\\\\n\"', '%', 'v', 'socket.timeout', 'util.dbg', '\"check', 'update', 'timed', 'out\")', 'screen.msgexit', 'msg)', 'n,', 'qnt,', 'content,', 'reply', '=', 'cid', '=', '(\"', '%', 's', '%', 's', '/', '%', 's', '%s\"', '%', \"('\u2514\u2500\u2500\", \"'\", 'reply', \"'',\", 'n,', 'qnt,', 'c.c', '\"g\",', '(\"', '%', '-', '39s', '%s\\\\n\"', '%', '(cid,', '+', '\\\\', 'c.c', '\"y\",', 'content.strip', '+', \"'\\\\n\\\\n'\", '_fetch_commentreplies', 'parentid', 'fetch_comments', 'item', 'ytid,', 'title', '=', 'item.ytid,', 'item.title', 'util.dbg', 'comments', '%s\",', 'c.c', '\"y\",', 'ytid', 'screen.writestatus', 'comments', '%s\"', '%', 'c.c', '\"y\",', 'title', '55', 'all_comments', '=', 'pafy.get_comments', 'ytid)', 'Exception:', 'len', 'all_comments', 'g.message', '=', '\"No', 'comments', '%s\"', '%', 'item.title', '50]', 'g.content', '=', 'commentstext', '=', \"''\", 'n,', 'com', 'enumerate', 'all_comments,', '1', 'commentstext', '+=', 'n,', 'len', 'all_comments', 'com', \"'name'\", 'com', 'com', \"'content'\", 'g.current_page', '=', '0', 'g.content', '=', 'commentstext)', \"r'c\\\\s?\", '\\\\d', '1', '4', \"',\", \"'c')\", 'comments', 'number', 'g.browse_mode', '==', 'item', '=', 'number)', '-', '1]', 'fetch_comments', 'item)', 'g.content', '=', 'g.message', '=', '\"Comments', 'only', 'available', 'video', 'items\"', \"r'x\\\\s\", '*', '\\\\d', '+', \"',\", \"'x')\", 'clipcopy_video', 'num', 'g.browse_mode', '==', '\"ytpl\":', 'p', '=', 'g.ytpls', 'num)', '-', '1]', '=', '\"https', '/', '/', 'youtube.com', '/', '=', '%', 's\"', '%', 'p', 'g.browse_mode', '==', 'item', '=', 'num)', '-', '1', '=', '\"https', '/', '/', 'youtube.com', '/', 'watch?v', '=', '%', 's\"', '%', 'item.ytid', 'g.message', '=', '\"clipboard', 'copy', 'valid', 'mode\"', 'g.content', '=', 'pyperclip.copy', 'g.message', '=', 'c.y', '+', '+', 'c.w', '+', '\"', 'copied\"', 'g.content', '=', 'Exception', 'e:', 'g.content', '=', 'g.message', '=', '+', '-', \"couldn't\", 'copy', 'to', 'clipboard.\\\\n\"', '+', '\\\\', 'type', 'e', 'e', 'g.message', '=', '\"pyperclip', 'module', 'must', 'be', 'clipboard', 'g.message', '+=', '\"see', 'https', '/', '/', '/', 'pypi', '/', 'pyperclip', '/', '\"', 'g.content', '=', \"r'X\\\\s\", '*', '\\\\d', '+', \"',\", \"'X')\", 'clipcopy_stream', 'num', 'g.browse_mode', '==', 'item', '=', 'num)', '-', '1', 'details', '=', 'player.stream_details', 'item', '1]', 'stream', '=', 'details', \"'url']\", 'g.message', '=', '\"clipboard', 'copy', 'valid', 'mode\"', 'g.content', '=', 'pyperclip.copy', 'stream)', 'g.message', '=', 'c.y', '+', 'stream', '+', 'c.w', '+', '\"', 'copied\"', 'g.content', '=', 'Exception', 'e:', 'g.content', '=', 'g.message', '=', 'stream', '+', '-', \"couldn't\", 'copy', 'to', 'clipboard.\\\\n\"', '+', '\\\\', 'type', 'e', 'e', 'g.message', '=', '\"pyperclip', 'module', 'must', 'be', 'clipboard', 'g.message', '+=', '\"see', 'https', '/', '/', '/', 'pypi', '/', 'pyperclip', '/', '\"', 'g.content', '=', \"r'i\\\\s\", '*', '\\\\d', '1', '4', \"',\", \"'i')\", 'num', 'g.browse_mode', '==', '\"ytpl\":', 'p', '=', 'g.ytpls', 'num)', '-', '1]', 'p', 'g.pafy_pls:', 'ytpl', '=', 'g.pafy_pls', 'p', '0]', 'g.content', '=', 'logo', 'col', '=', 'c.g)', 'g.message', '=', 'screen.update', 'util.dbg', '\"', '%', 'pafy', '%', 's\",', 'c.y,', 'c.w)', 'ytpl', '=', 'p', 'g.pafy_pls', 'p', '=', '(ytpl,', 'util.IterSlicer', 'ytpl', 'ytpl_desc', '=', 'ytpl.description', 'g.content', '=', 'created', '=', 'util.yt_datetime_local', 'p', \"'created'\", 'updated', '=', 'util.yt_datetime_local', 'p', \"'updated'\", 'out', '=', 'c.ul', '+', 'Info\"', '+', 'c.w', '+', '\"\\\\n\\\\n\"', 'out', '+=', 'p', \"'title']\", 'out', '+=', '\"\\\\n\"', '+', 'ytpl_desc', 'out', '+=', '\"', '+', 'p', 'out', '+=', '\"\\\\nSize', '\"', '+', 'str', 'p', \"'size'\", '+', '\"', 'videos\"', 'out', '+=', '\"\\\\nCreated', '\"', '+', 'created', '1]', '+', '\"', '\"', '+', 'created', '2]', 'out', '+=', '\"\\\\nUpdated', '\"', '+', 'updated', '1]', '+', '\"', '\"', '+', 'updated', '2]', 'out', '+=', '\"\\\\nID', '\"', '+', 'str', 'p', 'out', '+=', '(\"\\\\n\\\\n', '%', 's', '%', 'sPress', 'enter', 'to', 'go', 'back', '%', 's', '%', 's\"', '%', '(c.y,', 'c.w,', 'c.y,', 'c.w', 'g.content', '=', 'out', 'g.browse_mode', '==', 'g.content', '=', 'logo', 'c.b)', 'screen.update', 'screen.writestatus', 'video', 'metadata..\")', 'item', '=', 'num)', '-', '1', 'streams.get', 'item)', 'p', '=', 'item.ytid)', 'screen.writestatus', '\"Fetched\")', 'out', '=', 'c.ul', '+', '\"Video', 'Info\"', '+', 'c.w', '+', '\"\\\\n\\\\n\"', 'out', '+=', 'p', \"'title']\", '\"\"', 'out', '+=', '\"\\\\n\\\\nDescription', '\\\\n\\\\n\"', '+', 'str', 'p.get', \"'description',\", '\"\"', '+', '\"\\\\n\"', 'out', '+=', '\"', '+', 'str', 'p', '+', '\"\\\\n\"', 'out', '+=', '\"\\\\nIs', 'Live', 'Now', '\"', '+', 'str', 'p', 'out', '+=', '\"\\\\nDuration', '\"', '+', 'str', 'seconds', '=', 'p', \"'duration'\", \"'secondsText'\", 'out', '+=', '\"\\\\nView', 'count', '\"', '+', '\"', 'p', \"'viewCount'\", \"'text'\", 'out', '+=', '\"', '+', 'str', 'p', \"'channel'\", \"'name']\", '+', \"'\", '~', \"'\", '+', 'p', \"'channel'\", 'out', '+=', 'Date', '\"', '+', 'str', 'p', 'out', '+=', '\"\\\\nUploaded', 'Date', '\"', '+', 'str', 'p', \"'uploadDate'\", 'out', '+=', '\"', '+', 'str', 'p', 'out', '+=', '\"\\\\nLikes', '\"', '+', '\"', 'p.get', \"'likes',\", '0', 'out', '+=', '\"', '+', '\"', 'p.get', '0', 'out', '+=', '\"', '+', 'str', 'p', 'out', '+=', '\"\\\\nFamily', 'Safe', '\"', '+', 'str', 'p', 'out', '+=', '\"', '+', 'str', 'p', 'config.SHOW_QRCODE.get:', 'out', '+=', '\"\\\\n\"', '+', '\"https', '/', '/', 'youtube.com', '/', 'watch?v', '=', '%', 's\"', '%', 'p.videoid)', 'out', '+=', '\"\\\\n\\\\n', '%', 's', '%', 'sPress', 'enter', 'to', 'go', 'back', '%', 's', '%', 's\"', '%', '(c.y,', 'c.w,', 'c.y,', 'c.w)', 'g.content', '=', 'out', \"r's\\\\s\", '*', '\\\\d', '1', '4', \"',\", \"'s')\", 'num', 'g.browse_mode', '==', 'g.content', '=', 'logo', 'c.b)', 'screen.update', 'screen.writestatus', 'stream', 'metadata..\")', 'item', '=', 'num)', '-', '1', 'streams.get', 'item)', 'p', '=', 'util.get_pafy', 'item)', 'setattr', 'p,', \"'ytid',\", 'p.videoid)', 'details', '=', 'player.stream_details', 'p', '1]', 'screen.writestatus', '\"Fetched\")', 'out', '=', '\"\\\\n\\\\n\"', '+', 'c.ul', '+', '\"Stream', 'Info\"', '+', 'c.w', '+', '\"\\\\n\"', 'out', '+=', '\"\\\\nExtension', '\"', '+', 'details', \"'ext']\", 'out', '+=', '\"\\\\nSize', '\"', '+', 'str', 'details', \"'size'\", 'out', '+=', '\"\\\\nQuality', '\"', '+', 'details', \"'quality']\", 'out', '+=', '\"\\\\nRaw', 'bitrate', '\"', '+', 'str', 'details', \"'rawbitrate'\", 'out', '+=', '\"\\\\nMedia', 'type', '\"', '+', 'details', \"'mtype']\", 'out', '+=', '\"', '+', 'details', \"'url']\", 'out', '+=', '\"\\\\n\\\\n', '%', 's', '%', 'sPress', 'enter', 'to', 'go', 'back', '%', 's', '%', 's\"', '%', '(c.y,', 'c.w,', 'c.y,', 'c.w)', 'g.content', '=', 'out', 'duplicates', '=', '=', '=', 'reversed', 'message', '=', 'play', 'duplicates:', 'seen', '=', 'set', 'seen_add', '=', 'seen.add', '=', '[x', 'x', '(x.ytid', 'seen', 'seen_add', 'x.ytid', 'message', '=', 'recent', 'played', 'songs\"', 'g.message', '=', 'message', 'g.content', '=', 'logo', 'c.r)', 'g.message', '=', 'empty\"', 'config.HISTORY.get:', 'g.message', '+=', '\"\\\\t', '1', 'currently', 'off', '0', 'c.w', 'c.y)', \"recent',\", \"recent')\", 'duplicates', '=', \"clear',\", \"clear')\", '.songs', '=', '[]', 'g.message', '=', 'cleared\"', 'g.content', '=', 'logo']"
    },
    {
        "link": "https://raw.githubusercontent.com/mps-youtube/yewtube/master/mps_youtube/commands/play.py",
        "vector": "['sys', 'T', 'webbrowser', '..', 'c,', 'config,', 'content,', 'g,', 'streams,', 'util', '.', 'RS,', 'WORD,', '.search', 'related,', 'yt_url', \"r'play\", \"all',\", \"'play\", \"all')\", 'play_loaded', '=', 'play_all', '\"\",', '\"\",', '\"\")', \"r'play\\\\s\", '+', '%', 's', '|', '\\\\d', '+', \"'\", '%', 'WORD,', \"'play')\", 'play_pl', 'name', 'name', '=', 'name)', 'name', '=', 'g.userpl', 'name', '-', '1]', 'saved', '=', 'g.userpl.get', 'name)', 'saved:', 'name', '=', 'util.get_near_name', 'name,', 'g.userpl)', 'saved', '=', 'g.userpl.get', 'name)', 'saved:', '=', 'saved.songs)', 'play_all', '\"\",', '\"\",', '\"\")', 'g.message', '=', 'util.F', '\"pl', 'found\")', '%', 'name', 'g.content', '=', \"r'\", '%', 's', '0', '3', '-', '\\\\d\\\\s\\\\', '\\\\', '1', '250', '\\\\s', '*', '%', 's', '0', '3', \"$'\", '%', '(RS,', 'RS', 'play', 'pre,', 'choice,', 'post', '=', '\"\"', 'g.content,', 'content.Content', 'play_call', '=', 'getattr', 'g.content,', '\"_play\",', 'callable', 'play_call', 'play_call', 'pre,', 'choice,', 'post)', 'g.browse_mode', '==', '\"ytpl\":', 'g.selected_pafy_pls_id', '=', 'g.ytpls', 'choice', '-', '1', 'g.selected_pafy_pls_id)', 'g.message', '=', '\"Invalid', 'selection:', '%s\"', '%', 'c.y', '+', 'choice', '+', 'c.w', 'g.content', '=', 'g.message', '=', 'c.r', '+', '\"There', 'are', 'no', 'tracks', 'to', 'select\"', '+', 'c.w', 'g.content', '=', 'g.content', 'shuffle', '=', '\"shuffle\"', 'pre', '+', 'post', 'repeat', '=', '\"repeat\"', 'pre', '+', 'post', 'novid', '=', '\"', '-', 'a\"', 'pre', '+', 'post', 'fs', '=', '\"', '-', 'f\"', 'pre', '+', 'post', 'nofs', '=', '\"', '-', 'w\"', 'pre', '+', 'post', '=', '\"', '-', 'v\"', 'pre', '+', 'post', 'novid', 'fs)', '(novid', 'nofs)', '(nofs', 'fs)', '(novid', 'override', 'options', 'override', '=', 'override', '=', '\"audio\"', 'novid', 'override', 'override', '=', '\"fullscreen\"', 'fs', 'override', 'override', '=', 'nofs', 'override', 'fs)', 'nofs', 'override', '=', 'override', 'selection', '=', 'util.parse_multi', 'choice)', '=', 'x', '-', '1]', 'x', 'selection]', 'len', '==', '1:', 'chosen', '=', 'selection', '0]', '-', '1', 'len', '>', 'chosen', '+', '1:', 'streams.preload', 'chosen', '+', '1', 'override', '=', 'override)', 'g.scrobble:', 'old_queue', '=', 'g.scrobble_queue', 'g.scrobble_queue', '=', '[g.scrobble_queue', 'x', '-', '1]', 'x', 'selection]', 'config.PLAYER.get', 'config.PLAYER.get', 'g.message', '=', '\"Player', 'configured!', 'Enter', '%sset', 'player', '<player_app>', '\"\\\\', '\"', '%', 's', 'to', 'set', 'a', 'player\"', '%', '(c.g,', 'c.w)', 'g.PLAYER_OBJ.play', 'shuffle,', 'repeat,', 'override)', 'KeyboardInterrupt:', 'g.content', '=', 'g.scrobble:', 'g.scrobble_queue', '=', 'old_queue', 'config.AUTOPLAY.get:', 'related', 'selection.pop', 'play', 'pre,', 'str', '1,', '15', 'post', '=', '\"\")', \"r'\", '%', 's', '0', '3', '?', '\\\\', '*', '|', 'all', '\\\\s', '*', '%', 's', '0', '3', \"'\", '%', '(RS,', 'RS', 'play_all', 'pre,', 'choice,', 'post', '=', '\"\"', 'options', '=', 'pre', '+', 'choice', '+', 'post', 'play', 'options,', '\"1', '-', '\"', '+', 'str', 'len', \"r'playurl\\\\s\", '.', '*', '-', '_a', '-', 'zA', '-', 'Z0', '-', '9', '11', '^', '\\\\s', '*', '\\\\s', '-', '?', 'f', '|', 'a', '|', 'w', \"?',\", \"'playurl')\", 'play_url', 'url:', 'str,', 'override:', 'T.Any', 'override', '=', 'override', 'override', '\"_\"', 'g.browse_mode', '=', 'yt_url', 'url,', '=', 'len', '==', '1:', 'play', 'override,', '\"1\",', '\"_\")', 'sys.exit', \"r'browserplay\\\\s\", '\\\\d', '1', '50', \"',\", \"'browserplay')\", 'browser_play', 'number', '(len', '==', '0', 'g.message', '=', 'c.r', '+', '\"No', 'previous', 'search.\"', '+', 'c.w', 'g.content', '=', 'content.logo', 'c.r)', '=', 'number)', '-', '1', '(0', '<=', '<', 'len', '=', '\"https', '/', '/', 'www.youtube.com', '/', 'watch?v', '=', '\"', 'video', '=', 'url', '=', '+', 'video.ytid', 'webbrowser.open', 'url)', 'g.content', '=', 'g.content', 'g.message', '=', 'c.r', '+', '\"Out', 'of', 'range.\"', '+', 'c.w', 'g.content', '=', 'g.content', 'Exception)', 'e:', 'g.message', '=', 'c.r', '+', 'str', 'e)', '+', 'c.w', 'g.content', '=', 'g.content']"
    },
    {
        "link": "https://raw.githubusercontent.com/mps-youtube/yewtube/master/mps_youtube/commands/search.py",
        "vector": "['json', 'math', 're', 'T', 'argparse', 'ArgumentParser', 'datetime', 'datetime,', 'urllib', 'parse', '..', 'pafy', 'parser', '=', 'ArgumentParser', 'parser.add_argument', \"'\", '-', \"d',\", \"'\", '--', \"duration',\", 'choices', '=', \"'any',\", \"'medium',\", \"'long'\", 'parser.add_argument', \"'\", '-', \"a',\", \"'\", '--', \"after')\", 'parser.add_argument', \"'\", '-', \"l',\", \"'\", '--', \"live',\", 'nargs', '=', '\"?\",', 'const', '=', 'parser.add_argument', \"'\", '-', \"c',\", \"'\", '--', 'nargs', '=', '1)', 'parser.add_argument', \"'search',\", 'nargs', '=', \"'\", '+', \"')\", '..', 'c,', 'config,', 'content,', 'contentquery,', 'g,', 'screen,', 'util', 'Video', '.', 'ISO8601_TIMEDUR_EX', '=', 're.compile', \"r'PT\", '\\\\d', '1', '3', 'H', '?', '\\\\d', '1', '3', 'M', '?', '\\\\d', '1', '2', 'S', \"?')\", 'DAYS', '=', 'dict', 'day', '=', '1,', 'week', '=', '7,', 'month', '=', '30,', 'year', '=', '365)', 'progtext,', 'wdata,', 'msg', '=', 'failmsg', '=', 'loadmsg', '=', \"'\", '%', 's', '%', 's', '%', 's\\'\"', '%', '(c.y,', 'progtext,', 'c.w)', 'iter_songs', 'wdata2', '=', 'wdata', 'song', 'wdata2', 'song', 'type', 'wdata2)', 'wdata2.get', \"'nextPageToken'\", 'query', '=', 'wdata2', '=', 'length', '=', 'len', 'wdata)', 'slicer', '=', 'util.IterSlicer', 'iter_songs', 'length)', 'slicer,', 'length', '=', 'length,', 'msg', '=', 'msg,', 'failmsg', '=', 'failmsg,', 'loadmsg', '=', 'loadmsg)', 'token', 'page', '=', '(page', '0)', '*', 'util.getxy', '.max_results', 'k', '=', '/', '/', '128', '-', '1', '-=', '128', '*', 'k', 'f', '=', '[8,', 'k', '>', '0', '>', '127:', 'f.append', 'k', '+', '1)', 'f', '+=', '[16,', '0]', 'b64', '=', 'bytes', 'f', '.decode', \"'utf8')\", 'b64.strip', \"'\", '=', \"')\", 'userdata_cached', 'userterm', 'userterm', '=', 't.strip', '.lower', 't', 'userterm.split', \"'\", \"'\", 'g.username_query_cache.get', 'userterm)', 'cache_userdata', 'userterm,', 'username,', 'channel_id', 'userterm', '=', 't.strip', '.lower', 't', 'userterm.split', \"'\", \"'\", 'g.username_query_cache', 'userterm]', '=', '(username,', 'channel_id)', 'util.dbg', \"'Cache\", 'data', 'username', 'search', 'query', '\"', '\":', '{}', 'userterm,', 'username,', 'channel_id', 'len', 'g.username_query_cache)', '>', '300:', 'g.username_query_cache.popitem', '=', '(username,', 'channel_id)', 'user', 'cached', '=', 'userdata_cached', 'user)', 'cached:', 'cached', 'channel_id,', 'channel_name', '=', 'user)', 'cache_userdata', 'user,', 'channel_name,', 'channel_id)', 'Exception', 'e:', 'traceback', 'type', 'e', 'e,', 'e.__traceback__)', 'g.message', '=', '\"Could', 'retrieve', 'user', '\\\\n', 'c.y', '+', 'user', '+', 'c.w,', 'e)', 'util.dbg', 'channel', 'request', 'user', '\\\\n', 'user,', 'e', \"r'channels\\\\s\", '+', '.', '+', \"')\", 'q_user', 'QueryObj', '=', 'contentquery.ContentQuery', \"'search',\", 'q_user)', 'columns', '=', '{\"name\":', '\"idx\",', '\"size\":', '3,', '\"Num\"', '{\"name\":', '\"name\",', '\"size\":', '30,', '\"Username\"', '{\"name\":', '\"description\",', '\"size\":', '\"Description\"', 'run_m', 'user_id', 'usersearch_id', '*', 'user_id', '0', 'g.content', 'g.content', '=', 'columns,', 'QueryObj,', 'run_m)', 'g.message', '=', '\"Results', 'channel', 'search:', \"'\", '%', 's\\'\"', '%', 'q_user', \"r'user\\\\s\", '+', '.', '+', \"',\", \"'user')\", 'usersearch', 'q_user,', '=', 'user,', '_,', 'term', '=', '(x.strip', 'x', 'q_user.partition', '\"', '/', '\"', '==', 'ret', '=', 'user)', 'ret:', 'user,', 'channel_id', '=', 'ret', 'channel_id', '=', 'user', 'usersearch_id', 'user,', 'channel_id,', 'term)', 'usersearch_id', 'user,', 'channel_id,', 'term', '=', 'dict', 'views', '=', \"'viewCount')\", 'config.USER_ORDER.get:', 'termuser', '=', 'tuple', 'c.y', '+', 'x', '+', 'c.w', 'x', '(term,', 'user', 'term:', 'msg', '=', '\"Results', '{1', '3', '0}', '(by', '{2', '4', '0', '\"', 'progtext', '=', '\"', '%', 's', 'by', '%s\"', '%', 'termuser', 'failmsg', '=', '\"No', 'results', '%s', '(by', '%s', '\"', '%', 'termuser', 'msg', '=', '\"Video', 'uploads', 'by', '{2', '4', '0', '\"', 'progtext', '=', 'termuser', '1]', 'config.SEARCH_MUSIC:', 'failmsg', '=', '%', 'termuser', '1]', 'failmsg', '=', '\"User', '%s', 'found', 'no', 'videos.\"', '%', 'termuser', '1]', 'msg', '=', 'str', 'msg', 'c.w,', 'c.y,', 'c.y,', 'term,', 'user)', 'results', '=', 'channel_id)', 'progtext,', 'results,', 'msg,', 'failmsg)', 'related_search', 'vitem', 't', '=', 'vitem.title', 'ttitle', '=', 't', '48', '.strip', '+', '\"..\"', 'len', 't)', '>', '49', 't', 'msg', '=', '\"Videos', 'related', 'to', '%s', '%', 's', '%', 's\"', '%', '(c.y,', 'ttitle,', 'c.w)', 'failmsg', '=', '\"Related', 'to', '%s', '%', 's', '%', 's', 'found\"', '%', '(c.y,', 'vitem.ytid,', 'c.w)', \"r'live\\\\s\", '+', '.', '+', \"',\", \"'live')\", 'term', '=', 'term,', 'g.message', '=', '(\"That', 'a', 'valid', 'Valid', 'are:', '\")', 'g.message', '+=', '(\",', 'query', '=', '\"part\":', '\"id', 'snippet\",', '\"eventType\":', '\"live\",', '\"maxResults\":', '50,', '\"type\":', '\"video\",', 'query_obj', '=', 'contentquery.ContentQuery', \"'search',\", 'query)', 'columns', '=', '{\"name\":', '\"idx\",', '\"size\":', '3,', '\"Num\"', '{\"name\":', '\"title\",', '\"size\":', '40,', '\"Title\"', '{\"name\":', '\"description\",', '\"size\":', '\"Description\"', 'start_stream', 'songs', '=', '\"Search', 'Results\",', '[Video', '*', 'x)', 'x', 'config.PLAYER.get', 'config.PLAYER.get', 'g.message', '=', '\"Player', 'configured!', 'Enter', '%sset', 'player', '<player_app>', '\"\\\\', '\"', '%', 's', 'to', 'set', 'a', 'player\"', '%', '(c.g,', 'c.w)', 'g.PLAYER_OBJ.play', 'songs,', 'g.content', '=', 'columns,', 'query_obj,', 'start_stream)', 'g.message', '=', '\"Livestreams', \"'\", '%', 's\\'\"', '%', 'term', \"r'\", '?', 'search', '|', '\\\\.', '|', '/', '\\\\s', '*', '^', '.', '/', '.', '1', '500', \"',\", \"'search')\", 'search', 'term', 'args,', 'unknown', '=', 'parser.parse_known_args', 'term.split', 'video_duration', '=', 'args.duration', 'args.duration', \"'any'\", '0', '=', '0', '=', 'after', '=', 'args.after', 'term', '=', \"'\", 'args.search)', 'SystemExit:', 'g.message', '=', 'c.b', '+', '\"Bad', 'syntax.', 'Enter', 'h', 'help\"', '+', 'c.w', 'term', 'len', 'term)', '<', '2:', 'g.message', '=', 'c.r', '+', '\"Not', 'enough', '+', 'c.w', 'g.content', '=', '\"search', '%s\",', 'term)', 'msg', '=', '\"Search', 'results', '%s', '%', 's', '%', 's\"', '%', '(c.y,', 'term,', 'c.w)', 'failmsg', '=', '\"Found', '%s', '%', 's', '%', 's\"', '%', '(c.y,', 'term,', 'c.w)', 'wdata', '=', 'pafy.search_videos', 'term,', 'config.PAGES.get', 'term,', 'wdata,', 'msg,', 'failmsg)', \"r'u\", '?', 'ser', '?pl\\\\s', '.', '*', \"',\", \"'userpl',\", \"'upl')\", 'user_pls', 'user', 'pl_search', 'user,', '=', \"r'\", '?', '\\\\.\\\\.', '|', '\\\\', '/', '\\\\', '/', '|', 'pls', '?', 'earch', '?\\\\s', '\\\\s', '*', '.', '*', \"',\", \"'plsearch')\", 'pl_search', 'term,', 'page', '=', '0,', '=', '=', 'term', 'len', 'term)', '<', '2:', 'g.message', '=', 'c.r', '+', '\"Not', 'enough', '+', 'c.w', 'g.content', '=', 'g.content', '=', 'content.logo', 'c.g)', 'prog', '=', '\"user:', '\"', '+', 'term', 'term', 'g.message', '=', '%s\"', '%', 'c.y', '+', 'prog', '+', 'c.w', 'screen.update', 'search', '%s\",', 'prog)', 'ret', '=', 'term)', 'ret:', 'user,', 'channel_id', '=', 'ret', 'pldata', '=', 'channel_id)', 'pldata', '=', 'term)', '=', 'pldata', 'util.getxy', '.max_results]', '=', '(pl_search,', '{\"term\":', 'term,', 'g.browse_mode', '=', '\"ytpl\"', 'g.current_page', '=', 'page', 'g.result_count', '=', 'len', 'pldata)', 'g.ytpls', '=', 'g.message', '=', 'results', '%s\"', '%', 'c.y', '+', 'prog', '+', 'c.w', 'g.content', '=', 'g.message', '=', '\"No', 'found', '%s\"', '%', 'c.y', '+', 'prog', '+', 'c.w', 'g.current_page', '=', '0', 'g.content', '=', 'zeromsg', '=', 'g.message)', 'pldata', 'items', '=', 'pldata', 'items', '=', '[]', 'results', '=', '[]', 'item', 'items:', 'results.append', 'dict(', '=', 'item', '\"id\"', 'size', '=', 'item', '\"videoCount\"', 'title', '=', 'item', '\"title\"', 'item', \"'channel'\", '\"name\"]', \"'channel'\", 'item.keys', 'created', '=', 'item.get', 'updated', '=', 'item.get', 'description', '=', 'item.get', '\"description\"', 'results', 'item', 'fields', '=', \"['contentDetails\", '/', \"videoId',\", \"'snippet\", '/', 'resourceId', '/', \"videoId',\", \"'id\", '/', \"videoId',\", \"'id']\", 'field', 'fields:', 'node', '=', 'item', 'p', 'field.split', \"'\", '/', \"'\", 'node', 'node,', 'dict', 'node', '=', 'node.get', 'p)', 'node:', 'node', \"''\", 'jsons', 'len', 'jsons)', '==', '0:', 'util.dbg', '\"got', 'unexpected', 'data', 'no', 'search', 'results\")', '()', 'songs', '=', '[]', 'item', 'jsons:', 'ytid', '=', 'item)', 'duration', '=', 'util.parse_video_length', 'item.get', \"'duration'\", 'title', '=', 'item.get', \"'title',\", \"''\", '.strip', 'cursong', '=', 'Video', 'ytid', '=', 'ytid,', 'title', '=', 'title,', 'length', '=', 'duration)', '=', \"{'likes':\", '0,', '0,', '0}', 'likes', '=', \"'likes'\", '=', '=', '=', \"'?'\", '=', 'item.get', \"'?')\", 'g.meta', 'ytid]', '=', 'dict(', 'title', '=', 'title,', 'length', '=', 'str', 'util.fmt_time', 'cursong.length', '=', 'uploader', '=', 'item', \"'channel'\", \"'id'\", 'uploaderName', '=', 'item', \"'channel'\", \"'name'\", '=', '=', '\"custom\",', 'uploaded', '=', 'uploadedTime', '=', 'likes', '=', 'str', 'num_repr', 'likes', '=', 'str', 'num_repr', 'commentCount', '=', \"'?',\", 'viewCount=', 'item', \"'viewCount'\", \"'text']\", \"'viewCount'\", 'item.keys', \"'?')\", 'songs.append', 'cursong)', 'Exception', 'e:', 'traceback', 'type', 'e', 'e,', 'e.__traceback__)', \"'Press\", 'any', 'key', 'to', 'util.dbg', 'json.dumps', 'item,', '=', '2', 'util.dbg', 'metadata', 'extraction', '/', 'of', \"'\", '+', \"'search\", 'result', '\\\\n', 'ytid,', 'e', 'songs', 'num_repr', 'num', 'num', '<=', '9999:', 'str', 'num)', 'digit_count', 'x', 'math.log10', 'x', '+', '1)', 'digits', '=', 'digit_count', 'num)', 'sig', '=', '3', 'digits', '%', '3', '==', '0', '2', 'rounded', '=', 'round', 'num,', 'sig', '-', 'digits', 'digits', '=', 'digit_count', 'rounded)', 'suffix', '=', '\"_kmBTqXYX\"', 'digits', '-', '1)', '//', '3]', 'front', '=', '3', 'digits', '%', '3', '==', '0', 'digits', '%', '3', 'front', '==', '1:', 'str', 'rounded', '0', 'front]', '+', 'suffix', 'str', 'rounded', '0]', '+', '\".\"', '+', 'str', 'rounded', '1]', '+', 'suffix', \"r'u\\\\s?\", '\\\\d', '1', '4', \"',\", \"'u')\", 'num', 'g.browse_mode', '!=', 'g.message', '=', '\"User', 'uploads', 'must', 'refer', 'to', 'a', 'video', 'item\"', 'g.message', '=', 'c.y', '+', 'g.message', '+', 'c.w', 'g.content', '=', 'g.current_page', '=', '0', 'item', '=', 'num)', '-', '1]', 'item.ytid', 'g.meta:', 'channel_id', '=', 'g.meta.get', 'item.ytid,', '.get', \"'uploader')\", 'user', '=', 'g.meta.get', 'item.ytid,', '.get', \"'uploaderName')\", 'paf', '=', 'util.get_pafy', 'item)', 'user,', 'channel_id', '=', 'usersearch_id', 'user,', 'channel_id,', \"'')\", \"r'r\\\\s?\", '\\\\d', '1', '4', \"',\", \"'r')\", 'related', 'num', 'g.browse_mode', '!=', 'g.message', '=', '\"Related', 'items', 'must', 'refer', 'to', 'a', 'video', 'item\"', 'g.message', '=', 'c.y', '+', 'g.message', '+', 'c.w', 'g.content', '=', 'g.current_page', '=', '0', 'item', '=', 'num)', '-', '1]', 'related_search', 'item)', \"r'mix\\\\s\", '*', '\\\\d', '1', '4', \"',\", \"'mix')\", 'mix', 'num', 'g.content', '=', 'g.content', 'g.browse_mode', '!=', 'g.message', '=', 'util.F', \"'mix\", 'only', \"videos')\", 'item', '=', 'num)', '-', '1', 'item', 'g.message', '=', 'util.F', \"item')\", 'item', '=', 'util.get_pafy', 'item)', '\"RD\"', '+', 'item.videoid)', 'g.message', '=', 'util.F', \"'no\", \"mix')\", 'r\"url\\\\s', '.', '*', '-', '_a', '-', 'zA', '-', 'Z0', '-', '9', '11', '.', '*', '\",', '\"url\")', 'yt_url', 'url:', 'str,', 'bool', '=', '=', 'url.split', '=', '[]', 'v_ids', '=', 'set', 'v_title', '=', 'url', 'v_id', '=', 'pafy.extract_video_id', 'url)', 'v_id', 'v_ids:', 'p', '=', 'v_id)', 'Exception)', 'e:', 'g.message', '=', 'c.r', '+', 'str', 'e)', '+', 'c.w', 'g.content', '=', 'g.content', 'zeromsg', '=', 'g.message)', 'g.browse_mode', '=', 'v', '=', 'Video', 'p', \"'id'\", 'p', \"'title'\", 'p', \"'duration'\", \"'secondsText'\", 'p', 'p,', 'dict', 'v_title', '=', 'p.get', '\"title\")', 'v)', 'v_ids.add', 'v_id)', 'g.content', '=', 'v_title:', 'v_title)', \"r'url_file\\\\s\", '\\\\S', '+', \"',\", \"'url_file')\", 'yt_url_file', 'file_name', 'open', 'file_name,', '\"r\")', 'fo:', 'output', '=', \"'\", 'fo', 'g.message', '=', 'c.r', '+', 'the', 'file,', 'check', 'the', 'validity', 'of', 'the', \"path'\", '+', 'c.w', 'g.content', '=', 'g.content', 'zeromsg', '=', 'g.message)', 'yt_url', 'output)']"
    },
    {
        "link": "https://raw.githubusercontent.com/mps-youtube/yewtube/master/mps_youtube/commands/songlist.py",
        "vector": "['math', '..', 'g,', 'c,', 'screen,', 'streams,', 'content,', 'util,', 'pafy', 'Video', '.', 'PL', 'func,', 'page', '=', '0,', '=', 'dumps', '=', 'length', '=', 'msg', '=', 'failmsg', '=', 'loadmsg', '=', 'g.message', '=', 'loadmsg', \"''\", 'g.content', '=', 'content.logo', 'col', '=', 'c.b)', 'screen.update', 'max_results', '=', 'util.getxy', '.max_results', 'dumps:', 's', '=', '0', 'e', '=', 's', '=', 'page', '*', 'max_results', 'e', '=', '(page', '+', '1)', '*', 'max_results', 'callable', 'func', 'songs', '=', 'func', 's,', 'e)', 'songs', '=', 'func', 's', 'e]', 'length', 'length', '=', 'len', 'func)', 'args', '=', \"{'func'\", 'func,', \"'length'\", 'length,', \"'msg'\", 'msg,', \"'failmsg'\", 'failmsg,', \"'loadmsg':\", 'loadmsg}', '=', 'args)', 'g.browse_mode', '=', 'g.current_page', '=', 'page', 'g.result_count', '=', 'length', '=', 'songs', 'g.content', '=', '=', '\"\"', 'g.message', '=', 'msg', \"''\", 'songs:', 'g.message', '=', 'failmsg', 'g.message', 'songs:', 'streams.preload', 'songs', '0', '=', '0)', \"r'pl\\\\s\", '+', '%', \"s'\", '%', 'PL,', \"'pl')\", 'parturl', 'parturl', 'g.pafy_pls:', 'ytpl,', 'plitems', '=', 'g.pafy_pls', 'parturl]', 'util.dbg', '\"', '%', 'pafy', '%', 's\",', 'c.y,', 'c.w)', 'ytpl', '=', 'parturl)', 'plitems', '=', 'util.IterSlicer', 'ytpl.videos)', 'g.pafy_pls', 'parturl]', '=', '(ytpl,', 'plitems)', 'pl_seg', 's,', 'e', '[Video', 'i', \"'id'\", 'i', \"'title'\", 'util.parse_video_length', 'i', \"'duration'\", 'i', 'plitems', 's', 'e', 'msg', '=', 'YouTube', '%s\"', '%', '(c.y', '+', \"'title']\", '+', 'c.w)', 'loadmsg', '=', 'YouTube', 'pl_seg,', 'length', '=', 'len', 'ytpl.videos', 'msg', '=', 'msg,', 'loadmsg', '=', 'loadmsg)', \"r'\", 'rm', '|', 'add', '\\\\s', '*', '-', '?\\\\d', '-', '\\\\d\\\\s', '250', \"',\", \"'rm',\", \"'add')\", 'action,', 'songrange', 'selection', '=', 'util.parse_multi', 'songrange)', 'action', '==', '\"add\":', 'duplicate_songs', '=', '[]', 'songnum', 'selection:', 'songnum', '-', '1]', 'g.active:', 'duplicate_songs.append', 'str', 'songnum', 'g.active.songs.append', 'songnum', '-', '1', 'd', '=', 'g.active.duration', 'g.message', '=', 'util.F', \"'added\", 'to', \"pl')\", '%', '(len', 'selection', 'len', 'g.active', 'd)', 'duplicate_songs:', 'duplicate_songs', '=', \"',\", 'duplicate_songs', 'g.message', '+=', \"'\\\\n'\", 'g.message', '+=', 'util.F', \"'duplicate\", \"tracks')\", '%', 'duplicate_songs', 'action', '==', '\"rm\":', 'selection', '=', 'set', 'selection', 'reverse', '=', 'removed', '=', 'str', 'tuple', 'reversed', 'selection', '.replace', '\"', '\",', '\"\")', 'x', 'selection:', 'x', '-', '1)', 'g.active.songs.pop', 'g.current_page', '*', 'util.getxy', '.max_results', '+', 'x', '-', '1)', 'g.message', '=', 'util.F', \"'songs\", \"rm')\", '%', '(len', 'selection', 'removed)', 'g.content', '=', \"r'\", 'mv', '|', 'sw', '\\\\s', '*', '\\\\d', '1', '4', '\\\\s', '*', '\\\\s', '\\\\s', '*', '\\\\d', '1', '4', \"',\", \"'mv',\", \"'sw')\", 'action,', 'a,', 'b', 'i,', 'j', '=', 'a)', '-', '1,', 'b)', '-', '1', 'action', '==', '\"mv\":', 'j,', 'i', 'g.message', '=', 'util.F', \"'song\", \"move')\", '%', 'j', '.title,', 'b)', 'action', '==', '\"sw\":', 'i', 'j]', '=', 'j', 'i]', 'g.message', '=', 'util.F', \"'song\", \"sw')\", '%', 'a,', 'b', 'max', 'a,', 'b', 'g.content', '=', \"r'\", 'n', '|', 'p', '\\\\s', '*', '\\\\d', '1', '2', \"?')\", 'nextprev', 'np,', 'page', '=', 'g.content,', 'page_count', '=', 'g.content.numPages', 'function', '=', 'g.content.getPage', 'args', '=', '{}', 'page_count', '=', 'math.ceil', 'g.result_count', '/', 'util.getxy', '.max_results)', 'function,', 'args', '=', 'good', '=', 'function:', 'np', '==', '\"n\":', 'g.current_page', '+', '1', '<', 'page_count:', 'g.current_page', '+=', '1', 'good', '=', 'np', '==', '\"p\":', 'page', 'page)', 'range', '1', '20', 'g.current_page', '=', 'page', '-', '1', 'good', '=', 'g.current_page', '>', '0:', 'g.current_page', '-=', '1', 'good', '=', 'good:', 'function', 'page', '=', 'g.current_page,', '*', '*', 'args)', '=', '\"next\"', 'np', '==', '\"n\"', '\"previous\"', 'g.message', '=', '\"No', '%s', 'items', 'to', '%', 'g.content,', 'g.content', '=', 'good', \"r'\", 'un', \"?dump',\", \"'dump',\", \"'undump')\", 'dump', 'un', 'func,', 'args', '=', 'func', 'dumps', '=', 'un', '*', '*', 'args)', 'un', '=', '\"\"', 'un', 'un', 'g.message', '=', '\"', '%', 's', '%', 'sdump', '%', 's', 'may', 'only', 'be', 'used', 'on', 'an', 'open', 'YouTube', 'g.message', '=', 'g.message', '%', '(c.y,', 'un,', 'c.w)', 'g.content', '=', \"r'shuffle',\", \"'shuffle')\", 'shuffle_fn', 'g.message', '=', 'c.y', '+', '\"Items', 'shuffled\"', '+', 'c.w', 'g.content', '=', \"r'shuffle\", \"all',\", \"'shuffle\", \"all')\", 'songs', '=', 'songs:', 'temp_songs', '=', 'songs)', 'temp_songs)', 'temp_songs)', 'g.message', '=', 'c.y', '+', '\"Shuffled', 'entire', '+', 'c.w', 'g.content', '=', \"r'reverse',\", \"'reverse')\", 'reverse_songs', '=', '-', '1]', 'g.message', '=', 'c.y', '+', '\"Reversed', 'songs\"', '+', 'c.w', 'g.content', '=', \"r'reverse\\\\s\", '*', '\\\\d', '1', '4', '\\\\s', '*', '-', '\\\\s', '*', '\\\\d', '1', '4', '\\\\s', '*', \"',\", \"'reverse')\", 'reverse_songs_range', 'lower,', 'upper', 'lower,', 'upper', '=', 'lower', 'upper)', 'lower', '>', 'upper:', 'lower,', 'upper', '=', 'upper,', 'lower', 'lower', '-', '1', 'upper]', '=', 'reversed', 'lower', '-', '1', 'upper', 'g.message', '=', 'c.y', '+', '\"Reversed', 'range:', '\"', '+', 'str', 'lower)', '+', '\"', '-', '\"', '+', 'str', 'upper)', '+', 'c.w', 'g.content', '=', \"r'reverse\", \"all',\", \"'reverse\", \"all')\", 'songs', '=', 'songs:', 'reversed', 'songs', 'g.message', '=', 'c.y', '+', '\"Reversed', 'entire', '+', 'c.w', 'g.content', '=']"
    },
    {
        "link": "https://raw.githubusercontent.com/mps-youtube/yewtube/master/mps_youtube/commands/spotify_playlist.py",
        "vector": "['re', 'time', 'spotipy', 'spotipy.oauth2', 'oauth2', '=', '=', '..', 'c,', 'g,', 'screen,', '__version__,', '__url__,', 'content,', 'config,', 'util', '.', '.search', 'generate_credentials', 'credentials', '=', 'client_id', '=', \"'6451e12933bb49ed8543d41e3296a88d',\", 'client_secret', '=', \"'40ef54678fe441bd9acd66f5d5c34e69')\", 'credentials', \"'\", '/', \"'\", \"'\", '/', \"'\", '=', '-', '1]', 'splits', '=', \"'\", '/', \"')\", 'splits', '=', \"'\", \"')\", 'username', '=', 'splits', '-', '3]', '=', 'splits', '-', '1]', 'results', '=', 'username,', 'fields', '=', \"'tracks\", 'next', 'name', \"owner')\", 'all_tracks', '=', '[]', 'tracks', '=', 'results', \"'tracks']\", 'item', 'tracks', \"'items'\", 'track', '=', 'item', \"'track']\", 'all_tracks.append', 'track)', 'tracks', \"'next'\", 'tracks', '=', 'tracks)', '(results,', 'all_tracks)', 'show_message', 'message,', 'col', '=', 'c.r,', 'update', '=', 'g.content', '=', 'g.message', '=', 'col', '+', 'message', '+', 'c.w', 'update:', 'screen.update', '_best_song_match', 'songs,', 'title,', 'duration,', 'titleweight,', 'durationweight', 'seqmatch', '=', 'variance', 'a,', 'b', 'float', 'abs', 'a', '-', 'b', '/', 'max', 'a,', 'b)', '=', '[]', '=', '\"music', 'video', 'lyrics', 'new', 'lyrics', 'video', 'audio\".split', 'extra', '=', '\"official', 'vevo\".split', 'song', 'songs:', 'dur,', 'tit', '=', 'song.length', 'song.title', 'util.dbg', '\"Title:', '%s,', 'Duration:', '%s\",', 'tit,', 'dur)', 'extra:', 'tit.lower', 'title.lower', 'pattern', '=', 're.compile', 're.I)', 'tit', '=', 'pattern.sub', '\"\",', 'tit)', 'tit.lower', 'title.lower', 'pattern', '=', 're.compile', 're.I)', 'tit', '=', 'pattern.sub', '\"\",', 'tit)', 'replacechars', '=', 're.compile', 'r\"', '\\\\', '\\\\', '\\\\', '\\\\', '\\\\', '-', '\")', 'tit', '=', 'replacechars.sub', '\"', '\",', 'tit)', 'multiple_spaces', '=', 're.compile', 'r\"', '\\\\s', '\\\\s', '*', '\")', 'tit', '=', 'multiple_spaces.sub', 'r\"\\\\1\",', 'tit)', '=', 'seqmatch', 'title.lower', 'tit.lower', '.ratio', '=', '1', '-', 'variance', 'duration,', 'dur)', 'util.dbg', '\"Title', '%s,', 'Duration', '%s\",', '=', '*', 'durationweight', '+', '*', 'titleweight', 'song', 'best_song', '=', 'max', 'key', '=', 'x:', 'x', '0', '=', '100', '*', 'best_song,', '_match_tracks', 'tracks', 'dtime', 'x', 'time.strftime', \"'\", '%', 'M', '%', \"S',\", 'time.gmtime', 'x', 'track', 'tracks:', 'ttitle', '=', 'track', \"'name']\", '=', 'track', '0', \"'name']\", 'length', '=', 'track', \"'duration_ms'\", '/', '1000', '\"Search', '%s', '%', 's', '-', '%s', '%', 's', '-', '%s\"', '%', '(c.y,', 'ttitle,', 'c.w,', 'dtime', 'length', 'q', '=', '\"', '%', 's', '%s\"', '%', 'ttitle)', 'w', '=', 'q', '=', 'ttitle', '==', '\"Various', 'q', 'query', '=', 'w', 'util.dbg', 'query)', 'wdata', '=', 'results', '=', 'wdata)', 'results:', 'c.r', '+', 'matched', '\\\\n\"', '+', 'c.w)', 's,', '=', '_best_song_match(', 'results,', '+', '\"', '\"', '+', 'ttitle,', 'length,', '.5,', '.5)', 'cc', '=', 'c.g', '>', '85', 'c.y', 'cc', '=', 'c.r', '<', '75', 'cc', '\"Matched:', '%s', '%', 's', '%', 's', '-', '%s', '\\\\n', '%', 'sMatch', 'confidence:', '\"', '\"', '%', 's', '%', 's', '\\\\n\"', '%', '(c.y,', 's.title,', 'c.w,', 'util.fmt_time', 's.length', 'cc,', 'c.w', 's', \"r'suser\\\\s\", '*', '.', '*', '-', '_a', '-', 'zA', '-', 'Z0', '-', '9', '.', '*', \"?',\", \"'suser')\", 'search_user', 'term', 'term:', 'show_message', '\"Enter', 'username', '\",', 'c.g,', 'update', '=', 'term', '=', '\">', '\")', 'term', 'len', 'term)', '<', '2:', 'g.message', '=', 'c.r', '+', '\"Not', 'enough', '+', 'c.w', 'g.content', '=', 'credentials', '=', 'generate_credentials', 'token', '=', 'credentials.get_access_token', '=', 'auth', '=', 'token)', '=', 'term)', '=', '[]', 'check', '=', '1', 'g.content', '=', '\\\\n\"', \"'items'\", \"'name']\", 'g.content', '+=', \"(u'\", '0', '>', '2', '.', '{1', '<', '30}', '2}', 'tracks', 'check,', \"'name'\", \"'tracks'\", \"'total'\", 'g.content', '+=', '\"\\\\n\"', 'check', '+=', '1', \"'next'\", '=', 'g.message', '=', 'c.g', '+', '\"Choose', 'your', '\"', '+', 'c.w', 'screen.update', 'choice', '=', '\">', '\"', '=', 'choice', '-', '1]', \"'external_urls'\", '=', 'g.message', '=', '\"spotipy', 'module', 'must', 'be', 'g.message', '+=', '\"see', 'https', '/', '/', '/', 'pypi', '/', 'spotipy', '/', '\"', '*', '.', '*', '-', '_a', '-', 'zA', '-', 'Z0', '-', '9', '.', '*', \"?',\", 'term,', '=', 'term:', 'show_message', '\"Enter', 'url', '\",', 'c.g,', 'update', '=', 'term', '=', '\">', '\")', 'term', 'len', 'term)', '<', '2:', 'g.message', '=', 'c.r', '+', '\"Not', 'enough', '+', 'c.w', 'g.content', '=', 'credentials', '=', 'generate_credentials', 'token', '=', 'credentials.get_access_token', '=', 'auth', '=', 'token)', 'tracks', '=', 'term)', 'tracks', '=', 'tracks:', 'show_message', \"'\", '%', \"s'\", 'found!\"', '%', 'term)', \"'tracks'\", \"'total'\", 'show_message', \"'\", '%', \"s'\", 'by', \"'\", '%', \"s'\", '0', 'tracks!\"', '%', \"'name'\", \"'owner'\", \"'id'\", 'msg', '=', '\"', '%', 's', '%', 's', '%', 's', 'by', '%s', '%', 's', '%', 's\\\\n\\\\n\"', '%', '(c.g,', \"'name'\", 'c.w,', 'c.g,', \"'owner'\", \"'id'\", 'c.w)', 'msg', '+=', '\"Enter', 'to', '[q]', 'to', 'g.message', '=', 'msg', 'g.content', '=', '\"Tracks', '\\\\n\"', 'n,', 'track', 'enumerate', 'tracks,', '1', 'trackname', '=', \"'\", '0', '<', '20}', '-', '{1', 'track', '0', \"'name'\", 'track', \"'name'\", 'g.content', '+=', '\"', '%', '03s', '%s\"', '%', '(n,', 'trackname)', 'g.content', '+=', '\"\\\\n\"', 'screen.update', '=', '[Enter]', '>', '\")', '==', '\"\":', 'show_message', 'search', 'songs', '=', '[]', 'screen.clear', 'itt', '=', '_match_tracks', 'tracks)', '=', 'config.SEARCH_MUSIC.get,', 'config.ORDER.get', 'config.SEARCH_MUSIC.value', '=', 'config.ORDER.value', '=', '\"relevance\"', 'songs.extend', 'itt)', 'KeyboardInterrupt:', '\"', '%', 'sHalted!', '%', 's\"', '%', '(c.r,', 'c.w', 'config.SEARCH_MUSIC.value,', 'config.ORDER.value', '=', 'songs:', '\"\\\\n', '%', 's', '/', '%s', 'songs', 'matched\"', '%', '(len', 'songs', 'len', 'tracks', '\"Press', 'Enter', 'to', 'msg', '=', '\"Contents', 'of', '%s', '%', 's', '-', '%s', '%', 's', '%s', '%', 'd', '/', '%', 'd', '%', 's', '\"', '%', 'c.y,', \"'owner'\", \"'id'\", \"'name'\", 'c.w,', 'c.b,', 'len', 'songs', 'len', 'tracks', 'c.w)', 'failmsg', '=', '\"Found', 'no', 'tracks', '%s', '%', 's', '%', 's\"', '%', '(c.y,', \"'name'\", 'c.w)', 'songs,', 'msg', '=', 'msg,', 'failmsg', '=', 'failmsg)', 'g.message', '=', '\"spotipy', 'module', 'must', 'be', 'g.message', '+=', '\"see', 'https', '/', '/', '/', 'pypi', '/', 'spotipy', '/', '\"']"
    },
    {
        "link": "https://raw.githubusercontent.com/mps-youtube/yewtube/master/mps_youtube/config.py",
        "vector": "['os', 're', 'sys', 'copy', 'pickle', 'json', 'urllib.request', 'urlopen', 'urllib.parse', 'urlencode', '=', '=', '.', 'g,', 'c,', 'paths,', 'util', '=', 'os.name', '==', '\"nt\"', 'ConfigItem:', 'self,', 'name,', 'value,', '=', 'maxval', '=', 'check_fn', '=', 'require_known_player', '=', 'allowed_values', '=', '=', 'self.value', '=', 'value', 'self.temp_value', '=', 'self.name', '=', 'name', 'self.type', '=', 'type', 'value)', 'self.maxval,', '=', 'maxval,', 'self.check_fn', '=', 'check_fn', 'self.require_known_player', '=', 'require_known_player', 'self.allowed_values', '=', '[]', 'allowed_values:', 'self.allowed_values', '=', 'allowed_values', '@property', 'get', 'self', 'self.temp_value', 'self.value', 'self.temp_value', '@property', 'self', 'self.value)', '@property', 'self', 'self.temp_value', '\"\"', 'self.temp_value)', 'self,', 'retval', 'self.name', '==', '\"max_res\":', 'retval', '=', 'str', 'retval)', '+', '\"p\"', 'self.name', '==', '\"encoder\":', 'retval', '=', 'str', 'retval)', '+', '\"', '%', 's', '\"', '%', '(str', 'g.encoders', 'retval', \"'name'\", 'retval', 'set', 'self,', 'value,', '=', 'success_msg', '=', 'fail_msg', '=', '\"\"', 'value', '=', 'value.strip', '=', 'value', 'self.allowed_values', 'value', 'self.allowed_values:', 'fail_msg', '=', '\"', '%', 's', 'must', 'be', 'one', 'of', '*', '-', '%s\"', 'allowed_values', '=', 'copy.copy', 'self.allowed_values)', \"''\", 'allowed_values:', 'allowed_values', \"''\", '=', '\"', '<', '>', '\"', 'fail_msg', '=', 'fail_msg.replace', '\"', '*', '\",', '\",', 'allowed_values', 'self.require_known_player', '\\\\', 'Config.PLAYER.get', 'fail_msg', '=', '\"', '%', 's', 'requires', 'mpv', 'mplayer,', \"can't\", 'set', 'to', '%s\"', 'self.type', '==', 'bool:', 'value.upper', '\"0', 'OFF', 'NO', 'DISABLED', 'FALSE\".split', 'value', '=', 'success_msg', '=', '\"', '%', 's', 'set', 'to', '%', 'c.c', '\"g\",', 'self.name)', 'value.upper', '\"1', 'ON', 'YES', 'ENABLED', 'TRUE\".split', 'value', '=', 'success_msg', '=', '\"', '%', 's', 'set', 'to', '%', 'c.c', '\"g\",', 'self.name)', 'fail_msg', '=', '\"', '%', 's', 'requires', '/', 'got', '%s\"', 'self.type', '==', 'fail_msg', '=', '\"', '%', 's', 'requires', 'a', 'number,', 'got', '%s\"', 'value', '=', 'value)', 'self.maxval', '<=', 'value', '<=', 'self.maxval:', 'm', '=', '\"', 'must', 'be', 'between', '%s', '%s,', 'got', '\"', 'm', '=', 'm', '%', 'self.maxval)', 'fail_msg', '=', '\"', '%', 's\"', '+', 'm', '+', '\"', '%', 's\"', 'fail_msg:', '=', 'value', 'success_msg', '=', '\"', '%', 's', 'set', 'to', '%s\"', '%', '(c.c', '\"g\",', 'self.name', 'self.type', '==', 'success_msg', '=', '\"', '%', 's', 'set', 'to', '%s\"', '%', '(c.c', '\"g\",', 'self.name', 'value)', 'value', '=', 'value.split', 'self.type', '==', 'str:', '=', 'value', 'success_msg', '=', '\"', '%', 's', 'set', 'to', '%s\"', '%', '(c.c', '\"g\",', 'self.name', 'c.c', '\"g\",', 'fail_msg:', 'failed_val', '=', '\"', '<', '>', '\"', 'colvals', '=', 'c.y', '+', 'self.name', '+', 'c.w,', 'c.y', '+', 'failed_val', '+', 'c.w', 'fail_msg', '%', 'colvals', 'self.check_fn:', 'checked', '=', 'self.check_fn', 'value)', 'value', '=', 'checked.get', '\"value\")', 'value', 'checked', \"'valid'\", 'value', '=', 'checked.get', '\"value\",', 'value)', 'set_save', 'self,', 'value,', 'checked.get', '\"message\",', 'success_msg)', 'checked.get', \"'message',\", 'fail_msg)', 'success_msg:', 'set_save', 'self,', 'value,', 'success_msg', 'set_save', 'self,', 'value,', 'self.temp_value', '=', 'self.value', '=', 'value', 'Config.save', 'self.temp_value', '=', 'value', 'check_console_width', 'val', 'valid', '=', 'message', '=', '\"', '-', '\"', '*', 'val', '+', '\"\\\\n\"', 'message', '+=', '\"console_width', 'set', 'to', '%s,', 'a', 'lower', 'value', 'above', 'ove\"\\\\', '\"rlaps\"', '%', 'val', 'dict', 'valid', '=', 'valid,', 'message', '=', 'message)', 'check_ddir', 'd', '=', 'd)', 'message', '=', '\"Downloads', 'will', 'be', 'saved', 'to', '\"', '+', 'c.y', '+', 'd', '+', 'c.w', 'dict', 'valid', '=', 'message', '=', 'message,', 'value', '=', 'message', '=', '\"Not', 'a', 'valid', '\"', '+', 'c.r', '+', 'd', '+', 'c.w', 'dict', 'valid', '=', 'message', '=', 'message)', 'pos', 'pos.strip', 'dict', 'valid', '=', 'message', '=', 'position', 'set', '\")', 'pos', '=', 'pos.lower', 'reg', '=', 'r\"', 'TOP', '|', 'BOTTOM', '.?', 'LEFT', '|', 'RIGHT', '\"', 're.match', 'reg,', 'pos,', 're.I', 'msg', '=', '\"Try', 'like', 'top', '-', 'left', 'bottom', '-', 'right', '\"', 'dict', 'valid', '=', 'message', '=', 'msg)', 'p', '=', 're.match', 'reg,', 'pos,', 're.I', '.groups', 'p', '=', '\"', '%', 's', '-', '%', 's\"', '%', 'p', 'msg', '=', 'position', 'set', 'to', '%s\"', '%', 'p', 'dict', 'valid', '=', 'message', '=', 'msg,', 'value', '=', 'p)', 'size', 'size.strip', 'dict', 'valid', '=', 'message', '=', 'size', 'set', '\")', 'size', '=', 'size.lower', 'reg', '=', 'r\"\\\\d', '1', '4', 'x\\\\d', '1', '4', '\"', 're.match', 'reg,', 'size,', 're.I', 'msg', '=', '\"Try', 'like', '720x480\"', 'dict', 'valid', '=', 'message', '=', 'msg)', 'dict', 'valid', '=', 'value', '=', 'size)', 'check_encoder', 'option', 'encs', '=', 'g.encoders', 'option', '>=', 'len', 'encs', 'message', '=', '\"', '%', 's', '%', 's', '%', 's', 'too', 'high,', 'type', '%sencoders', '%', 's', 'to', 'see', 'valid', 'values\"', 'message', '=', 'message', '%', '(c.y,', 'option,', 'c.w,', 'c.g,', 'c.w)', 'dict', 'valid', '=', 'message', '=', 'message)', 'message', '=', '\"Encoder', 'set', 'to', '%s', '%', 's', '%', 's\"', 'message', '=', 'message', '%', '(c.y,', 'encs', 'option', \"'name'\", 'c.w)', 'dict', 'valid', '=', 'message', '=', 'message)', 'check_player', 'player', 'player', 'player)', 'player)', '\"mpv\"', 'player:', 'version', '=', '\"', '%', 's.', '%', 's.', '%', 's\"', '%', 'g.mpv_version', 'fmt', '=', 'c.g,', 'c.w,', 'c.g,', 'c.w,', 'version', 'msg', '=', '\"', '%', 'splayer', '%', 's', 'set', 'to', '%smpv', '%', 's', '(version', '%s', '\"', '%', 'fmt', 'dict', 'valid', '=', 'message', '=', 'msg,', 'value', '=', 'player)', 'msg', '=', '\"', '%', 'splayer', '%', 's', 'set', 'to', '%s', '%', 's', '%', 's\"', '%', '(c.g,', 'c.w,', 'c.g,', 'player,', 'c.w)', 'dict', 'valid', '=', 'message', '=', 'msg,', 'value', '=', 'player)', '\".exe\")', '\".com\"', '\"mpv\"', 'player:', 'retval', '=', 'check_player', 'player', '+', '\".com\")', 'retval', '\"valid\"', 'retval', 'check_player', 'player', '+', '\".exe\")', 'msg', '=', '\"Player', 'application', '%s', '%', 's', '%', 's', 'found\"', '%', '(c.r,', 'player,', 'c.w)', 'dict', 'valid', '=', 'message', '=', 'msg)', 'msg', '=', 'dict', 'valid', '=', 'message', '=', 'msg)', '=', 'dict', 'valid', '=', 'value', '=', '_Config:', '_configitems', '=', 'ConfigItem', '\"relevance\",', 'allowed_values', '=', '\"relevance', 'date', 'views', 'title\".split', 'ConfigItem', '\"\",', 'allowed_values', '=', '[\"\"]', '+', '\"relevance', 'date', 'views', 'ConfigItem', '\"max_results\",', '19,', 'maxval', '=', '50,', '=', '1', 'ConfigItem', '\"console_width\",', '80,', '=', '70,', 'maxval', '=', '880,', 'check_fn', '=', 'check_console_width', 'ConfigItem', '\"max_res\",', '2160,', '=', '360,', 'maxval', '=', '2160', 'ConfigItem', '\"player\",', '\"vlc\"', '+', '\".exe\"', '*', 'check_fn', '=', 'check_player', 'ConfigItem', '\"playerargs\",', '\"\"', 'ConfigItem', '\"encoder\",', '0,', '=', '0,', 'check_fn', '=', 'check_encoder', 'ConfigItem', '\"\"', 'ConfigItem', '\"checkupdate\",', 'ConfigItem', '\"show_player_keys\",', 'require_known_player', '=', 'ConfigItem', '\"fullscreen\",', 'require_known_player', '=', 'ConfigItem', '\"show_status\",', 'ConfigItem', '\"always_repeat\",', 'ConfigItem', '\"columns\",', '\"date', 'user\"', 'ConfigItem', '\"ddir\",', 'check_fn', '=', 'check_ddir', 'ConfigItem', '\"overwrite\",', 'ConfigItem', '\"show_video\",', 'ConfigItem', '\"search_music\",', 'ConfigItem', '\"\",', 'check_fn', '=', 'require_known_player', '=', 'ConfigItem', '\"\",', 'check_fn', '=', 'require_known_player', '=', 'ConfigItem', \"''\", 'ConfigItem', '\"lookup_metadata\",', 'ConfigItem', \"''\", 'ConfigItem', \"'',\", 'check_fn', '=', 'ConfigItem', \"''\", 'ConfigItem', \"''\", 'ConfigItem', '\"auto\",', 'allowed_values', '=', '\"auto', 'webm', 'm4a\".split', 'ConfigItem', '\"auto\",', 'allowed_values', '=', '\"auto', 'webm', 'mp4', '3gp\".split', 'ConfigItem', '\"pages\",', '3,', '=', '1,', 'maxval', '=', '100', 'ConfigItem', '\"autoplay\",', 'ConfigItem', '\"set_title\",', 'ConfigItem', 'ConfigItem', '\"show_qrcode\",', 'ConfigItem', 'ConfigItem', 'ConfigItem', 'ConfigItem', '\"show_subtitles\",', '__getitem__', 'self,', 'key', 'i', 'self._configitems:', 'i.name.upper', '==', 'key:', 'i', '__getattr__', 'self,', 'name', 'name', '!=', \"'API_KEY':\", 'self', 'name]', '__iter__', 'self', '(i.name.upper', 'i', 'self._configitems)', 'save', 'self', 'config', '=', 'self', '.value', 'self}', 'open', 'g.CFFILE,', '\"w\")', 'cf:', 'json.dump', 'config,', 'cf,', '=', '2)', 'util.dbg', 'c.p', '+', '\"Saved', 'config:', '\"', '+', 'g.CFFILE', '+', 'c.w)', 'convert_old_cf_to_json', 'self', 'g.OLD_CFFILE', 'open', 'g.OLD_CFFILE,', '\"rb\")', 'cf:', 'open', 'g.CFFILE,', '\"w\")', 'cfj:', 'json.dump', 'pickle.load', 'cf', 'cfj,', '=', '2)', 'os.remove', 'g.OLD_CFFILE)', 'load', 'self', 'g.CFFILE', 'open', 'g.CFFILE,', '\"r\")', 'cf:', 'saved_config', '=', 'json.load', 'cf)', 'k,', 'v', 'saved_config.items', 'self', 'k', '.value', '=', 'v', 'util.dbg', 'config', 'item:', '%s\",', 'k)', 'self.PLAYERARGS.get,', 'self.WINDOW_POS.value', '=', '\"top', '-', 'right\"', 'redundant', '=', '(\"', '-', 'really', '-', 'quiet', '-', '-', 'really', '-', 'quiet', '-prefer', '-', 'ipv4', '-nolirc', '\"', '\"', '-', 'fs', '-', '-', 'fs\".split', 'r', 'redundant:', 'util.dbg', 'redundant', 'arg', '%s\",', 'r)', 'r,', 'self.PLAYERARGS.value,', 'remove', '=', 'self.PLAYERARGS.value', '=', '\"', 'self.PLAYERARGS.get)', 'self.save', 'Config', '=', '_Config', '_Config', 'ref', '=', 'sys.modules', '__name__]', 'sys.modules', '__name__]', '=', 'Config']"
    },
    {
        "link": "https://raw.githubusercontent.com/mps-youtube/yewtube/master/mps_youtube/content.py",
        "vector": "['math', 'copy', '.', 'g,', 'c,', 'config', '.util', 'getxy,', 'fmt_time,', 'uea_pad,', 'yt_datetime,', 'F', 'qrcode', 'io', 'HAS_QRCODE', '=', 'HAS_QRCODE', '=', 'Content:', 'Content', 'getPage', 'self,', 'page', 'numPages', 'self', 'getPage', 'self,', 'page', 'max_results', '=', 'getxy', '.max_results', 's', '=', 'page', '*', 'max_results', 'e', '=', '(page', '+', '1)', '*', 'max_results', 'self.get_text', 's,', 'e)', 'numPages', 'self', 'math.ceil', 'self.get_count', '/', 'getxy', '.max_results)', 'get_text', 'self,', 's,', 'e', 'get_count', 'self', 'self,', '=', 'get_text', 'self,', 's,', 'e', 's', 'e', 'get_count', 'self', 'width', '=', 'getxy', '.width', 'count', '=', 'sum', 'len', 'i)', '//', 'width', '+', '1', 'i', 'count', 'page_msg', 'page', '=', '0', 'g.content,', 'page_count', '=', 'g.content.numPages', 'page_count', '=', 'math.ceil', 'g.result_count', '/', 'getxy', '.max_results)', 'page_count', '>', '1:', 'pagemsg', '=', '\"', '/', '\"', \"'\", '<', \"'\", 'page', '>', '0', \"'\", \"',\", '\"', '%', 's', '%', 's', '%', 's\"', '%', '(c.y,', 'page', '+', '1,', 'c.w', 'page_count,', \"'\", '>', \"'\", 'page', '+', '1', '<', 'page_count', \"'\", \"')\", 'song', '=', 'zeromsg', '=', 'g.browse_mode', '==', '\"ytpl\":', 'max_results', '=', 'getxy', '.max_results', 'g.message', '=', 'zeromsg', '\"Enter', '/search', '-', 'term', 'to', 'search', '[h', 'elp\"', 'logo', 'c.g)', '+', '\"\\\\n\\\\n\"', 'g.rprompt', '=', 'page_msg', 'g.current_page)', 'have_meta', '=', 'all', 'x.ytid', 'g.meta', 'x', 'user_columns', '=', '_get_user_columns', 'have_meta', '[]', 'maxlength', '=', 'max', 'x.length', 'x', 'lengthsize', '=', '8', 'maxlength', '>', '35999', '7', 'lengthsize', '=', '6', 'maxlength', '<', '6000', 'lengthsize', 'reserved', '=', '9', '+', 'lengthsize', '+', 'len', 'user_columns)', 'cw', '=', 'getxy', '.width', 'cw', '-=', '1', 'title_size', '=', 'cw', '-', 'sum', '1', '+', 'x', \"'size']\", 'x', 'user_columns)', '-', 'reserved', '=', '\"name\":', '\"idx\",', '\"size\":', '3,', '\"Num\"', '{\"name\":', '\"title\",', '\"size\":', 'title_size,', '\"Title\"', 'after', '=', '\"name\":', '\"length\",', '\"size\":', 'lengthsize,', '\"Length\"', 'columns', '=', '+', 'user_columns', '+', 'after', 'n,', 'column', 'enumerate', 'columns', 'column', \"'idx']\", '=', 'n', 'column', \"'sign']\", '=', '\"', '-', '\"', 'column', \"'name']\", '==', '\"length\"', '\"\"', 'fmt', '=', '[\"', '%', 's', 'x', \"'sign'\", 'x', \"'size'\", 'x', 'columns]', 'fmtrow', '=', 'fmt', '0', '1]', '+', '[\"', '%', 's', '\"]', '+', 'fmt', '2', 'fmt,', 'fmtrow', '=', 'fmt', '.strip', 'fmtrow', '.strip', 'titles', '=', 'tuple', 'x', 'x', \"'size'\", 'x', 'columns', 'hrow', '=', 'c.ul', '+', 'fmt', '%', 'titles', '+', 'c.w', 'out', '=', '\"\\\\n\"', '+', 'hrow', '+', '\"\\\\n\"', 'n,', 'x', 'enumerate', 'max_results', 'col', '=', '(c.r', 'n', '%', '2', '==', '0', 'c.p)', 'song', 'c.b', 'details', '=', \"{'title':\", 'x.title,', '\"length\":', 'fmt_time', 'x.length', 'details', '=', 'copy.copy', 'g.meta', 'x.ytid', 'have_meta', 'details', 'otitle', '=', 'details', \"'title']\", 'details', \"'idx']\", '=', '\"', '%', '2d\"', '%', '(n', '+', '1)', 'details', \"'title']\", '=', 'uea_pad', 'columns', '1', \"'size'\", 'otitle)', 'details', \"'ytid']\", '=', 'x.ytid', '=', \"''\", 'z', 'columns:', 'fieldsize,', 'field,', 'direction', '=', 'z', \"'size'\", 'z', \"'name'\", '\"', '<', '\"', 'z', \"'sign']\", '==', '\"', '-', '\"', '\"', '>', '\"', '+=', 'uea_pad', 'fieldsize,', 'details', 'field', 'direction)', 'columns', '-', '1]', '==', 'z:', '+=', '\"', '\"', 'col', '=', 'col', 'song', 'song', '!=', 'n]', 'c.p', '=', 'col', '+', '+', 'c.w', 'out', '+=', '+', '\"\\\\n\"', 'out', '+', '\"\\\\n\"', '*', '(5', '-', 'len', 'song', 'out', 'g.ytpls:', 'g.message', '=', 'c.r', '+', '\"No', 'found!\"', 'logo', 'c.g)', '+', '\"\\\\n\\\\n\"', 'g.rprompt', '=', 'page_msg', 'g.current_page)', 'cw', '=', 'getxy', '.width', 'fmtrow', '=', '\"', '%', 's', '%', '-', '5s', '%s', '%', '-', '12s', '%', '-', '8s', '%', '-', '2s', '%', 's\\\\n\"', 'fmthd', '=', '\"', '%', 's', '%', '-', '5s', '%', '-', 's', '%', '-', '12s', '%', '-', '9s', '%', '-', '5s', '%', 'cw', '-', '36)', 'head', '=', '(c.ul,', '\"Item\",', '\"Updated\",', '\"Count\",', 'c.w)', 'out', '=', '\"\\\\n\"', '+', 'fmthd', '%', 'head', 'n,', 'x', 'enumerate', 'g.ytpls', 'col', '=', '(c.g', 'n', '%', '2', '==', '0', 'c.w)', 'length', '=', 'x.get', \"'size')\", '\"?\"', 'length', '=', '\"', '%', '4s\"', '%', 'length', 'title', '=', 'x.get', \"'title')\", '\"unknown\"', '=', 'x.get', '\"unknown\"', 'updated', '=', 'yt_datetime', 'x.get', \"'updated'\", '1]', 'title', '=', 'uea_pad', 'cw', '-', '36,', 'title)', 'out', '+=', '(fmtrow', '%', '(col,', 'str', 'n', '+', '1', 'title,', '12', 'updated,', 'str', 'length', 'c.w', 'out', '+', '\"\\\\n\"', '*', '(5', '-', 'len', 'g.ytpls', '_get_user_columns', 'total_size', '=', '0', 'user_columns', '=', 'config.COLUMNS.get', 'user_columns', '=', 'user_columns.replace', '\"', '\",', '\"', '\"', '.split', '=', '{\"views\":', 'dict', 'name', '=', '\"viewCount\",', 'size', '=', '4,', '=', '\"View\"', 'dict', 'name', '=', 'size', '=', '4,', '=', '\"Rtng\"', '\"comments\":', 'dict', 'name', '=', '\"commentCount\",', 'size', '=', '4,', '=', '\"Comm\"', '\"date\":', 'dict', 'name', '=', '\"uploaded\",', 'size', '=', '8,', '=', '\"Date\"', '\"time\":', 'dict', 'name', '=', '\"uploadedTime\",', 'size', '=', '11,', '=', '\"Time\"', '\"user\":', 'dict', 'name', '=', '\"uploaderName\",', 'size', '=', '10,', '=', '\"User\"', '\"likes\":', 'dict', 'name', '=', '\"likes\",', 'size', '=', '4,', '=', '\"Like\"', 'dict', 'name', '=', 'size', '=', '4,', '=', '\"Dslk\"', 'dict', 'name', '=', 'size', '=', '8,', '=', '\"ytid\":', 'dict', 'name', '=', '\"ytid\",', 'size', '=', '12,', '=', '\"Video', 'ID\"', 'ret', '=', '[]', 'column', 'user_columns:', 'namesize', '=', 'column.split', '\"', '\")', 'name', '=', 'namesize', '0]', 'name', 'z', '=', 'name]', 'nm,', 'sz,', 'hd', '=', 'z', \"'name'\", 'z', \"'size'\", 'z', 'len', 'namesize)', '==', '2', 'namesize', '1', 'sz', '=', 'namesize', '1', 'total_size', '+=', 'sz', 'cw', '=', 'getxy', '.width', 'total_size', '<', 'cw', '-', '18:', 'ret.append', 'dict', 'name', '=', 'nm,', 'size', '=', 'sz,', '=', 'hd', 'ret', 'logo', 'col', '=', 'version', '=', '\"\"', 'col', '=', 'col', 'col', 'c.g,', 'c.r,', 'c.y,', 'c.b,', 'c.p,', 'c.w', 'logo_txt', '=', 'r', 'version', '=', '\"', 'v\"', '+', 'version', 'version', '\"\"', 'logo_txt', '=', 'col', '+', 'logo_txt', '+', 'c.w', '+', 'version', '=', 'logo_txt.split', '\"\\\\n\")', 'length', '=', 'max', 'len', 'x)', 'x', 'x,', 'y,', '_', '=', 'getxy', '=', '(x', '-', 'length', '-', '1)', '//', '2', '=', '(y', '-', '12)', '//', '2', '=', '(0', 'x', '<', '0', 'x', 'x', '=', '[\"', '\"', '*', '+', 'l', 'l', 'logo_txt', '=', '+', '\"\\\\n\"', '*', '\"\"', 'g.debug_mode', 'g.no_textart', 'logo_txt', 'g.userpl:', 'g.message', '=', 'F', '\"no', '(logo', 'c.y)', '+', '\"\\\\n\\\\n\")', 'maxname', '=', 'max', 'len', 'a)', 'a', 'g.userpl)', 'out', '=', '\"', '{0', 'Local', '1', 'c.ul,', 'c.w)', 'start', '=', '\"', '\"', 'fmt', '=', '\"', '%', 's', '%', 's', '%', '-', '3s', '%', '-', '\"', '+', 'str', 'maxname', '+', '3)', '+', '\"s', '%', 's', '%s', '%', '-', '7s', '%', 's', '%', '-', '5s', '%', 's\"', 'head', '=', '(start,', 'c.b,', '\"ID\",', '\"Name\",', 'c.b,', 'c.b,', '\"Count\",', 'c.b,', '\"Duration\",', 'c.w)', 'out', '+=', '\"\\\\n\"', '+', 'fmt', '%', 'head', '+', '\"\\\\n\\\\n\"', 'v,', 'z', 'enumerate', 'g.userpl', 'n,', 'p', '=', 'z,', 'g.userpl', 'z]', 'l', '=', 'fmt', '%', '(start,', 'c.g,', 'v', '+', '1,', 'n,', 'c.w,', 'c.y,', 'str', 'len', 'p', 'c.y,', 'p.duration,', 'c.w)', '+', '\"\\\\n\"', 'out', '+=', 'l', 'out', 'url', 'HAS_QRCODE:', '\"', 'Install', \"'qrcode'\", 'to', 'generate', 'them', '\"', 'qr', '=', 'qrcode.QRCode', 'buf', '=', '=', 'qr.add_data', 'url)', 'out', '=', 'buf)', 'buf.getvalue', '==', '\\\\', \"'func'\", '1', 'g.content', '=', 'logo', 'g.message', '=', '\"No', 'loaded\"', '=', '1', \"'func']\", 'callable', 'songs', '=', '0', 'songs', '=', 'songs']"
    },
    {
        "link": "https://raw.githubusercontent.com/mps-youtube/yewtube/master/mps_youtube/contentquery.py",
        "vector": "['.', 'util,', 'pafy', 'ContentQuery:', 'maxresults', '=', '0', 'pdata', '=', '[]', 'nextpagetoken', '=', 'datatype', '=', 'query', '=', 'api', '=', 'self,', 'datatype,', 'api,', 'query', 'self.datatype', '=', 'datatype', 'self.query', '=', 'query', 'self.api', '=', 'api', 'self.pdata', '=', '[]', '__getitem__', 'self,', 'iid', '=', 'iid.stop', '==', 'slice', 'iid', '=', 'self.maxresults)', 'len', 'self.pdata)', '<', 'self.pdata', 'iid]', 'count', 'self', 'self.maxresults', '__len__', 'self', 'abs', 'self.count', 'self', 'util.dbg', '\"CQ.query\",', 'self.query)', 'data', '=', 'pafy.channel_search', 'self.query)', 'self.maxresults', '=', 'len', 'data)', 'self.nextpagetoken', '=', 'obj', 'data:', 'self.pdata.append', 'self.datatype', 'obj']"
    },
    {
        "link": "https://raw.githubusercontent.com/mps-youtube/yewtube/master/mps_youtube/description_parser.py",
        "vector": "['re', '=', \"{'regex':\", 'r\"', '?', '\\\\', '?', '?', '\\\\d', '0', '4', '?\\\\d', '0', '2', '\\\\d', '0', '2', '\\\\', '?', '?:', '-', ')?', '1', '2', '\",', \"'weight':\", '1', \"{'regex':\", 'r\"', '\\\\w', '&', '\\\\', '\\\\', \"'\\\\.\\\\/\", '+', ']?', '-', '+', ']?', '\\\\w', '&', '\\\\', '\\\\', \"'\\\\.\\\\/\", '+', '+', '\",', \"'weight':\", '0.75', \"{'regex':\", 'r\"', '^', '\\\\d', '+', '.', '+', '\",', \"'weight':\", '1}', '=', '0.0', 'method', 're.match', 'method', \"'regex'\", '+=', 'method', \"'weight']\", '/', 'len', 'text', 'regex', '=', 'r\"', '?', '\\\\w', '&', '\\\\', '\\\\', \"'\\\\.\\\\/\", '+', '?', ']?', '-', '+', ']?', '\\\\w', '&', '\\\\', '\\\\', \"'\\\\.\\\\/\", '+', '+', '\"', 're.match', 'regex,', 'text)', 'text,', '=', 'ts_reg', '=', 'r\"', '?', '\\\\', '?', '?', '\\\\d', '0', '4', '?\\\\d', '1', '2', '\\\\d', '1', '2', '\\\\', '?', '?:', '-', ')?', '1', '2', '\"', 'text', '=', 're.sub', 'ts_reg,', '\"\",', 'text)', 'text', '=', 're.sub', 'r\"', '^', '\\\\d', '+', '.', '+', '\",', '\"\",', 'text)', 'text', '=', 're.sub', 'r\"', '^', '^', '\\\\w', '&', '\\\\', '\\\\', \"'\\\\.\\\\\", '/', '\",', '\"\",', 'text,', 'flags', '=', 're.MULTILINE)', 'track', '=', 'rgex', '=', 'r\"', '?', '\\\\w', '&', '\\\\', '\\\\', \"'\\\\.\\\\/\", '+', '?', ']?', '-', '+', ']?', '\\\\w', '&', '\\\\', '\\\\', \"'\\\\.\\\\/\", '+', '+', '\"', 'track', '=', 'rgex,', 'text', '0', 'track', '=', 'text', 'track', 'long_substr', 'data', 'substr', '=', \"''\", 'len', 'data)', '>', '1', 'len', 'data', '0', '>', '0:', 'i', 'range', 'len', 'data', '0', 'j', 'range', 'len', 'data', '0', '-', 'i', '+', '1', 'j', '>', 'len', 'substr)', 'data', '0', 'i', 'i', '+', 'j', 'data', 'substr', '=', 'data', '0', 'i', 'i', '+', 'j]', 'substr', 'data', 'len', 'data)', '<', '1', 'len', '<', '1:', 'i,', '_', 'enumerate', 'data', 'data', 'i', 'title', 'query', '=', '{}', 'query', \"'q']\", '=', 'title', 'query', \"'type']\", '=', \"'video'\", 'query', \"'fields']\", '=', '\"items', 'snippet', 'title', '\"', 'query', \"'maxResults']\", '=', '50', 'query', \"'part']\", '=', '\"snippet\"', 'results', '=', 'titles', '=', '[x', \"'snippet'\", \"'title'\", '.upper', 'x', 'results]', 'alts', '=', '{}', '_', 'range', '100', 'titles)', 'subset', '=', 'titles', '10]', '=', 'long_substr', 'subset', '.strip', 'len', '>', '3:', 'alts', '=', 'alts.get', '0)', '+', '1', '=', 'len', 'alts)', '==', '1:', '=', 'alts.keys', '0', '.capitalize', 'best_guess', '=', '99999', '=', 'key', 'alts.keys', 'current_guess', '=', 'title.upper', 'key)', 'current_guess', '<', 'best_guess:', 'best_guess', '=', 'current_guess', '=', 'key.capitalize', '=', 're.sub', 'r\"', '^', '\\\\w', '+', '$\",', '\"\",', '=', 're.sub', 'r\"', '^', '^', '\\\\w', '+', '\",', '\"\",', 'parse', 'text,', 'title', '=', '\"Unknown\"', '=', '[]', 'text.split', \"'\\\\n'\", '=', 'sum', 'x', '0]', 'x', '/', 'len', '=', 'filter', 'a:', 'a', '[x', 'x', '0]', '>', 'x', 'cmbs', '=', '[]', '=', '1', 'cmbs.append', '1', 'counters', '=', '0,', '0}', 'combo', 'cmbs:', 'counters', 'combo', '0]', '+=', '1', '=', 'counters', '>', 'counters', '=', 'abs', 'counters', '-', 'counters', '>', 'sum', 'counters', 'counters', '\"Too', 'many', 'anomalities', 'detected\")', '[]', '==', 'cmbs', '=', 'filter', 'a:', 'a', '[x', 'x', '0]', 'x', 'cmbs', 'arti', '=', 'title)', 'cmbs', '=', 'filter', 'a:', 'a', 'arti,', 'x', '1', 'x', '0]', 'x', 'cmbs', 'cmbs)']"
    },
    {
        "link": "https://raw.githubusercontent.com/mps-youtube/yewtube/master/mps_youtube/g.py",
        "vector": "['collections', 'os', 'sys', '.', 'c,', 'paths', 'volume', '=', 'transcoder_path', '=', '\"auto\"', '=', 'encoders', '=', '[]', 'muxapp', '=', 'meta', '=', '{}', '=', '\"\"', 'album', '=', '\"\"', 'scrobble', '=', 'scrobble_queue', '=', '[]', '=', 'detectable_size', '=', '=', 'debug_mode', '=', '=', 'ytpls', '=', '[]', 'mpv_version', '=', '0,', '0,', '0', 'mpv_options', '=', 'mpv_usesock', '=', 'mplayer_version', '=', '0', '=', 'browse_mode', '=', '=', '[]', 'no_clear_screen', '=', 'no_textart', '=', 'max_retries', '=', '3', 'max_cached_streams', '=', '1500', 'username_query_cache', '=', 'collections.OrderedDict', '=', 'name', '=', '=', 'current_page', '=', '0', 'result_count', '=', '0', 'rprompt', '=', 'active', '=', 'name', '=', '\"active\")', 'userpl', '=', '{}', '=', '{}', 'pafs', '=', 'collections.OrderedDict', 'streams', '=', 'collections.OrderedDict', 'pafy_pls', '=', '{}', 'selected_pafy_pls_id', '=', \"''\", '=', 'message', '=', 'content', '=', '\"\"', 'suffix', '=', '\"3\"', 'OLD_CFFILE', '=', 'paths.get_config_dir', '\"config\")', 'CFFILE', '=', 'paths.get_config_dir', '\"config.json\")', 'TCFILE', '=', 'paths.get_config_dir', '\"transcode\")', 'OLD_PLFILE', '=', 'paths.get_config_dir', '+', 'suffix)', 'PLFILE', '=', 'paths.get_config_dir', 'PLFOLDER', '=', 'paths.get_config_dir', 'OLDHISTFILE', '=', 'paths.get_config_dir', 'HISTFILE', '=', 'paths.get_config_dir', 'CACHEFILE', '=', 'paths.get_config_dir', '\"cache_py_\"', '+', 'sys.version', '0', '5', 'READLINE_FILE', '=', 'PLAYER_OBJ', '=', '=', '\"film\":', '1,', '\"autos\":', '2,', '\"music\":', '10,', '17,', '\"travel\":', '19,', '20,', '21,', '\"news\":', '25', '=', '\"mpv\":', '\"msglevel\":', '\"', '<', '0.4\":', '\"', '--', 'msglevel', '=', 'all', '=', 'no', '=', 'status\",', '\"', '>=', '0.4\":', '\"', '--', 'msg', '-', 'level', '=', 'all', '=', 'no', '=', 'status\",', '},', '\"title\":', '\"', '--', '-', 'media', '-', 'title\",', '\"fs\":', '\"', '--', 'fs\",', '\"novid\":', '\"', '--', 'no', '-', 'video\",', '\"ignidx\":', '\"', '--', 'demuxer', '-', 'lavf', '-', 'o', '=', 'fflags', '=', '+', 'ignidx\",', '\"geo\":', '\"', '--', '\"mplayer\":', '\"title\":', '\"', '-', 'title\",', '\"fs\":', '\"', '-', 'fs\",', '\"novid\":', '\"', '-', 'novideo\",', '\"ignidx\":', '\"\",', '\"geo\":', '\"', '-', '\"vlc\":', '\"title\":', '\"', '--', 'meta', '-', 'title\"}', '=', '[]', '=', '[]', 'text', '=', '\"exitmsg\":', '(\"', '*', 'yewtube', '-', 'https', '/', '/', 'github.com', '/', '/', 'yewtube', 'a', 'of\\\\nmps', '-', 'youtube', '-', '*https', '/', '/', 'github.com', '/', 'mps', '-', 'youtube', '/', 'mps', '-', 'youtube', '*', '\"', 'under', 'the', 'GPLv3', 'license\\\\n\"', '\"', 'c)', '2021', 'c)', '2014,', '2015', 'np1', '*', '\\\\n\"\"\"', '\"exitmsg_\":', '(c.r,', 'c.b,', 'c.r,', 'c.w', \"'no\", '\"', '*', 'No', 'saved', 'found!', '*', '\",', \"'no\", '(c.r,', 'c.w', \"'pl\", 'bad', \"name':\", \"'\", '*', '&', '&', '*', 'valid', 'a', 'valid', 'name.', 'Ensure', 'it', 'starts', \"'\", 'a', 'letter', \"_',\", \"'pl\", 'bad', \"name_':\", '(c.r,', 'c.w', \"'pl\", \"found':\", '*', '&', '&', '*', 'unknown.', 'Saved', 'are', 'shown', \"'\", \"'above',\", \"'pl\", \"found_':\", '(c.r,', 'c.w', \"'pl\", 'found', \"ls':\", '\"', '*', '&', '&', '*', '\"', 'found.', 'Use', '*ls*', 'to', \"'\", \"'pl\", 'found', \"ls_':\", '(c.y,', 'c.w,', 'c.g,', 'c.w', \"'pl\", \"empty':\", \"empty!',\", \"add':\", \"'Use\", '*add', 'N*', 'to', 'add', 'a', \"track',\", \"add_':\", '(c.g,', 'c.w', \"search':\", \"'Search\", 'items', 'then', 'use', '*add*', 'to', 'add', \"them',\", \"search_':\", '(c.g,', 'c.w', \"'no\", \"data':\", 'data.', 'Possible', \"'\\\\n\", '*', '&', '&', '*', \"',\", \"'no\", \"data_':\", '(c.r,', 'c.w', \"'use\", \"dot':\", \"'Start\", 'your', 'query', 'a', '*.*', 'to', 'a', \"search',\", \"'use\", \"dot_':\", '(c.g,', 'c.w', \"'cant\", 'get', \"track':\", \"'Problem\", 'item:', '*', '&', '&', '*', \"',\", \"'cant\", 'get', \"track_':\", '(c.r,', 'c.w', \"'track\", \"unresolved':\", 'track', \"available',\", \"'no\", \"player':\", \"'\", '*', '&', '&', '*', 'found', 'on', \"system',\", \"'no\", \"player_':\", '(c.y,', 'c.w', \"'no\", 'pl', 'match', \"rename':\", \"'\", '*', \"Couldn\\\\'t\", 'to', \"'\", \"'rename\", '*', \"',\", \"'no\", 'pl', 'match', \"rename_':\", '(c.r,', 'c.w', \"range':\", '\"', '*', 'Invalid', 'item', '/', 'range', 'entered!', '*', '\",', \"range_':\", '(c.r,', 'c.w', \"'\", '-', \"audio':\", '\"', '*', '-', 'the', 'filetype', 'you', 'selected', '&', '&', 'no', 'audio!\",', \"'\", '-', \"audio_':\", '(c.y,', 'c.w', \"'no\", \"mix':\", \"'No\", 'mix', 'available', 'the', 'selected', \"video',\", \"'mix\", 'only', \"videos':\", \"'Mixes\", 'are', 'only', 'available', \"videos',\", \"item':\", \"'\", '*', 'Invalid', 'item', 'entered!', '*', \"',\", \"'duplicate\", \"tracks':\", \"'\", '*', '-', 'duplicate', 'track', 's)', '&&', 'added', 'to', \"'\", \"'duplicate\", \"tracks_':\", '(c.y,', 'c.w', \"'select\", \"mux':\", '(\"Select', '*', '&', '&', '*', 'to', 'mux', 'audio', '*', 'Enter', '*', 'to', 'download', '\"', 'feature', 'experimental!\"', \"'select\", \"mux_':\", '(c.y,', 'c.w,', 'c.y,', 'c.w', \"'pl\", \"renamed':\", '*', '&', '&', '*', 'renamed', 'to', '*', '&', '&', '*', \"',\", \"'pl\", \"renamed_':\", '(c.y,', 'c.w,', 'c.y,', 'c.w', \"'pl\", \"saved':\", 'saved', '*', '&', '&', '*', '.', 'Use', '*ls*', 'to', \"'pl\", \"saved_':\", '(c.y,', 'c.w,', 'c.g,', 'c.w', \"'pl\", \"loaded':\", \"'Loaded\", '*', '&', '&', '*', 'current', \"'pl\", \"loaded_':\", '(c.y,', 'c.w', \"'pl\", \"viewed':\", '*', '&', '&', '*', \"',\", \"'pl\", \"viewed_':\", '(c.y,', 'c.w', \"'pl\", \"help':\", \"'Enter\", '*open', '<name', 'ID', '>', '*', 'to', 'load', 'a', \"'pl\", \"help_':\", '(c.g,', 'c.w', \"'added\", 'to', \"pl':\", \"'\", '*', '&', '&', '*', 'tracks', 'added', '*', '&', '&', '*', 'total', '*', '&', '&', '*', '.', 'Use', '*vp*', 'to', \"'\", \"'view',\", \"'added\", 'to', \"pl_':\", '(c.y,', 'c.w,', 'c.y,', 'c.w,', 'c.y,', 'c.w,', 'c.g,', 'c.w', \"'added\", 'to', 'saved', \"pl':\", \"'\", '*', '&', '&', '*', 'tracks', 'added', 'to', '*', '&', '&', '*', '*', '&', '&', '*', 'total', '*', '&', '&', '*', \"',\", \"'added\", 'to', 'saved', \"pl_':\", '(c.y,', 'c.w,', 'c.y,', 'c.w,', 'c.y,', 'c.w,', 'c.y,', 'c.w', \"'song\", \"move':\", \"'Moved\", '*', '&', '&', '*', 'to', 'position', '*', '&', '&', '*', \"',\", \"'song\", \"move_':\", '(c.y,', 'c.w,', 'c.y,', 'c.w', \"'song\", \"sw':\", '(\"Switched', 'item', '*', '&', '&', '*', '*', '&', '&', '*', '\"', \"'song\", \"sw_':\", '(c.y,', 'c.w,', 'c.y,', 'c.w', \"'current\", \"pl':\", 'the', 'current', 'Use', '*save', '<name', '>', '*', 'to', 'save\"', '\"', 'it\",', \"'current\", \"pl_':\", '(c.g,', 'c.w', \"'help\", \"topic':\", '(\"', 'Enter', '*help', '<topic', '>', '*', 'help', '\"', \"'help\", \"topic_':\", '(c.y,', 'c.w', \"'songs\", \"rm':\", \"'\", '*', '&', '&', '*', 'tracks', 'removed', '&', '&', \"',\", \"'songs\", \"rm_':\", '(c.y,', 'c.w', \"'mkp\", \"empty':\", '\"', '*', '&', '&', '*', 'either', 'empty', \"doesn't\", \"'mkp\", \"empty_':\", '(c.b,', 'c.r', \"'mkp\", \"parsed':\", '\"', '*', '&', '&', '*', 'entries', 'found', '*', '&', '&', '*', '\",', \"'mkp\", \"parsed_':\", '(c.g,', 'c.w,', 'c.b,', 'c.w', \"'mkp\", 'the', 'best', 'match', '*', '&', '&', '*', '...\",', \"'mkp\", '(c.y,', 'c.w', \"'mkp\", 'desc', \"unknown':\", '\"Unknown', 'tabletype,', '*do', 'a', 'new', 'search', '*', '\",', \"'mkp\", 'desc', \"unknown_':\", '(c.y,', 'c.w', \"'mkp\", 'desc', 'which', \"data':\", '\"Which', '*tracks*', 'to', \"'mkp\", 'desc', 'which', \"data_':\", '(c.y,', 'c.w', \"'mkp\", 'no', \"valid':\", '\"', '*', 'No', 'valid', 'tracks', 'found', 'that', 'description', '*', '\",', \"'mkp\", 'no', \"valid_':\", '(c.y,', 'c.w']"
    },
    {
        "link": "https://raw.githubusercontent.com/mps-youtube/yewtube/master/mps_youtube/helptext.py",
        "vector": "['pathlib', 're', 'socket', 'urllib.request', 'urlopen', '.', 'c,', 'g', '.util', 'F,', 'get_near_name', 'helptext', 'c.ul,', 'c.w,', 'c.y', '(\"search\",', 'c.ul,', 'c.w,', 'c.y,', '\",', '(\"edit\",', '/', 'Results\",', 'c.ul,', 'c.w,', 'c.y', '(\"download\",', 'Playback\",', 'c.ul,', 'c.w,', 'c.y', '(\"dl', '-', 'External', 'Application\",', 'c.ul,', 'c.w,', 'c.y', '(\"encode\",', 'to', 'MP3', 'other', 'c.ul,', 'c.w,', 'c.y,', 'g.TCFILE', 'Local', 'c.ul,', 'c.w,', 'c.y', 'Local', 'c.ul,', 'c.w,', 'c.y', '\"Invocation', 'Parameters\",', 'c.ul,', 'c.w,', 'c.y', '(\"config\",', '\"Configuration', 'Options\",', 'c.ul,', 'c.w,', 'c.y,', \"'\\\\n\", '0', 'set', 'max_results', '<number', '>', '1}', '-', 'show', '<number>', \"re'\", \"'sults\", 'when', '(max', '50', 'c.y,', 'c.w)', 'g.detectable_size', \"''\", 'configuration\",', 'c.ul,', 'c.w,', 'c.y', '(\"tips\",', '\"Advanced', 'Tips\",', 'c.ul,', 'c.w,', 'c.y', '),', '),', '\"new\",', '\"Check', 'new', 'version', 'available\",', 'c.ul,', 'c.w,', 'c.y,', '\"get_changelog', '\"', '),', '\"changelog\",', '\"Check', 'program', 'changelog\",', 'c.ul,', 'c.w,', 'c.y,', '\"get_changelog_local', '\"', '),', '\"Check', 'Status.', 'NOTE:', 'Use', 'feature', 'at', 'your', 'own', 'In', 'of', 'any', 'of', 'damage', 'we', 'will', 'be', 'responsible.\",', 'c.ul,', 'c.w,', 'c.y,', '\"', '),', 'get_help', 'choice', 'helps', '=', '{\"download\":', '(\"playback', 'dl', 'watch', 'show', 'repeat', '\"show_video', 'playurl', 'browserplay', 'dlurl', 'd', 'da', 'dv', 'all', '*\"', '\"', 'play', 'browsersearch\".split', '\"dl', '-', '(\"dlcmd', 'dl', '-', 'cmd', 'download', '-', 'cmd', 'dl_cmd', 'download_cmd', '\"', '\"download', '-', '\"encode\":', 'transcode', 'wma', 'mp3', '\"', '\"encode', 'encoder\".split', 'yt', '\"search\":', '(\"user', 'userpl', 'pl', 'pls', 'r', 'n', 'p', 'url', 'album', '\"', 'result', 'results', 'related', 'remove', 'swop', 'mkp', '-', '-', 'description\".split', '\"edit\":', 'manupulate', 'rm', 'mv', 'sw', 'edit', 'move', '\"', '\"swap', 'shuffle\".split', '\"tips\":', '(\"undump', 'dump', '-f', '-w', '-a', 'adv', 'advanced\".split', '\"', '\"', 'comment', 'c', 'copy', 'clipboard', 'comments', 'u', '\"', '\"i\".split', '\"config\":', '(\"set', 'checkupdate', 'colours', 'ddir', 'player', '\"', '\"arguments', 'args', 'playerargs', 'music', 'search_music', 'keys', '\"', '\"status', 'show_status', 'show_video', 'video', 'configuration', '\"', '\"fullscreen', 'full', 'screen', 'folder', 'player', 'mpv', 'mplayer\"', '\"', 'reset', 'configure', 'audio', 'results', '\"', '\"max_results', 'size', 'rows', 'height', '\"', '\"position', 'quality', 'resolution', 'max_res', '\"', '\"columns', 'width', 'console', 'overwrite\".split', '(\"save', 'rename', 'move', 'rm', 'ls', 'mv', 'sw', 'add', 'vp', 'open\"', '\"', 'view\".split', 'topic,', 'helps.items', 'choice', 'choice', '=', 'topic', 'choice', '=', '\"menu\"', 'choice', 'choice', 'out,', 'all_help', '=', '\"\",', 'helptext', 'help_names', '=', '[x', '0]', 'x', 'all_help]', 'choice', '=', 'get_near_name', 'choice,', 'help_names)', 'x', '\"\\\\n', 'x.split', '\"\\\\n\"', 'choice', '==', '\"menu\"', 'choice', 'help_names:', 'out', '+=', '\"', '%sHelp', 'Topics', '%', 's\"', '%', '(c.ul,', 'c.w)', 'out', '+=', 'F', \"'help\", \"topic',\", '2,', '1)', 'x', 'all_help:', 'out', '+=', '(\"\\\\n', '%', 's', '%', '-', '10s', '%', 's', '%s\"', '%', '(c.y,', 'x', '0', 'c.w,', 'x', '1', 'out', '+=', '\"\\\\n\"', 'out', 'choice', '==', 'output_text', '=', 'choice', '==', \"'new':\", 'output_text', '=', 'get_changelog', 'choice', '==', '\"changelog\":', 'output_text', '=', 'get_changelog_local', 'choice', '=', 'choice)', 'output_text', '=', 'all_help', 'choice', '2]', 'output_text)', 'get_changelog', 'url', '=', '\"https', '/', '/', 'raw.githubusercontent.com', '/', '/', 'yewtube', '/', '/', 'CHANGELOG.md\"', 'v', '=', 'urlopen', 'url,', 'timeout', '=', '1', '.read', '.decode', 'v', '=', 'v.split', \"'\", 'v', 'socket.timeout', '\"read', 'changelog', 'timed', 'out\"', 'get_changelog_local', 'cl_path', '=', 'pathlib.Path', '__file__', '.parent.parent', '/', '\"CHANGELOG.md\"', 'reversed', 'cl_path.read_text', '\"can\\'t', 'changelog', 'file\"', 'url', '=', '\"https', '/', '/', '/', '?lang', '=', 'en\"', 'v', '=', 'urlopen', 'url,', 'timeout', '=', '1', '.read', '.decode', 'ip', '=', \"'\", '<', 'strong', '>', '.', '*', '<', '/', 'strong', '>', \"',\", 'v)', 'status', '=', \"'Congratulations.\", '.', '*', \"',\", 'v)', 'len', 'status)', '==', '0:', 'status', '=', '.', '*', \"',\", 'v)', 'str', \"'ip'\", 'ip,', \"'status':\", 'status', '0', 'socket.timeout', '\"read', 'check', 'status', 'timed', 'out\"']"
    },
    {
        "link": "https://raw.githubusercontent.com/mps-youtube/yewtube/master/mps_youtube/history.py",
        "vector": "['os', 'pickle', '.', 'g,', 'c', '.util', 'dbg', 'read_m3u', 'add', 'song', '=', '.songs.append', 'song)', 'save', 'load', '_convert_to_m3u', '=', 'read_m3u', 'g.HISTFILE)', 'g.HISTFILE', '=', '{}', 'save', 'save', 'open', 'g.HISTFILE,', \"'w')\", 'hf:', 'hf.write', \"'\", 'song', '.songs:', 'hf.write', \"'\", 'hf.write', \"'https\", '/', '/', 'www.youtube.com', '/', 'watch?v', '=', '%', \"s\\\\n'\", '%', 'song.ytid)', 'dbg', 'c.r', '+', 'saved\\\\n', '--', '-', '\"', '+', 'c.w)', '_convert_to_m3u', 'g.HISTFILE', 'g.OLDHISTFILE', 'open', 'g.OLDHISTFILE,', '\"rb\")', 'hf:', '=', 'pickle.load', 'hf)', 'save']"
    },
    {
        "link": "https://raw.githubusercontent.com/mps-youtube/yewtube/master/mps_youtube/init.py",
        "vector": "['argparse', 'os', 're', 'sys', 'tempfile', '=', '=', '2000)', '=', '=', '.', '__version__,', 'c,', 'cache,', 'config,', 'g,', 'paths,', 'screen', '.helptext', 'helptext', '.util', 'dbg,', '=', 'os.name', '==', '\"nt\"', '_process_cl_args', 'suffix', '=', '\".exe\"', '\"\"', 'vlc,', 'mplayer,', 'mpv', '=', '\"vlc\"', '+', 'suffix,', '\"mplayer\"', '+', 'suffix,', '\"mpv\"', '+', 'suffix', 'config.convert_old_cf_to_json', 'g.CFFILE', 'vlc', 'config.PLAYER.set', 'vlc)', 'mpv', 'config.PLAYER.set', 'mpv)', 'mplayer', 'config.PLAYER.set', 'mplayer)', 'config.save', 'config.load', 'config.PLAYER.get)', 'Exception', 'ex:', 'g.message', '=', '\"', '%', 'sFailed', 'to', 'get', '%s`s', 'version.', 'Probabily', 'it', 'Try', 'it', 'change', 'player', '`set', 'player', '<player_name', '>', '`', '%s\"', '%', 'c.y,', 'config.PLAYER.get', 'c.w)', 'screen.update', '\"Press', 'Enter', 'to', 'go', 'back', 'to', 'menu.\")', 'cache.load', 'config.ENCODER.get', '>=', 'len', 'g.encoders', 'config.ENCODER.set', '\"0\")', 'config.PLAYER.get', 'config.PLAYER.get)', 'g.muxapp', '=', '\"ffmpeg.exe\")', '\"avconv.exe\")', 'g.muxapp', '=', '\"ffmpeg\")', '\"avconv\")', 'config.MPRIS.get:', '.', 'conn1,', 'conn2', '=', '=', 'conn1)', 't', '=', 'target', '=', 'args', '=', 'conn2', 't.daemon', '=', 't.start', '\"could', 'load', 'MPRIS', 'libraries.\")', 'g.TCFILE', 'config_file_contents', '=', 'open', 'g.TCFILE,', '\"w\")', 'tcf:', 'tcf.write', 'config_file_contents)', 'dbg', '\"generated', 'config', 'file\")', 'dbg', 'config', 'file', 'open', 'g.TCFILE,', '\"r\")', 'tcf:', 'g.encoders', '=', '[dict', 'name', '=', 'ext', '=', '\"COPY\",', 'valid', '=', '\"', '*', '\"', 'e', '=', '{}', '\"TRANSCODER_PATH', '\"', 'm', '=', 're.match', '\"TRANSCODER_PATH', '.', '*', '\",', '.group', '1)', 'g.transcoder_path', '=', 'm.strip', '\"DELETE_ORIGINAL', '\"', 'm', '=', 're.match', '\"DELETE_ORIGINAL', '.', '*', '\",', '.group', '1)', 'do', '=', 'm.strip', '.lower', '(\"true\",', '\"yes\",', '\"enabled\",', '\"on\")', '=', 'do', '\"name', '\"', 'e', \"'name']\", '=', 're.match', '\"name', '.', '*', '\",', '.group', '1', '.strip', '\"extension', '\"', 'e', \"'ext']\", '=', 're.match', '\"extension', '.', '*', '\",', '.group', '1', '.strip', '\"valid', '\"', 'e', \"'valid']\", '=', 're.match', '\"valid', '.', '*', '\",', '.group', '1', '.strip', '\"', 'e', '=', 're.match', '.', '*', '\",', '.group', '1', '.strip', '\"name\"', 'e', '\"ext\"', 'e', '\"valid\"', 'e:', 'g.encoders.append', 'e)', 'e', '=', '{}', 'g.READLINE_FILE', '=', 'paths.get_config_dir', 'g.READLINE_FILE', 'g.READLINE_FILE)', 'dbg', 'c.g', '+', '\"Read', 'file\"', '+', 'c.w)', '_process_cl_args', 'parser', '=', 'argparse.ArgumentParser', 'add_help', '=', 'parser.add_argument', 'nargs', '=', \"'\", '*', \"')\", 'parser.add_argument', \"'\", '--', \"help',\", \"'\", '-', \"h',\", 'action', '=', 'parser.add_argument', \"'\", '--', \"version',\", \"'\", '-', \"v',\", 'action', '=', 'parser.add_argument', \"'\", '--', \"debug',\", \"'\", '-', \"d',\", 'action', '=', 'parser.add_argument', \"'\", '--', \"'\", '-', \"l',\", 'action', '=', 'parser.add_argument', \"'\", '--', 'no', '-', \"autosize',\", 'action', '=', 'parser.add_argument', \"'\", '--', 'no', '-', \"preload',\", 'action', '=', 'parser.add_argument', \"'\", '--', 'no', '-', \"textart',\", 'action', '=', 'args', '=', 'parser.parse_args', 'args.version:', 'screen.msgexit', 'args.help:', 'screen.msgexit', 'i', '2]', 'i', 'helptext', 'args.debug', 'os.environ.get', '\"mpsytdebug\")', '==', '\"1\":', 'g.debug_mode', '=', 'g.no_clear_screen', '=', 'os.environ.get', '\"mpsytlog\")', '==', '\"1\"', 'g.debug_mode:', 'logfile', '=', 'tempfile.gettempdir', '\"mpsyt.log\")', 'level', '=', 'filename', '=', 'logfile)', '\"pafy\"', '.setLevel', 'args.no_autosize:', 'g.detectable_size', '=', '=', '\"playurl\"', '\"dlurl\"', 'g.no_clear_screen', '=', 'args.no_preload:', '=', 'args.no_textart:', 'g.no_textart', '=', '=', 'yt_dlp.version', '__version__', 'ytdlp_version', 'dbus_version', '=', 'glib', '=', 'dbus', 'dbus_version', '=', 'dbus.__version__', 'Exception:', 'GLib', 'glib', '=', 'Exception:', 'out', '=', '\"yewtube', 'version', '\"', '+', '__version__', 'out', '+=', '\"\\\\nyt_dlp', 'version', '\"', '+', 'ytdlp_version', 'out', '+=', '\"\\\\nPython', 'version', '\"', '+', 'sys.version', 'out', '+=', '\"', '+', 'out', '+=', 'type', '\"', '+', 'out', '+=', '\"\\\\nArchitecture', '%s,', '%s\"', '%', 'out', '+=', '\"', '+', 'out', '+=', '\"\\\\nsys.stdout.enc', '\"', '+', 'out', '+=', 'enc', '\"', '+', 'out', '+=', '\"\\\\nConfig', 'dir', '\"', '+', 'paths.get_config_dir', 'out', '+=', '\"\\\\ndbus', '\"', '+', 'str', 'dbus_version)', 'out', '+=', '\"\\\\nglib', '\"', '+', 'str', 'glib)', 'env', '\"TERM', 'SHELL', 'LANG', 'LANGUAGE\".split', 'value', '=', 'os.environ.get', 'env)', 'out', '+=', '\"\\\\nenv', '%', '-', '15s:', '%s\"', '%', '(env,', 'value)', 'value', '\"\"', 'out']"
    },
    {
        "link": "https://raw.githubusercontent.com/mps-youtube/yewtube/master/mps_youtube/listview/__init__.py",
        "vector": "['re', 'math', '..', 'c,', 'g,', 'util,', 'content', '.user', '.livestream', '.songtitle', 'func', '=', 'objects', '=', 'columns', '=', 'page', '=', '0', 'self,', 'columns,', 'objects,', 'function_call', '=', 'self.func', '=', 'function_call', 'self.objects', '=', 'objects', 'self.columns', '=', 'columns', 'self.object_type', '=', 'types', '=', 'len', 'set', 'obj', 'objects', 'types', '==', '0:', '\"No', 'objects', 'types', '>', '1:', 'than', 'one', 'of', 'objects', 'self.object_type', '=', 'obj', 'objects', '0]', 'numPages', 'self', 'Generates', 'content', '=', '==', '==', '==', '==', '==', '==', '=', '=', 'Dynamic', 'fields', '=', '==', '==', '==', '==', '==', '==', '=', '=', 'Column.size', 'may', 'of', 'an', 'be', 'a', 'either', '\"length\"', 'Length', 'time', 'like', '20', '40', 'will', 'allocate', 'all', 'space', 'to', 'that', 'column.', 'TODO:', 'Make', 'it', 'so', 'set', 'columns', 'can', 'set', '?', 'what', 'happends', 'when', 'a', 'user', 'selects', 'the', 'Currently', 'functions', 'hooks', '/', 'play', 'how', 'many', 'views', 'can', 'be', 'per', 'page', '\"\"\"', 'util.getxy', '.max_results']"
    },
    {
        "link": "https://raw.githubusercontent.com/mps-youtube/yewtube/master/mps_youtube/listview/base.py",
        "vector": "['data', '=', 'self,', 'data', 'self.data', '=', 'data', '__getattr__', 'self,', 'key', 'self.data', 'key]', 'key', 'self.data.keys', 'length', 'self,', '_', '=', '0', '0']"
    },
    {
        "link": "https://raw.githubusercontent.com/mps-youtube/yewtube/master/mps_youtube/listview/livestream.py",
        "vector": "['..', 'util', 'ytid', 'self,', 'lngt', '=', '10', 'self.data.get', '\"id\"', '.get', '\"videoId\")', 'ret', 'self', '(self.ytid', 'self.title', 'self.length', 'title', 'self,', 'lngt', '=', '10', 'util.uea_pad', 'lngt,', 'self.data.get', '\"snippet\"', '.get', '\"title\"', 'description', 'self,', 'lngt', '=', '10', 'util.uea_pad', 'lngt,', 'self.data.get', '\"snippet\"', '.get', '\"description\"', '@staticmethod', '\"ret\"']"
    },
    {
        "link": "https://raw.githubusercontent.com/mps-youtube/yewtube/master/mps_youtube/listview/songtitle.py",
        "vector": "['..', 'util', 'u', '_checked', '=', '=', '1.0', 'self,', 'data,', '=', '1.0', 'self._checked', '=', '=', 'super', 'self', 'data)', 'self,', 'l', '=', '10', 'u.uea_pad', 'l,', 'self.data', '0', 'title', 'self,', 'l', '=', '10', 'u.uea_pad', 'l,', 'self.data', '1', 'checked', 'self,', 'l', '=', '10', '\"', 'X', '\"', 'self._checked', '\"', '\"', 'self', 'self', 'self._checked', 'toggle', 'self', 'self._checked', '=', 'self._checked', 'ret', 'self', '\"', '%', 's', '-', '%s\"', '%', '.strip', 'self.title', '.strip', '@staticmethod', '\"ret\"']"
    },
    {
        "link": "https://raw.githubusercontent.com/mps-youtube/yewtube/master/mps_youtube/listview/user.py",
        "vector": "['..', 'util', 'u', 'id', 'self,', 'length', '=', '0', 'self.data.get', '\"id\")', 'name', 'self,', 'length', '=', '10', 'u.uea_pad', 'length,', 'self.data.get', '\"title\"', 'description', 'self,', 'length', '=', '10', 'u.uea_pad', 'length,', 'self.data', '\"descriptionSnippet\"', '0', \"'text']\", 'self.data', \"'descriptionSnippet']\", \"'No\", 'description', \"found')\", 'self,', 'length', '=', '10', 'self.data.get', '\"type\")', 'ret', 'self', '(self.name', 'self.id', '\"\")', '@staticmethod', '\"ret\"']"
    },
    {
        "link": "https://raw.githubusercontent.com/mps-youtube/yewtube/master/mps_youtube/main.py",
        "vector": "['locale', 'os', 'sys', 'traceback', 'traceback_py', '.', 'util', 'completer', '=', '2000)', '=', 'completer', '=', \"'tab:\", \"complete')\", \"'')\", '=', '.', 'g,', 'c,', 'screen,', '.', '__version__,', 'content,', '.', 'config', '=', 'os.name', '==', '\"nt\"', 'locale.setlocale', 'locale.LC_ALL,', '\"\")', 'Exception', 'err:', 'f\"locale', 'set:', '{err', '\")', 'matchfunction', 'func,', 'regex,', 'match', '=', 'regex.match', 'match', 'match.group', '0)', '==', 'matches', '=', 'match.groups', 'util.dbg', '%s\",', 'util.dbg', '\"function', 'call:', '%s\",', 'func.__name__)', 'util.dbg', '\"regx', 'matches:', '%s\",', 'matches)', 'func', '*', 'matches)', 'g.debug_mode:', 'g.content', '=', 'g.message', '=', 'util.F', \"range')\", 'g.content', '=', 'g.content', 'e:', 'g.debug_mode:', 'g.content', '=', 'g.message', '=', 'util.F', \"'cant\", 'get', \"track')\", '%', 'str', 'e)', 'g.content', '=', 'g.content', 'zeromsg', '=', 'g.message)', 'Exception', 'e:', 'traceback', 'type', 'e', 'e,', 'e.__traceback__)', 'g.debug_mode:', 'g.content', '=', 'g.message', '=', 'util.F', \"'no\", \"data')\", '%', 'e', 'g.content', '=', 'g.content', 'g.message', '=', 'c.r', '+', '\"Press', 'ctrl', '-', 'c', 'to', 'exit\"', '+', 'c.w', 'g.content', '=', 'screen.update', '=', 'c.r', '+', '\"', '>', '\"', '+', 'c.w)', '(KeyboardInterrupt,', 'showlogo', '=', 'config.SET_TITLE.get:', '\"yewtube\")', 'g.content', '=', 'content.logo', 'col', '=', 'c.g,', 'version', '=', '__version__)', '+', '\"\\\\n\\\\n\"', 'g.message', '=', '\"Enter', '/search', '-', 'term', 'to', 'search', '[h', 'elp\"', 'screen.update', 'verbose', '=', '=', '[]', 'scrobble_funcs', '=', '=', '\"', 'prompt', '=', '\">', '\"', '=', 'r\"', '\",', '\"', 'mpsyt', '-', 'comma', '\")', '=', '\"', '\")', '=', '\"\"', 'len', '=', '0', '.strip', '=', '\"', 'mpsyt', '-', 'comma', '\",', '\"', '\")', '=', 'prompt', '.strip', '(KeyboardInterrupt,', '=', 'i', 'matchfunction', 'i.function,', 'i.regex,', '!=', 'i.function', 'scrobble_funcs:', 'g.scrobble', '=', '=', 'g.content', '=', 'g.content', 'g.content', '=', '\"\"', 'g.message', '=', 'c.b', '+', '\"Bad', 'syntax.', 'Enter', 'h', 'help\"', '+', 'c.w', 'sys.exit', '\"Bad', 'syntax\")', 'screen.update']"
    },
    {
        "link": "https://raw.githubusercontent.com/mps-youtube/yewtube/master/mps_youtube/mpris.py",
        "vector": "['copy', 'json', 'os', 're', 'socket', 'time', 'T', 'Thread', 'dbus', 'dbus.service', 'IDENTITY', '=', \"'mps\", '-', \"youtube'\", 'BUS_NAME', '=', '+', 'IDENTITY', '+', '+', 'str', 'os.getpid', 'ROOT_INTERFACE', '=', 'PLAYER_INTERFACE', '=', 'PROPERTIES_INTERFACE', '=', 'MPRIS_PATH', '=', \"'\", '/', '/', '/', \"MediaPlayer2'\", 'self', 'GLib', '=', 'self.bus', '=', '=', 'self', '=', 'self.bus', 'self.bus.get_bus', 'self.bus.get_name', 'acquire', 'self', 'self._acquire_bus', 'run', 'self,', 'connection', 't', '=', 'Thread', 'target', '=', 't.daemon', '=', 't.start', 'connection)', 'self,', 'conn', 'data', '=', 'conn.recv', 'data,', 'tuple', 'name,', 'val', '=', 'data', 'name', '==', \"'socket':\", 'Thread', 'target', '=', 'args', '=', 'val', '.start', 'name', '==', \"'mplayer\", '-', 'val)', 'name', '==', \"'mpv\", '-', 'val,', 'mpv', '=', 'name,', 'val)', 'KeyboardInterrupt:', '_acquire_bus', 'self', 'self.bus', 'self.bus.get_bus', '.request_name', 'BUS_NAME)', 'self.bus', '=', 'dbus.service.BusName', 'BUS_NAME,', 'bus', '=', 'dbus.SessionBus', '=', 'self', '=', 'self.bus)', 'self', 'KeyboardInterrupt:', 'dbus.service.Object', 'self,', 'bus', 'self,', 'bus,', 'MPRIS_PATH)', 'self.socket', '=', '=', 'self.mpv', '=', 'self.properties', '=', 'ROOT_INTERFACE', \"'read_only'\", \"'CanQuit'\", \"'CanSetFullscreen'\", \"'Identity'\", 'IDENTITY,', \"'mps\", '-', \"youtube',\", 'dbus.Array', \"'s',\", '1', 'dbus.Array', \"'s',\", '1', '},', \"'read_write'\", \"'Fullscreen'\", '},', '},', 'PLAYER_INTERFACE', \"'read_only'\", \"'PlaybackStatus'\", \"'Stopped',\", \"'Metadata'\", \"trackid'\", 'dbus.ObjectPath(', \"'\", '/', '/', \"UnknownTrack',\", 'variant_level', '=', '1)', '},', \"'Position'\", 'dbus.Int64', '0', '1.0,', \"'MaximumRate'\", '1.0,', \"'CanGoNext'\", \"'CanGoPrevious'\", \"'CanPlay'\", \"'CanPause'\", \"'CanSeek'\", \"'CanControl'\", '},', \"'read_write'\", \"'Rate'\", '1.0,', \"'Volume'\", '1.0,', '},', '},', 'self,', 'sockpath', 'self.mpv', '=', 'self.socket', '=', 'socket.socket', 'socket.AF_UNIX)', 'tries', '=', '0', 'tries', '<', '10:', 'time.sleep', '.5)', 'self.socket.connect', 'sockpath)', 'tries', '+=', '1', 'observe_full', '=', '\"observe_property\",', '1,', '\"time', '-', 'pos\"', 'self.socket.makefile', 'resp', '=', 'json.loads', 'resp.get', \"'event')\", '==', \"'property\", '-', \"change'\", 'observe_full:', '\"observe_property\",', '2,', '\"volume\"', '\"observe_property\",', '3,', '\"pause\"', '\"observe_property\",', '4,', 'observe_full', '=', 'resp.get', \"'event')\", '==', \"'property\", '-', \"change':\", 'self.setproperty', 'resp', \"'name'\", 'resp.get', \"'data'\", 'self.socket', '=', 'self.mpv', '=', 'self,', 'mpv', '=', 'time.sleep', '1)', '=', 'open', \"'w')\", \"'get_property',\", \"'volume'\", 'self.mpv', '=', 'mpv', '=', 'setproperty', 'self,', 'name:', 'str,', 'val:', 'T.Optional', 'T.Any', 'name', '==', \"'pause':\", 'oldval', '=', 'self.properties', 'PLAYER_INTERFACE', \"'read_only'\", \"'PlaybackStatus']\", 'newval', '=', 'val:', 'newval', '=', \"'Paused'\", 'newval', '=', 'newval', '!=', 'oldval:', 'self.properties', 'PLAYER_INTERFACE', \"'read_only'\", \"'PlaybackStatus']\", '=', 'newval', 'self.PropertiesChanged', 'PLAYER_INTERFACE,', \"'PlaybackStatus':\", 'newval', '},', 'name', '==', \"'stop':\", 'oldval', '=', 'self.properties', 'PLAYER_INTERFACE', \"'read_only'\", \"'PlaybackStatus']\", 'newval', '=', 'val:', 'newval', '=', \"'Stopped'\", 'newval', '=', 'newval', '!=', 'oldval:', 'self.properties', 'PLAYER_INTERFACE', \"'read_only'\", \"'PlaybackStatus']\", '=', 'newval', 'self.PropertiesChanged', 'PLAYER_INTERFACE,', \"'PlaybackStatus':\", 'newval', '},', \"['Metadata',\", \"'Position'\", 'name', '==', \"'volume'\", 'val', 'oldval', '=', 'self.properties', 'PLAYER_INTERFACE', \"'read_write'\", \"'Volume']\", 'newval', '=', 'float', 'val)', '/', '100', 'newval', '!=', 'oldval:', 'self.properties', 'PLAYER_INTERFACE', \"'read_write'\", \"'Volume']\", '=', 'newval', 'self.PropertiesChanged', 'PLAYER_INTERFACE,', \"'Volume':\", 'newval', '},', 'name', '==', \"'time\", '-', \"pos'\", 'val:', 'oldval', '=', 'self.properties', 'PLAYER_INTERFACE', \"'read_only'\", \"'Position']\", 'newval', '=', 'dbus.Int64', 'val', '*', '10', '**', '6)', 'val', 'dbus.Int64', '0)', 'newval', '!=', 'oldval:', 'self.properties', 'PLAYER_INTERFACE', \"'read_only'\", \"'Position']\", '=', 'newval', 'abs', 'newval', '-', 'oldval)', '>=', '4', '*', '10', '**', '6:', 'self.Seeked', 'newval)', 'name', '==', \"'metadata'\", 'val:', 'trackid,', 'title,', 'length,', 'arturl,', 'album', '=', 'val', 'trackid_sanitized', '=', 're.sub', \"'\", '^', 'a', '-', 'zA', '-', 'Z0', '-', '9', \"',\", \"'',\", 'trackid)', 'yturl', '=', \"'https\", '/', '/', 'www.youtube.com', '/', 'watch?v', '=', \"'\", '+', 'trackid', 'oldval', '=', 'self.properties', 'PLAYER_INTERFACE', \"'read_only'\", \"'Metadata']\", 'newval', '=', \"trackid'\", 'dbus.ObjectPath(', \"'\", '/', '/', 'ytid', '/', \"'\", '+', 'trackid_sanitized,', 'variant_level', '=', '1', \"length'\", 'dbus.Int64', 'length', '*', '10', '**', '6,', 'variant_level', '=', '1', \"artUrl'\", 'arturl,', 'variant_level', '=', '1', \"'xesam\", \"title'\", 'title,', 'variant_level', '=', '1', \"'xesam\", 'dbus.Array', \"'s',\", '1', \"'xesam\", \"album'\", 'album,', 'variant_level', '=', '1', \"'xesam\", \"url'\", 'yturl,', 'variant_level', '=', '1', 'newval', '!=', 'oldval:', 'self.properties', 'PLAYER_INTERFACE', \"'read_only'\", \"'Metadata']\", '=', 'newval', 'self.PropertiesChanged', 'PLAYER_INTERFACE,', \"'Metadata':\", 'newval', '},', 'name', '==', 'val:', 'self.Seeked', 'self.properties', 'PLAYER_INTERFACE', \"'read_only'\", \"'Position'\", 'self,', 'self.socket:', 'self.socket.send', 'json.dumps', '.encode', '+', \"b'\\\\n')\", '=', 'x,', 'i', 'enumerate', 'i', 'x]', '=', \"'yes'\", 'self.mpv', '1', 'i', 'x]', '=', \"'no'\", 'self.mpv', '0', 'cmd', '=', '\"', 'str', 'i)', 'i', '+', \"'\\\\n'\", 'cmd)', '@dbus.service.method', '=', 'ROOT_INTERFACE)', 'self', '@dbus.service.method', '=', 'ROOT_INTERFACE)', 'Quit', 'self', '@dbus.service.method', '=', 'PLAYER_INTERFACE)', 'Next', 'self', '\"quit\"', '@dbus.service.method', 'PLAYER_INTERFACE)', 'Previous', 'self', '\"quit\",', '42', '@dbus.service.method', 'PLAYER_INTERFACE)', 'Pause', 'self', 'self.mpv:', '\"set_property\",', '\"pause\",', 'self.properties', 'PLAYER_INTERFACE', \"'read_only'\", \"'PlaybackStatus']\", '!=', \"'Paused':\", \"'pause'\", '@dbus.service.method', 'PLAYER_INTERFACE)', 'PlayPause', 'self', 'self.mpv:', '\"cycle\",', '\"pause\"', '\"pause\"', '@dbus.service.method', 'PLAYER_INTERFACE)', 'Stop', 'self', '\"quit\",', '43', '@dbus.service.method', 'PLAYER_INTERFACE)', 'Play', 'self', 'self.mpv:', '\"set_property\",', '\"pause\",', 'self.properties', 'PLAYER_INTERFACE', \"'read_only'\", \"'PlaybackStatus']\", '!=', \"'pause'\", '@dbus.service.method', 'PLAYER_INTERFACE,', '=', \"'x')\", 'Seek', 'self,', 'offset', '\"seek\",', 'offset', '/', '10', '**', '6', '@dbus.service.method', 'PLAYER_INTERFACE,', '=', \"'ox')\", 'SetPosition', 'self,', 'track_id,', 'position', 'track_id', '==', 'self.properties', 'PLAYER_INTERFACE', \"'read_only'\", \"'Metadata'\", \"trackid'\", '\"seek\",', 'position', '/', '10', '**', '6,', \"'absolute'\", 'self.mpv', '2', '@dbus.service.method', 'PLAYER_INTERFACE,', '=', \"'s')\", 'OpenUri', 'self,', 'uri', '@dbus.service.signal', 'PLAYER_INTERFACE,', 'signature', '=', \"'x')\", 'Seeked', 'self,', 'position', '@dbus.service.method', '=', 'PROPERTIES_INTERFACE,', '=', \"'ss',\", 'out_signature', '=', \"'v')\", 'Get', 'self,', 'property_name', 'self.GetAll', 'property_name]', '@dbus.service.method', '=', 'PROPERTIES_INTERFACE,', '=', \"'s',\", 'out_signature', '=', \"'a\", 'sv', \"')\", 'GetAll', 'self,', 'self.properties:', 't', '=', 'copy.copy', 'self.properties', \"'read_only'\", 't.update', 'self.properties', \"'read_write'\", 't', \"'com.example.UnknownInterface',\", 'object', 'does', 'implement', 'the', '%s', '%', '@dbus.service.method', '=', 'PROPERTIES_INTERFACE,', '=', \"'ssv')\", 'Set', 'self,', 'property_name,', 'new_value', 'self.properties:', 'property_name', 'self.properties', \"'read_write'\", 'property_name', '==', \"'Volume':\", '\"set_property\",', '\"volume\",', 'new_value', '*', '100', \"'get_property',\", \"'volume'\", \"'com.example.UnknownInterface',\", 'object', 'does', 'implement', 'the', '%s', '%', '@dbus.service.signal', '=', 'PROPERTIES_INTERFACE,', 'signature', '=', \"'sa\", 'sv', 'PropertiesChanged', 'self,', 'changed_properties,', 'object', 'self,', 'connection', 'super', 'self', 'self.connection', '=', 'connection', 'send', 'self,', 'obj', 'self.connection:', 'self.connection.send', 'obj)', 'self.connection', '=', \"'MPRIS\", 'process', 'exited', 'connection', '=', '\"could', 'load', 'MPRIS', 'libraries.\")', 'e:', \"couldn\\\\'t\", 'be', \"%s'\", '%', 'e.get_dbus_message', 'connection)']"
    },
    {
        "link": "https://raw.githubusercontent.com/mps-youtube/yewtube/master/mps_youtube/pafy.py",
        "vector": "['json', 'os,', 'glob', 're', 'urllib.parse', 'parse_qs,', 'urlparse', 'requests', 'yt_dlp', 'youtubesearchpython', 'VideosSearch,', 'ChannelsSearch,', 'Suggestions,', 'Comments,', 'Video,', 'Channel,', 'ChannelSearch', 'MyLogger:', 'self,', '=', '=', 'debug', 'self,', 'msg', \"'\", 'debug]', \"'\", 'msg)', 'self,', 'msg', 'msg)', 'self,', 'msg', 'self,', 'msg', 'msg)', 'get_video_streams', 'ytid', 'yt_dlp.YoutubeDL', \"'logger'\", 'MyLogger', 'ydl:', '=', 'ytid,', 'download', '=', '[i', 'i', 'i.get', '!=', 'download_video', 'ytid,', 'folder,', 'audio_only', '=', '=', \"'outtmpl':\", 'folder,', \"'\", '%', 'title', 's', '-', '%', 'id', 's.', '%', 'ext', \"s')\", 'audio_only:', '=', \"'bestaudio\", '/', \"best'\", '=', \"'key':\", \"'FFmpegExtractAudio',\", \"'preferredcodec':\", \"'mp3',\", \"'preferredquality':\", \"'192',\", '}]', 'yt_dlp.YoutubeDL', 'ydl:', 'ydl.download', \"'https\", '/', '/', 'www.youtube.com', '/', 'watch?v', '=', '%', \"s'\", '%', 'ytid)', 'search_videos', 'query,', 'pages', 'videosSearch', '=', 'VideosSearch', 'query,', 'limit', '=', '50)', 'wdata', '=', 'videosSearch.result', \"'result']\", 'i', 'range', 'pages', '-', '1', 'videosSearch.next', 'wdata.extend', 'videosSearch.result', \"'result'\", 'wdata', 'channel_search', 'query', 'channelsSearch', '=', 'ChannelsSearch', 'query,', 'limit', '=', '50,', 'region', '=', \"'US')\", 'channelsSearch.result', \"'result']\", 'query', '=', 'query,', 'limit', '=', '50)', \"'result']\", '=', \"'https\", '/', '/', 'www.youtube.com', '/', '=', '%', \"s'\", '%', 'get_video_title_suggestions', 'query', 'suggestions', '=', 'Suggestions', 'language', '=', \"'en',\", 'region', '=', \"'US')\", 'related_searches', '=', 'suggestions.get', 'query', \"'result']\", 'related_searches', '0', 'len', 'related_searches', 'query', '=', 'channel_search', 'query', '0]', 'channel_id', '=', \"'id']\", 'channel_name', '=', \"'title']\", '(channel_id,', 'channel_name)', 'channel_id', '=', 'channel_id', 'channel_id,', 'query', 'search', '=', 'ChannelSearch', 'query', 'channel_id)', 'search.result', 'get_comments', 'video_id', 'comments', '=', 'Comments.get', 'video_id)', 'comments', \"'result']\", 'video_id', 'videoInfo', '=', 'Video.getInfo', 'video_id)', 'response', '=', 'video_id)', 'videoInfo', \"'likes']\", '=', 'response', \"'likes']\", 'videoInfo', '=', 'response', 'videoInfo', '=', 'response', 'videoInfo', 'Exception', '\"Can\\'t', 'get', 'video', 'Video', 'either', 'private', 'unavailable', 'your', 'video_id', 'json.loads', 'requests.get', \"'https\", '/', '/', '/', 'votes?videoId', '=', \"'\", '+', 'video_id', '.text)', 'extract_video_id', 'url:', 'str)', '->', 'str:', 'idregx', '=', 're.compile', \"r'\", '\\\\w', '-', '11', \"$')\", 'url', '=', 'str', 'url', '.strip', 'idregx.match', 'url', 'url', \"'\", '/', '/', \"'\", 'url:', 'url', '=', \"'\", '/', '/', \"'\", '+', 'url', 'parsedurl', '=', 'urlparse', 'url)', 'parsedurl.netloc', \"('youtube.com',\", \"'www.youtube.com',\", \"'m.youtube.com',\", 'query', '=', 'parse_qs', 'parsedurl.query)', \"'v'\", 'query', 'idregx.match', 'query', \"'v'\", '0', 'query', \"'v'\", '0]', 'parsedurl.netloc', \"('youtu.be',\", \"'www.youtu.be'\", 'vidid', '=', 'parsedurl.path.split', \"'\", '/', \"'\", '-', '1]', 'parsedurl.path', \"''\", 'idregx.match', 'vidid', 'vidid', 'err', '=', '\"Need', '11', 'character', 'video', 'id', 'the', 'URL', 'of', 'the', 'video.', 'Got', '%s\"', 'err', '%', 'url)', 'channel_id', 'channel', '=', 'Channel', 'channel_id)', '=', 'channel.result', 'channel.next', 'channel.result', 'get_subtitles', 'ytid,', 'output_dir', \"'\", '/', \"'\", 'output_dir', '=', 'output_dir', '-', '1]', 'outtmpl', '=', \"f'\", 'output_dir', '/', 'subtitles', '/', 'ytid', \"'\", '=', 'glob.glob', 'outtmpl', '+', \"'\", '*', \".vtt'\", '0]', 'url', '=', \"f'https\", '/', '/', 'www.youtube.com', '/', 'watch?v', '=', 'ytid', \"'\", 'ydl_opts', '=', \"'skip_download':\", \"'writesubtitles':\", \"'writeautomaticsub':\", \"'vtt',\", \"'outtmpl':\", 'outtmpl,', \"'logger':\", 'MyLogger', '=', 'yt_dlp.YoutubeDL', 'ydl_opts)', 'ydl:', '=', 'url,', 'download', '=', 'subtitles', '=', \"'subtitles',\", '=', 'subtitles.keys', 'lang', '=', '0]', 'lang', '=', \"'en'\", 'ydl.params', \"'subtitleslangs']\", '=', '[lang]', 'ydl', '=', 'yt_dlp.YoutubeDL', 'ydl_opts)', 'ydl.download', 'url', 'path', '=', \"f'\", 'outtmpl', '.', 'lang', \".vtt'\", 'path', 'path)']"
    },
    {
        "link": "https://raw.githubusercontent.com/mps-youtube/yewtube/master/mps_youtube/paths.py",
        "vector": "['os', '=', 'os.name', '==', '\"nt\"', 'user_home', '=', '\"', '~', '\")', '=', 'user_home,', '\"Downloads\",', '\"yewtube\")', 'USER_DIRS', '=', 'user_home,', '\".config\",', '\"user', '-', 'dirs.dirs\")', 'DOWNLOAD_HOME', '=', 'user_home,', '\"Downloads\")', \"'XDG_DOWNLOAD_DIR'\", 'os.environ:', 'ddir', '=', 'os.environ', \"'XDG_DOWNLOAD_DIR']\", 'USER_DIRS', '=', 'open', 'USER_DIRS', '=', '[x', 'x', '\"XDG_DOWNLOAD_DIR\"', 'len', '==', '1:', 'ddir', '=', '0', '.split', '\"', '=', '\"', '1', '.replace', '\\'\"\\',', \"'')\", 'ddir', '=', 'ddir.replace', '\"$HOME\",', 'user_home', '.strip', 'ddir', '=', 'DOWNLOAD_HOME', 'DOWNLOAD_HOME)', 'user_home', 'ddir', '=', 'DOWNLOAD_HOME', 'DOWNLOAD_HOME)', 'user_home', 'ddir', '=', 'ddir', 'ddir,', '\"mps\")', 'get_config_dir', 'confdir', '=', 'os.environ', '\"APPDATA\"]', \"'XDG_CONFIG_HOME'\", 'os.environ:', 'confdir', '=', 'os.environ', \"'XDG_CONFIG_HOME']\", 'confdir', '=', '\"', '~', '\"', \"'.config')\", 'mps_confdir', '=', 'confdir,', '\"mps', '-', 'youtube\")', 'os.makedirs', 'mps_confdir,', '=', 'mps_confdir']"
    },
    {
        "link": "https://raw.githubusercontent.com/mps-youtube/yewtube/master/mps_youtube/player.py",
        "vector": "['math', 'os', 'shlex', 'socket', 'subprocess', 'sys', 'time', 'abc', 'ABCMeta,', 'abstractmethod', '.', 'c,', 'config,', 'content,', 'g,', 'screen,', 'streams,', 'util', '.util', '.', 'pafy', '=', 'os.name', '==', '\"nt\"', '_playbackStatus', '=', '\"Paused\"', '=', '@property', 'PlaybackStatus', 'self', 'self._playbackStatus', '@PlaybackStatus.setter', 'PlaybackStatus', 'self,', 'value', 'self._playbackStatus', '=', 'value', 'value', '==', 'paused', '=', 'paused', '=', \"'pause',\", 'paused', 'play', 'self,', 'shuffle', '=', 'repeat', '=', 'override', '=', 'config.ALWAYS_REPEAT.get:', 'repeat', '=', '=', 'self.shuffle', '=', 'shuffle', 'self.repeat', '=', 'repeat', 'self.override', '=', 'override', 'shuffle:', 'self.song_no', '=', '0', '0', '<=', 'self.song_no', '<=', 'len', '-', '1:', 'self.song', '=', 'self.song_no]', 'g.content', '=', 'self._playback_progress', 'self.song_no,', 'repeat', '=', 'repeat)', 'screen.update', 'fill_blank', '=', '=', 'len', '>', 'self.song_no', '+', '1', 'streams.preload', 'self.song_no', '+', '1', 'override', '=', 'self.override)', 'config.SET_TITLE.get:', 'self.song.title', '+', '\"', '-', 'yewtube\")', 'self.softrepeat', '=', 'repeat', 'len', '==', '1', 'g.scrobble:', 'g.scrobble_queue', 'self.song_no', 'config.SHOW_VIDEO', 'config.SHOW_SUBTITLES:', 'self.subtitle_path', '=', 'pafy.get_subtitles', 'self.song.ytid,', 'config.DDIR.get)', 'self.video,', 'self.stream,', 'self.override', '=', 'stream_details(', 'self.song,', 'override', '=', 'self.override,', 'softrepeat', '=', 'self.softrepeat)', 'self._playsong', 'KeyboardInterrupt:', '\"Keyboard', 'Interrupt\")', 'c.w', '+', '\")', 'g.message', '=', 'c.y', '+', '\"Playback', 'halted\"', '+', 'c.w', 'KeyboardInterrupt', 'Exception)', 'e:', 'traceback', 'type', 'e', 'e,', 'e.__traceback__)', 'self.song_no', '+=', '1', 'config.SET_TITLE.get:', '\"yewtube\")', 'self.song_no', '==', '-1:', 'self.song_no', '=', 'len', '-', '1', 'repeat', '0', 'self.song_no', '==', 'len', 'repeat:', 'self.song_no', '=', '0', 'next', 'self', 'previous', 'self', 'stop', 'self', 'seek', 'self', '_playsong', 'self,', 'failcount', '=', '0,', 'softrepeat', '=', 'config.PLAYER.get', 'config.PLAYER.get', 'g.message', '=', '\"Player', 'configured!', 'Enter', '%sset', 'player', '<player_app>', '\"\\\\', '\"', '%', 's', 'to', 'set', 'a', 'player\"', '%', '(c.g,', 'c.w)', 'config.NOTIFIER.get:', 'subprocess.Popen', 'shlex.split', 'config.NOTIFIER.get)', '+', '[self.song.title', 'size', '=', 'streams.get_size', 'self.song.ytid,', 'self.stream', \"'url'\", 'songdata', '=', '(self.song.ytid,', \"''\", 'self.stream.get', \"'ext')\", 'self.stream.get', \"'ext')\", '+', '\"', '\"', '+', 'self.stream', \"'quality'\", 'size', '/', '(1024', '**', '2', 'self.songdata', '=', '\"', '%', 's;', '%s;', '%s', 'Mb\"', '%', 'songdata', 'screen.writestatus', 'self.songdata)', 'self._launch_player', 'config.HISTORY.get:', 'self.song)', '_launch_player', 'self', 'self', 'metadata', '=', 'util._get_metadata', 'self.song.title)', 'config.LOOKUP_METADATA.get', 'metadata', 'arturl', '=', '\"https', '/', '/', 'i.ytimg.com', '/', 'vi', '/', '%', 's', '/', '%', 'self.song.ytid', 'metadata', '=', '(self.song.ytid,', 'self.song.title,', 'self.song.length,', 'arturl,', \"[''\", \"'')\", 'arturl', '=', 'metadata', \"'album_art_url']\", 'metadata', '=', '(self.song.ytid,', 'metadata', \"'track_title'\", 'self.song.length,', 'arturl,', '[metadata', 'metadata', \"'album'\", \"'metadata',\", 'metadata', '_playback_progress', 'self,', 'idx,', 'allsongs,', 'repeat', '=', 'cw', '=', 'util.getxy', '.width', 'out', '=', '\"', '%s', '%', '-', 'XXs', '%', 's', '%', 's\\\\n\".replace', '\"XX\",', 'str', 'cw', '-', '9', 'out', '=', 'out', '%', '(c.ul,', '\"Title\",', '\"Time\",', 'c.w)', 'multi', '=', 'len', 'allsongs)', '>', '1', 'n,', 'song', 'enumerate', 'allsongs', '=', 'util.fmt_time', 'song.length)', 'length', '=', '\"', '\"', '*', '(8', '-', 'len', '+', 'i', '=', 'util.uea_pad', 'cw', '-', '14,', 'song.title', 'length,', 'fmt', '=', '(c.w,', '\"', '\",', 'c.b,', 'i', '0', 'c.w,', 'c.y,', 'i', '1', 'c.w)', 'n', '==', 'idx:', 'fmt', '=', '(c.y,', '\">', '\",', 'c.p,', 'i', '0', 'c.w,', 'c.p,', 'i', '1', 'c.w)', 'cur', '=', 'i', 'out', '+=', '\"', '%', 's', '%', 's', '%', 's', '%', 's', '%', 's', '%s', '%', 's', '%', 's\\\\n\"', '%', 'fmt', 'out', '+=', '\"\\\\n\"', '*', '(3', '-', 'len', 'allsongs', 'pos', '=', '8', '*', '\"', '\",', 'c.y,', 'idx', '+', '1,', 'c.w,', 'c.y,', 'len', 'allsongs', 'c.w', '=', '\"', 'of', '*', 'pos)', 'multi', '\"\\\\n\\\\n\"', 'keys', '=', 'self._help', '=', 'multi', 'repeat', 'out', '=', 'out', 'multi', 'song', '=', 'allsongs', '0', 'config.SHOW_PLAYER_KEYS.get', 'keys', 'out', '+=', '\"\\\\n\"', '+', 'keys', '=', '\"', 'of', '*', 'pos)', 'multi', '\"\\\\n\"', 'out', '+=', '\"\\\\n\"', '+', '\"', '\"', '*', '(cw', '-', '19)', 'multi', '\"\"', 'fmt', '=', 'c.r,', 'cur', '0', '.strip', 'cw', '-', '19', 'c.w,', 'c.w,', 'cur', '2', 'c.w', 'out', '+=', '\"', '%', 's', '%s', '%', 's', '%', 's', '%s', '%', 's', '%', 's\"', '%', 'fmt', 'out', '+=', '\"', 'REPEAT', 'MODE\"', 'repeat', '\"\"', 'out', 'self,', 'elapsed_s,', 'prefix,', 'songlength', '=', '0,', 'volume', '=', '=', 'elapsed_s,', 'prefix,', 'songlength,', 'volume', '=', 'volume)', '!=', 'screen.writestatus', '=', 'self,', 'elapsed_s,', 'prefix,', 'songlength', '=', '0,', 'volume', '=', '=', 'elapsed_s', '=', '=', '0', 'elapsed_s', '>=', '60:', '=', '//', '60', '%=', '60', '>=', '60:', '=', '//', '60', '%=', '60', 'pct', '=', '(float', 'elapsed_s)', '/', 'songlength', '*', '100)', 'songlength', '0', '=', '\"', '%', '02i', '%', '02i', '%', '02i', '%s\"', '%', '(\"', '%', '.0f', '%', '%', '\"', '%', 'pct', '.ljust', '6)', 'volume:', 'vol_suffix', '=', '\"', 'vol:', '%d', '%', '%', '\"', '%', 'volume', 'vol_suffix', '=', '\"\"', 'cw', '=', 'util.getxy', '.width', 'prog_bar_size', '=', 'cw', '-', 'len', 'prefix)', '-', 'len', '-', 'len', 'vol_suffix)', '-', '7', 'progress', '=', 'math.ceil', 'pct', '/', '100', '*', 'prog_bar_size', '+=', '\"', '%', 's', '\"', '%', '(\"', '=', '\"', '*', '(progress', '-', '1)', '+', '\"', '>', '\"', '.ljust', 'prog_bar_size,', \"'\", \"')\", 'prefix', '+', '+', 'vol_suffix', 'CmdPlayer', 'next', 'self', 'g.scrobble:', 'g.album,', 'g.scrobble_queue', 'self.song_no', 'self.song_no', '+=', '1', 'previous', 'self', 'g.scrobble:', 'g.album,', 'g.scrobble_queue', 'self.song_no', 'self.song_no', '-=', '1', 'stop', 'self', 'KeyboardInterrupt', 'self', '_generate_real_playerargs', 'self', 'clean_up', 'self', 'launch_player', 'self,', 'cmd', '_help', 'self,', '=', '_launch_player', 'self', 'cmd', '=', 'self._generate_real_playerargs', 'util.dbg', '%s\",', 'self.song.title)', 'util.dbg', '%s\",', '\"', 'cmd', 'cmd', '=', '[util.xenc', 'i)', 'i', 'cmd]', 'self.launch_player', 'cmd)', 'g.message', '=', 'util.F', \"'no\", \"player')\", '%', 'config.PLAYER.get', \"'stop',\", 'self.p', 'self.p.poll', 'self.clean_up', 'stream_details', 'song,', 'failcount', '=', '0,', 'override', '=', 'softrepeat', '=', 'song.ytid', 'screen.writestatus', 'item..\")', 'time.sleep', '0.1)', 'streams.get', 'song,', '=', 'failcount,', 'callback', '=', 'screen.writestatus)', 'socket.timeout)', 'e:', 'util.dbg', '\"', '--', 'stream_details', 'call', 'to', 'streams.get', '%s\",', 'str', 'e', '\"Youtube', 'says\"', 'str', 'e', 'g.message', '=', 'util.F', \"'cant\", 'get', \"track')\", '%', '(song.title', '+', '\"', '\"', '+', 'str', 'e', 'failcount', '<', 'g.max_retries:', 'util.dbg', '\"', '--', '-', 'next', 'stream\")', 'failcount', '+=', '1', 'stream_details', 'song,', 'failcount', '=', 'failcount,', 'override', '=', 'override,', 'softrepeat', '=', 'softrepeat)', '\"pafy\"', 'str', 'e', 'g.message', '=', 'str', 'e)', '+', '\"', '-', '\"', '+', 'song.ytid', 'g.message', '=', 'util.F', \"'track\", \"unresolved')\", 'util.dbg', '\"', '--', '--', 'stream_details', 'call', 'to', 'streams.get\")', 'failcount', '==', 'g.max_retries:', 'video', '=', 'config.SHOW_VIDEO.get', 'override', '!=', '\"audio\")', '(override', '(\"fullscreen\",', 'm4a', '=', '\"mplayer\"', 'config.PLAYER.get', 'cached', '=', 'g.streams', 'song.ytid]', 'stream', '=', 'streams.select', 'cached,', 'q', '=', 'failcount,', 'audio', '=', 'video', 'm4a_ok', '=', 'm4a)', 'stream', 'failcount)', 'video:', 'util.dbg', 'c.r', '+', '\"no', 'audio', 'mplayer', 'm4a,', 'video', 'stream\"', '+', 'c.w)', 'override', '=', '\"a', '-', 'v\"', 'video', '=', 'stream', '=', 'streams.select', 'cached,', 'q', '=', 'failcount,', 'audio', '=', 'maxres', '=', '1600)', 'stream:', '\"No', 'streams', 'available\")', '(video,', 'stream,', 'override)', 'e:', 'util.dbg', '\"', '--', '--', 'stream_details', 'call', 'to', 'gen_real_args', '%s\",', 'str', 'e', 'failcount', '<', 'g.max_retries:', 'failcount', '+=', '1', 'stream_details', 'song,', 'failcount', '=', 'failcount,', 'override', '=', 'override,', 'softrepeat', '=', 'softrepeat)', 'g.message', '=', 'str', 'e)', 'e:', 'errmsg', '=', 'e.message', 'e,', '\"message\")', 'str', 'e)', 'g.message', '=', 'c.r', '+', 'str', 'errmsg)', '+', 'c.w']"
    },
    {
        "link": "https://raw.githubusercontent.com/mps-youtube/yewtube/master/mps_youtube/players/GenericPlayer.py",
        "vector": "['os', 'subprocess', '..', 'config', '..player', 'CmdPlayer', 'GenericPlayer', 'CmdPlayer', 'self,', 'player', 'self.player', '=', 'player', '_generate_real_playerargs', 'self', 'args', '=', 'config.PLAYERARGS.get.strip', '.split', '[self.player]', '+', 'args', '+', '[self.stream', \"'url'\", 'clean_up', 'self', 'launch_player', 'self,', 'cmd', 'open', 'os.devnull,', '\"w\")', 'devnull:', 'self.p', '=', 'subprocess.Popen', 'cmd,', 'shell', '=', 'stderr', '=', 'devnull)', 'self.p.wait', 'self.next', '_help', 'self,', '=']"
    },
    {
        "link": "https://raw.githubusercontent.com/mps-youtube/yewtube/master/mps_youtube/players/__init__.py",
        "vector": "[]"
    },
    {
        "link": "https://raw.githubusercontent.com/mps-youtube/yewtube/master/mps_youtube/players/mplayer.py",
        "vector": "['os', 're', 'subprocess', 'sys', 'tempfile', 'T', '..', 'c,', 'config,', 'g,', 'paths,', 'screen,', 'util', '..player', 'CmdPlayer', '..util', '=', 'os.name', '==', '\"nt\"', 'mplayer', 'CmdPlayer', 'self,', 'player', 'self.player', '=', 'player', 'self.mplayer_version', '=', '_get_mplayer_version', 'player)', '_generate_real_playerargs', 'self', '\"uiressl', '=', 'yes\"', 'self.stream', \"'url'\", 'ver', '=', 'self.mplayer_version', '(ver', '>', '(1,', '1)', 'ver,', 'tuple)', 'ver', '>=', '37294', '\"', '%', 's', 'mplayer', \"doesn't\", 'stream.', '\"', '\"Use', 'mpv', 'update', 'mplayer', 'to', 'a', 'newer', 'version\"', '%', 'self.song.title)', 'args', '=', 'config.PLAYERARGS.get.strip', '.split', 'pd', '=', \"'mplayer']\", 'args.extend', 'pd', '\"title\"', '\\'\"', '0', 'self.song.title', 'pd', \"'geo']\", 'args:', '=', 'config.WINDOW_SIZE.get', '\"\"', 'config.WINDOW_POS.get:', 'wp', '=', 'config.WINDOW_POS.get', 'xx', '=', '\"', '+', '1\"', '\"left\"', 'wp', '\"', '-', '1\"', 'yy', '=', '\"', '+', '1\"', '\"top\"', 'wp', '\"', '-', '1\"', '+=', 'xx', '+', 'yy', 'args.extend', 'pd', \"'geo'\", 'self.override', '==', '\"a', '-', 'v\":', 'pd', '\"novid\"', 'args)', 'config.FULLSCREEN.get', 'self.override', '!=', 'self.override', '==', '\"fullscreen\"', 'pd', '\"fs\"', 'args)', 'self.video', 'self.stream', \"'ext']\", '==', '\"m4a\":', 'util.dbg', '\"', '%', 'ignidx', 'flag', '%', 's\")', 'pd', '\"ignidx\"', 'args)', 'g.volume:', '\"', '-', 'volume\",', 'args)', 'str', 'g.volume', 'args)', '\"', '-', 'really', '-', 'quiet\",', 'args,', 'remove', '=', '\"', '-', 'noquiet\",', 'args)', '\"', '-', 'prefer', '-', 'ipv4\",', 'args)', '\"', '-', 'cache\",', 'args)', '\"4096\",', 'args)', '[self.player]', '+', 'args', '+', '[self.stream', \"'url'\", 'clean_up', 'self', 'launch_player', 'self,', 'cmd', '=', 'self.sockpath', '=', '=', 'cmd.append', \"'\", '-', '=', '2', '.replace', \"'\\\\\\\\',\", \"'\", '/', \"')\", 'cmd.append', \"'conf\", '=', \"'\", '+', '=', 'tempfile.mktemp', \"'mpsyt\", '-', \"mplayer')\", 'cmd.extend', \"'\", '-', \"'file\", '=', \"'\", '+', \"'mplayer\", '-', 'self.p', '=', 'subprocess.Popen', 'cmd,', 'shell', '=', 'stdout', '=', 'subprocess.PIPE,', 'stderr', '=', 'subprocess.STDOUT,', 'bufsize', '=', '0)', 'self._player_status', 'self.songdata', '+', '\";', '\",', 'self.song.length)', '=', 'self.p.wait', '==', '42:', 'self.previous', '==', '43:', 'self.stop', 'self.next', '_player_status', 'self,', 'prefix,', 'songlength', '=', '0', 're_player', '=', 're.compile', 'r\"A', '\\\\s', '*', '?P', '<', 'elapsed_s', '>', '\\\\d', '+', '\\\\.\\\\d\\\\s', '*', '\")', 're_volume', '=', 're.compile', 'r\"Volume', '\\\\s', '*', '?P', '<', 'volume', '>', '\\\\d', '+', '\\\\s', '*', '%', '\")', '=', 'buff', '=', \"''\", 'volume_level', '=', '=', 'elapsed_s', '=', '0', 'self.p.poll', 'stdstream', '=', 'self.p.stdout', 'char', '=', 'stdstream.read', '1', '.decode', '\"utf', '-', '8\",', '=', 'char', \"'\\\\r\\\\n':\", 'mv', '=', 're_volume.search', 'buff)', 'mv:', 'volume_level', '=', 'mv.group', '\"volume\"', 'match_object', '=', 're_player.match', 'buff)', 'match_object:', 'h,', 'm,', 's', '=', 'map', 'match_object.groups', 'elapsed_s', '=', 'h', '*', '3600', '+', 'm', '*', '60', '+', 's', 'elapsed_s', '=', 'match_object.group', \"'elapsed_s')\", \"'0')\", 'volume_level', 'volume_level', '!=', 'g.volume:', 'g.volume', '=', 'volume_level', 'elapsed_s,', 'prefix,', 'songlength,', 'volume', '=', 'volume_level)', \"'ANS_volume\", '=', \"'\", 'volume_level', '=', 'round', 'float', 'buff.split', \"'\", '=', \"'\", '1', 'paused', '=', '(\"PAUSE\"', 'buff)', '(\"Paused\"', 'buff)', '(elapsed_s', '!=', 'paused)', '=', 'elapsed_s', \"'pause',\", 'paused', \"'volume',\", 'volume_level', \"'time\", '-', \"pos',\", 'elapsed_s', 'buff', '=', \"''\", 'buff', '+=', 'char', '_help', 'self,', '=', 'volume', '=', '\"', '0', '9', '1', 'volume', '0', '0', '1', '0', 'CTRL', '-', 'C', '1', 'seek', '=', '\"', '0', '\\\\u2190', '1', 'seek', '0', '\\\\u2192', '1', '\"', 'pause', '=', '\"', '0', '\\\\u2193', '1', 'SEEK', '0', '\\\\u2191', '1', '0', 'space', '1', 'pause\"', 'seek', '=', '\"', '0', '<', '-', '1', 'seek', '0', '->', '1', '\"', 'pause', '=', '\"', '0', 'DN', '1', 'SEEK', '0', 'UP', '1', '0', 'space', '1', 'pause\"', '=', '\"', '0', 'q', '1', 'next\"', 'next_prev', '=', '\"', '0', '>', '1', 'next', '/', 'prev', '0', '<', '1', '\"', 'ret', '=', 'config.AUTOPLAY.get', '\"\"', 'ret', '=', 'next_prev', 'ret', 'fmt', '=', '\"', '%', '-', '20s', '%', '-', '20s\"', '=', 'fmt', '%', '(seek,', 'volume)', '+', '\"\\\\n\"', '+', 'fmt', '%', '(pause,', 'ret)', 'c.g,', 'c.w)', 'confpath', '=', 'conf', '=', \"''\", 'confpath', '=', 'paths.get_config_dir', '\"mplayer', '-', 'confpath', 'util.dbg', '%s', 'key', 'file\",', 'confpath)', 'open', 'confpath)', 'conffile:', 'conf', '=', 'conffile.read', '+', \"'\\\\n'\", 'conf', '=', 'conf.replace', '\"quit\",', '\"quit', '43\")', 'conf', '=', 'conf.replace', '\"quit', '42\")', 'conf', '=', 'conf.replace', '\"pt_step', '-1\",', '\"quit', '42\")', 'conf', '=', 'conf.replace', '\"quit\")', 'conf', '=', 'conf.replace', '\"pt_step', '1\",', '\"quit\")', '=', \"['q\", 'quit', \"43\\\\n',\", \"'>\", \"quit\\\\n',\", \"'<\", 'quit', \"42\\\\n',\", \"'NEXT\", \"quit\\\\n',\", \"'PREV\", 'quit', \"42\\\\n',\", \"'ENTER\", \"quit\\\\n']\", 'bound_keys', '=', '[i.split', '0]', 'i', 'i.split', 'i', 'key', '=', 'i.split', '0]', 'key', 'bound_keys:', 'conf', '+=', 'i', \"'w',\", 'prefix', '=', \"'mpsyt\", '-', '=', 'tmpfile:', 'tmpfile.write', 'conf)', 'tmpfile.name', '_get_mplayer_version', 'exename:', 'str)', '->', 'T.Union', 'T.Tuple', '...', 'o', '=', 'subprocess.check_output', 'exename', '.decode', 'm', '=', 're.search', 'r\"MPlayer', '\\\\S', '*', '?SVN', '\\\\s', '-', 'r', '0', '-', '9', '+', '\",', 'o,', 're.MULTILINE', '|', 're.IGNORECASE)', 'ver', '=', '0', 'm:', 'ver', '=', 'm.groups', '0', 'm', '=', 're.search', \"'MPlayer\", '0', '-', '9', '+', '.', '0', '-', '9', '+', \"',\", 'o,', 're.MULTILINE)', 'm:', 'ver', '=', 'tuple', 'i)', 'i', 'm.groups', 'util.dbg', '\"', '%', 'sFailed', 'to', 'detect', 'mplayer', 'version', '%', 's\",', 'c.r,', 'c.w)', 'ver']"
    },
    {
        "link": "https://raw.githubusercontent.com/mps-youtube/yewtube/master/mps_youtube/players/mpv.py",
        "vector": "['json', 'os', 're', 'socket', 'subprocess', 'sys', 'tempfile', 'time', '..', 'c,', 'config,', 'g,', 'paths,', 'screen,', 'util', '..player', 'CmdPlayer', '..util', '=', 'os.name', '==', '\"nt\"', 'mpv', 'CmdPlayer', 'self,', 'player', 'self.player', '=', 'player', 'self.mpv_version', '=', '_get_mpv_version', 'player)', 'self.mpv_options', '=', 'subprocess.check_output(', '[player,', '\"', '--', '-', 'options\"', '.decode', 'self.mpv_usesock', '=', '\"\"', '\"', '--', '-', 'unix', '-', 'socket\"', 'self.mpv_options:', 'self.mpv_usesock', '=', '\"', '--', '-', 'unix', '-', 'socket\"', 'util.dbg', 'c.g', '+', '\"mpv', '-', '-', '-', 'unix', '-', 'socket\"', '+', 'c.w)', '\"', '--', '-', 'ipc', '-', 'server\"', 'self.mpv_options:', 'self.mpv_usesock', '=', '\"', '--', '-', 'ipc', '-', 'server\"', 'util.dbg', 'c.g', '+', '\"mpv', '-', '-', '-', 'ipc', '-', 'server\"', '+', 'c.w)', '_generate_real_playerargs', 'self', 'args', '=', 'config.PLAYERARGS.get.strip', '.split', 'pd', '=', \"'mpv']\", 'completetitle', '=', \"'\", '=', 'pd', '\"title\"', '\\'\"', '0', 'self.song.title', 'completetitle,', 'args)', 'pd', \"'geo']\", 'args:', '=', 'config.WINDOW_SIZE.get', '\"\"', 'config.WINDOW_POS.get:', 'wp', '=', 'config.WINDOW_POS.get', 'xx', '=', '\"', '+', '1\"', '\"left\"', 'wp', '\"', '-', '1\"', 'yy', '=', '\"', '+', '1\"', '\"top\"', 'wp', '\"', '-', '1\"', '+=', 'xx', '+', 'yy', '=', \"'\", '=', 'pd', \"'geo'\", 'args)', 'self.override', '==', '\"a', '-', 'v\":', 'pd', '\"novid\"', 'args)', 'config.FULLSCREEN.get', 'self.override', '!=', 'self.override', '==', '\"fullscreen\"', 'pd', '\"fs\"', 'args)', 'self.video', 'self.stream', \"'ext']\", '==', '\"m4a\":', 'util.dbg', '\"', '%', 'ignidx', 'flag', '%', 's\")', 'pd', '\"ignidx\"', 'args)', '\"', '--', 'ytdl\"', 'self.mpv_options:', '\"', '--', 'no', '-', 'ytdl\",', 'args)', 'msglevel', '=', 'pd', '\"msglevel\"', '\"', '<', '0.4\"]', 'self.mpv_version', '0', '2]', '<', '(0,', '0)', 'self.mpv_version', '0', '2]', '>=', '(0,', '4', 'msglevel', '=', 'pd', '\"msglevel\"', '\"', '>=', '0.4\"]', 'g.debug_mode:', 'self.mpv_usesock:', '\"', '--', 'really', '-', 'quiet\",', 'args)', '\"', '--', 'really', '-', 'quiet\",', 'args,', 'remove', '=', 'msglevel,', 'args)', 'g.volume:', '\"', '--', 'volume', '=', '\"', '+', 'str', 'g.volume', 'args)', 'self.softrepeat:', '\"', '--', 'loop', '-', 'file\",', 'args)', 'config.SHOW_VIDEO.get:', \"'\", '--', 'no', '-', \"video',\", 'args)', \"'\", '--', 'vid', '=', \"no',\", 'args)', '[self.player]', '+', 'args', '+', '[self.stream', \"'url'\", 'clean_up', 'self', 'self.sockpath', 'self.sockpath', 'self.sockpath)', 'launch_player', 'self,', 'cmd', '=', 'cmd.append', \"'\", '--', '-', 'conf', '=', \"'\", '+', 'self.conf_dir', '=', '_get_conf_dir', 'self.conf_dir', 'cmd.append', \"'\", '--', 'config', '-', 'dir', '=', \"'\", '+', 'self.conf_dir)', 'self.sockpath', '=', '=', 'self.mpv_usesock:', 'self.sockpath', '=', 'tempfile.mktemp', \"'.sock',\", \"'mpsyt\", '-', \"mpv')\", 'cmd.append', 'self.mpv_usesock', '+', \"'\", '=', \"'\", '+', 'self.sockpath)', 'open', 'os.devnull,', '\"w\")', 'devnull:', 'self.p', '=', 'subprocess.Popen', 'cmd,', 'shell', '=', 'stderr', '=', 'devnull)', \"'socket',\", 'self.sockpath', '=', 'tempfile.mktemp', \"'mpsyt\", '-', \"mpv')\", 'cmd.append', \"'\", '--', '-', 'file', '=', \"'\", '+', \"'mpv\", '-', 'self.p', '=', 'subprocess.Popen', 'cmd,', 'shell', '=', 'stderr', '=', 'subprocess.PIPE,', 'bufsize', '=', '0)', 'self._player_status', 'self.songdata', '+', '\";', '\",', 'self.song.length)', '=', 'self.p.wait', '==', '42:', 'self.previous', '==', '43:', 'self.stop', 'self.next', '_player_status', 'self,', 'prefix,', 'songlength', '=', '0', 're_player', '=', 're.compile', 'r\".', '15', 'AV?', '\\\\s', '*', '\\\\d\\\\d', '\\\\d\\\\d', '\\\\d\\\\d', '\")', 're_volume', '=', 're.compile', 'r\"Volume', '\\\\s', '*', '?P', '<', 'volume', '>', '\\\\d', '+', '\\\\s', '*', '%', '\")', '=', 'buff', '=', \"''\", 'volume_level', '=', '=', 'self.sockpath:', 's', '=', 'socket.socket', 'socket.AF_UNIX)', 'tries', '=', '0', 'tries', '<', '10', 'self.p.poll', 'time.sleep', '.5)', 's.connect', 'self.sockpath)', 'tries', '+=', '1', 'observe_full', '=', 'cmd', '=', '[\"observe_property\",', '1,', '\"time', '-', 'pos\"', 's.send', 'json.dumps', 'cmd', '.encode', '+', \"b'\\\\n')\", 'volume_level', '=', 'elapsed_s', '=', 's.makefile', 'resp', '=', 'json.loads', 'resp.get', \"'event')\", '==', \"'property\", '-', \"change'\", 'observe_full:', 'cmd', '=', '[\"observe_property\",', '2,', '\"volume\"', 's.send', 'json.dumps', 'cmd', '.encode', '+', \"b'\\\\n')\", 'observe_full', '=', 'resp.get', \"'event')\", '==', \"'property\", '-', \"change'\", 'resp', \"'id']\", '==', '1:', 'resp.get', \"'data')\", 'elapsed_s', '=', 'resp', \"'data'\", 'resp.get', \"'event')\", '==', \"'property\", '-', \"change'\", 'resp', \"'id']\", '==', '2:', 'volume_level', '=', 'resp', \"'data'\", 'volume_level', 'volume_level', '!=', 'g.volume', 'g.volume', '=', 'volume_level', 'elapsed_s:', 'elapsed_s,', 'prefix,', 'songlength,', 'volume', '=', 'volume_level)', 'elapsed_s', '=', '0', 'self.p.poll', 'stdstream', '=', 'self.p.stderr', 'char', '=', 'stdstream.read', '1', '.decode', '\"utf', '-', '8\",', '=', 'char', \"'\\\\r\\\\n':\", 'mv', '=', 're_volume.search', 'buff)', 'mv:', 'volume_level', '=', 'mv.group', '\"volume\"', 'match_object', '=', 're_player.match', 'buff)', 'match_object:', 'h,', 'm,', 's', '=', 'map', 'match_object.groups', 'elapsed_s', '=', 'h', '*', '3600', '+', 'm', '*', '60', '+', 's', 'elapsed_s', '=', 'match_object.group', \"'elapsed_s')\", \"'0')\", 'volume_level', 'volume_level', '!=', 'g.volume:', 'g.volume', '=', 'volume_level', 'elapsed_s,', 'prefix,', 'songlength,', 'volume', '=', 'volume_level)', \"'ANS_volume\", '=', \"'\", 'volume_level', '=', 'round', 'float', 'buff.split', \"'\", '=', \"'\", '1', 'paused', '=', '(\"PAUSE\"', 'buff)', '(\"Paused\"', 'buff)', '(elapsed_s', '!=', 'paused)', '=', 'elapsed_s', \"'pause',\", 'paused', \"'volume',\", 'volume_level', \"'time\", '-', \"pos',\", 'elapsed_s', 'buff', '=', \"''\", 'buff', '+=', 'char', '_help', 'self,', '=', 'volume', '=', '\"', '0', '9', '1', 'volume', '0', '0', '1', '0', 'CTRL', '-', 'C', '1', 'seek', '=', '\"', '0', '\\\\u2190', '1', 'seek', '0', '\\\\u2192', '1', '\"', 'pause', '=', '\"', '0', '\\\\u2193', '1', 'SEEK', '0', '\\\\u2191', '1', '0', 'space', '1', 'pause\"', 'seek', '=', '\"', '0', '<', '-', '1', 'seek', '0', '->', '1', '\"', 'pause', '=', '\"', '0', 'DN', '1', 'SEEK', '0', 'UP', '1', '0', 'space', '1', 'pause\"', '=', '\"', '0', 'q', '1', 'next\"', 'next_prev', '=', '\"', '0', '>', '1', 'next', '/', 'prev', '0', '<', '1', '\"', 'ret', '=', 'config.AUTOPLAY.get', '\"\"', 'ret', '=', 'next_prev', 'ret', 'fmt', '=', '\"', '%', '-', '20s', '%', '-', '20s\"', '=', 'fmt', '%', '(seek,', 'volume)', '+', '\"\\\\n\"', '+', 'fmt', '%', '(pause,', 'ret)', 'c.g,', 'c.w)', 'confpath', '=', 'conf', '=', \"''\", 'confpath', '=', 'paths.get_config_dir', '\"mpv', '-', 'confpath', 'util.dbg', '%s', 'key', 'file\",', 'confpath)', 'open', 'confpath)', 'conffile:', 'conf', '=', 'conffile.read', '+', \"'\\\\n'\", 'conf', '=', 'conf.replace', '\"quit\",', '\"quit', '43\")', 'conf', '=', 'conf.replace', '\"quit', '42\")', 'conf', '=', 'conf.replace', '\"pt_step', '-1\",', '\"quit', '42\")', 'conf', '=', 'conf.replace', '\"quit\")', 'conf', '=', 'conf.replace', '\"pt_step', '1\",', '\"quit\")', '=', \"['q\", 'quit', \"43\\\\n',\", \"'>\", \"quit\\\\n',\", \"'<\", 'quit', \"42\\\\n',\", \"'NEXT\", \"quit\\\\n',\", \"'PREV\", 'quit', \"42\\\\n',\", \"'ENTER\", \"quit\\\\n',\", \"'Q\", 'quit', '-', 'watch', '-', \"later']\", 'bound_keys', '=', '[i.split', '0]', 'i', 'i.split', 'i', 'key', '=', 'i.split', '0]', 'key', 'bound_keys:', 'conf', '+=', 'i', \"'w',\", 'prefix', '=', \"'mpsyt\", '-', '=', 'tmpfile:', 'tmpfile.write', 'conf)', 'tmpfile.name', '_get_conf_dir', 'confpath', '=', 'paths.get_config_dir', '\"mpv\")', 'confpath', 'util.dbg', '%s', 'configuration', 'confpath)', 'confpath', '_get_mpv_version', 'exename', 'o', '=', 'subprocess.check_output', 'exename,', '\"', '--', 'version\"', '.decode', 're_ver', '=', 're.compile', 'r\"mpv', '(\\\\d', '+', '\\\\.', '\\\\d', '+', '\\\\.', '\\\\d', '+', '\")', 'o.split', '\"\\\\n\"', 'm', '=', 're_ver.match', 'm:', 'v', '=', 'tuple', 'map', 'm.groups', 'util.dbg', '\"', '%', 's', 'version', '%s.', '%', 's.', '%', 's', 'detected\",', 'exename,', '*v)', 'v', 'util.dbg', '\"', '%', 'sFailed', 'to', 'detect', 'mpv', 'version', '%', 's\",', 'c.r,', 'c.w)', '-1,', '0,', '0']"
    },
    {
        "link": "https://raw.githubusercontent.com/mps-youtube/yewtube/master/mps_youtube/players/vlc.py",
        "vector": "['os', 'subprocess', '..', 'config,', 'g,', 'util', '..player', 'CmdPlayer', 'vlc', 'CmdPlayer', 'self,', 'player', 'self.player', '=', 'player', '_generate_real_playerargs', 'self', 'args', '=', 'config.PLAYERARGS.get.strip', '.split', 'pd', '=', \"'vlc']\", 'args.extend', 'pd', '\"title\"', '\\'\"', '0', 'self.song.title', 'config.VLC_DUMMY_INTERFACE.get:', \"'\", 'VLC', 'DUMMY', 'INTERFACE]', '\"', '0', '\"', 'self.song.title', 'args.extend', \"'\", '-', \"I',\", \"'dummy'\", 'config.SHOW_VIDEO.get:', 'args.extend', '\"', '--', 'no', '-', 'video\"', 'self.subtitle_path:', 'args.extend', \"'\", '--', 'sub', '-', \"file',\", 'self.subtitle_path', '\"', '--', 'play', '-', '-', 'exit\",', 'args)', '[self.player]', '+', 'args', '+', '[self.stream', \"'url'\", 'clean_up', 'self', 'launch_player', 'self,', 'cmd', 'open', 'os.devnull,', '\"w\")', 'devnull:', 'self.p', '=', 'subprocess.Popen', 'cmd,', 'shell', '=', 'stderr', '=', 'devnull)', 'self.p.wait', 'self.next', '_help', 'self,', '=', 'self', 'os', 'sys', '==', '==', 'os.system', \"'pkill\", '-f', \"vlc')\", '==', 'os.system', \"'killall\", \"vlc')\", '==', 'os.system', '/im', 'vlc.exe', \"/f')\"]"
    },
    {
        "link": "https://raw.githubusercontent.com/mps-youtube/yewtube/master/mps_youtube/playlist.py",
        "vector": "['self,', 'name', '=', 'songs', '=', 'self.name', '=', 'name', 'self.songs', '=', 'songs', '[]', '__len__', 'self', 'len', 'self.songs)', '__getitem__', 'self,', 'sliced', 'self.songs', 'sliced]', '__setitem__', 'self,', 'position,', 'item', 'self.songs', 'position]', '=', 'item', '__iter__', 'self', 'i', 'self.songs:', 'i', '@property', 'duration', 'self', 'duration', '=', 'sum', 's.length', 's', 'self.songs)', 'secs', '=', 'divmod', 'duration,', '60)', 'hours,', '=', 'divmod', '60)', 'duration', '=', \"'\", 'H', '02', 'M', '02', 'S', '02', 'H', '=', 'hours,', 'M', '=', 'S', '=', 'secs)', 'duration', 'Video:', 'description', '=', '\"\"', 'self,', 'ytid,', 'title,', 'length', 'self.ytid', '=', 'ytid', 'self.title', '=', 'title', 'self.length', '=', 'length)']"
    },
    {
        "link": "https://raw.githubusercontent.com/mps-youtube/yewtube/master/mps_youtube/playlists.py",
        "vector": "['os', 'sys', 'pickle', '.', 'g,', 'c,', 'screen,', 'util,', 'pafy', 'Video', 'save', 'pl', 'g.userpl:', 'open', 'g.PLFOLDER,', 'pl', '+', \"'.m3u'\", \"'w')\", 'plf:', 'plf.write', \"'\", 'song', 'g.userpl', 'pl', '.songs:', 'plf.write', \"'\", 'plf.write', \"'https\", '/', '/', 'www.youtube.com', '/', 'watch?v', '=', '%', \"s\\\\n'\", '%', 'song.ytid)', 'util.dbg', 'c.r', '+', 'saved\\\\n', '--', '-', '\"', '+', 'c.w)', 'load', 'm3u', '[m3u', 'm3u', 'g.PLFOLDER)', 'm3u', '-', '4', '==', \"'.m3u'\", 'g.userpl', 'm3u', '-', '4', '=', 'read_m3u', 'g.PLFOLDER,', 'm3u', 'g.PLFOLDER', 'g.userpl', '=', '{}', 'os.mkdir', 'g.PLFOLDER)', 'save', 'do_save', '=', 'k,', 'v', 'g.userpl.items', 'song', 'v.songs:', 'song,', '\"urls\"', 'util.dbg', '\"remove', '%s:', '%s\",', 'k,', 'song.urls)', 'song.urls', 'do_save', '=', 'do_save:', 'save', 'name', 'g.userpl', 'name]', 'os.remove', 'g.PLFOLDER,', 'name', '+', \"'.m3u'\", 'read_m3u', 'm3u', 'name', '=', 'm3u', '-', '4]', 'songs', '=', '[]', 'expect_ytid', '=', 'open', 'm3u,', \"'r')\", 'plf:', \"'\", 'plf:', \"'\", 'duration,', 'title', '=', \"'\", 'expect_ytid', '=', \"'\\\\n')\", \"'\", 'expect_ytid', '=', 'ytid', '=', 'pafy.extract_video_id', '.strip', 'songs.append', 'Video', 'ytid,', 'title,', 'duration', 'ex:', 'util.dbg', 'c.r', '+', 'str', 'ex)', '+', 'c.w)', 'plf.seek', '0)', 'plf:', \"'\", 'p', '=', 'util.get_pafy', 'songs.append', 'Video', 'p.videoid,', 'p.title,', 'p.length', 'e:', 'util.dbg', 'c.r', '+', 'video:', '\"', '+', 'str', 'e)', '+', 'c.w)', 'name,', 'songs)', 'g.PLFILE', 'g.OLD_PLFILE', 'open', 'g.OLD_PLFILE,', '\"rb\")', 'plf:', '=', 'pickle.load', 'plf)', 'sys.exit', '\"Couldn\\'t', 'open', 'old', 'file\")', 'backup', '=', 'g.OLD_PLFILE', '+', '\"_v1_backup\"', 'backup', 'sys.exit', 'backup', 'but', 'new', 'os.rename', 'g.OLD_PLFILE,', 'backup)', 'plname,', 'plitem', 'songs', '=', '[]', 'video', 'plitem.songs:', 'v', '=', 'Video', 'video', 'video', \"'title'\", 'video', \"'duration'\", 'songs.append', 'v)', 'g.userpl', 'plname]', '=', 'plname,', 'songs)', 'os.mkdir', 'g.PLFOLDER)', 'save', 'g.PLFOLDER', 'g.PLFILE', 'open', 'g.PLFILE,', \"'rb')\", 'plf:', '=', 'pickle.load', 'plf)', '=', '=', 'Video', '.', '=', '=', 'Video', 'open', 'g.PLFILE,', '\"rb\")', 'plf:', 'g.userpl', '=', 'pickle.load', 'plf)', 'os.mkdir', 'g.PLFOLDER)', 'save', 'screen.msgexit', '\"Updated', 'file.', 'restart', 'yewtube\",', '1)', 'screen.msgexit', '%s\"', '%', 'g.PLFILE,', '1)', 'sys.exit', '\"Couldn\\'t', 'open', 'old', 'file\")', 'pl', 'songs', '=', '[]', 'song', 'pl', 'songs.append', 'song)', 'g.userpl', 'pl]', '=', 'pl,', 'songs)', 'os.mkdir', 'g.PLFOLDER)', 'save']"
    },
    {
        "link": "https://raw.githubusercontent.com/mps-youtube/yewtube/master/mps_youtube/screen.py",
        "vector": "['subprocess', 'os', 'sys', '.', 'g,', 'content,', 'config,', 'util', '=', 'os.name', '==', '\"nt\"', 'update', 'fill_blank', '=', 'clear', 'g.content,', 'g.content.getPage', 'g.current_page', 'g.rprompt', '=', 'content.page_msg', 'g.current_page)', 'g.content:', 'g.content)', 'g.content', '=', 'g.message', 'g.rprompt:', 'out', '=', 'g.message', \"''\", 'blanks', '=', 'util.getxy', '.width', '-', 'len', 'out)', '-', 'len', 'g.rprompt', \"'')\", 'out', '+=', \"'\", \"'\", '*', 'blanks', '+', '(g.rprompt', \"'')\", 'out)', 'fill_blank:', '\"\")', 'g.message', '=', 'g.rprompt', '=', 'clear', 'g.no_clear_screen:', \"'\", '--', \"\\\\n')\", \"'\\\\n'\", '*', '200)', 'subprocess.call', '\"tset\",', '\"', '-', 'c\"', 'writestatus', 'text,', 'mute', '=', 'mute', 'config.SHOW_STATUS.get:', 'text)', 'text', 'width', '=', 'util.getxy', '.width', 'spaces', '=', 'width', '-', 'len', 'text)', '-', '1', 'spaces', '=-', '1', 'text', '=', 'text', 'width', '-', '3]', 'sys.stdout.write', '\"', '\"', '+', 'text', '+', '(\"', '\"', '*', 'spaces)', '+', '\"\\\\r\")', 'sys.stdout.flush', 'msgexit', 'msg,', 'code', '=', '0', 'msg)', 'sys.exit', 'code)']"
    },
    {
        "link": "https://raw.githubusercontent.com/mps-youtube/yewtube/master/mps_youtube/streams.py",
        "vector": "['time', 'urllib.request', 'urlopen', '.', 'pafy', '.', 'g,', 'c,', 'screen,', 'config,', 'util', 'prune', 'len', 'g.pafs)', '>', 'g.max_cached_streams:', 'g.pafs.popitem', '=', 'len', 'g.streams)', '>', 'g.max_cached_streams:', 'g.streams.popitem', '=', 'now', '=', 'time.time', 'oldpafs', '=', '[k', 'k', 'g.pafs', 'g.pafs', 'k]', 'g.pafs', 'k', '.expiry', '<', 'now]', 'len', 'oldpafs', 'util.dbg', 'c.r', '+', '\"', '%', 's', 'old', 'pafy', 'items', 'pruned', '%', 's\",', 'len', 'oldpafs', 'c.w)', 'oldpaf', 'oldpafs:', 'g.pafs.pop', 'oldpaf,', '0)', 'oldstreams', '=', '[k', 'k', 'g.streams', 'g.streams', 'k', \"'expiry']\", 'g.streams', 'k', \"'expiry']\", '<', 'now]', 'len', 'oldstreams', 'util.dbg', 'c.r', '+', '\"', '%', 's', 'old', 'stream', 'items', 'pruned', '%', 's\",', 'len', 'oldstreams', 'c.w)', 'oldstream', 'oldstreams:', 'g.streams.pop', 'oldstream,', '0)', 'util.dbg', 'c.b', '+', '\"paf:', '%s,', 'streams:', '%s', '%', 's\",', 'len', 'g.pafs', 'len', 'g.streams', 'c.w)', 'get', 'vid,', '=', 'callback', '=', 'threeD', '=', 'now', '=', 'time.time', 'ytid', '=', 'vid.ytid', 'have_stream', '=', 'g.streams.get', 'ytid)', '(g.streams', 'ytid', \"'expiry']\", '>', 'now', 'g.streams', 'ytid', \"'expiry']\", 'prfx', '=', '\"preload:', '\"', 'callback', '\"\"', 'have_stream:', 'ss', '=', 'str', 'g.streams', 'ytid', \"'expiry']\", '-', 'now)', '//', '60)', 'util.dbg', '\"', '%', 's', '%', 'sGot', 'streams', 'cache', '%', 's', 'left', '%', 's\",', 'c.g,', 'prfx,', 'ss,', 'c.w)', 'g.streams.get', 'ytid', \"'meta']\", 'ps', '=', 'pafy.get_video_streams', 'ytid)', '[x', \"'url']\", 'x', 'ps]', 'util.dbg', '\"', '%', 's', '**', '**', 'Type', 'get_streams.', '%', 's\",', 'c.r,', 'c.w)', 'p', '=', 'util.get_pafy', 'vid,', '=', 'callback', '=', 'callback)', 'ps', '=', 'p.allstreams', 'threeD', '[x', 'x', 'p.allstreams', 'x.threed]', 'streams', '=', '\"url\":', 's', \"'url'\", '\"ext\":', 's', \"'ext'\", '\"quality\":', 's', \"'resolution'\", '\"rawbitrate\":', 's.get', \"'bitrate'\", '-', '1', '\"mtype\":', \"'audio'\", \"'audio'\", 's', \"'resolution']\", \"('video'\", 's', \"'acodec']\", '!=', \"'none'\", \"'?'\", '\"size\":', 's.get', \"'filesize')\", 's.get', \"'filesize')\", 's.get', \"'filesize_approx',\", '-1', 's', 'ps]', 'streams', '0', \"'url'\", 'expiry', '=', 'float', 'streams', '0', \"'url'\", '.split', \"'\", '/', 'expire', '/', \"'\", '1', '.split', \"'\", '/', \"'\", '0', 'temp', '=', 'streams', '0', \"'url'\", '.split', \"'expire\", '=', \"'\", '1]', 'expiry', '=', 'float', 'temp', \"'\", '&', \"'\", 'g.streams', 'ytid]', '=', 'dict', 'expiry', '=', 'expiry,', 'meta', '=', 'streams)', 'prune', 'streams', 'select', 'q', '=', '0,', 'audio', '=', 'm4a_ok', '=', 'maxres', '=', 'maxres', '=', 'maxres', 'config.MAX_RES.get', '=', \"'meta']\", 'dict)', 'okres', 'x', 'x', \"'quality'\", '.split', '\"x\"', '1', '<=', 'maxres', 'getq', 'x', 'x', \"'quality'\", '.split', '\"x\"', '1', 'getbitrate', 'x', 'x', \"'rawbitrate']\", 'audio:', 'streams', '=', '[x', 'x', 'x', \"'mtype']\", '==', '\"audio\"]', 'm4a_ok:', 'streams', '=', '[x', 'x', 'streams', 'x', \"'ext']\", '==', '\"m4a\"]', 'config.AUDIO_FORMAT.get', '==', '\"auto\":', 'm4a_ok', 'config.AUDIO_FORMAT.get', '==', '\"m4a\":', 'streams', '=', '[x', 'x', 'streams', 'x', \"'ext']\", '==', '\"m4a\"]', 'config.AUDIO_FORMAT.get', '==', '\"webm\":', 'streams', '=', '[x', 'x', 'streams', 'x', \"'ext']\", '==', '\"webm\"]', 'streams:', 'streams', '=', '[x', 'x', 'x', \"'mtype']\", '==', '\"audio\"]', 'streams', '=', 'streams,', 'key', '=', 'getbitrate,', 'reverse', '=', 'streams', '=', '[x', 'x', 'x', \"'mtype']\", '==', '\"video\"', 'okres', 'x', 'config.VIDEO_FORMAT.get', '==', '\"auto\":', 'config.VIDEO_FORMAT.get', '==', '\"mp4\":', 'streams', '=', '[x', 'x', 'streams', 'x', \"'ext']\", '==', '\"mp4\"]', 'config.VIDEO_FORMAT.get', '==', '\"webm\":', 'streams', '=', '[x', 'x', 'streams', 'x', \"'ext']\", '==', '\"webm\"]', 'config.VIDEO_FORMAT.get', '==', '\"3gp\":', 'streams', '=', '[x', 'x', 'streams', 'x', \"'ext']\", '==', '\"3gp\"]', 'streams:', 'streams', '=', '[x', 'x', 'x', \"'mtype']\", '==', '\"video\"', 'okres', 'x', 'streams', '=', 'streams,', 'key', '=', 'getq,', 'reverse', '=', 'util.dbg', '\"select', 'stream,', 'q:', '%s,', 'audio:', '%s,', 'len:', '%s\",', 'q,', 'audio,', 'len', 'streams', 'ret', '=', 'streams', 'q]', 'ret', '=', 'streams', '0]', 'q', 'len', 'streams)', 'ret', 'get_size', 'ytid,', 'url,', '=', 'stream', '=', '[x', 'x', 'g.streams', 'ytid', \"'meta']\", 'x', \"'url']\", '==', 'url', '0]', 'size', '=', 'stream', \"'size']\", 'prefix', '=', '\"preload:', '\"', '\"\"', 'size', '==', '-1:', 'util.dbg', '\"', '%', 's', '%', 'cached', 'size:', '%s', '%', 's\",', 'c.g,', 'prefix,', 'size,', 'c.w)', 'screen.writestatus', 'content', 'length\",', 'mute', '=', 'stream', \"'size']\", '=', '_get_content_length', 'url,', '=', 'util.dbg', '\"', '%', 's', '%', 's', '-', 'content', '-', 'length:', '%s', '%', 's\",', 'c.y,', 'prefix,', 'stream', \"'size'\", 'c.w)', 'stream', \"'size']\", '_get_content_length', 'url,', '=', 'prefix', '=', '\"preload:', '\"', '\"\"', 'util.dbg', 'c.y', '+', 'prefix', '+', 'content', '-', 'length', 'header\"', '+', 'c.w)', 'response', '=', 'urlopen', 'url)', 'headers', '=', 'response.headers', 'cl', '=', 'headers', \"'content\", '-', \"length']\", 'cl)', 'preload', 'song,', '=', '2,', 'override', '=', 'args', '=', '(song,', 'override)', 't', '=', 'target', '=', '_preload,', 'args', '=', 'args)', 't.daemon', '=', 't.start', '_preload', 'song,', 'override', 'ytid', '=', 'song.ytid', 'ytid)', 'time.sleep', 'video', '=', 'config.SHOW_VIDEO.get', 'video', '=', 'override', '(\"fullscreen\",', 'video', 'video', '=', 'override', '==', '\"audio\"', 'video', 'm4a', '=', '\"mplayer\"', 'config.PLAYER.get', '=', 'get', 'song)', 'stream', '=', 'select', 'audio', '=', 'video,', 'm4a_ok', '=', 'm4a)', 'stream', 'video:', 'stream', '=', 'select', 'audio', '=', 'get_size', 'ytid,', 'stream', \"'url'\", '=', 'e:', 'traceback', 'type', 'e', 'e,', 'e.__traceback__)', '\"Press', 'any', 'key', 'to', 'util.dbg', 'e)', 'song.ytid)']"
    },
    {
        "link": "https://raw.githubusercontent.com/mps-youtube/yewtube/master/mps_youtube/terminalsize.py",
        "vector": "['os', 'sys', 'shlex', 'shutil', 'struct', 'subprocess', '>=', '(3', '3', 'current_os', '=', 'tuple_xy', '=', 'current_os', '==', 'tuple_xy', '=', 'tuple_xy', 'tuple_xy', '=', 'tuple_xy', '=', 'tuple_xy', 'tuple_xy', '=', '(80,', '25)', 'tuple_xy', 'ctypes', 'h', '=', '-', '12)', 'csbi', '=', '22)', 'res', '=', 'h,', 'csbi)', 'res:', '(bufx,', 'bufy,', 'curx,', 'cury,', 'wattr,', 'left,', 'top,', 'right,', 'bottom,', 'maxx,', 'maxy)', '=', 'struct.unpack', '\"hhhhHhhhhhh\",', 'csbi.raw)', 'sizex', '=', 'right', '-', 'left', '+', '1', 'sizey', '=', 'bottom', '-', 'top', '+', '1', 'sizex,', 'sizey', 'cols', '=', 'subprocess.check_call', 'shlex.split', \"'tput\", \"cols'\", 'rows', '=', 'subprocess.check_call', 'shlex.split', \"'tput\", '(cols,', 'rows)', 'ioctl_GWINSZ', 'fd', 'fcntl', 'termios', 'cr', '=', 'struct.unpack', \"'hh',\", 'fcntl.ioctl', 'fd,', 'termios.TIOCGWINSZ,', \"'1234'\", 'cr', 'cr', '=', 'ioctl_GWINSZ', '0)', 'ioctl_GWINSZ', '1)', 'ioctl_GWINSZ', '2)', 'cr', 'cr', '==', '(0,', '0', 'fd', '=', 'os.open', 'os.ctermid', 'os.O_RDONLY)', 'cr', '=', 'ioctl_GWINSZ', 'fd)', 'os.close', 'fd)', 'cr', 'cr', '==', '(0,', '0', 'cr', '=', '(os.environ', \"'LINES'\", 'os.environ', \"'COLUMNS'\", 'cr', '1', 'cr', '0']"
    },
    {
        "link": "https://raw.githubusercontent.com/mps-youtube/yewtube/master/mps_youtube/test/test_main.py",
        "vector": "['unittest', 'pytest', 'mps', 'test_fmt_time', 'self', 'pytest.skip', 'have', 'tested', \"attribute')\", 'mps.fmt_time', '0', \"'00\", \"00')\", 'mps.fmt_time', '59', \"'00\", \"59')\", 'mps.fmt_time', '100', \"'01\", \"40')\", 'mps.fmt_time', '1000', \"'16\", \"40')\", 'mps.fmt_time', '5000', \"'83\", \"20')\", 'mps.fmt_time', '6500', \"'1\", '48', \"20')\", 'test_num_repr', 'self', 'pytest.skip', 'have', 'tested', \"attribute')\", 'mps.num_repr', '0', \"'0')\", 'mps.num_repr', '1001', \"'1001')\", 'mps.num_repr', '10001', \"'10k')\", 'mps.num_repr', '100001', \"'100k')\", 'mps.num_repr', '1000001', \"'1.0m')\", 'mps.num_repr', '10000001', \"'10m')\", 'mps.num_repr', '100000001', \"'100m')\", 'mps.num_repr', '1000000001', \"'1.0B')\", '__name__', '==']"
    },
    {
        "link": "https://raw.githubusercontent.com/mps-youtube/yewtube/master/mps_youtube/test/test_mpris.py",
        "vector": "['unittest.mock', 'MagicMock', 'dbus', 'pytest', 'mps_youtube', 'bus', '=', 'MagicMock', 'obj', '=', 'bus)', 'obj', 'v_obj', '=', 'vars', 'obj)', 'v_obj.pop', '\"_locations_lock\")', 'vars', 'obj)', '==', '\"_connection\":', 'bus,', '\"_fallback\":', '\"_locations\":', 'bus,', '\"', '/', '/', '/', 'MediaPlayer2\",', '\"_name\":', '\"_object_path\":', '\"', '/', '/', '/', 'MediaPlayer2\",', '\"mpv\":', '\"properties\":', '\"read_only\":', '\"CanQuit\":', '\"CanSetFullscreen\":', '\"mps', '-', 'youtube\",', '\"Identity\":', '\"mps', '-', 'youtube\",', 'dbus.Array', 'signature', '=', 'dbus.Signature', '\"s\"', 'dbus.Array(', 'signature', '=', 'dbus.Signature', '\"s\")', '),', '},', '\"read_write\":', '{\"Fullscreen\":', '},', '\"read_only\":', '\"CanControl\":', '\"CanGoNext\":', '\"CanGoPrevious\":', '\"CanPause\":', '\"CanPlay\":', '\"CanSeek\":', '\"MaximumRate\":', '1.0,', '\"Metadata\":', 'trackid\":', 'dbus.ObjectPath(', '\"', '/', '/', 'UnknownTrack\",', 'variant_level', '=', '1', '},', '1.0,', '\"PlaybackStatus\":', '\"Stopped\",', '\"Position\":', 'dbus.Int64', '0', '},', '\"read_write\":', '{\"Rate\":', '1.0,', '\"Volume\":', '1.0', '},', '},', '\"socket\":', '@pytest.mark.parametrize', '\"val\",', '0,', '3,', '5', 'val', 'obj', '=', 'MagicMock', 'obj.Seeked', '=', 'MagicMock', 'obj.setproperty', '\"time', '-', 'pos\",', 'val)', 'exp_res', '=', 'dbus.Int64', 'val', '*', '10', '**', '6)', 'val', 'dbus.Int64', '0)', 'obj.properties', '\"read_only\"', '\"Position\"]', '==', 'exp_res', 'seeked_call_args', '=', 'seeked_call_args', '=', 'obj.Seeked.mock_calls', '0', '.args', 'val', 'val', '>=', '4:', 'seeked_call_args', '==', '(exp_res', 'seeked_call_args', '@pytest.mark.parametrize(', '\"val1,', 'val2\",', '(0,', '2', '(2,', '6', '(2,', '5', '(2,', '7', '),', 'val1,', 'val2', 'obj', '=', 'MagicMock', 'obj.Seeked', '=', 'MagicMock', 'obj.setproperty', '\"time', '-', 'pos\",', 'val1)', 'obj.setproperty', '\"time', '-', 'pos\",', 'val2)', 'seeked_call_args', '=', 'seeked_call_args', '=', 'obj.Seeked.mock_calls', '0', '.args', 'd2', '=', 'dbus.Int64', 'val2', '*', '10', '**', '6)', 'abs', 'd2', '-', 'dbus.Int64', 'val1', '*', '10', '**', '6', '>=', '4', '*', '10', '**', '6:', 'seeked_call_args', '==', '(d2', 'seeked_call_args']"
    },
    {
        "link": "https://raw.githubusercontent.com/mps-youtube/yewtube/master/mps_youtube/test/test_players_mplayer.py",
        "vector": "['unittest', 'mock', 'pytest', 'mps_youtube.players', 'mplayer', '@pytest.mark.parametrize(', '\"exename,', 'exp_err\",', '(\"\",', '],', 'test_get_mplayer_version_no_mplayer', 'exename,', 'exp_err', 'exp_err', 'mplayer._get_mplayer_version', 'exename)', 'mock.patch', '\"mps_youtube.players.mplayer.subprocess\"', 'mplayer._get_mplayer_version', 'mock.MagicMock', '@pytest.mark.parametrize(', '\"output,', 'exp_res\",', '\"MPlayer', 'Redxii', '-', 'SVN', '-', 'r38151', '-', '6.2.0', '(x86_64)', '(C)', '2000', '-', '2019', 'MPlayer', 'Team...\",', '38151,', '),', '(\"MPlayer', 'SVN', '-', 'r38151', '-', '6.2.0', '(x86_64)', '(C)', '2000', '-', '2019', 'MPlayer', 'Team...\",', '38151', '(\"MPlayer', '1.4', '(Debian', 'built', 'gcc', '-', '10', '(C)', '2000', '-', '2019', 'MPlayer', 'Team\",', '(1,', '4', '],', 'test_get_mplayer_version', 'output,', 'exp_res', 'mock.patch', '\"mps_youtube.players.mplayer.subprocess\")', 'm_subprocess:', '=', 'output', 'mplayer._get_mplayer_version', 'mock.MagicMock', '==', 'exp_res']"
    },
    {
        "link": "https://raw.githubusercontent.com/mps-youtube/yewtube/master/mps_youtube/test/test_util.py",
        "vector": "['pytest', 'mps_youtube.util', 'util', '@pytest.mark.parametrize(', '\"num', 't', 'exp_res\",', '(0,', '\"\",', '\"\"', '(0,', '\"\"', '),', 'test_uea_pad', 'num,', 't,', 'exp_res', 'res', '=', 'util.uea_pad', 'num,', 't)', 'res', '==', 'exp_res']"
    },
    {
        "link": "https://raw.githubusercontent.com/mps-youtube/yewtube/master/mps_youtube/util.py",
        "vector": "['collections', 'ctypes', 'json', 'os', 're', 'subprocess', 'sys', 'time', 'unicodedata', 'urllib', 'datetime', 'datetime,', 'timezone', '.', 'c,', 'description_parser,', 'g,', 'Video', 'macos', '=', '==', '=', 'os.name', '==', '\"nt\"', '=', '\"UTF', '-', '8\"', 'XYTuple', '=', 'collections.namedtuple', \"'XYTuple',\", \"'width\", 'height', \"max_results')\", 'IterSlicer', 'self,', 'iterable,', 'length', '=', '=', '[]', 'self.iterable', '=', 'iter', 'iterable)', 'self.length', '=', 'length', 'length', 'self.length', '=', 'len', 'iterable)', '__getitem__', 'self,', 'sliced', 'sliced,', 'slice', 'stop', '=', 'sliced.stop', 'stop', '=', 'sliced', '(stop', '(stop', '<', '0', 'stop', '=', '(stop', '(stop', '>', 'len', '-', '1', 'next', 'self.iterable', 'StopIteration:', 'sliced]', '__len__', 'self', 'self.length', 'self.length', '=', 'len', 'self', 'self.length', 'filename', 'paths', '=', '[os.getcwd', '+', 'os.environ.get', '\"PATH\",', \"''\", '.split', 'os.pathsep)', 'paths', '=', '[i', 'i', 'paths', 'i]', 'dbg', 'path', '%s\",', 'filename)', 'path', 'paths:', 'exepath', '=', 'path,', 'filename)', 'exepath', 'os.access', 'exepath,', 'os.X_OK', 'dbg', '\"found', 'at', '%s\",', 'exepath)', 'exepath', 'dbg', '*', 'args', '*', 'xenc', 'i)', 'i', 'args', 'utf8_replace', 'txt', 'sse', '=', 'txt', '=', 'str', 'txt)', 'txt', '=', 'txt.encode', 'sse,', '\"replace\"', '.decode', 'sse)', 'txt', 'xenc', 'stuff', 'utf8_replace', 'stuff)', 'stuff', 'stuff,', 'end', '=', 'xenc', 'stuff', 'end', '=', 'end)', 'filename', 'filename', '=', 'utf8_replace', 'filename)', 'filename', 'allowed', '=', 're.compile', \"r'\", '^', '\\\\\\\\', '/', '?', '*', '$\\\\\\'\"', '%', '&', '<', '>', '|', \"')\", 'filename', '=', 'x', 'allowed.match', 'x)', '\"_\"', 'x', 'filename)', 'filename', 'sanitize_filename', 'filename,', '=', 'filename', '=', 'filename.replace', \"'\", '/', \"',\", \"'\", '-', \"')\", 'macos:', 'filename', '=', 'filename.replace', \"'\", \"',\", \"'_')\", 'filename', '=', 'utf8_replace', 'filename)', 'filename', 'allowed', '=', 're.compile', \"r'\", '^', '\\\\\\\\?', '*', '$\\\\\\'\"', '%', '&', '<', '>', '|', \"')\", 'filename', '=', 'x', 'allowed.match', 'x)', '\"_\"', 'x', 'filename)', 'filename', 'title', 'xenc', 'title', 'sys.stdout.write', 'xenc', \"'\\\\x1b\", '2', \"'\", '+', 'title', '+', \"'\\\\x07'\", 'item,', 'lst,', 'remove', '=', 'remove', 'item', 'lst:', 'lst.append', 'item)', 'remove', 'item', 'lst:', 'lst.remove', 'item)', 'get_near_name', 'items', 'name', 'items', 'name.lower', 'name', 'F', 'key,', 'nb', '=', '0,', 'na', '=', '0,', 'textlib', '=', 'textlib', '=', 'textlib', 'g.text', 'key', 'textlib', 'text', '=', 'textlib', 'key]', 'percent_fmt', '=', 'textlib.get', 'key', '+', '\"_\")', 'percent_fmt:', 'text', '=', 're.sub', 'r\"\\\\', '*', '\",', 'r\"', '%', 's\",', 'text)', '%', 'percent_fmt', 'text', '=', 'text.replace', '\"', '&', '&', '\",', '\"', '%', 's\")', '\"\\\\n\"', '*', 'nb', '+', 'text', '+', 'c.w', '+', '\"\\\\n\"', '*', 'na', 'get_pafy', 'item,', '=', 'callback', '=', 'item,', 'Video', 'ytid', '=', 'item.ytid', 'ytid', '=', 'item', 'callback_fn', '=', 'callback', 'x:', 'cached', '=', 'g.pafs.get', 'ytid)', 'cached', 'cached.expiry', '>', 'time.time', 'dbg', '\"get', 'pafy', 'cache', 'hit', '%s\",', 'cached.title)', 'cached.fresh', '=', 'cached', 'p', '=', 'e:', '\"pafy\"', 'str', 'e', 'dbg', 'c.p', '+', 'failed', 'pafy', 'get:', '\"', '+', 'ytid', '+', 'c.w)', 'p', '=', 'g.pafs', 'ytid]', '=', 'p', 'p.fresh', '=', 'thread', '=', '\"preload:', '\"', 'callback', '\"\"', 'dbg', '\"', '%', 's', '%', 'sgot', 'new', 'pafy', 'object:', '%s', '%', 's\"', '%', '(c.y,', 'thread,', 'p.title', '26', 'c.w', 'dbg', '\"', '%', 's', '%', 'sgot', 'new', 'pafy', 'object:', '%s', '%', 's\"', '%', '(c.y,', 'thread,', 'p.videoid,', 'c.w', 'p', 'getxy', '.', 'config', 'g.detectable_size:', 'x,', 'y', '=', 'max_results', '=', 'y', '-', '4', 'y', '<', '54', '50', 'max_results', '=', '1', 'y', '<=', '5', 'max_results', 'x,', 'max_results', '=', 'config.CONSOLE_WIDTH.get,', 'config.MAX_RESULTS.get', 'y', '=', 'max_results', '+', '4', 'XYTuple', 'x,', 'y,', 'max_results)', 'fmt_time', 'seconds', 'hms', '=', 'time.strftime', \"'\", '%', 'H', '%', 'M', '%', \"S',\", 'time.gmtime', 'seconds', 'H,', 'M,', 'S', '=', 'hms.split', '\"', '\")', 'H', '==', '\"00\":', 'hms', '=', 'M', '+', '\"', '\"', '+', 'S', 'H', '==', '\"01\"', 'M)', '<', '40:', 'hms', '=', 'str', 'M)', '+', '60)', '+', '\"', '\"', '+', 'S', '\"0\"', 'hms', '=', '\"', 'H', '1', 'M,', 'S', 'hms', 'text,', 'max_len', 'str_len,', 'out', '=', '0,', \"''\", 'c', 'text:', 'str_len', '+=', 'real_len', 'c)', 'str_len', '<=', 'max_len:', 'out', '+=', 'c', 'out', 'uea_pad', 'num,', 't,', 'direction', '=', '\"', '<', '\",', '=', 'direction', '=', 'direction.strip', '\"', '<', '\"', 't', '=', \"'\", 'str', 't', '.split', \"'\\\\n'\", 'num', '<=', '0:', \"''\", 't', '=', 't,', 'num)', 'real_len', 't)', '<', 'num:', 'spaces', '=', 'num', '-', 'real_len', 't)', 'direction', '==', '\"', '<', '\":', 't', '=', 't', '+', '(\"', '\"', '*', 'spaces)', 'direction', '==', '\"', '>', '\":', 't', '=', '(\"', '\"', '*', 'spaces)', '+', 't', 'direction', '==', '\"', '^', '\":', 'right', '=', 'real_len', 't)', '<', 'num:', 't', '=', 't', '+', '\"', '\"', 'right', '\"', '\"', '+', 't', 'right', '=', 'right', 't', 'real_len', 'u,', 'alt', '=', 'u,', 'str', 'u', '=', 'u.decode', '\"utf8\")', 'u', '=', 'xenc', 'u)', 'ueaw', '=', 'alt:', 'widths', '=', 'dict', 'N', '=', '.75,', 'Na', '=', '1,', 'W', '=', '2,', 'F', '=', '2,', 'A', '=', '1)', 'widths', '=', 'dict', 'W', '=', '2,', 'F', '=', '2,', 'A', '=', '1,', 'N', '=', '1,', 'H', '=', '0.5)', 'round', 'sum', 'widths.get', 'ueaw', 'char', '1)', 'char', 'u', 'yt_datetime', 'yt_date_time', 'yt_date_time', \"['Unknown',\", \"'Unknown',\", \"'Unknown']\", 'time_obj', '=', 'time.strptime', 'yt_date_time,', '\"', '%', 'Y', '-', '%', 'm', '-', '%', 'dT', '%', 'H', '%', 'M', '%', 'SZ\")', 'locale_date', '=', 'time.strftime', '\"', '%', 'x\",', 'time_obj)', 'locale_time', '=', 'time.strftime', '\"', '%', 'X\",', 'time_obj)', '=', 're.sub', 'r\"', '\\\\d\\\\d\\\\D\\\\d\\\\d\\\\D', '20', '\\\\d\\\\d', '$\",', 'r\"\\\\1\\\\2\",', 'locale_date)', 'time_obj,', 'locale_time', 'yt_datetime_local', 'yt_date_time', 'datetime_obj', '=', 'datetime.strptime', 'yt_date_time,', '\"', '%', 'Y', '-', '%', 'm', '-', '%', 'dT', '%', 'H', '%', 'M', '%', 'SZ\")', 'datetime_obj', '=', 'utc2local', 'datetime_obj)', 'locale_date', '=', 'datetime_obj.strftime', '\"', '%', 'x\")', 'locale_time', '=', 'datetime_obj.strftime', '\"', '%', 'X\")', '=', 're.sub', 'r\"', '\\\\d\\\\d\\\\D\\\\d\\\\d\\\\D', '20', '\\\\d\\\\d', '$\",', 'r\"\\\\1\\\\2\",', 'locale_date)', 'datetime_obj,', 'locale_time', 'utc2local', 'utc', 'utc.replace', '=', 'timezone.utc', 'tz', '=', 'parse_multi', 'choice,', 'end', '=', 'end', '=', 'end', 'str', 'len', 'pattern', '=', \"r'\", '?', '<', '!', '-', '\\\\d\\\\', '\\\\', '\\\\d', '+', '-', '\\\\d', '+', '|', '-', '\\\\d', '+', '|', '\\\\d', '+', '-', '|', '\\\\d', '+', '?', '\\\\', '\\\\d', '+', '\\\\', '?', '?!', '-', '\\\\d\\\\', '\\\\', \"'\", 'items', '=', 'pattern,', 'choice)', 'alltracks', '=', '[]', 'x,', 'nreps', 'items:', 'nreps', '=', 'nreps', '100)', 'nreps', '1', '_', 'range', 'nreps', '\"', '-', '\"', 'x', '=', '\"1\"', '+', 'x', '\"', '-', '\"', 'x', '=', 'x', '+', 'str', 'end)', '\"', '-', '\"', 'x:', 'nrange', '=', 'x.split', '\"', '-', '\")', 'startend', '=', 'map', 'nrange)', 'alltracks', '+=', '_bi_range', '*', 'startend)', 'alltracks.append', 'x', 'alltracks', '_bi_range', 'start,', 'end', 'start', '==', 'end:', '(start', 'end', '<', 'start:', 'reversed', 'range', 'end,', 'start', '+', '1', 'range', 'start,', 'end', '+', '1)', 'player', 'allowed_player', 'regex', '=', \"r'\", '?', '\\\\b', '%', 's', '$', '|', '\\\\.', 'a', '-', 'zA', '-', 'Z0', '-', '9', '+', '$', \"'\", '%', 're.escape', 'allowed_player)', 'match', '=', 're.search', 'regex,', 'player)', 'match', '=', 're.search', 'regex,', 'player,', 're.IGNORECASE)', 'match:', 'allowed_player', 'player', '\"mpv\"', 'player:', 'g.mpv_version', '=', '_get_mpv_version', 'player)', 'g.mpv_options', '=', 'subprocess.check_output(', '[player,', '\"', '--', '-', 'options\"', '.decode', '\"', '--', '-', 'unix', '-', 'socket\"', 'g.mpv_options:', 'g.mpv_usesock', '=', '\"', '--', '-', 'unix', '-', 'socket\"', 'dbg', 'c.g', '+', '\"mpv', '-', '-', '-', 'unix', '-', 'socket\"', '+', 'c.w)', '\"', '--', '-', 'ipc', '-', 'server\"', 'g.mpv_options:', 'g.mpv_usesock', '=', '\"', '--', '-', 'ipc', '-', 'server\"', 'dbg', 'c.g', '+', '\"mpv', '-', '-', '-', 'ipc', '-', 'server\"', '+', 'c.w)', '\"mplayer\"', 'player:', 'g.mplayer_version', '=', '_get_mplayer_version', 'player)', 'fetch_songs', 'text,', 'title', '=', '\"Unknown\"', 'description_parser.parse', 'text,', 'title)', 'text', 'text', '=', '[x.strip', 'x', 'text.split', '\"', '\"', 'vals', '=', '[]', 'text:', 'k', '=', '\"', '-', '\"', 'separated', '=', 'x.strip', 'x', 'k.split', '\"', '-', '\"', 'number', 'range', 'separated', '0', '-', '1,', 'separated', '1', 'vals.append', 'number)', 'vals.append', 'k)', 'x)', '-', '1', 'x', 'vals]', '_get_mpv_version', 'exename', 'o', '=', 'subprocess.check_output', 'exename,', '\"', '--', 'version\"', '.decode', 're_ver', '=', 're.compile', 'r\"mpv', '(\\\\d', '+', '\\\\.', '\\\\d', '+', '\\\\.', '\\\\d', '+', '\")', 'o.split', '\"\\\\n\"', 'm', '=', 're_ver.match', 'm:', 'v', '=', 'tuple', 'map', 'm.groups', 'dbg', '\"', '%', 's', 'version', '%s.', '%', 's.', '%', 's', 'detected\",', 'exename,', '*v)', 'v', 'dbg', '\"', '%', 'sFailed', 'to', 'detect', 'mpv', 'version', '%', 's\",', 'c.r,', 'c.w)', '-1,', '0,', '0', '_get_mplayer_version', 'exename', 'o', '=', 'subprocess.check_output', 'exename', '.decode', 'm', '=', 're.search', \"'MPlayer\", 'SVN', '\\\\s', '-', 'r', '0', '-', '9', '+', \"',\", 'o,', 're.MULTILINE', '|', 're.IGNORECASE)', 'ver', '=', '0', 'm:', 'ver', '=', 'm.groups', '0', 'm', '=', 're.search', \"'MPlayer\", '0', '-', '9', '+', '.', '0', '-', '9', '+', \"',\", 'o,', 're.MULTILINE)', 'm:', 'ver', '=', 'tuple', 'i)', 'i', 'm.groups', 'dbg', '\"', '%', 'sFailed', 'to', 'detect', 'mplayer', 'version', '%', 's\",', 'c.r,', 'c.w)', 'ver', '_get_metadata', 'song_title', 't', '=', 're.sub', '\"', '\\\\', '\\\\', '.', '*', '?', '\\\\', '\\\\', '\",', '\"\",', 'song_title.lower', 't', '=', 't.split', \"'\", '-', \"')\", 'len', 't)', '!=', '2:', 't', '=', 't', '0]', 't', '=', 't.split', \"'\", \"')\", 'len', 't)', '!=', '2:', 't', '=', 't', '0]', 't', '=', 't.split', \"'\", '|', \"')\", 'len', 't)', '!=', '2:', 't', '0]', '=', 're.sub', '\"', 'ft', '|ft.', '|', 'feat', '|feat.', '.', '*', '.\",', '\"\",', 't', '0', 't', '1]', '=', 're.sub', '\"', 'ft', '|ft.', '|', 'feat', '|feat.', '.', '*', '.\",', '\"\",', 't', '1', 't', '0]', '=', 't', '0', '.strip', 't', '1]', '=', 't', '1', '.strip', 'metadata', '=', 't', '0', 't', '1', 'metadata', 'metadata', 'metadata', '=', 't', '1', 't', '0', 'metadata', 'track', 'url', '=', \"'https\", '/', '/', 'ws.audioscrobbler.com', '/', '2.0', '/', '?method', '=', 'track.getInfo', '&', 'api_key', '=', '12dec50313f885d407cf8132697b8712', '&', \"'\", 'url', '+=', 'urllib.parse.urlencode', '+', \"'\", '&', \"'\", 'url', '+=', 'urllib.parse.urlencode', '\"track\":', 'track', '+', \"'\", '&', \"'\", 'url', '+=', \"'\", '&', '=', \"json'\", 'resp', '=', 'urllib.request.urlopen', 'url)', 'metadata', '=', 'dict', 'data', '=', 'json.loads', 'resp.read', '.decode', \"'utf\", '-', \"8'\", 'metadata', \"'track_title']\", '=', 'data', \"'track'\", \"'name']\", 'metadata', '=', 'data', \"'track'\", \"'name']\", 'metadata', \"'album']\", '=', 'data', \"'track'\", \"'album'\", \"'title']\", 'metadata', \"'album_art_url']\", '=', 'data', \"'track'\", \"'album'\", \"'image'\", '-', '1', \"'\", 'metadata', 'player', 'module_name', '=', 'player', \"'\", '/', \"'\", 'module_name:', 'module_name', '=', 'module_name.split', \"'\", '/', \"'\", '-', '1]', \"'.com')\", \"'.exe'\", 'module_name', '=', 'module_name.split', \"'.'\", '0]', 'module', '=', \"'mps_youtube.players.\", '0', 'module_name', 'pl', '=', 'getattr', 'module,', 'module_name)', 'g.PLAYER_OBJ', '=', 'pl', 'player)', 'mps_youtube.players', 'GenericPlayer', 'g.PLAYER_OBJ', '=', 'GenericPlayer.GenericPlayer', 'player)', 'COMMANDS', '=', '[]', 'self', '.', 'config', 'self.SET_COMMANDS', '=', \"['set\", \"'\", '+', 'i.lower', 'i', 'config]', 'self,', 'text,', 'state', \"'set'\", 'results', '=', '[x', 'x', 'self.SET_COMMANDS', 'text', '+', 'results', '=', '[x', 'x', 'self.COMMANDS', 'text', '+', 'results', 'state]', 'add_cmd', 'self,', 'val', 'val', 'self.COMMANDS', 'self.COMMANDS.append', 'val)', 'parse_video_length', 'duration', 'duration:', 'duration_tokens', '=', 'duration.split', '\"', '\")', 'len', 'duration_tokens)', '==', '2:', 'duration_tokens', '0', '*', '60', '+', 'duration_tokens', '1', 'duration_tokens', '0', '*', '3600', '+', 'duration_tokens', '1', '*', '60', '+', 'duration_tokens', '2', '10']"
    },
    {
        "link": "https://raw.githubusercontent.com/mps-youtube/yewtube/master/setup.py",
        "vector": "['os', 'sys', '<', '(3,', '6', 'sys.exit', '\"yewtube', 'requires', 'python', '3.6\")', 'setuptools', 'setup', 'open', '\"README.md\",', '\"r\",', '=', '\"utf', '-', '8\")', 'fh:', 'long_description', '=', 'fh.read', 'open', \"'requirements.txt',\", \"'r')\", 'fh:', 'requirements', '=', '__version__', '=', '\"2.10.4\"', 'options', '=', 'dict(', 'name', '=', '\"yewtube\",', 'version', '=', '__version__,', 'description', '=', '\"A', 'YouTube', 'player', 'downloader.', 'No', 'Youtube', 'API', 'key', 'required.', 'mps', '-', 'youtube\",', '=', '\"video\",', '\"music\",', '\"audio\",', '\"youtube\",', '\"stream\",', '\"download\"', '=', '\"talha_programmer\",', '=', '@', 'url', '=', '\"https', '/', '/', 'github.com', '/', '/', 'yewtube\",', 'download_url', '=', '\"https', '/', '/', 'github.com', '/', '/', 'yewtube', '/', 'packages', '=', \"'mps_youtube',\", \"'mps_youtube.players'\", '=', \"'console_scripts':\", \"['yt\", '=', 'mps_youtube', 'python_requires', '=', \"'\", '>=', \"3.6',\", '=', 'requirements,', '=', '\"dbus', '-', 'python', '>=', '1.2.18\",', '\"PyGObject', '>=', '3.42.0\",', '],', '\"docs\":', '\"mkdocs', '-', 'gen', '-', 'files', '>=', '0.3.4\",', '\"mkdocs', '-', 'literate', '-', 'nav', '>=', '0.4.1\",', '\"mkdocs', '-', 'macros', '-', '>=', '0.6.4\",', '\"mkdocs', '-', 'material', '>=', '8.2.1\",', '-', 'python', '-', 'legacy', '>=', '0.2.2\",', '>=', '0.18.0\",', '],', '},', '=', '\"Topic', '::', 'Utilities\",', '\"Topic', '::', 'Internet', '::', 'WWW', '/', 'HTTP\",', '\"Topic', '::', 'Multimedia', '::', 'Sound', '/', 'Audio', '::', 'Players\",', '\"Topic', '::', 'Multimedia', '::', 'Video\",', '\"Environment', '::', 'Console\",', '\"Environment', '::', '(MS', '\",', '\"Environment', '::', 'MacOS', 'X\",', 'System', '::', 'POSIX', '::', 'System', '::', 'MacOS\",', 'System', '::', 'MacOS', '::', 'MacOS', '9\",', 'System', '::', 'MacOS', '::', 'MacOS', 'X\",', 'System', '::', 'Microsoft\",', 'System', '::', 'Microsoft', '::', '::', '7\",', 'System', '::', 'Microsoft', '::', '::', 'XP\",', 'System', '::', 'Microsoft', '::', '::', '\"Intended', 'Audience', '::', 'End', 'Users', '/', 'Desktop\",', 'Language', '::', 'Python\",', 'Language', '::', 'Python', '::', '3\",', 'Language', '::', 'Python', '::', '3.3\",', 'Language', '::', 'Python', '::', '3.4\",', 'Language', '::', 'Python', '::', '3', '::', 'Only\",', '\"Development', 'Status', '::', '5', '-', 'Production', '/', 'Stable\",', '\"License', '::', 'OSI', 'Approved', '::', 'GNU', 'General', 'Public', 'License', 'v3', '(GPLv3', '\"', '],', 'options', '=', '\"py2exe\":', '\"excludes\":', 'dbus,', 'gi', '\"', '\"', 'urllib.unquote_plus,', 'urllib.urlencode', '\"', '\"', 'PyQt4,', 'gtk\"', '\"bundle_files\":', '1', '},', 'package_data', '=', '\"\":', '[\"LICENSE\",', '\"README.md\",', '\"CHANGELOG.md\"', 'long_description_content_type', '=', \"'text\", '/', \"markdown',\", 'long_description', '=', 'long_description', 'options', \"'data_files']\", '=', \"'share\", '/', 'applications', '/', \"',\", \"['yewtube.desktop'\", 'os.name', '==', '\"nt\":', 'py2exe', 'options', \"'console']\", '=', \"['yt']\", 'options', \"'zipfile']\", '=', 'setup', '**', 'options)']"
    }
]